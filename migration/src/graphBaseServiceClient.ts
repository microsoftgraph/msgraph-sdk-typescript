/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { AdminRequestBuilderNavigationMetadata, AdminRequestBuilderRequestsMetadata, AdminRequestBuilderUriTemplate, type AdminRequestBuilder } from './admin/';
import { AgreementAcceptancesRequestBuilderNavigationMetadata, AgreementAcceptancesRequestBuilderRequestsMetadata, AgreementAcceptancesRequestBuilderUriTemplate, type AgreementAcceptancesRequestBuilder } from './agreementAcceptances/';
import { AgreementsRequestBuilderNavigationMetadata, AgreementsRequestBuilderRequestsMetadata, AgreementsRequestBuilderUriTemplate, type AgreementsRequestBuilder } from './agreements/';
import { AppCatalogsRequestBuilderNavigationMetadata, AppCatalogsRequestBuilderRequestsMetadata, AppCatalogsRequestBuilderUriTemplate, type AppCatalogsRequestBuilder } from './appCatalogs/';
import { ApplicationsRequestBuilderNavigationMetadata, ApplicationsRequestBuilderRequestsMetadata, ApplicationsRequestBuilderUriTemplate, type ApplicationsRequestBuilder } from './applications/';
import { ApplicationsWithAppIdRequestBuilderRequestsMetadata, ApplicationsWithAppIdRequestBuilderUriTemplate, type ApplicationsWithAppIdRequestBuilder } from './applicationsWithAppId/';
import { ApplicationTemplatesRequestBuilderNavigationMetadata, ApplicationTemplatesRequestBuilderRequestsMetadata, ApplicationTemplatesRequestBuilderUriTemplate, type ApplicationTemplatesRequestBuilder } from './applicationTemplates/';
import { AuditLogsRequestBuilderNavigationMetadata, AuditLogsRequestBuilderRequestsMetadata, AuditLogsRequestBuilderUriTemplate, type AuditLogsRequestBuilder } from './auditLogs/';
import { AuthenticationMethodConfigurationsRequestBuilderNavigationMetadata, AuthenticationMethodConfigurationsRequestBuilderRequestsMetadata, AuthenticationMethodConfigurationsRequestBuilderUriTemplate, type AuthenticationMethodConfigurationsRequestBuilder } from './authenticationMethodConfigurations/';
import { AuthenticationMethodsPolicyRequestBuilderNavigationMetadata, AuthenticationMethodsPolicyRequestBuilderRequestsMetadata, AuthenticationMethodsPolicyRequestBuilderUriTemplate, type AuthenticationMethodsPolicyRequestBuilder } from './authenticationMethodsPolicy/';
import { CertificateBasedAuthConfigurationRequestBuilderNavigationMetadata, CertificateBasedAuthConfigurationRequestBuilderRequestsMetadata, CertificateBasedAuthConfigurationRequestBuilderUriTemplate, type CertificateBasedAuthConfigurationRequestBuilder } from './certificateBasedAuthConfiguration/';
import { ChatsRequestBuilderNavigationMetadata, ChatsRequestBuilderRequestsMetadata, ChatsRequestBuilderUriTemplate, type ChatsRequestBuilder } from './chats/';
import { CommunicationsRequestBuilderNavigationMetadata, CommunicationsRequestBuilderRequestsMetadata, CommunicationsRequestBuilderUriTemplate, type CommunicationsRequestBuilder } from './communications/';
import { ComplianceRequestBuilderRequestsMetadata, ComplianceRequestBuilderUriTemplate, type ComplianceRequestBuilder } from './compliance/';
import { ConnectionsRequestBuilderNavigationMetadata, ConnectionsRequestBuilderRequestsMetadata, ConnectionsRequestBuilderUriTemplate, type ConnectionsRequestBuilder } from './connections/';
import { ContactsRequestBuilderNavigationMetadata, ContactsRequestBuilderRequestsMetadata, ContactsRequestBuilderUriTemplate, type ContactsRequestBuilder } from './contacts/';
import { ContractsRequestBuilderNavigationMetadata, ContractsRequestBuilderRequestsMetadata, ContractsRequestBuilderUriTemplate, type ContractsRequestBuilder } from './contracts/';
import { DataPolicyOperationsRequestBuilderNavigationMetadata, DataPolicyOperationsRequestBuilderRequestsMetadata, DataPolicyOperationsRequestBuilderUriTemplate, type DataPolicyOperationsRequestBuilder } from './dataPolicyOperations/';
import { DeviceAppManagementRequestBuilderNavigationMetadata, DeviceAppManagementRequestBuilderRequestsMetadata, DeviceAppManagementRequestBuilderUriTemplate, type DeviceAppManagementRequestBuilder } from './deviceAppManagement/';
import { DeviceManagementRequestBuilderNavigationMetadata, DeviceManagementRequestBuilderRequestsMetadata, DeviceManagementRequestBuilderUriTemplate, type DeviceManagementRequestBuilder } from './deviceManagement/';
import { DevicesRequestBuilderNavigationMetadata, DevicesRequestBuilderRequestsMetadata, DevicesRequestBuilderUriTemplate, type DevicesRequestBuilder } from './devices/';
import { DevicesWithDeviceIdRequestBuilderRequestsMetadata, DevicesWithDeviceIdRequestBuilderUriTemplate, type DevicesWithDeviceIdRequestBuilder } from './devicesWithDeviceId/';
import { DirectoryRequestBuilderNavigationMetadata, DirectoryRequestBuilderRequestsMetadata, DirectoryRequestBuilderUriTemplate, type DirectoryRequestBuilder } from './directory/';
import { DirectoryObjectsRequestBuilderNavigationMetadata, DirectoryObjectsRequestBuilderRequestsMetadata, DirectoryObjectsRequestBuilderUriTemplate, type DirectoryObjectsRequestBuilder } from './directoryObjects/';
import { DirectoryRolesRequestBuilderNavigationMetadata, DirectoryRolesRequestBuilderRequestsMetadata, DirectoryRolesRequestBuilderUriTemplate, type DirectoryRolesRequestBuilder } from './directoryRoles/';
import { DirectoryRolesWithRoleTemplateIdRequestBuilderRequestsMetadata, DirectoryRolesWithRoleTemplateIdRequestBuilderUriTemplate, type DirectoryRolesWithRoleTemplateIdRequestBuilder } from './directoryRolesWithRoleTemplateId/';
import { DirectoryRoleTemplatesRequestBuilderNavigationMetadata, DirectoryRoleTemplatesRequestBuilderRequestsMetadata, DirectoryRoleTemplatesRequestBuilderUriTemplate, type DirectoryRoleTemplatesRequestBuilder } from './directoryRoleTemplates/';
import { DomainDnsRecordsRequestBuilderNavigationMetadata, DomainDnsRecordsRequestBuilderRequestsMetadata, DomainDnsRecordsRequestBuilderUriTemplate, type DomainDnsRecordsRequestBuilder } from './domainDnsRecords/';
import { DomainsRequestBuilderNavigationMetadata, DomainsRequestBuilderRequestsMetadata, DomainsRequestBuilderUriTemplate, type DomainsRequestBuilder } from './domains/';
import { DrivesRequestBuilderNavigationMetadata, DrivesRequestBuilderRequestsMetadata, DrivesRequestBuilderUriTemplate, type DrivesRequestBuilder } from './drives/';
import { EducationRequestBuilderNavigationMetadata, EducationRequestBuilderRequestsMetadata, EducationRequestBuilderUriTemplate, type EducationRequestBuilder } from './education/';
import { EmployeeExperienceRequestBuilderNavigationMetadata, EmployeeExperienceRequestBuilderRequestsMetadata, EmployeeExperienceRequestBuilderUriTemplate, type EmployeeExperienceRequestBuilder } from './employeeExperience/';
import { ExternalRequestBuilderNavigationMetadata, ExternalRequestBuilderRequestsMetadata, ExternalRequestBuilderUriTemplate, type ExternalRequestBuilder } from './external/';
import { FilterOperatorsRequestBuilderNavigationMetadata, FilterOperatorsRequestBuilderRequestsMetadata, FilterOperatorsRequestBuilderUriTemplate, type FilterOperatorsRequestBuilder } from './filterOperators/';
import { FunctionsRequestBuilderNavigationMetadata, FunctionsRequestBuilderRequestsMetadata, FunctionsRequestBuilderUriTemplate, type FunctionsRequestBuilder } from './functions/';
import { GroupLifecyclePoliciesRequestBuilderNavigationMetadata, GroupLifecyclePoliciesRequestBuilderRequestsMetadata, GroupLifecyclePoliciesRequestBuilderUriTemplate, type GroupLifecyclePoliciesRequestBuilder } from './groupLifecyclePolicies/';
import { GroupsRequestBuilderNavigationMetadata, GroupsRequestBuilderRequestsMetadata, GroupsRequestBuilderUriTemplate, type GroupsRequestBuilder } from './groups/';
import { GroupSettingsRequestBuilderNavigationMetadata, GroupSettingsRequestBuilderRequestsMetadata, GroupSettingsRequestBuilderUriTemplate, type GroupSettingsRequestBuilder } from './groupSettings/';
import { GroupSettingTemplatesRequestBuilderNavigationMetadata, GroupSettingTemplatesRequestBuilderRequestsMetadata, GroupSettingTemplatesRequestBuilderUriTemplate, type GroupSettingTemplatesRequestBuilder } from './groupSettingTemplates/';
import { IdentityRequestBuilderNavigationMetadata, IdentityRequestBuilderRequestsMetadata, IdentityRequestBuilderUriTemplate, type IdentityRequestBuilder } from './identity/';
import { IdentityGovernanceRequestBuilderNavigationMetadata, IdentityGovernanceRequestBuilderRequestsMetadata, IdentityGovernanceRequestBuilderUriTemplate, type IdentityGovernanceRequestBuilder } from './identityGovernance/';
import { IdentityProtectionRequestBuilderNavigationMetadata, IdentityProtectionRequestBuilderRequestsMetadata, IdentityProtectionRequestBuilderUriTemplate, type IdentityProtectionRequestBuilder } from './identityProtection/';
import { IdentityProvidersRequestBuilderNavigationMetadata, IdentityProvidersRequestBuilderRequestsMetadata, IdentityProvidersRequestBuilderUriTemplate, type IdentityProvidersRequestBuilder } from './identityProviders/';
import { InformationProtectionRequestBuilderNavigationMetadata, InformationProtectionRequestBuilderRequestsMetadata, InformationProtectionRequestBuilderUriTemplate, type InformationProtectionRequestBuilder } from './informationProtection/';
import { InvitationsRequestBuilderNavigationMetadata, InvitationsRequestBuilderRequestsMetadata, InvitationsRequestBuilderUriTemplate, type InvitationsRequestBuilder } from './invitations/';
import { Oauth2PermissionGrantsRequestBuilderNavigationMetadata, Oauth2PermissionGrantsRequestBuilderRequestsMetadata, Oauth2PermissionGrantsRequestBuilderUriTemplate, type Oauth2PermissionGrantsRequestBuilder } from './oauth2PermissionGrants/';
import { OrganizationRequestBuilderNavigationMetadata, OrganizationRequestBuilderRequestsMetadata, OrganizationRequestBuilderUriTemplate, type OrganizationRequestBuilder } from './organization/';
import { PermissionGrantsRequestBuilderNavigationMetadata, PermissionGrantsRequestBuilderRequestsMetadata, PermissionGrantsRequestBuilderUriTemplate, type PermissionGrantsRequestBuilder } from './permissionGrants/';
import { PlacesRequestBuilderNavigationMetadata, PlacesRequestBuilderUriTemplate, type PlacesRequestBuilder } from './places/';
import { PlannerRequestBuilderNavigationMetadata, PlannerRequestBuilderRequestsMetadata, PlannerRequestBuilderUriTemplate, type PlannerRequestBuilder } from './planner/';
import { PoliciesRequestBuilderNavigationMetadata, PoliciesRequestBuilderRequestsMetadata, PoliciesRequestBuilderUriTemplate, type PoliciesRequestBuilder } from './policies/';
import { PrintRequestBuilderNavigationMetadata, PrintRequestBuilderRequestsMetadata, PrintRequestBuilderUriTemplate, type PrintRequestBuilder } from './print/';
import { PrivacyRequestBuilderNavigationMetadata, PrivacyRequestBuilderRequestsMetadata, PrivacyRequestBuilderUriTemplate, type PrivacyRequestBuilder } from './privacy/';
import { ReportsRequestBuilderNavigationMetadata, ReportsRequestBuilderRequestsMetadata, ReportsRequestBuilderUriTemplate, type ReportsRequestBuilder } from './reports/';
import { RoleManagementRequestBuilderNavigationMetadata, RoleManagementRequestBuilderRequestsMetadata, RoleManagementRequestBuilderUriTemplate, type RoleManagementRequestBuilder } from './roleManagement/';
import { SchemaExtensionsRequestBuilderNavigationMetadata, SchemaExtensionsRequestBuilderRequestsMetadata, SchemaExtensionsRequestBuilderUriTemplate, type SchemaExtensionsRequestBuilder } from './schemaExtensions/';
import { ScopedRoleMembershipsRequestBuilderNavigationMetadata, ScopedRoleMembershipsRequestBuilderRequestsMetadata, ScopedRoleMembershipsRequestBuilderUriTemplate, type ScopedRoleMembershipsRequestBuilder } from './scopedRoleMemberships/';
import { SearchRequestBuilderNavigationMetadata, SearchRequestBuilderRequestsMetadata, SearchRequestBuilderUriTemplate, type SearchRequestBuilder } from './search/';
import { SecurityRequestBuilderNavigationMetadata, SecurityRequestBuilderRequestsMetadata, SecurityRequestBuilderUriTemplate, type SecurityRequestBuilder } from './security/';
import { ServicePrincipalsRequestBuilderNavigationMetadata, ServicePrincipalsRequestBuilderRequestsMetadata, ServicePrincipalsRequestBuilderUriTemplate, type ServicePrincipalsRequestBuilder } from './servicePrincipals/';
import { ServicePrincipalsWithAppIdRequestBuilderRequestsMetadata, ServicePrincipalsWithAppIdRequestBuilderUriTemplate, type ServicePrincipalsWithAppIdRequestBuilder } from './servicePrincipalsWithAppId/';
import { SharesRequestBuilderNavigationMetadata, SharesRequestBuilderRequestsMetadata, SharesRequestBuilderUriTemplate, type SharesRequestBuilder } from './shares/';
import { SitesRequestBuilderNavigationMetadata, SitesRequestBuilderRequestsMetadata, SitesRequestBuilderUriTemplate, type SitesRequestBuilder } from './sites/';
import { SolutionsRequestBuilderNavigationMetadata, SolutionsRequestBuilderRequestsMetadata, SolutionsRequestBuilderUriTemplate, type SolutionsRequestBuilder } from './solutions/';
import { SubscribedSkusRequestBuilderNavigationMetadata, SubscribedSkusRequestBuilderRequestsMetadata, SubscribedSkusRequestBuilderUriTemplate, type SubscribedSkusRequestBuilder } from './subscribedSkus/';
import { SubscriptionsRequestBuilderNavigationMetadata, SubscriptionsRequestBuilderRequestsMetadata, SubscriptionsRequestBuilderUriTemplate, type SubscriptionsRequestBuilder } from './subscriptions/';
import { TeamsRequestBuilderNavigationMetadata, TeamsRequestBuilderRequestsMetadata, TeamsRequestBuilderUriTemplate, type TeamsRequestBuilder } from './teams/';
import { TeamsTemplatesRequestBuilderNavigationMetadata, TeamsTemplatesRequestBuilderRequestsMetadata, TeamsTemplatesRequestBuilderUriTemplate, type TeamsTemplatesRequestBuilder } from './teamsTemplates/';
import { TeamworkRequestBuilderNavigationMetadata, TeamworkRequestBuilderRequestsMetadata, TeamworkRequestBuilderUriTemplate, type TeamworkRequestBuilder } from './teamwork/';
import { TenantRelationshipsRequestBuilderNavigationMetadata, TenantRelationshipsRequestBuilderRequestsMetadata, TenantRelationshipsRequestBuilderUriTemplate, type TenantRelationshipsRequestBuilder } from './tenantRelationships/';
import { type UsersRequestBuilder, UsersRequestBuilderNavigationMetadata, UsersRequestBuilderRequestsMetadata, UsersRequestBuilderUriTemplate } from './users/';
import { apiClientProxifier, registerDefaultDeserializer, registerDefaultSerializer, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type RequestAdapter } from '@microsoft/kiota-abstractions';
import { FormParseNodeFactory, FormSerializationWriterFactory } from '@microsoft/kiota-serialization-form';
import { JsonParseNodeFactory, JsonSerializationWriterFactory } from '@microsoft/kiota-serialization-json';
import { MultipartSerializationWriterFactory } from '@microsoft/kiota-serialization-multipart';
import { TextParseNodeFactory, TextSerializationWriterFactory } from '@microsoft/kiota-serialization-text';

/**
 * The main entry point of the SDK, exposes the configuration and the fluent API.
 */
export interface GraphBaseServiceClient extends BaseRequestBuilder<GraphBaseServiceClient> {
    /**
     * Provides operations to manage the admin singleton.
     */
    get admin(): AdminRequestBuilder;
    /**
     * Provides operations to manage the collection of agreementAcceptance entities.
     */
    get agreementAcceptances(): AgreementAcceptancesRequestBuilder;
    /**
     * Provides operations to manage the collection of agreement entities.
     */
    get agreements(): AgreementsRequestBuilder;
    /**
     * Provides operations to manage the appCatalogs singleton.
     */
    get appCatalogs(): AppCatalogsRequestBuilder;
    /**
     * Provides operations to manage the collection of application entities.
     */
    get applications(): ApplicationsRequestBuilder;
    /**
     * Provides operations to manage the collection of applicationTemplate entities.
     */
    get applicationTemplates(): ApplicationTemplatesRequestBuilder;
    /**
     * Provides operations to manage the auditLogRoot singleton.
     */
    get auditLogs(): AuditLogsRequestBuilder;
    /**
     * Provides operations to manage the collection of authenticationMethodConfiguration entities.
     */
    get authenticationMethodConfigurations(): AuthenticationMethodConfigurationsRequestBuilder;
    /**
     * Provides operations to manage the authenticationMethodsPolicy singleton.
     */
    get authenticationMethodsPolicy(): AuthenticationMethodsPolicyRequestBuilder;
    /**
     * Provides operations to manage the collection of certificateBasedAuthConfiguration entities.
     */
    get certificateBasedAuthConfiguration(): CertificateBasedAuthConfigurationRequestBuilder;
    /**
     * Provides operations to manage the collection of chat entities.
     */
    get chats(): ChatsRequestBuilder;
    /**
     * Provides operations to manage the cloudCommunications singleton.
     */
    get communications(): CommunicationsRequestBuilder;
    /**
     * Provides operations to manage the compliance singleton.
     */
    get compliance(): ComplianceRequestBuilder;
    /**
     * Provides operations to manage the collection of externalConnection entities.
     */
    get connections(): ConnectionsRequestBuilder;
    /**
     * Provides operations to manage the collection of orgContact entities.
     */
    get contacts(): ContactsRequestBuilder;
    /**
     * Provides operations to manage the collection of contract entities.
     */
    get contracts(): ContractsRequestBuilder;
    /**
     * Provides operations to manage the collection of dataPolicyOperation entities.
     */
    get dataPolicyOperations(): DataPolicyOperationsRequestBuilder;
    /**
     * Provides operations to manage the deviceAppManagement singleton.
     */
    get deviceAppManagement(): DeviceAppManagementRequestBuilder;
    /**
     * Provides operations to manage the deviceManagement singleton.
     */
    get deviceManagement(): DeviceManagementRequestBuilder;
    /**
     * Provides operations to manage the collection of device entities.
     */
    get devices(): DevicesRequestBuilder;
    /**
     * Provides operations to manage the directory singleton.
     */
    get directory(): DirectoryRequestBuilder;
    /**
     * Provides operations to manage the collection of directoryObject entities.
     */
    get directoryObjects(): DirectoryObjectsRequestBuilder;
    /**
     * Provides operations to manage the collection of directoryRole entities.
     */
    get directoryRoles(): DirectoryRolesRequestBuilder;
    /**
     * Provides operations to manage the collection of directoryRoleTemplate entities.
     */
    get directoryRoleTemplates(): DirectoryRoleTemplatesRequestBuilder;
    /**
     * Provides operations to manage the collection of domainDnsRecord entities.
     */
    get domainDnsRecords(): DomainDnsRecordsRequestBuilder;
    /**
     * Provides operations to manage the collection of domain entities.
     */
    get domains(): DomainsRequestBuilder;
    /**
     * Provides operations to manage the collection of drive entities.
     */
    get drives(): DrivesRequestBuilder;
    /**
     * Provides operations to manage the educationRoot singleton.
     */
    get education(): EducationRequestBuilder;
    /**
     * Provides operations to manage the employeeExperience singleton.
     */
    get employeeExperience(): EmployeeExperienceRequestBuilder;
    /**
     * Provides operations to manage the external singleton.
     */
    get external(): ExternalRequestBuilder;
    /**
     * Provides operations to manage the collection of filterOperatorSchema entities.
     */
    get filterOperators(): FilterOperatorsRequestBuilder;
    /**
     * Provides operations to manage the collection of attributeMappingFunctionSchema entities.
     */
    get functions(): FunctionsRequestBuilder;
    /**
     * Provides operations to manage the collection of groupLifecyclePolicy entities.
     */
    get groupLifecyclePolicies(): GroupLifecyclePoliciesRequestBuilder;
    /**
     * Provides operations to manage the collection of group entities.
     */
    get groups(): GroupsRequestBuilder;
    /**
     * Provides operations to manage the collection of groupSetting entities.
     */
    get groupSettings(): GroupSettingsRequestBuilder;
    /**
     * Provides operations to manage the collection of groupSettingTemplate entities.
     */
    get groupSettingTemplates(): GroupSettingTemplatesRequestBuilder;
    /**
     * Provides operations to manage the identityContainer singleton.
     */
    get identity(): IdentityRequestBuilder;
    /**
     * Provides operations to manage the identityGovernance singleton.
     */
    get identityGovernance(): IdentityGovernanceRequestBuilder;
    /**
     * Provides operations to manage the identityProtectionRoot singleton.
     */
    get identityProtection(): IdentityProtectionRequestBuilder;
    /**
     * Provides operations to manage the collection of identityProvider entities.
     */
    get identityProviders(): IdentityProvidersRequestBuilder;
    /**
     * Provides operations to manage the informationProtection singleton.
     */
    get informationProtection(): InformationProtectionRequestBuilder;
    /**
     * Provides operations to manage the collection of invitation entities.
     */
    get invitations(): InvitationsRequestBuilder;
    /**
     * Provides operations to manage the collection of oAuth2PermissionGrant entities.
     */
    get oauth2PermissionGrants(): Oauth2PermissionGrantsRequestBuilder;
    /**
     * Provides operations to manage the collection of organization entities.
     */
    get organization(): OrganizationRequestBuilder;
    /**
     * Provides operations to manage the collection of resourceSpecificPermissionGrant entities.
     */
    get permissionGrants(): PermissionGrantsRequestBuilder;
    /**
     * The places property
     */
    get places(): PlacesRequestBuilder;
    /**
     * Provides operations to manage the planner singleton.
     */
    get planner(): PlannerRequestBuilder;
    /**
     * Provides operations to manage the policyRoot singleton.
     */
    get policies(): PoliciesRequestBuilder;
    /**
     * Provides operations to manage the print singleton.
     */
    get print(): PrintRequestBuilder;
    /**
     * Provides operations to manage the privacy singleton.
     */
    get privacy(): PrivacyRequestBuilder;
    /**
     * Provides operations to manage the reportRoot singleton.
     */
    get reports(): ReportsRequestBuilder;
    /**
     * Provides operations to manage the roleManagement singleton.
     */
    get roleManagement(): RoleManagementRequestBuilder;
    /**
     * Provides operations to manage the collection of schemaExtension entities.
     */
    get schemaExtensions(): SchemaExtensionsRequestBuilder;
    /**
     * Provides operations to manage the collection of scopedRoleMembership entities.
     */
    get scopedRoleMemberships(): ScopedRoleMembershipsRequestBuilder;
    /**
     * Provides operations to manage the searchEntity singleton.
     */
    get search(): SearchRequestBuilder;
    /**
     * Provides operations to manage the security singleton.
     */
    get security(): SecurityRequestBuilder;
    /**
     * Provides operations to manage the collection of servicePrincipal entities.
     */
    get servicePrincipals(): ServicePrincipalsRequestBuilder;
    /**
     * Provides operations to manage the collection of sharedDriveItem entities.
     */
    get shares(): SharesRequestBuilder;
    /**
     * Provides operations to manage the collection of site entities.
     */
    get sites(): SitesRequestBuilder;
    /**
     * Provides operations to manage the solutionsRoot singleton.
     */
    get solutions(): SolutionsRequestBuilder;
    /**
     * Provides operations to manage the collection of subscribedSku entities.
     */
    get subscribedSkus(): SubscribedSkusRequestBuilder;
    /**
     * Provides operations to manage the collection of subscription entities.
     */
    get subscriptions(): SubscriptionsRequestBuilder;
    /**
     * Provides operations to manage the collection of team entities.
     */
    get teams(): TeamsRequestBuilder;
    /**
     * Provides operations to manage the collection of teamsTemplate entities.
     */
    get teamsTemplates(): TeamsTemplatesRequestBuilder;
    /**
     * Provides operations to manage the teamwork singleton.
     */
    get teamwork(): TeamworkRequestBuilder;
    /**
     * Provides operations to manage the tenantRelationship singleton.
     */
    get tenantRelationships(): TenantRelationshipsRequestBuilder;
    /**
     * Provides operations to manage the collection of user entities.
     */
    get users(): UsersRequestBuilder;
    /**
     * Provides operations to manage the collection of application entities.
     * @param appId Alternate key of application
     * @returns a applicationsWithAppIdRequestBuilder
     */
     applicationsWithAppId(appId: string | undefined) : ApplicationsWithAppIdRequestBuilder;
    /**
     * Provides operations to manage the collection of device entities.
     * @param deviceId Alternate key of device
     * @returns a devicesWithDeviceIdRequestBuilder
     */
     devicesWithDeviceId(deviceId: string | undefined) : DevicesWithDeviceIdRequestBuilder;
    /**
     * Provides operations to manage the collection of directoryRole entities.
     * @param roleTemplateId Alternate key of directoryRole
     * @returns a directoryRolesWithRoleTemplateIdRequestBuilder
     */
     directoryRolesWithRoleTemplateId(roleTemplateId: string | undefined) : DirectoryRolesWithRoleTemplateIdRequestBuilder;
    /**
     * Provides operations to manage the collection of servicePrincipal entities.
     * @param appId Alternate key of servicePrincipal
     * @returns a servicePrincipalsWithAppIdRequestBuilder
     */
     servicePrincipalsWithAppId(appId: string | undefined) : ServicePrincipalsWithAppIdRequestBuilder;
}
/**
 * Instantiates a new GraphBaseServiceClient and sets the default values.
 * @param requestAdapter The request adapter to use to execute the requests.
 */
export function newGraphBaseServiceClient(requestAdapter: RequestAdapter) {
    registerDefaultSerializer(JsonSerializationWriterFactory);
    registerDefaultSerializer(TextSerializationWriterFactory);
    registerDefaultSerializer(FormSerializationWriterFactory);
    registerDefaultSerializer(MultipartSerializationWriterFactory);
    registerDefaultDeserializer(JsonParseNodeFactory);
    registerDefaultDeserializer(TextParseNodeFactory);
    registerDefaultDeserializer(FormParseNodeFactory);
    if (requestAdapter.baseUrl === undefined || requestAdapter.baseUrl === "") {
        requestAdapter.baseUrl = "https://graph.microsoft.com/v1.0";
    }
    const pathParameters: Record<string, unknown> = {
        "baseurl": requestAdapter.baseUrl,
    };
    return apiClientProxifier<GraphBaseServiceClient>(requestAdapter, pathParameters, GraphBaseServiceClientUriTemplate, GraphBaseServiceClientNavigationMetadata, undefined);
}
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GraphBaseServiceClientNavigationMetadata: Record<Exclude<keyof GraphBaseServiceClient, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    applicationsWithAppId: {
        uriTemplate: ApplicationsWithAppIdRequestBuilderUriTemplate,
        requestsMetadata: ApplicationsWithAppIdRequestBuilderRequestsMetadata,
    },
    devicesWithDeviceId: {
        uriTemplate: DevicesWithDeviceIdRequestBuilderUriTemplate,
        requestsMetadata: DevicesWithDeviceIdRequestBuilderRequestsMetadata,
    },
    directoryRolesWithRoleTemplateId: {
        uriTemplate: DirectoryRolesWithRoleTemplateIdRequestBuilderUriTemplate,
        requestsMetadata: DirectoryRolesWithRoleTemplateIdRequestBuilderRequestsMetadata,
    },
    servicePrincipalsWithAppId: {
        uriTemplate: ServicePrincipalsWithAppIdRequestBuilderUriTemplate,
        requestsMetadata: ServicePrincipalsWithAppIdRequestBuilderRequestsMetadata,
    },
    admin: {
        uriTemplate: AdminRequestBuilderUriTemplate,
        requestsMetadata: AdminRequestBuilderRequestsMetadata,
        navigationMetadata: AdminRequestBuilderNavigationMetadata,
    },
    agreementAcceptances: {
        uriTemplate: AgreementAcceptancesRequestBuilderUriTemplate,
        requestsMetadata: AgreementAcceptancesRequestBuilderRequestsMetadata,
        navigationMetadata: AgreementAcceptancesRequestBuilderNavigationMetadata,
    },
    agreements: {
        uriTemplate: AgreementsRequestBuilderUriTemplate,
        requestsMetadata: AgreementsRequestBuilderRequestsMetadata,
        navigationMetadata: AgreementsRequestBuilderNavigationMetadata,
    },
    appCatalogs: {
        uriTemplate: AppCatalogsRequestBuilderUriTemplate,
        requestsMetadata: AppCatalogsRequestBuilderRequestsMetadata,
        navigationMetadata: AppCatalogsRequestBuilderNavigationMetadata,
    },
    applications: {
        uriTemplate: ApplicationsRequestBuilderUriTemplate,
        requestsMetadata: ApplicationsRequestBuilderRequestsMetadata,
        navigationMetadata: ApplicationsRequestBuilderNavigationMetadata,
    },
    applicationTemplates: {
        uriTemplate: ApplicationTemplatesRequestBuilderUriTemplate,
        requestsMetadata: ApplicationTemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: ApplicationTemplatesRequestBuilderNavigationMetadata,
    },
    auditLogs: {
        uriTemplate: AuditLogsRequestBuilderUriTemplate,
        requestsMetadata: AuditLogsRequestBuilderRequestsMetadata,
        navigationMetadata: AuditLogsRequestBuilderNavigationMetadata,
    },
    authenticationMethodConfigurations: {
        uriTemplate: AuthenticationMethodConfigurationsRequestBuilderUriTemplate,
        requestsMetadata: AuthenticationMethodConfigurationsRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationMethodConfigurationsRequestBuilderNavigationMetadata,
    },
    authenticationMethodsPolicy: {
        uriTemplate: AuthenticationMethodsPolicyRequestBuilderUriTemplate,
        requestsMetadata: AuthenticationMethodsPolicyRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationMethodsPolicyRequestBuilderNavigationMetadata,
    },
    certificateBasedAuthConfiguration: {
        uriTemplate: CertificateBasedAuthConfigurationRequestBuilderUriTemplate,
        requestsMetadata: CertificateBasedAuthConfigurationRequestBuilderRequestsMetadata,
        navigationMetadata: CertificateBasedAuthConfigurationRequestBuilderNavigationMetadata,
    },
    chats: {
        uriTemplate: ChatsRequestBuilderUriTemplate,
        requestsMetadata: ChatsRequestBuilderRequestsMetadata,
        navigationMetadata: ChatsRequestBuilderNavigationMetadata,
    },
    communications: {
        uriTemplate: CommunicationsRequestBuilderUriTemplate,
        requestsMetadata: CommunicationsRequestBuilderRequestsMetadata,
        navigationMetadata: CommunicationsRequestBuilderNavigationMetadata,
    },
    compliance: {
        uriTemplate: ComplianceRequestBuilderUriTemplate,
        requestsMetadata: ComplianceRequestBuilderRequestsMetadata,
    },
    connections: {
        uriTemplate: ConnectionsRequestBuilderUriTemplate,
        requestsMetadata: ConnectionsRequestBuilderRequestsMetadata,
        navigationMetadata: ConnectionsRequestBuilderNavigationMetadata,
    },
    contacts: {
        uriTemplate: ContactsRequestBuilderUriTemplate,
        requestsMetadata: ContactsRequestBuilderRequestsMetadata,
        navigationMetadata: ContactsRequestBuilderNavigationMetadata,
    },
    contracts: {
        uriTemplate: ContractsRequestBuilderUriTemplate,
        requestsMetadata: ContractsRequestBuilderRequestsMetadata,
        navigationMetadata: ContractsRequestBuilderNavigationMetadata,
    },
    dataPolicyOperations: {
        uriTemplate: DataPolicyOperationsRequestBuilderUriTemplate,
        requestsMetadata: DataPolicyOperationsRequestBuilderRequestsMetadata,
        navigationMetadata: DataPolicyOperationsRequestBuilderNavigationMetadata,
    },
    deviceAppManagement: {
        uriTemplate: DeviceAppManagementRequestBuilderUriTemplate,
        requestsMetadata: DeviceAppManagementRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceAppManagementRequestBuilderNavigationMetadata,
    },
    deviceManagement: {
        uriTemplate: DeviceManagementRequestBuilderUriTemplate,
        requestsMetadata: DeviceManagementRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceManagementRequestBuilderNavigationMetadata,
    },
    devices: {
        uriTemplate: DevicesRequestBuilderUriTemplate,
        requestsMetadata: DevicesRequestBuilderRequestsMetadata,
        navigationMetadata: DevicesRequestBuilderNavigationMetadata,
    },
    directory: {
        uriTemplate: DirectoryRequestBuilderUriTemplate,
        requestsMetadata: DirectoryRequestBuilderRequestsMetadata,
        navigationMetadata: DirectoryRequestBuilderNavigationMetadata,
    },
    directoryObjects: {
        uriTemplate: DirectoryObjectsRequestBuilderUriTemplate,
        requestsMetadata: DirectoryObjectsRequestBuilderRequestsMetadata,
        navigationMetadata: DirectoryObjectsRequestBuilderNavigationMetadata,
    },
    directoryRoles: {
        uriTemplate: DirectoryRolesRequestBuilderUriTemplate,
        requestsMetadata: DirectoryRolesRequestBuilderRequestsMetadata,
        navigationMetadata: DirectoryRolesRequestBuilderNavigationMetadata,
    },
    directoryRoleTemplates: {
        uriTemplate: DirectoryRoleTemplatesRequestBuilderUriTemplate,
        requestsMetadata: DirectoryRoleTemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: DirectoryRoleTemplatesRequestBuilderNavigationMetadata,
    },
    domainDnsRecords: {
        uriTemplate: DomainDnsRecordsRequestBuilderUriTemplate,
        requestsMetadata: DomainDnsRecordsRequestBuilderRequestsMetadata,
        navigationMetadata: DomainDnsRecordsRequestBuilderNavigationMetadata,
    },
    domains: {
        uriTemplate: DomainsRequestBuilderUriTemplate,
        requestsMetadata: DomainsRequestBuilderRequestsMetadata,
        navigationMetadata: DomainsRequestBuilderNavigationMetadata,
    },
    drives: {
        uriTemplate: DrivesRequestBuilderUriTemplate,
        requestsMetadata: DrivesRequestBuilderRequestsMetadata,
        navigationMetadata: DrivesRequestBuilderNavigationMetadata,
    },
    education: {
        uriTemplate: EducationRequestBuilderUriTemplate,
        requestsMetadata: EducationRequestBuilderRequestsMetadata,
        navigationMetadata: EducationRequestBuilderNavigationMetadata,
    },
    employeeExperience: {
        uriTemplate: EmployeeExperienceRequestBuilderUriTemplate,
        requestsMetadata: EmployeeExperienceRequestBuilderRequestsMetadata,
        navigationMetadata: EmployeeExperienceRequestBuilderNavigationMetadata,
    },
    external: {
        uriTemplate: ExternalRequestBuilderUriTemplate,
        requestsMetadata: ExternalRequestBuilderRequestsMetadata,
        navigationMetadata: ExternalRequestBuilderNavigationMetadata,
    },
    filterOperators: {
        uriTemplate: FilterOperatorsRequestBuilderUriTemplate,
        requestsMetadata: FilterOperatorsRequestBuilderRequestsMetadata,
        navigationMetadata: FilterOperatorsRequestBuilderNavigationMetadata,
    },
    functions: {
        uriTemplate: FunctionsRequestBuilderUriTemplate,
        requestsMetadata: FunctionsRequestBuilderRequestsMetadata,
        navigationMetadata: FunctionsRequestBuilderNavigationMetadata,
    },
    groupLifecyclePolicies: {
        uriTemplate: GroupLifecyclePoliciesRequestBuilderUriTemplate,
        requestsMetadata: GroupLifecyclePoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: GroupLifecyclePoliciesRequestBuilderNavigationMetadata,
    },
    groups: {
        uriTemplate: GroupsRequestBuilderUriTemplate,
        requestsMetadata: GroupsRequestBuilderRequestsMetadata,
        navigationMetadata: GroupsRequestBuilderNavigationMetadata,
    },
    groupSettings: {
        uriTemplate: GroupSettingsRequestBuilderUriTemplate,
        requestsMetadata: GroupSettingsRequestBuilderRequestsMetadata,
        navigationMetadata: GroupSettingsRequestBuilderNavigationMetadata,
    },
    groupSettingTemplates: {
        uriTemplate: GroupSettingTemplatesRequestBuilderUriTemplate,
        requestsMetadata: GroupSettingTemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: GroupSettingTemplatesRequestBuilderNavigationMetadata,
    },
    identity: {
        uriTemplate: IdentityRequestBuilderUriTemplate,
        requestsMetadata: IdentityRequestBuilderRequestsMetadata,
        navigationMetadata: IdentityRequestBuilderNavigationMetadata,
    },
    identityGovernance: {
        uriTemplate: IdentityGovernanceRequestBuilderUriTemplate,
        requestsMetadata: IdentityGovernanceRequestBuilderRequestsMetadata,
        navigationMetadata: IdentityGovernanceRequestBuilderNavigationMetadata,
    },
    identityProtection: {
        uriTemplate: IdentityProtectionRequestBuilderUriTemplate,
        requestsMetadata: IdentityProtectionRequestBuilderRequestsMetadata,
        navigationMetadata: IdentityProtectionRequestBuilderNavigationMetadata,
    },
    identityProviders: {
        uriTemplate: IdentityProvidersRequestBuilderUriTemplate,
        requestsMetadata: IdentityProvidersRequestBuilderRequestsMetadata,
        navigationMetadata: IdentityProvidersRequestBuilderNavigationMetadata,
    },
    informationProtection: {
        uriTemplate: InformationProtectionRequestBuilderUriTemplate,
        requestsMetadata: InformationProtectionRequestBuilderRequestsMetadata,
        navigationMetadata: InformationProtectionRequestBuilderNavigationMetadata,
    },
    invitations: {
        uriTemplate: InvitationsRequestBuilderUriTemplate,
        requestsMetadata: InvitationsRequestBuilderRequestsMetadata,
        navigationMetadata: InvitationsRequestBuilderNavigationMetadata,
    },
    oauth2PermissionGrants: {
        uriTemplate: Oauth2PermissionGrantsRequestBuilderUriTemplate,
        requestsMetadata: Oauth2PermissionGrantsRequestBuilderRequestsMetadata,
        navigationMetadata: Oauth2PermissionGrantsRequestBuilderNavigationMetadata,
    },
    organization: {
        uriTemplate: OrganizationRequestBuilderUriTemplate,
        requestsMetadata: OrganizationRequestBuilderRequestsMetadata,
        navigationMetadata: OrganizationRequestBuilderNavigationMetadata,
    },
    permissionGrants: {
        uriTemplate: PermissionGrantsRequestBuilderUriTemplate,
        requestsMetadata: PermissionGrantsRequestBuilderRequestsMetadata,
        navigationMetadata: PermissionGrantsRequestBuilderNavigationMetadata,
    },
    places: {
        uriTemplate: PlacesRequestBuilderUriTemplate,
        navigationMetadata: PlacesRequestBuilderNavigationMetadata,
    },
    planner: {
        uriTemplate: PlannerRequestBuilderUriTemplate,
        requestsMetadata: PlannerRequestBuilderRequestsMetadata,
        navigationMetadata: PlannerRequestBuilderNavigationMetadata,
    },
    policies: {
        uriTemplate: PoliciesRequestBuilderUriTemplate,
        requestsMetadata: PoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: PoliciesRequestBuilderNavigationMetadata,
    },
    print: {
        uriTemplate: PrintRequestBuilderUriTemplate,
        requestsMetadata: PrintRequestBuilderRequestsMetadata,
        navigationMetadata: PrintRequestBuilderNavigationMetadata,
    },
    privacy: {
        uriTemplate: PrivacyRequestBuilderUriTemplate,
        requestsMetadata: PrivacyRequestBuilderRequestsMetadata,
        navigationMetadata: PrivacyRequestBuilderNavigationMetadata,
    },
    reports: {
        uriTemplate: ReportsRequestBuilderUriTemplate,
        requestsMetadata: ReportsRequestBuilderRequestsMetadata,
        navigationMetadata: ReportsRequestBuilderNavigationMetadata,
    },
    roleManagement: {
        uriTemplate: RoleManagementRequestBuilderUriTemplate,
        requestsMetadata: RoleManagementRequestBuilderRequestsMetadata,
        navigationMetadata: RoleManagementRequestBuilderNavigationMetadata,
    },
    schemaExtensions: {
        uriTemplate: SchemaExtensionsRequestBuilderUriTemplate,
        requestsMetadata: SchemaExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: SchemaExtensionsRequestBuilderNavigationMetadata,
    },
    scopedRoleMemberships: {
        uriTemplate: ScopedRoleMembershipsRequestBuilderUriTemplate,
        requestsMetadata: ScopedRoleMembershipsRequestBuilderRequestsMetadata,
        navigationMetadata: ScopedRoleMembershipsRequestBuilderNavigationMetadata,
    },
    search: {
        uriTemplate: SearchRequestBuilderUriTemplate,
        requestsMetadata: SearchRequestBuilderRequestsMetadata,
        navigationMetadata: SearchRequestBuilderNavigationMetadata,
    },
    security: {
        uriTemplate: SecurityRequestBuilderUriTemplate,
        requestsMetadata: SecurityRequestBuilderRequestsMetadata,
        navigationMetadata: SecurityRequestBuilderNavigationMetadata,
    },
    servicePrincipals: {
        uriTemplate: ServicePrincipalsRequestBuilderUriTemplate,
        requestsMetadata: ServicePrincipalsRequestBuilderRequestsMetadata,
        navigationMetadata: ServicePrincipalsRequestBuilderNavigationMetadata,
    },
    shares: {
        uriTemplate: SharesRequestBuilderUriTemplate,
        requestsMetadata: SharesRequestBuilderRequestsMetadata,
        navigationMetadata: SharesRequestBuilderNavigationMetadata,
    },
    sites: {
        uriTemplate: SitesRequestBuilderUriTemplate,
        requestsMetadata: SitesRequestBuilderRequestsMetadata,
        navigationMetadata: SitesRequestBuilderNavigationMetadata,
    },
    solutions: {
        uriTemplate: SolutionsRequestBuilderUriTemplate,
        requestsMetadata: SolutionsRequestBuilderRequestsMetadata,
        navigationMetadata: SolutionsRequestBuilderNavigationMetadata,
    },
    subscribedSkus: {
        uriTemplate: SubscribedSkusRequestBuilderUriTemplate,
        requestsMetadata: SubscribedSkusRequestBuilderRequestsMetadata,
        navigationMetadata: SubscribedSkusRequestBuilderNavigationMetadata,
    },
    subscriptions: {
        uriTemplate: SubscriptionsRequestBuilderUriTemplate,
        requestsMetadata: SubscriptionsRequestBuilderRequestsMetadata,
        navigationMetadata: SubscriptionsRequestBuilderNavigationMetadata,
    },
    teams: {
        uriTemplate: TeamsRequestBuilderUriTemplate,
        requestsMetadata: TeamsRequestBuilderRequestsMetadata,
        navigationMetadata: TeamsRequestBuilderNavigationMetadata,
    },
    teamsTemplates: {
        uriTemplate: TeamsTemplatesRequestBuilderUriTemplate,
        requestsMetadata: TeamsTemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: TeamsTemplatesRequestBuilderNavigationMetadata,
    },
    teamwork: {
        uriTemplate: TeamworkRequestBuilderUriTemplate,
        requestsMetadata: TeamworkRequestBuilderRequestsMetadata,
        navigationMetadata: TeamworkRequestBuilderNavigationMetadata,
    },
    tenantRelationships: {
        uriTemplate: TenantRelationshipsRequestBuilderUriTemplate,
        requestsMetadata: TenantRelationshipsRequestBuilderRequestsMetadata,
        navigationMetadata: TenantRelationshipsRequestBuilderNavigationMetadata,
    },
    users: {
        uriTemplate: UsersRequestBuilderUriTemplate,
        requestsMetadata: UsersRequestBuilderRequestsMetadata,
        navigationMetadata: UsersRequestBuilderNavigationMetadata,
    },
};
/**
 * Uri template for the request builder.
 */
export const GraphBaseServiceClientUriTemplate = "{+baseurl}";
/* tslint:enable */
/* eslint-enable */
