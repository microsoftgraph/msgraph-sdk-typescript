/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAddLargeGalleryViewOperationFromDiscriminatorValue, serializeAddLargeGalleryViewOperation, type AddLargeGalleryViewOperation } from '../../../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../../models/oDataErrors/';
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AddLargeGalleryViewPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The clientContext property
     */
    clientContext?: string;
}
/**
 * Provides operations to call the addLargeGalleryView method.
 */
export interface AddLargeGalleryViewRequestBuilder extends BaseRequestBuilder<AddLargeGalleryViewRequestBuilder> {
    /**
     * Add the large gallery view to a call.  For details about how to identify a large gallery view participant in a roster so that you can retrieve the relevant data to subscribe to the video feed, see Identify large gallery view participants in a roster.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AddLargeGalleryViewOperation
     * @see {@link https://learn.microsoft.com/graph/api/call-addlargegalleryview?view=graph-rest-1.0|Find more info here}
     */
     post(body: AddLargeGalleryViewPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AddLargeGalleryViewOperation | undefined>;
    /**
     * Add the large gallery view to a call.  For details about how to identify a large gallery view participant in a roster so that you can retrieve the relevant data to subscribe to the video feed, see Identify large gallery view participants in a roster.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: AddLargeGalleryViewPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a addLargeGalleryViewPostRequestBody
 */
export function createAddLargeGalleryViewPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoAddLargeGalleryViewPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoAddLargeGalleryViewPostRequestBody(addLargeGalleryViewPostRequestBody: AddLargeGalleryViewPostRequestBody | undefined = {} as AddLargeGalleryViewPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "clientContext": n => { addLargeGalleryViewPostRequestBody.clientContext = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeAddLargeGalleryViewPostRequestBody(writer: SerializationWriter, addLargeGalleryViewPostRequestBody: AddLargeGalleryViewPostRequestBody | undefined = {} as AddLargeGalleryViewPostRequestBody) : void {
    writer.writeStringValue("clientContext", addLargeGalleryViewPostRequestBody.clientContext);
    writer.writeAdditionalData(addLargeGalleryViewPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const AddLargeGalleryViewRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAddLargeGalleryViewOperationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAddLargeGalleryViewPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AddLargeGalleryViewRequestBuilderUriTemplate = "{+baseurl}/communications/calls/{call%2Did}/addLargeGalleryView";
/* tslint:enable */
/* eslint-enable */
