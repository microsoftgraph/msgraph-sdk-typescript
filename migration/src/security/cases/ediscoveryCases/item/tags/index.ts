/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../../../models/oDataErrors/';
import { createEdiscoveryReviewTagCollectionResponseFromDiscriminatorValue, createEdiscoveryReviewTagFromDiscriminatorValue, serializeEdiscoveryReviewTag, type EdiscoveryReviewTag, type EdiscoveryReviewTagCollectionResponse } from '../../../../../models/security/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { EdiscoveryReviewTagItemRequestBuilderNavigationMetadata, EdiscoveryReviewTagItemRequestBuilderRequestsMetadata, EdiscoveryReviewTagItemRequestBuilderUriTemplate, type EdiscoveryReviewTagItemRequestBuilder } from './item/';
import { MicrosoftGraphSecurityAsHierarchyRequestBuilderRequestsMetadata, MicrosoftGraphSecurityAsHierarchyRequestBuilderUriTemplate, type MicrosoftGraphSecurityAsHierarchyRequestBuilder } from './microsoftGraphSecurityAsHierarchy/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the tags property of the microsoft.graph.security.ediscoveryCase entity.
 */
export interface TagsRequestBuilder extends BaseRequestBuilder<TagsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the asHierarchy method.
     */
    get microsoftGraphSecurityAsHierarchy(): MicrosoftGraphSecurityAsHierarchyRequestBuilder;
    /**
     * Provides operations to manage the tags property of the microsoft.graph.security.ediscoveryCase entity.
     * @param ediscoveryReviewTagId The unique identifier of ediscoveryReviewTag
     * @returns a EdiscoveryReviewTagItemRequestBuilder
     */
     byEdiscoveryReviewTagId(ediscoveryReviewTagId: string) : EdiscoveryReviewTagItemRequestBuilder;
    /**
     * Get a list of eDiscoveryReviewTag objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EdiscoveryReviewTagCollectionResponse
     * @see {@link https://learn.microsoft.com/graph/api/security-ediscoverycase-list-tags?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<TagsRequestBuilderGetQueryParameters> | undefined) : Promise<EdiscoveryReviewTagCollectionResponse | undefined>;
    /**
     * Create a new ediscoveryReviewTag object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EdiscoveryReviewTag
     * @see {@link https://learn.microsoft.com/graph/api/security-ediscoverycase-post-tags?view=graph-rest-1.0|Find more info here}
     */
     post(body: EdiscoveryReviewTag, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EdiscoveryReviewTag | undefined>;
    /**
     * Get a list of eDiscoveryReviewTag objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TagsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new ediscoveryReviewTag object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: EdiscoveryReviewTag, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of eDiscoveryReviewTag objects and their properties.
 */
export interface TagsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TagsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TagsRequestBuilderNavigationMetadata: Record<Exclude<keyof TagsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byEdiscoveryReviewTagId: {
        uriTemplate: EdiscoveryReviewTagItemRequestBuilderUriTemplate,
        requestsMetadata: EdiscoveryReviewTagItemRequestBuilderRequestsMetadata,
        navigationMetadata: EdiscoveryReviewTagItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["ediscoveryReviewTag%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    microsoftGraphSecurityAsHierarchy: {
        uriTemplate: MicrosoftGraphSecurityAsHierarchyRequestBuilderUriTemplate,
        requestsMetadata: MicrosoftGraphSecurityAsHierarchyRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TagsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEdiscoveryReviewTagCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: TagsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEdiscoveryReviewTagFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEdiscoveryReviewTag,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const TagsRequestBuilderUriTemplate = "{+baseurl}/security/cases/ediscoveryCases/{ediscoveryCase%2Did}/tags{?%24top,%24skip,%24search,%24filter,%24count,%24orderby,%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
