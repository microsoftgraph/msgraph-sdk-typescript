/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSynchronizationJobFromDiscriminatorValue, serializeSynchronizationJob, type SynchronizationJob } from '../../../../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../../../models/oDataErrors/';
import { PauseRequestBuilderRequestsMetadata, PauseRequestBuilderUriTemplate, type PauseRequestBuilder } from './pause/';
import { ProvisionOnDemandRequestBuilderRequestsMetadata, ProvisionOnDemandRequestBuilderUriTemplate, type ProvisionOnDemandRequestBuilder } from './provisionOnDemand/';
import { RestartRequestBuilderRequestsMetadata, RestartRequestBuilderUriTemplate, type RestartRequestBuilder } from './restart/';
import { SchemaRequestBuilderNavigationMetadata, SchemaRequestBuilderRequestsMetadata, SchemaRequestBuilderUriTemplate, type SchemaRequestBuilder } from './schema/';
import { StartRequestBuilderRequestsMetadata, StartRequestBuilderUriTemplate, type StartRequestBuilder } from './start/';
import { type ValidateCredentialsRequestBuilder, ValidateCredentialsRequestBuilderRequestsMetadata, ValidateCredentialsRequestBuilderUriTemplate } from './validateCredentials/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the jobs property of the microsoft.graph.synchronization entity.
 */
export interface SynchronizationJobItemRequestBuilder extends BaseRequestBuilder<SynchronizationJobItemRequestBuilder> {
    /**
     * Provides operations to call the pause method.
     */
    get pause(): PauseRequestBuilder;
    /**
     * Provides operations to call the provisionOnDemand method.
     */
    get provisionOnDemand(): ProvisionOnDemandRequestBuilder;
    /**
     * Provides operations to call the restart method.
     */
    get restart(): RestartRequestBuilder;
    /**
     * Provides operations to manage the schema property of the microsoft.graph.synchronizationJob entity.
     */
    get schema(): SchemaRequestBuilder;
    /**
     * Provides operations to call the start method.
     */
    get start(): StartRequestBuilder;
    /**
     * Provides operations to call the validateCredentials method.
     */
    get validateCredentials(): ValidateCredentialsRequestBuilder;
    /**
     * Stop the synchronization job, and permanently delete all the state associated with it. Synchronized accounts are left as-is.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/synchronization-synchronizationjob-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the existing synchronization job and its properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SynchronizationJob
     * @see {@link https://learn.microsoft.com/graph/api/synchronization-synchronizationjob-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<SynchronizationJobItemRequestBuilderGetQueryParameters> | undefined) : Promise<SynchronizationJob | undefined>;
    /**
     * Update the navigation property jobs in servicePrincipals
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SynchronizationJob
     */
     patch(body: SynchronizationJob, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SynchronizationJob | undefined>;
    /**
     * Stop the synchronization job, and permanently delete all the state associated with it. Synchronized accounts are left as-is.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the existing synchronization job and its properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SynchronizationJobItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property jobs in servicePrincipals
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: SynchronizationJob, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the existing synchronization job and its properties.
 */
export interface SynchronizationJobItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SynchronizationJobItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SynchronizationJobItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SynchronizationJobItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    pause: {
        uriTemplate: PauseRequestBuilderUriTemplate,
        requestsMetadata: PauseRequestBuilderRequestsMetadata,
    },
    provisionOnDemand: {
        uriTemplate: ProvisionOnDemandRequestBuilderUriTemplate,
        requestsMetadata: ProvisionOnDemandRequestBuilderRequestsMetadata,
    },
    restart: {
        uriTemplate: RestartRequestBuilderUriTemplate,
        requestsMetadata: RestartRequestBuilderRequestsMetadata,
    },
    schema: {
        uriTemplate: SchemaRequestBuilderUriTemplate,
        requestsMetadata: SchemaRequestBuilderRequestsMetadata,
        navigationMetadata: SchemaRequestBuilderNavigationMetadata,
    },
    start: {
        uriTemplate: StartRequestBuilderUriTemplate,
        requestsMetadata: StartRequestBuilderRequestsMetadata,
    },
    validateCredentials: {
        uriTemplate: ValidateCredentialsRequestBuilderUriTemplate,
        requestsMetadata: ValidateCredentialsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SynchronizationJobItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSynchronizationJobFromDiscriminatorValue,
        queryParametersMapper: SynchronizationJobItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSynchronizationJobFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSynchronizationJob,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const SynchronizationJobItemRequestBuilderUriTemplate = "{+baseurl}/servicePrincipals/{servicePrincipal%2Did}/synchronization/jobs/{synchronizationJob%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
