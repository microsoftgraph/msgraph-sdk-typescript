/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAdministrativeUnitFromDiscriminatorValue, serializeAdministrativeUnit, type AdministrativeUnit } from '../../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../models/oDataErrors/';
import { ExtensionsRequestBuilderNavigationMetadata, ExtensionsRequestBuilderRequestsMetadata, ExtensionsRequestBuilderUriTemplate, type ExtensionsRequestBuilder } from './extensions/';
import { MembersRequestBuilderNavigationMetadata, MembersRequestBuilderRequestsMetadata, MembersRequestBuilderUriTemplate, type MembersRequestBuilder } from './members/';
import { ScopedRoleMembersRequestBuilderNavigationMetadata, ScopedRoleMembersRequestBuilderRequestsMetadata, ScopedRoleMembersRequestBuilderUriTemplate, type ScopedRoleMembersRequestBuilder } from './scopedRoleMembers/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the administrativeUnits property of the microsoft.graph.directory entity.
 */
export interface AdministrativeUnitItemRequestBuilder extends BaseRequestBuilder<AdministrativeUnitItemRequestBuilder> {
    /**
     * Provides operations to manage the extensions property of the microsoft.graph.administrativeUnit entity.
     */
    get extensions(): ExtensionsRequestBuilder;
    /**
     * Provides operations to manage the members property of the microsoft.graph.administrativeUnit entity.
     */
    get members(): MembersRequestBuilder;
    /**
     * Provides operations to manage the scopedRoleMembers property of the microsoft.graph.administrativeUnit entity.
     */
    get scopedRoleMembers(): ScopedRoleMembersRequestBuilder;
    /**
     * Delete an administrativeUnit.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/administrativeunit-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties and relationships of an administrativeUnit object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AdministrativeUnit
     * @see {@link https://learn.microsoft.com/graph/api/administrativeunit-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<AdministrativeUnitItemRequestBuilderGetQueryParameters> | undefined) : Promise<AdministrativeUnit | undefined>;
    /**
     * Update the properties of an administrativeUnit object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AdministrativeUnit
     * @see {@link https://learn.microsoft.com/graph/api/administrativeunit-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: AdministrativeUnit, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AdministrativeUnit | undefined>;
    /**
     * Delete an administrativeUnit.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of an administrativeUnit object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AdministrativeUnitItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of an administrativeUnit object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: AdministrativeUnit, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of an administrativeUnit object.
 */
export interface AdministrativeUnitItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AdministrativeUnitItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AdministrativeUnitItemRequestBuilderNavigationMetadata: Record<Exclude<keyof AdministrativeUnitItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    extensions: {
        uriTemplate: ExtensionsRequestBuilderUriTemplate,
        requestsMetadata: ExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: ExtensionsRequestBuilderNavigationMetadata,
    },
    members: {
        uriTemplate: MembersRequestBuilderUriTemplate,
        requestsMetadata: MembersRequestBuilderRequestsMetadata,
        navigationMetadata: MembersRequestBuilderNavigationMetadata,
    },
    scopedRoleMembers: {
        uriTemplate: ScopedRoleMembersRequestBuilderUriTemplate,
        requestsMetadata: ScopedRoleMembersRequestBuilderRequestsMetadata,
        navigationMetadata: ScopedRoleMembersRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AdministrativeUnitItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAdministrativeUnitFromDiscriminatorValue,
        queryParametersMapper: AdministrativeUnitItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAdministrativeUnitFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAdministrativeUnit,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AdministrativeUnitItemRequestBuilderUriTemplate = "{+baseurl}/directory/administrativeUnits/{administrativeUnit%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
