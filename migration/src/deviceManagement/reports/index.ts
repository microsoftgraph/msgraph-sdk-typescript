/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementReportsFromDiscriminatorValue, serializeDeviceManagementReports, type DeviceManagementReports } from '../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../models/oDataErrors/';
import { ExportJobsRequestBuilderNavigationMetadata, ExportJobsRequestBuilderRequestsMetadata, ExportJobsRequestBuilderUriTemplate, type ExportJobsRequestBuilder } from './exportJobs/';
import { GetCachedReportRequestBuilderRequestsMetadata, GetCachedReportRequestBuilderUriTemplate, type GetCachedReportRequestBuilder } from './getCachedReport/';
import { GetCompliancePolicyNonComplianceReportRequestBuilderRequestsMetadata, GetCompliancePolicyNonComplianceReportRequestBuilderUriTemplate, type GetCompliancePolicyNonComplianceReportRequestBuilder } from './getCompliancePolicyNonComplianceReport/';
import { GetCompliancePolicyNonComplianceSummaryReportRequestBuilderRequestsMetadata, GetCompliancePolicyNonComplianceSummaryReportRequestBuilderUriTemplate, type GetCompliancePolicyNonComplianceSummaryReportRequestBuilder } from './getCompliancePolicyNonComplianceSummaryReport/';
import { GetComplianceSettingNonComplianceReportRequestBuilderRequestsMetadata, GetComplianceSettingNonComplianceReportRequestBuilderUriTemplate, type GetComplianceSettingNonComplianceReportRequestBuilder } from './getComplianceSettingNonComplianceReport/';
import { GetConfigurationPolicyNonComplianceReportRequestBuilderRequestsMetadata, GetConfigurationPolicyNonComplianceReportRequestBuilderUriTemplate, type GetConfigurationPolicyNonComplianceReportRequestBuilder } from './getConfigurationPolicyNonComplianceReport/';
import { GetConfigurationPolicyNonComplianceSummaryReportRequestBuilderRequestsMetadata, GetConfigurationPolicyNonComplianceSummaryReportRequestBuilderUriTemplate, type GetConfigurationPolicyNonComplianceSummaryReportRequestBuilder } from './getConfigurationPolicyNonComplianceSummaryReport/';
import { GetConfigurationSettingNonComplianceReportRequestBuilderRequestsMetadata, GetConfigurationSettingNonComplianceReportRequestBuilderUriTemplate, type GetConfigurationSettingNonComplianceReportRequestBuilder } from './getConfigurationSettingNonComplianceReport/';
import { GetDeviceManagementIntentPerSettingContributingProfilesRequestBuilderRequestsMetadata, GetDeviceManagementIntentPerSettingContributingProfilesRequestBuilderUriTemplate, type GetDeviceManagementIntentPerSettingContributingProfilesRequestBuilder } from './getDeviceManagementIntentPerSettingContributingProfiles/';
import { GetDeviceManagementIntentSettingsReportRequestBuilderRequestsMetadata, GetDeviceManagementIntentSettingsReportRequestBuilderUriTemplate, type GetDeviceManagementIntentSettingsReportRequestBuilder } from './getDeviceManagementIntentSettingsReport/';
import { GetDeviceNonComplianceReportRequestBuilderRequestsMetadata, GetDeviceNonComplianceReportRequestBuilderUriTemplate, type GetDeviceNonComplianceReportRequestBuilder } from './getDeviceNonComplianceReport/';
import { GetDevicesWithoutCompliancePolicyReportRequestBuilderRequestsMetadata, GetDevicesWithoutCompliancePolicyReportRequestBuilderUriTemplate, type GetDevicesWithoutCompliancePolicyReportRequestBuilder } from './getDevicesWithoutCompliancePolicyReport/';
import { GetHistoricalReportRequestBuilderRequestsMetadata, GetHistoricalReportRequestBuilderUriTemplate, type GetHistoricalReportRequestBuilder } from './getHistoricalReport/';
import { GetNoncompliantDevicesAndSettingsReportRequestBuilderRequestsMetadata, GetNoncompliantDevicesAndSettingsReportRequestBuilderUriTemplate, type GetNoncompliantDevicesAndSettingsReportRequestBuilder } from './getNoncompliantDevicesAndSettingsReport/';
import { GetPolicyNonComplianceMetadataRequestBuilderRequestsMetadata, GetPolicyNonComplianceMetadataRequestBuilderUriTemplate, type GetPolicyNonComplianceMetadataRequestBuilder } from './getPolicyNonComplianceMetadata/';
import { GetPolicyNonComplianceReportRequestBuilderRequestsMetadata, GetPolicyNonComplianceReportRequestBuilderUriTemplate, type GetPolicyNonComplianceReportRequestBuilder } from './getPolicyNonComplianceReport/';
import { GetPolicyNonComplianceSummaryReportRequestBuilderRequestsMetadata, GetPolicyNonComplianceSummaryReportRequestBuilderUriTemplate, type GetPolicyNonComplianceSummaryReportRequestBuilder } from './getPolicyNonComplianceSummaryReport/';
import { GetReportFiltersRequestBuilderRequestsMetadata, GetReportFiltersRequestBuilderUriTemplate, type GetReportFiltersRequestBuilder } from './getReportFilters/';
import { GetSettingNonComplianceReportRequestBuilderRequestsMetadata, GetSettingNonComplianceReportRequestBuilderUriTemplate, type GetSettingNonComplianceReportRequestBuilder } from './getSettingNonComplianceReport/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the reports property of the microsoft.graph.deviceManagement entity.
 */
export interface ReportsRequestBuilder extends BaseRequestBuilder<ReportsRequestBuilder> {
    /**
     * Provides operations to manage the exportJobs property of the microsoft.graph.deviceManagementReports entity.
     */
    get exportJobs(): ExportJobsRequestBuilder;
    /**
     * Provides operations to call the getCachedReport method.
     */
    get getCachedReport(): GetCachedReportRequestBuilder;
    /**
     * Provides operations to call the getCompliancePolicyNonComplianceReport method.
     */
    get getCompliancePolicyNonComplianceReport(): GetCompliancePolicyNonComplianceReportRequestBuilder;
    /**
     * Provides operations to call the getCompliancePolicyNonComplianceSummaryReport method.
     */
    get getCompliancePolicyNonComplianceSummaryReport(): GetCompliancePolicyNonComplianceSummaryReportRequestBuilder;
    /**
     * Provides operations to call the getComplianceSettingNonComplianceReport method.
     */
    get getComplianceSettingNonComplianceReport(): GetComplianceSettingNonComplianceReportRequestBuilder;
    /**
     * Provides operations to call the getConfigurationPolicyNonComplianceReport method.
     */
    get getConfigurationPolicyNonComplianceReport(): GetConfigurationPolicyNonComplianceReportRequestBuilder;
    /**
     * Provides operations to call the getConfigurationPolicyNonComplianceSummaryReport method.
     */
    get getConfigurationPolicyNonComplianceSummaryReport(): GetConfigurationPolicyNonComplianceSummaryReportRequestBuilder;
    /**
     * Provides operations to call the getConfigurationSettingNonComplianceReport method.
     */
    get getConfigurationSettingNonComplianceReport(): GetConfigurationSettingNonComplianceReportRequestBuilder;
    /**
     * Provides operations to call the getDeviceManagementIntentPerSettingContributingProfiles method.
     */
    get getDeviceManagementIntentPerSettingContributingProfiles(): GetDeviceManagementIntentPerSettingContributingProfilesRequestBuilder;
    /**
     * Provides operations to call the getDeviceManagementIntentSettingsReport method.
     */
    get getDeviceManagementIntentSettingsReport(): GetDeviceManagementIntentSettingsReportRequestBuilder;
    /**
     * Provides operations to call the getDeviceNonComplianceReport method.
     */
    get getDeviceNonComplianceReport(): GetDeviceNonComplianceReportRequestBuilder;
    /**
     * Provides operations to call the getDevicesWithoutCompliancePolicyReport method.
     */
    get getDevicesWithoutCompliancePolicyReport(): GetDevicesWithoutCompliancePolicyReportRequestBuilder;
    /**
     * Provides operations to call the getHistoricalReport method.
     */
    get getHistoricalReport(): GetHistoricalReportRequestBuilder;
    /**
     * Provides operations to call the getNoncompliantDevicesAndSettingsReport method.
     */
    get getNoncompliantDevicesAndSettingsReport(): GetNoncompliantDevicesAndSettingsReportRequestBuilder;
    /**
     * Provides operations to call the getPolicyNonComplianceMetadata method.
     */
    get getPolicyNonComplianceMetadata(): GetPolicyNonComplianceMetadataRequestBuilder;
    /**
     * Provides operations to call the getPolicyNonComplianceReport method.
     */
    get getPolicyNonComplianceReport(): GetPolicyNonComplianceReportRequestBuilder;
    /**
     * Provides operations to call the getPolicyNonComplianceSummaryReport method.
     */
    get getPolicyNonComplianceSummaryReport(): GetPolicyNonComplianceSummaryReportRequestBuilder;
    /**
     * Provides operations to call the getReportFilters method.
     */
    get getReportFilters(): GetReportFiltersRequestBuilder;
    /**
     * Provides operations to call the getSettingNonComplianceReport method.
     */
    get getSettingNonComplianceReport(): GetSettingNonComplianceReportRequestBuilder;
    /**
     * Delete navigation property reports for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read properties and relationships of the deviceManagementReports object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceManagementReports
     * @see {@link https://learn.microsoft.com/graph/api/intune-reporting-devicemanagementreports-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ReportsRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceManagementReports | undefined>;
    /**
     * Update the properties of a deviceManagementReports object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DeviceManagementReports
     * @see {@link https://learn.microsoft.com/graph/api/intune-reporting-devicemanagementreports-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: DeviceManagementReports, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementReports | undefined>;
    /**
     * Delete navigation property reports for deviceManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read properties and relationships of the deviceManagementReports object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ReportsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a deviceManagementReports object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: DeviceManagementReports, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read properties and relationships of the deviceManagementReports object.
 */
export interface ReportsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ReportsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ReportsRequestBuilderNavigationMetadata: Record<Exclude<keyof ReportsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    exportJobs: {
        uriTemplate: ExportJobsRequestBuilderUriTemplate,
        requestsMetadata: ExportJobsRequestBuilderRequestsMetadata,
        navigationMetadata: ExportJobsRequestBuilderNavigationMetadata,
    },
    getCachedReport: {
        uriTemplate: GetCachedReportRequestBuilderUriTemplate,
        requestsMetadata: GetCachedReportRequestBuilderRequestsMetadata,
    },
    getCompliancePolicyNonComplianceReport: {
        uriTemplate: GetCompliancePolicyNonComplianceReportRequestBuilderUriTemplate,
        requestsMetadata: GetCompliancePolicyNonComplianceReportRequestBuilderRequestsMetadata,
    },
    getCompliancePolicyNonComplianceSummaryReport: {
        uriTemplate: GetCompliancePolicyNonComplianceSummaryReportRequestBuilderUriTemplate,
        requestsMetadata: GetCompliancePolicyNonComplianceSummaryReportRequestBuilderRequestsMetadata,
    },
    getComplianceSettingNonComplianceReport: {
        uriTemplate: GetComplianceSettingNonComplianceReportRequestBuilderUriTemplate,
        requestsMetadata: GetComplianceSettingNonComplianceReportRequestBuilderRequestsMetadata,
    },
    getConfigurationPolicyNonComplianceReport: {
        uriTemplate: GetConfigurationPolicyNonComplianceReportRequestBuilderUriTemplate,
        requestsMetadata: GetConfigurationPolicyNonComplianceReportRequestBuilderRequestsMetadata,
    },
    getConfigurationPolicyNonComplianceSummaryReport: {
        uriTemplate: GetConfigurationPolicyNonComplianceSummaryReportRequestBuilderUriTemplate,
        requestsMetadata: GetConfigurationPolicyNonComplianceSummaryReportRequestBuilderRequestsMetadata,
    },
    getConfigurationSettingNonComplianceReport: {
        uriTemplate: GetConfigurationSettingNonComplianceReportRequestBuilderUriTemplate,
        requestsMetadata: GetConfigurationSettingNonComplianceReportRequestBuilderRequestsMetadata,
    },
    getDeviceManagementIntentPerSettingContributingProfiles: {
        uriTemplate: GetDeviceManagementIntentPerSettingContributingProfilesRequestBuilderUriTemplate,
        requestsMetadata: GetDeviceManagementIntentPerSettingContributingProfilesRequestBuilderRequestsMetadata,
    },
    getDeviceManagementIntentSettingsReport: {
        uriTemplate: GetDeviceManagementIntentSettingsReportRequestBuilderUriTemplate,
        requestsMetadata: GetDeviceManagementIntentSettingsReportRequestBuilderRequestsMetadata,
    },
    getDeviceNonComplianceReport: {
        uriTemplate: GetDeviceNonComplianceReportRequestBuilderUriTemplate,
        requestsMetadata: GetDeviceNonComplianceReportRequestBuilderRequestsMetadata,
    },
    getDevicesWithoutCompliancePolicyReport: {
        uriTemplate: GetDevicesWithoutCompliancePolicyReportRequestBuilderUriTemplate,
        requestsMetadata: GetDevicesWithoutCompliancePolicyReportRequestBuilderRequestsMetadata,
    },
    getHistoricalReport: {
        uriTemplate: GetHistoricalReportRequestBuilderUriTemplate,
        requestsMetadata: GetHistoricalReportRequestBuilderRequestsMetadata,
    },
    getNoncompliantDevicesAndSettingsReport: {
        uriTemplate: GetNoncompliantDevicesAndSettingsReportRequestBuilderUriTemplate,
        requestsMetadata: GetNoncompliantDevicesAndSettingsReportRequestBuilderRequestsMetadata,
    },
    getPolicyNonComplianceMetadata: {
        uriTemplate: GetPolicyNonComplianceMetadataRequestBuilderUriTemplate,
        requestsMetadata: GetPolicyNonComplianceMetadataRequestBuilderRequestsMetadata,
    },
    getPolicyNonComplianceReport: {
        uriTemplate: GetPolicyNonComplianceReportRequestBuilderUriTemplate,
        requestsMetadata: GetPolicyNonComplianceReportRequestBuilderRequestsMetadata,
    },
    getPolicyNonComplianceSummaryReport: {
        uriTemplate: GetPolicyNonComplianceSummaryReportRequestBuilderUriTemplate,
        requestsMetadata: GetPolicyNonComplianceSummaryReportRequestBuilderRequestsMetadata,
    },
    getReportFilters: {
        uriTemplate: GetReportFiltersRequestBuilderUriTemplate,
        requestsMetadata: GetReportFiltersRequestBuilderRequestsMetadata,
    },
    getSettingNonComplianceReport: {
        uriTemplate: GetSettingNonComplianceReportRequestBuilderUriTemplate,
        requestsMetadata: GetSettingNonComplianceReportRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ReportsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceManagementReportsFromDiscriminatorValue,
        queryParametersMapper: ReportsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDeviceManagementReportsFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceManagementReports,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ReportsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/reports{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
