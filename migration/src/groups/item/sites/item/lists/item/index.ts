/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createListFromDiscriminatorValue, serializeList, type List } from '../../../../../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../../../../models/oDataErrors/';
import { ColumnsRequestBuilderNavigationMetadata, ColumnsRequestBuilderRequestsMetadata, ColumnsRequestBuilderUriTemplate, type ColumnsRequestBuilder } from './columns/';
import { ContentTypesRequestBuilderNavigationMetadata, ContentTypesRequestBuilderRequestsMetadata, ContentTypesRequestBuilderUriTemplate, type ContentTypesRequestBuilder } from './contentTypes/';
import { CreatedByUserRequestBuilderNavigationMetadata, CreatedByUserRequestBuilderRequestsMetadata, CreatedByUserRequestBuilderUriTemplate, type CreatedByUserRequestBuilder } from './createdByUser/';
import { DriveRequestBuilderRequestsMetadata, DriveRequestBuilderUriTemplate, type DriveRequestBuilder } from './drive/';
import { ItemsRequestBuilderNavigationMetadata, ItemsRequestBuilderRequestsMetadata, ItemsRequestBuilderUriTemplate, type ItemsRequestBuilder } from './items/';
import { LastModifiedByUserRequestBuilderNavigationMetadata, LastModifiedByUserRequestBuilderRequestsMetadata, LastModifiedByUserRequestBuilderUriTemplate, type LastModifiedByUserRequestBuilder } from './lastModifiedByUser/';
import { OperationsRequestBuilderNavigationMetadata, OperationsRequestBuilderRequestsMetadata, OperationsRequestBuilderUriTemplate, type OperationsRequestBuilder } from './operations/';
import { SubscriptionsRequestBuilderNavigationMetadata, SubscriptionsRequestBuilderRequestsMetadata, SubscriptionsRequestBuilderUriTemplate, type SubscriptionsRequestBuilder } from './subscriptions/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the lists property of the microsoft.graph.site entity.
 */
export interface ListItemRequestBuilder extends BaseRequestBuilder<ListItemRequestBuilder> {
    /**
     * Provides operations to manage the columns property of the microsoft.graph.list entity.
     */
    get columns(): ColumnsRequestBuilder;
    /**
     * Provides operations to manage the contentTypes property of the microsoft.graph.list entity.
     */
    get contentTypes(): ContentTypesRequestBuilder;
    /**
     * Provides operations to manage the createdByUser property of the microsoft.graph.baseItem entity.
     */
    get createdByUser(): CreatedByUserRequestBuilder;
    /**
     * Provides operations to manage the drive property of the microsoft.graph.list entity.
     */
    get drive(): DriveRequestBuilder;
    /**
     * Provides operations to manage the items property of the microsoft.graph.list entity.
     */
    get items(): ItemsRequestBuilder;
    /**
     * Provides operations to manage the lastModifiedByUser property of the microsoft.graph.baseItem entity.
     */
    get lastModifiedByUser(): LastModifiedByUserRequestBuilder;
    /**
     * Provides operations to manage the operations property of the microsoft.graph.list entity.
     */
    get operations(): OperationsRequestBuilder;
    /**
     * Provides operations to manage the subscriptions property of the microsoft.graph.list entity.
     */
    get subscriptions(): SubscriptionsRequestBuilder;
    /**
     * Delete navigation property lists for groups
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get a list of rich long-running operations associated with a list.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of List
     * @see {@link https://learn.microsoft.com/graph/api/list-list-operations?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ListItemRequestBuilderGetQueryParameters> | undefined) : Promise<List | undefined>;
    /**
     * Update the navigation property lists in groups
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of List
     */
     patch(body: List, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<List | undefined>;
    /**
     * Delete navigation property lists for groups
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get a list of rich long-running operations associated with a list.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ListItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property lists in groups
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: List, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of rich long-running operations associated with a list.
 */
export interface ListItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ListItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ListItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ListItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    columns: {
        uriTemplate: ColumnsRequestBuilderUriTemplate,
        requestsMetadata: ColumnsRequestBuilderRequestsMetadata,
        navigationMetadata: ColumnsRequestBuilderNavigationMetadata,
    },
    contentTypes: {
        uriTemplate: ContentTypesRequestBuilderUriTemplate,
        requestsMetadata: ContentTypesRequestBuilderRequestsMetadata,
        navigationMetadata: ContentTypesRequestBuilderNavigationMetadata,
    },
    createdByUser: {
        uriTemplate: CreatedByUserRequestBuilderUriTemplate,
        requestsMetadata: CreatedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: CreatedByUserRequestBuilderNavigationMetadata,
    },
    drive: {
        uriTemplate: DriveRequestBuilderUriTemplate,
        requestsMetadata: DriveRequestBuilderRequestsMetadata,
    },
    items: {
        uriTemplate: ItemsRequestBuilderUriTemplate,
        requestsMetadata: ItemsRequestBuilderRequestsMetadata,
        navigationMetadata: ItemsRequestBuilderNavigationMetadata,
    },
    lastModifiedByUser: {
        uriTemplate: LastModifiedByUserRequestBuilderUriTemplate,
        requestsMetadata: LastModifiedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: LastModifiedByUserRequestBuilderNavigationMetadata,
    },
    operations: {
        uriTemplate: OperationsRequestBuilderUriTemplate,
        requestsMetadata: OperationsRequestBuilderRequestsMetadata,
        navigationMetadata: OperationsRequestBuilderNavigationMetadata,
    },
    subscriptions: {
        uriTemplate: SubscriptionsRequestBuilderUriTemplate,
        requestsMetadata: SubscriptionsRequestBuilderRequestsMetadata,
        navigationMetadata: SubscriptionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ListItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createListFromDiscriminatorValue,
        queryParametersMapper: ListItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createListFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeList,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ListItemRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/sites/{site%2Did}/lists/{list%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
