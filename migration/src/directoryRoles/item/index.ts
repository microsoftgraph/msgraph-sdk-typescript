/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDirectoryRoleFromDiscriminatorValue, serializeDirectoryRole, type DirectoryRole } from '../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../models/oDataErrors/';
import { CheckMemberGroupsRequestBuilderRequestsMetadata, CheckMemberGroupsRequestBuilderUriTemplate, type CheckMemberGroupsRequestBuilder } from './checkMemberGroups/';
import { CheckMemberObjectsRequestBuilderRequestsMetadata, CheckMemberObjectsRequestBuilderUriTemplate, type CheckMemberObjectsRequestBuilder } from './checkMemberObjects/';
import { GetMemberGroupsRequestBuilderRequestsMetadata, GetMemberGroupsRequestBuilderUriTemplate, type GetMemberGroupsRequestBuilder } from './getMemberGroups/';
import { GetMemberObjectsRequestBuilderRequestsMetadata, GetMemberObjectsRequestBuilderUriTemplate, type GetMemberObjectsRequestBuilder } from './getMemberObjects/';
import { MembersRequestBuilderNavigationMetadata, MembersRequestBuilderRequestsMetadata, MembersRequestBuilderUriTemplate, type MembersRequestBuilder } from './members/';
import { RestoreRequestBuilderRequestsMetadata, RestoreRequestBuilderUriTemplate, type RestoreRequestBuilder } from './restore/';
import { ScopedMembersRequestBuilderNavigationMetadata, ScopedMembersRequestBuilderRequestsMetadata, ScopedMembersRequestBuilderUriTemplate, type ScopedMembersRequestBuilder } from './scopedMembers/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of directoryRole entities.
 */
export interface DirectoryRoleItemRequestBuilder extends BaseRequestBuilder<DirectoryRoleItemRequestBuilder> {
    /**
     * Provides operations to call the checkMemberGroups method.
     */
    get checkMemberGroups(): CheckMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the checkMemberObjects method.
     */
    get checkMemberObjects(): CheckMemberObjectsRequestBuilder;
    /**
     * Provides operations to call the getMemberGroups method.
     */
    get getMemberGroups(): GetMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the getMemberObjects method.
     */
    get getMemberObjects(): GetMemberObjectsRequestBuilder;
    /**
     * Provides operations to manage the members property of the microsoft.graph.directoryRole entity.
     */
    get members(): MembersRequestBuilder;
    /**
     * Provides operations to call the restore method.
     */
    get restore(): RestoreRequestBuilder;
    /**
     * Provides operations to manage the scopedMembers property of the microsoft.graph.directoryRole entity.
     */
    get scopedMembers(): ScopedMembersRequestBuilder;
    /**
     * Delete entity from directoryRoles
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties of a directoryRole object. The role must be activated in tenant for a successful response. You can use both the object ID and template ID of the directoryRole with this API. The template ID of a built-in role is immutable and can be seen in the role description on the Microsoft Entra admin center. For details, see Role template IDs.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DirectoryRole
     * @see {@link https://learn.microsoft.com/graph/api/directoryrole-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<DirectoryRoleItemRequestBuilderGetQueryParameters> | undefined) : Promise<DirectoryRole | undefined>;
    /**
     * Update entity in directoryRoles
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of DirectoryRole
     */
     patch(body: DirectoryRole, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DirectoryRole | undefined>;
    /**
     * Delete entity from directoryRoles
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties of a directoryRole object. The role must be activated in tenant for a successful response. You can use both the object ID and template ID of the directoryRole with this API. The template ID of a built-in role is immutable and can be seen in the role description on the Microsoft Entra admin center. For details, see Role template IDs.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DirectoryRoleItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update entity in directoryRoles
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: DirectoryRole, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties of a directoryRole object. The role must be activated in tenant for a successful response. You can use both the object ID and template ID of the directoryRole with this API. The template ID of a built-in role is immutable and can be seen in the role description on the Microsoft Entra admin center. For details, see Role template IDs.
 */
export interface DirectoryRoleItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DirectoryRoleItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DirectoryRoleItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DirectoryRoleItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    checkMemberGroups: {
        uriTemplate: CheckMemberGroupsRequestBuilderUriTemplate,
        requestsMetadata: CheckMemberGroupsRequestBuilderRequestsMetadata,
    },
    checkMemberObjects: {
        uriTemplate: CheckMemberObjectsRequestBuilderUriTemplate,
        requestsMetadata: CheckMemberObjectsRequestBuilderRequestsMetadata,
    },
    getMemberGroups: {
        uriTemplate: GetMemberGroupsRequestBuilderUriTemplate,
        requestsMetadata: GetMemberGroupsRequestBuilderRequestsMetadata,
    },
    getMemberObjects: {
        uriTemplate: GetMemberObjectsRequestBuilderUriTemplate,
        requestsMetadata: GetMemberObjectsRequestBuilderRequestsMetadata,
    },
    members: {
        uriTemplate: MembersRequestBuilderUriTemplate,
        requestsMetadata: MembersRequestBuilderRequestsMetadata,
        navigationMetadata: MembersRequestBuilderNavigationMetadata,
    },
    restore: {
        uriTemplate: RestoreRequestBuilderUriTemplate,
        requestsMetadata: RestoreRequestBuilderRequestsMetadata,
    },
    scopedMembers: {
        uriTemplate: ScopedMembersRequestBuilderUriTemplate,
        requestsMetadata: ScopedMembersRequestBuilderRequestsMetadata,
        navigationMetadata: ScopedMembersRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DirectoryRoleItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDirectoryRoleFromDiscriminatorValue,
        queryParametersMapper: DirectoryRoleItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDirectoryRoleFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDirectoryRole,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const DirectoryRoleItemRequestBuilderUriTemplate = "{+baseurl}/directoryRoles/{directoryRole%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
