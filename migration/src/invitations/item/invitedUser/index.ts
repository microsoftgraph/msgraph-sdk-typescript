/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUserFromDiscriminatorValue, type User } from '../../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../models/oDataErrors/';
import { MailboxSettingsRequestBuilderRequestsMetadata, MailboxSettingsRequestBuilderUriTemplate, type MailboxSettingsRequestBuilder } from './mailboxSettings/';
import { ServiceProvisioningErrorsRequestBuilderNavigationMetadata, ServiceProvisioningErrorsRequestBuilderRequestsMetadata, ServiceProvisioningErrorsRequestBuilderUriTemplate, type ServiceProvisioningErrorsRequestBuilder } from './serviceProvisioningErrors/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the invitedUser property of the microsoft.graph.invitation entity.
 */
export interface InvitedUserRequestBuilder extends BaseRequestBuilder<InvitedUserRequestBuilder> {
    /**
     * The mailboxSettings property
     */
    get mailboxSettings(): MailboxSettingsRequestBuilder;
    /**
     * The serviceProvisioningErrors property
     */
    get serviceProvisioningErrors(): ServiceProvisioningErrorsRequestBuilder;
    /**
     * The user created as part of the invitation creation. Read-Only
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of User
     */
     get(requestConfiguration?: RequestConfiguration<InvitedUserRequestBuilderGetQueryParameters> | undefined) : Promise<User | undefined>;
    /**
     * The user created as part of the invitation creation. Read-Only
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<InvitedUserRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The user created as part of the invitation creation. Read-Only
 */
export interface InvitedUserRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const InvitedUserRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const InvitedUserRequestBuilderNavigationMetadata: Record<Exclude<keyof InvitedUserRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    mailboxSettings: {
        uriTemplate: MailboxSettingsRequestBuilderUriTemplate,
        requestsMetadata: MailboxSettingsRequestBuilderRequestsMetadata,
    },
    serviceProvisioningErrors: {
        uriTemplate: ServiceProvisioningErrorsRequestBuilderUriTemplate,
        requestsMetadata: ServiceProvisioningErrorsRequestBuilderRequestsMetadata,
        navigationMetadata: ServiceProvisioningErrorsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const InvitedUserRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUserFromDiscriminatorValue,
        queryParametersMapper: InvitedUserRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const InvitedUserRequestBuilderUriTemplate = "{+baseurl}/invitations/{invitation%2Did}/invitedUser{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
