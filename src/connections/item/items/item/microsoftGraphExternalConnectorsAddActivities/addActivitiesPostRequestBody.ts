// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createExternalActivityFromDiscriminatorValue, serializeExternalActivity, type ExternalActivity } from '../../../../../models/externalConnectors/externalActivity';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AddActivitiesPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The activities property
     */
    activities?: ExternalActivity[];
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
}
export function createAddActivitiesPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAddActivitiesPostRequestBody;
}
export function deserializeIntoAddActivitiesPostRequestBody(addActivitiesPostRequestBody: AddActivitiesPostRequestBody | undefined = {} as AddActivitiesPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "activities": n => { addActivitiesPostRequestBody.activities = n.getCollectionOfObjectValues<ExternalActivity>(createExternalActivityFromDiscriminatorValue); },
    }
}
export function serializeAddActivitiesPostRequestBody(writer: SerializationWriter, addActivitiesPostRequestBody: AddActivitiesPostRequestBody | undefined = {} as AddActivitiesPostRequestBody) : void {
        writer.writeCollectionOfObjectValues<ExternalActivity>("activities", addActivitiesPostRequestBody.activities, );
        writer.writeAdditionalData(addActivitiesPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
