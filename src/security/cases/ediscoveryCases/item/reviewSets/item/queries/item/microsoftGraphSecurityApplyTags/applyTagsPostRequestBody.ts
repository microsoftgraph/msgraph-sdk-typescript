// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createEdiscoveryReviewTagFromDiscriminatorValue, serializeEdiscoveryReviewTag, type EdiscoveryReviewTag } from '../../../../../../../../../models/security/ediscoveryReviewTag';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApplyTagsPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The tagsToAdd property
     */
    tagsToAdd?: EdiscoveryReviewTag[];
    /**
     * The tagsToRemove property
     */
    tagsToRemove?: EdiscoveryReviewTag[];
}
export function createApplyTagsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoApplyTagsPostRequestBody;
}
export function deserializeIntoApplyTagsPostRequestBody(applyTagsPostRequestBody: ApplyTagsPostRequestBody | undefined = {} as ApplyTagsPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "tagsToAdd": n => { applyTagsPostRequestBody.tagsToAdd = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
        "tagsToRemove": n => { applyTagsPostRequestBody.tagsToRemove = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
export function serializeApplyTagsPostRequestBody(writer: SerializationWriter, applyTagsPostRequestBody: ApplyTagsPostRequestBody | undefined = {} as ApplyTagsPostRequestBody) : void {
        writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("tagsToAdd", applyTagsPostRequestBody.tagsToAdd, );
        writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("tagsToRemove", applyTagsPostRequestBody.tagsToRemove, );
        writer.writeAdditionalData(applyTagsPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
