// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { PurgeAreas } from '../../../../../../../models/security/purgeAreas';
import { PurgeType } from '../../../../../../../models/security/purgeType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPurgeDataPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPurgeDataPostRequestBody;
}
export function deserializeIntoPurgeDataPostRequestBody(purgeDataPostRequestBody: PurgeDataPostRequestBody | undefined = {} as PurgeDataPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "purgeAreas": n => { purgeDataPostRequestBody.purgeAreas = n.getCollectionOfEnumValues<PurgeAreas>(PurgeAreas); },
        "purgeType": n => { purgeDataPostRequestBody.purgeType = n.getEnumValue<PurgeType>(PurgeType); },
    }
}
export interface PurgeDataPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The purgeAreas property
     */
    purgeAreas?: PurgeAreas[];
    /**
     * The purgeType property
     */
    purgeType?: PurgeType;
}
export function serializePurgeDataPostRequestBody(writer: SerializationWriter, purgeDataPostRequestBody: PurgeDataPostRequestBody | undefined = {} as PurgeDataPostRequestBody) : void {
        writer.writeEnumValue<PurgeAreas[]>("purgeAreas", purgeDataPostRequestBody.purgeAreas);
        writer.writeEnumValue<PurgeType>("purgeType", purgeDataPostRequestBody.purgeType);
        writer.writeAdditionalData(purgeDataPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
