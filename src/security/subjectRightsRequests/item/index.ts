/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSubjectRightsRequestFromDiscriminatorValue, serializeSubjectRightsRequest, type SubjectRightsRequest } from '../../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../models/oDataErrors/';
import { ApproversRequestBuilderNavigationMetadata, ApproversRequestBuilderRequestsMetadata, ApproversRequestBuilderUriTemplate, type ApproversRequestBuilder } from './approvers/';
import { CollaboratorsRequestBuilderNavigationMetadata, CollaboratorsRequestBuilderRequestsMetadata, CollaboratorsRequestBuilderUriTemplate, type CollaboratorsRequestBuilder } from './collaborators/';
import { GetFinalAttachmentRequestBuilderRequestsMetadata, GetFinalAttachmentRequestBuilderUriTemplate, type GetFinalAttachmentRequestBuilder } from './getFinalAttachment/';
import { GetFinalReportRequestBuilderRequestsMetadata, GetFinalReportRequestBuilderUriTemplate, type GetFinalReportRequestBuilder } from './getFinalReport/';
import { NotesRequestBuilderNavigationMetadata, NotesRequestBuilderRequestsMetadata, NotesRequestBuilderUriTemplate, type NotesRequestBuilder } from './notes/';
import { TeamRequestBuilderRequestsMetadata, TeamRequestBuilderUriTemplate, type TeamRequestBuilder } from './team/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the subjectRightsRequests property of the microsoft.graph.security entity.
 */
export interface SubjectRightsRequestItemRequestBuilder extends BaseRequestBuilder<SubjectRightsRequestItemRequestBuilder> {
    /**
     * Provides operations to manage the approvers property of the microsoft.graph.subjectRightsRequest entity.
     */
    get approvers(): ApproversRequestBuilder;
    /**
     * Provides operations to manage the collaborators property of the microsoft.graph.subjectRightsRequest entity.
     */
    get collaborators(): CollaboratorsRequestBuilder;
    /**
     * Provides operations to call the getFinalAttachment method.
     */
    get getFinalAttachment(): GetFinalAttachmentRequestBuilder;
    /**
     * Provides operations to call the getFinalReport method.
     */
    get getFinalReport(): GetFinalReportRequestBuilder;
    /**
     * Provides operations to manage the notes property of the microsoft.graph.subjectRightsRequest entity.
     */
    get notes(): NotesRequestBuilder;
    /**
     * Provides operations to manage the team property of the microsoft.graph.subjectRightsRequest entity.
     */
    get team(): TeamRequestBuilder;
    /**
     * Delete navigation property subjectRightsRequests for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get subjectRightsRequests from security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SubjectRightsRequest
     */
     get(requestConfiguration?: RequestConfiguration<SubjectRightsRequestItemRequestBuilderGetQueryParameters> | undefined) : Promise<SubjectRightsRequest | undefined>;
    /**
     * Update the navigation property subjectRightsRequests in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of SubjectRightsRequest
     */
     patch(body: SubjectRightsRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SubjectRightsRequest | undefined>;
    /**
     * Delete navigation property subjectRightsRequests for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get subjectRightsRequests from security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SubjectRightsRequestItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property subjectRightsRequests in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: SubjectRightsRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get subjectRightsRequests from security
 */
export interface SubjectRightsRequestItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SubjectRightsRequestItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SubjectRightsRequestItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SubjectRightsRequestItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    approvers: {
        uriTemplate: ApproversRequestBuilderUriTemplate,
        requestsMetadata: ApproversRequestBuilderRequestsMetadata,
        navigationMetadata: ApproversRequestBuilderNavigationMetadata,
    },
    collaborators: {
        uriTemplate: CollaboratorsRequestBuilderUriTemplate,
        requestsMetadata: CollaboratorsRequestBuilderRequestsMetadata,
        navigationMetadata: CollaboratorsRequestBuilderNavigationMetadata,
    },
    getFinalAttachment: {
        uriTemplate: GetFinalAttachmentRequestBuilderUriTemplate,
        requestsMetadata: GetFinalAttachmentRequestBuilderRequestsMetadata,
    },
    getFinalReport: {
        uriTemplate: GetFinalReportRequestBuilderUriTemplate,
        requestsMetadata: GetFinalReportRequestBuilderRequestsMetadata,
    },
    notes: {
        uriTemplate: NotesRequestBuilderUriTemplate,
        requestsMetadata: NotesRequestBuilderRequestsMetadata,
        navigationMetadata: NotesRequestBuilderNavigationMetadata,
    },
    team: {
        uriTemplate: TeamRequestBuilderUriTemplate,
        requestsMetadata: TeamRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SubjectRightsRequestItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSubjectRightsRequestFromDiscriminatorValue,
        queryParametersMapper: SubjectRightsRequestItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSubjectRightsRequestFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSubjectRightsRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const SubjectRightsRequestItemRequestBuilderUriTemplate = "{+baseurl}/security/subjectRightsRequests/{subjectRightsRequest%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
