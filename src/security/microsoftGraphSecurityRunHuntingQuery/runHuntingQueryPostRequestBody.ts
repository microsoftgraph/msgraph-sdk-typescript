// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRunHuntingQueryPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRunHuntingQueryPostRequestBody;
}
export function deserializeIntoRunHuntingQueryPostRequestBody(runHuntingQueryPostRequestBody: RunHuntingQueryPostRequestBody | undefined = {} as RunHuntingQueryPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "query": n => { runHuntingQueryPostRequestBody.query = n.getStringValue(); },
    }
}
export interface RunHuntingQueryPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The query property
     */
    query?: string;
}
export function serializeRunHuntingQueryPostRequestBody(writer: SerializationWriter, runHuntingQueryPostRequestBody: RunHuntingQueryPostRequestBody | undefined = {} as RunHuntingQueryPostRequestBody) : void {
        writer.writeStringValue("query", runHuntingQueryPostRequestBody.query);
        writer.writeAdditionalData(runHuntingQueryPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
