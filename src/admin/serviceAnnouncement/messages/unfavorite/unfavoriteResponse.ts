import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createUnfavoriteResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUnfavoriteResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoUnfavoriteResponse(unfavoriteResponse: UnfavoriteResponse | undefined = {} as UnfavoriteResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { unfavoriteResponse.value = n.getBooleanValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeUnfavoriteResponse(writer: SerializationWriter, unfavoriteResponse: UnfavoriteResponse | undefined = {} as UnfavoriteResponse) : void {
        writer.writeBooleanValue("value", unfavoriteResponse.value);
        writer.writeAdditionalData(unfavoriteResponse.additionalData);
}
export interface UnfavoriteResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: boolean;
}
