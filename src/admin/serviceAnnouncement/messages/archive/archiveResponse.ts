import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ArchiveResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: boolean;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createArchiveResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoArchiveResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoArchiveResponse(archiveResponse: ArchiveResponse | undefined = {} as ArchiveResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { archiveResponse.value = n.getBooleanValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeArchiveResponse(writer: SerializationWriter, archiveResponse: ArchiveResponse | undefined = {} as ArchiveResponse) : void {
        writer.writeBooleanValue("value", archiveResponse.value);
        writer.writeAdditionalData(archiveResponse.additionalData);
}
