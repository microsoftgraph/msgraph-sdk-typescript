// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDriveItemUploadablePropertiesFromDiscriminatorValue, serializeDriveItemUploadableProperties, type DriveItemUploadableProperties } from '../../../../../models/driveItemUploadableProperties';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createCreateUploadSessionPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCreateUploadSessionPostRequestBody;
}
export interface CreateUploadSessionPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The item property
     */
    item?: DriveItemUploadableProperties;
}
export function deserializeIntoCreateUploadSessionPostRequestBody(createUploadSessionPostRequestBody: CreateUploadSessionPostRequestBody | undefined = {} as CreateUploadSessionPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "item": n => { createUploadSessionPostRequestBody.item = n.getObjectValue<DriveItemUploadableProperties>(createDriveItemUploadablePropertiesFromDiscriminatorValue); },
    }
}
export function serializeCreateUploadSessionPostRequestBody(writer: SerializationWriter, createUploadSessionPostRequestBody: CreateUploadSessionPostRequestBody | undefined = {} as CreateUploadSessionPostRequestBody) : void {
        writer.writeObjectValue<DriveItemUploadableProperties>("item", createUploadSessionPostRequestBody.item, );
        writer.writeAdditionalData(createUploadSessionPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
