import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../../../models/baseCollectionPaginationCountResponse';
import { createDriveItemFromDiscriminatorValue, serializeDriveItem, type DriveItem } from '../../../../../models/driveItem';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createSearchWithQResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSearchWithQResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoSearchWithQResponse(searchWithQResponse: SearchWithQResponse | undefined = {} as SearchWithQResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(searchWithQResponse),
        "value": n => { searchWithQResponse.value = n.getCollectionOfObjectValues<DriveItem>(createDriveItemFromDiscriminatorValue); },
    }
}
export interface SearchWithQResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DriveItem[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeSearchWithQResponse(writer: SerializationWriter, searchWithQResponse: SearchWithQResponse | undefined = {} as SearchWithQResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, searchWithQResponse)
        writer.writeCollectionOfObjectValues<DriveItem>("value", searchWithQResponse.value, );
}
