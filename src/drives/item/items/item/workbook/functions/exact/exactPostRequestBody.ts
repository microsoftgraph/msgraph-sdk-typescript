// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createExactPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoExactPostRequestBody;
}
export function deserializeIntoExactPostRequestBody(exactPostRequestBody: ExactPostRequestBody | undefined = {} as ExactPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "text1": n => { exactPostRequestBody.text1 = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "text2": n => { exactPostRequestBody.text2 = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface ExactPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The text1 property
     */
    text1?: Json;
    /**
     * The text2 property
     */
    text2?: Json;
}
export function serializeExactPostRequestBody(writer: SerializationWriter, exactPostRequestBody: ExactPostRequestBody | undefined = {} as ExactPostRequestBody) : void {
        writer.writeObjectValue<Json>("text1", exactPostRequestBody.text1, serializeJson);
        writer.writeObjectValue<Json>("text2", exactPostRequestBody.text2, serializeJson);
        writer.writeAdditionalData(exactPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
