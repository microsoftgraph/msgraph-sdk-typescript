// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AverageIfPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The averageRange property
     */
    averageRange?: Json;
    /**
     * The criteria property
     */
    criteria?: Json;
    /**
     * The range property
     */
    range?: Json;
}
export function createAverageIfPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAverageIfPostRequestBody;
}
export function deserializeIntoAverageIfPostRequestBody(averageIfPostRequestBody: AverageIfPostRequestBody | undefined = {} as AverageIfPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "averageRange": n => { averageIfPostRequestBody.averageRange = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "criteria": n => { averageIfPostRequestBody.criteria = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "range": n => { averageIfPostRequestBody.range = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeAverageIfPostRequestBody(writer: SerializationWriter, averageIfPostRequestBody: AverageIfPostRequestBody | undefined = {} as AverageIfPostRequestBody) : void {
        writer.writeObjectValue<Json>("averageRange", averageIfPostRequestBody.averageRange, );
        writer.writeObjectValue<Json>("criteria", averageIfPostRequestBody.criteria, );
        writer.writeObjectValue<Json>("range", averageIfPostRequestBody.range, );
        writer.writeAdditionalData(averageIfPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
