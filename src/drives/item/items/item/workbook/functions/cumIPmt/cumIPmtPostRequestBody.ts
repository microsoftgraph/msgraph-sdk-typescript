// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createCumIPmtPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCumIPmtPostRequestBody;
}
export interface CumIPmtPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The endPeriod property
     */
    endPeriod?: Json;
    /**
     * The nper property
     */
    nper?: Json;
    /**
     * The pv property
     */
    pv?: Json;
    /**
     * The rate property
     */
    rate?: Json;
    /**
     * The startPeriod property
     */
    startPeriod?: Json;
    /**
     * The type property
     */
    type?: Json;
}
export function deserializeIntoCumIPmtPostRequestBody(cumIPmtPostRequestBody: CumIPmtPostRequestBody | undefined = {} as CumIPmtPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "endPeriod": n => { cumIPmtPostRequestBody.endPeriod = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "nper": n => { cumIPmtPostRequestBody.nper = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "pv": n => { cumIPmtPostRequestBody.pv = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "rate": n => { cumIPmtPostRequestBody.rate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "startPeriod": n => { cumIPmtPostRequestBody.startPeriod = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "type": n => { cumIPmtPostRequestBody.type = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeCumIPmtPostRequestBody(writer: SerializationWriter, cumIPmtPostRequestBody: CumIPmtPostRequestBody | undefined = {} as CumIPmtPostRequestBody) : void {
        writer.writeObjectValue<Json>("endPeriod", cumIPmtPostRequestBody.endPeriod, serializeJson);
        writer.writeObjectValue<Json>("nper", cumIPmtPostRequestBody.nper, serializeJson);
        writer.writeObjectValue<Json>("pv", cumIPmtPostRequestBody.pv, serializeJson);
        writer.writeObjectValue<Json>("rate", cumIPmtPostRequestBody.rate, serializeJson);
        writer.writeObjectValue<Json>("startPeriod", cumIPmtPostRequestBody.startPeriod, serializeJson);
        writer.writeObjectValue<Json>("type", cumIPmtPostRequestBody.type, serializeJson);
        writer.writeAdditionalData(cumIPmtPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
