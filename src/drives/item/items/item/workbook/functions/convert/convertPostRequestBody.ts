// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ConvertPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The fromUnit property
     */
    fromUnit?: Json;
    /**
     * The number property
     */
    number?: Json;
    /**
     * The toUnit property
     */
    toUnit?: Json;
}
export function createConvertPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoConvertPostRequestBody;
}
export function deserializeIntoConvertPostRequestBody(convertPostRequestBody: ConvertPostRequestBody | undefined = {} as ConvertPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "fromUnit": n => { convertPostRequestBody.fromUnit = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "number": n => { convertPostRequestBody.number = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "toUnit": n => { convertPostRequestBody.toUnit = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeConvertPostRequestBody(writer: SerializationWriter, convertPostRequestBody: ConvertPostRequestBody | undefined = {} as ConvertPostRequestBody) : void {
        writer.writeObjectValue<Json>("fromUnit", convertPostRequestBody.fromUnit, );
        writer.writeObjectValue<Json>("number", convertPostRequestBody.number, );
        writer.writeObjectValue<Json>("toUnit", convertPostRequestBody.toUnit, );
        writer.writeAdditionalData(convertPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
