// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOddLYieldPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOddLYieldPostRequestBody;
}
export function deserializeIntoOddLYieldPostRequestBody(oddLYieldPostRequestBody: OddLYieldPostRequestBody | undefined = {} as OddLYieldPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "basis": n => { oddLYieldPostRequestBody.basis = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "frequency": n => { oddLYieldPostRequestBody.frequency = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "lastInterest": n => { oddLYieldPostRequestBody.lastInterest = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "maturity": n => { oddLYieldPostRequestBody.maturity = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "pr": n => { oddLYieldPostRequestBody.pr = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "rate": n => { oddLYieldPostRequestBody.rate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "redemption": n => { oddLYieldPostRequestBody.redemption = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "settlement": n => { oddLYieldPostRequestBody.settlement = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface OddLYieldPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The basis property
     */
    basis?: Json;
    /**
     * The frequency property
     */
    frequency?: Json;
    /**
     * The lastInterest property
     */
    lastInterest?: Json;
    /**
     * The maturity property
     */
    maturity?: Json;
    /**
     * The pr property
     */
    pr?: Json;
    /**
     * The rate property
     */
    rate?: Json;
    /**
     * The redemption property
     */
    redemption?: Json;
    /**
     * The settlement property
     */
    settlement?: Json;
}
export function serializeOddLYieldPostRequestBody(writer: SerializationWriter, oddLYieldPostRequestBody: OddLYieldPostRequestBody | undefined = {} as OddLYieldPostRequestBody) : void {
        writer.writeObjectValue<Json>("basis", oddLYieldPostRequestBody.basis, );
        writer.writeObjectValue<Json>("frequency", oddLYieldPostRequestBody.frequency, );
        writer.writeObjectValue<Json>("lastInterest", oddLYieldPostRequestBody.lastInterest, );
        writer.writeObjectValue<Json>("maturity", oddLYieldPostRequestBody.maturity, );
        writer.writeObjectValue<Json>("pr", oddLYieldPostRequestBody.pr, );
        writer.writeObjectValue<Json>("rate", oddLYieldPostRequestBody.rate, );
        writer.writeObjectValue<Json>("redemption", oddLYieldPostRequestBody.redemption, );
        writer.writeObjectValue<Json>("settlement", oddLYieldPostRequestBody.settlement, );
        writer.writeAdditionalData(oddLYieldPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
