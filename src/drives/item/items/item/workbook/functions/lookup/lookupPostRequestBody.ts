// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createLookupPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoLookupPostRequestBody;
}
export function deserializeIntoLookupPostRequestBody(lookupPostRequestBody: LookupPostRequestBody | undefined = {} as LookupPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "lookupValue": n => { lookupPostRequestBody.lookupValue = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "lookupVector": n => { lookupPostRequestBody.lookupVector = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "resultVector": n => { lookupPostRequestBody.resultVector = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface LookupPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The lookupValue property
     */
    lookupValue?: Json;
    /**
     * The lookupVector property
     */
    lookupVector?: Json;
    /**
     * The resultVector property
     */
    resultVector?: Json;
}
export function serializeLookupPostRequestBody(writer: SerializationWriter, lookupPostRequestBody: LookupPostRequestBody | undefined = {} as LookupPostRequestBody) : void {
        writer.writeObjectValue<Json>("lookupValue", lookupPostRequestBody.lookupValue, serializeJson);
        writer.writeObjectValue<Json>("lookupVector", lookupPostRequestBody.lookupVector, serializeJson);
        writer.writeObjectValue<Json>("resultVector", lookupPostRequestBody.resultVector, serializeJson);
        writer.writeAdditionalData(lookupPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
