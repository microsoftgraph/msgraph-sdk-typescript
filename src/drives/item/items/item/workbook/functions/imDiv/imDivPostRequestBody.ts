// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createImDivPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoImDivPostRequestBody;
}
export function deserializeIntoImDivPostRequestBody(imDivPostRequestBody: ImDivPostRequestBody | undefined = {} as ImDivPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "inumber1": n => { imDivPostRequestBody.inumber1 = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "inumber2": n => { imDivPostRequestBody.inumber2 = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface ImDivPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The inumber1 property
     */
    inumber1?: Json;
    /**
     * The inumber2 property
     */
    inumber2?: Json;
}
export function serializeImDivPostRequestBody(writer: SerializationWriter, imDivPostRequestBody: ImDivPostRequestBody | undefined = {} as ImDivPostRequestBody) : void {
        writer.writeObjectValue<Json>("inumber1", imDivPostRequestBody.inumber1, );
        writer.writeObjectValue<Json>("inumber2", imDivPostRequestBody.inumber2, );
        writer.writeAdditionalData(imDivPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
