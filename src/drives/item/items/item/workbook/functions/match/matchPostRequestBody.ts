// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMatchPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMatchPostRequestBody;
}
export function deserializeIntoMatchPostRequestBody(matchPostRequestBody: MatchPostRequestBody | undefined = {} as MatchPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "lookupArray": n => { matchPostRequestBody.lookupArray = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "lookupValue": n => { matchPostRequestBody.lookupValue = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "matchType": n => { matchPostRequestBody.matchType = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface MatchPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The lookupArray property
     */
    lookupArray?: Json;
    /**
     * The lookupValue property
     */
    lookupValue?: Json;
    /**
     * The matchType property
     */
    matchType?: Json;
}
export function serializeMatchPostRequestBody(writer: SerializationWriter, matchPostRequestBody: MatchPostRequestBody | undefined = {} as MatchPostRequestBody) : void {
        writer.writeObjectValue<Json>("lookupArray", matchPostRequestBody.lookupArray, );
        writer.writeObjectValue<Json>("lookupValue", matchPostRequestBody.lookupValue, );
        writer.writeObjectValue<Json>("matchType", matchPostRequestBody.matchType, );
        writer.writeAdditionalData(matchPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
