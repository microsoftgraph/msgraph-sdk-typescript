// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Beta_InvPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The A property
     */
    a?: Json;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The alpha property
     */
    alpha?: Json;
    /**
     * The B property
     */
    b?: Json;
    /**
     * The beta property
     */
    beta?: Json;
    /**
     * The probability property
     */
    probability?: Json;
}
export function createBeta_InvPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBeta_InvPostRequestBody;
}
export function deserializeIntoBeta_InvPostRequestBody(beta_InvPostRequestBody: Beta_InvPostRequestBody | undefined = {} as Beta_InvPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "a": n => { beta_InvPostRequestBody.a = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "alpha": n => { beta_InvPostRequestBody.alpha = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "b": n => { beta_InvPostRequestBody.b = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "beta": n => { beta_InvPostRequestBody.beta = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "probability": n => { beta_InvPostRequestBody.probability = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeBeta_InvPostRequestBody(writer: SerializationWriter, beta_InvPostRequestBody: Beta_InvPostRequestBody | undefined = {} as Beta_InvPostRequestBody) : void {
        writer.writeObjectValue<Json>("A", beta_InvPostRequestBody.a, );
        writer.writeObjectValue<Json>("alpha", beta_InvPostRequestBody.alpha, );
        writer.writeObjectValue<Json>("B", beta_InvPostRequestBody.b, );
        writer.writeObjectValue<Json>("beta", beta_InvPostRequestBody.beta, );
        writer.writeObjectValue<Json>("probability", beta_InvPostRequestBody.probability, );
        writer.writeAdditionalData(beta_InvPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
