// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createXnpvPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoXnpvPostRequestBody;
}
export function deserializeIntoXnpvPostRequestBody(xnpvPostRequestBody: XnpvPostRequestBody | undefined = {} as XnpvPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "dates": n => { xnpvPostRequestBody.dates = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "rate": n => { xnpvPostRequestBody.rate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "values": n => { xnpvPostRequestBody.values = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeXnpvPostRequestBody(writer: SerializationWriter, xnpvPostRequestBody: XnpvPostRequestBody | undefined = {} as XnpvPostRequestBody) : void {
        writer.writeObjectValue<Json>("dates", xnpvPostRequestBody.dates, );
        writer.writeObjectValue<Json>("rate", xnpvPostRequestBody.rate, );
        writer.writeObjectValue<Json>("values", xnpvPostRequestBody.values, );
        writer.writeAdditionalData(xnpvPostRequestBody.additionalData);
}
export interface XnpvPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The dates property
     */
    dates?: Json;
    /**
     * The rate property
     */
    rate?: Json;
    /**
     * The values property
     */
    values?: Json;
}
// tslint:enable
// eslint-enable
