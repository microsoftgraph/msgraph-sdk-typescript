// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFindBPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFindBPostRequestBody;
}
export function deserializeIntoFindBPostRequestBody(findBPostRequestBody: FindBPostRequestBody | undefined = {} as FindBPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "findText": n => { findBPostRequestBody.findText = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "startNum": n => { findBPostRequestBody.startNum = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "withinText": n => { findBPostRequestBody.withinText = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface FindBPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The findText property
     */
    findText?: Json;
    /**
     * The startNum property
     */
    startNum?: Json;
    /**
     * The withinText property
     */
    withinText?: Json;
}
export function serializeFindBPostRequestBody(writer: SerializationWriter, findBPostRequestBody: FindBPostRequestBody | undefined = {} as FindBPostRequestBody) : void {
        writer.writeObjectValue<Json>("findText", findBPostRequestBody.findText, );
        writer.writeObjectValue<Json>("startNum", findBPostRequestBody.startNum, );
        writer.writeObjectValue<Json>("withinText", findBPostRequestBody.withinText, );
        writer.writeAdditionalData(findBPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
