// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDatePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDatePostRequestBody;
}
export interface DatePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The day property
     */
    day?: Json;
    /**
     * The month property
     */
    month?: Json;
    /**
     * The year property
     */
    year?: Json;
}
export function deserializeIntoDatePostRequestBody(datePostRequestBody: DatePostRequestBody | undefined = {} as DatePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "day": n => { datePostRequestBody.day = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "month": n => { datePostRequestBody.month = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "year": n => { datePostRequestBody.year = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeDatePostRequestBody(writer: SerializationWriter, datePostRequestBody: DatePostRequestBody | undefined = {} as DatePostRequestBody) : void {
        writer.writeObjectValue<Json>("day", datePostRequestBody.day, );
        writer.writeObjectValue<Json>("month", datePostRequestBody.month, );
        writer.writeObjectValue<Json>("year", datePostRequestBody.year, );
        writer.writeAdditionalData(datePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
