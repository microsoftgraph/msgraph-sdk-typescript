// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createT_InvPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoT_InvPostRequestBody;
}
export function deserializeIntoT_InvPostRequestBody(t_InvPostRequestBody: T_InvPostRequestBody | undefined = {} as T_InvPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "degFreedom": n => { t_InvPostRequestBody.degFreedom = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "probability": n => { t_InvPostRequestBody.probability = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeT_InvPostRequestBody(writer: SerializationWriter, t_InvPostRequestBody: T_InvPostRequestBody | undefined = {} as T_InvPostRequestBody) : void {
        writer.writeObjectValue<Json>("degFreedom", t_InvPostRequestBody.degFreedom, );
        writer.writeObjectValue<Json>("probability", t_InvPostRequestBody.probability, );
        writer.writeAdditionalData(t_InvPostRequestBody.additionalData);
}
export interface T_InvPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The degFreedom property
     */
    degFreedom?: Json;
    /**
     * The probability property
     */
    probability?: Json;
}
// tslint:enable
// eslint-enable
