// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createF_Dist_RTPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoF_Dist_RTPostRequestBody;
}
export function deserializeIntoF_Dist_RTPostRequestBody(f_Dist_RTPostRequestBody: F_Dist_RTPostRequestBody | undefined = {} as F_Dist_RTPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "degFreedom1": n => { f_Dist_RTPostRequestBody.degFreedom1 = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "degFreedom2": n => { f_Dist_RTPostRequestBody.degFreedom2 = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "x": n => { f_Dist_RTPostRequestBody.x = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface F_Dist_RTPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The degFreedom1 property
     */
    degFreedom1?: Json;
    /**
     * The degFreedom2 property
     */
    degFreedom2?: Json;
    /**
     * The x property
     */
    x?: Json;
}
export function serializeF_Dist_RTPostRequestBody(writer: SerializationWriter, f_Dist_RTPostRequestBody: F_Dist_RTPostRequestBody | undefined = {} as F_Dist_RTPostRequestBody) : void {
        writer.writeObjectValue<Json>("degFreedom1", f_Dist_RTPostRequestBody.degFreedom1, serializeJson);
        writer.writeObjectValue<Json>("degFreedom2", f_Dist_RTPostRequestBody.degFreedom2, serializeJson);
        writer.writeObjectValue<Json>("x", f_Dist_RTPostRequestBody.x, serializeJson);
        writer.writeAdditionalData(f_Dist_RTPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
