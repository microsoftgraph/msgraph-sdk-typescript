// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFindPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFindPostRequestBody;
}
export function deserializeIntoFindPostRequestBody(findPostRequestBody: FindPostRequestBody | undefined = {} as FindPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "findText": n => { findPostRequestBody.findText = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "startNum": n => { findPostRequestBody.startNum = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "withinText": n => { findPostRequestBody.withinText = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface FindPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The findText property
     */
    findText?: Json;
    /**
     * The startNum property
     */
    startNum?: Json;
    /**
     * The withinText property
     */
    withinText?: Json;
}
export function serializeFindPostRequestBody(writer: SerializationWriter, findPostRequestBody: FindPostRequestBody | undefined = {} as FindPostRequestBody) : void {
        writer.writeObjectValue<Json>("findText", findPostRequestBody.findText, );
        writer.writeObjectValue<Json>("startNum", findPostRequestBody.startNum, );
        writer.writeObjectValue<Json>("withinText", findPostRequestBody.withinText, );
        writer.writeAdditionalData(findPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
