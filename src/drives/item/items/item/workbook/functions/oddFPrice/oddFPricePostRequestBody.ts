// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOddFPricePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOddFPricePostRequestBody;
}
export function deserializeIntoOddFPricePostRequestBody(oddFPricePostRequestBody: OddFPricePostRequestBody | undefined = {} as OddFPricePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "basis": n => { oddFPricePostRequestBody.basis = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "firstCoupon": n => { oddFPricePostRequestBody.firstCoupon = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "frequency": n => { oddFPricePostRequestBody.frequency = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "issue": n => { oddFPricePostRequestBody.issue = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "maturity": n => { oddFPricePostRequestBody.maturity = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "rate": n => { oddFPricePostRequestBody.rate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "redemption": n => { oddFPricePostRequestBody.redemption = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "settlement": n => { oddFPricePostRequestBody.settlement = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "yld": n => { oddFPricePostRequestBody.yld = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface OddFPricePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The basis property
     */
    basis?: Json;
    /**
     * The firstCoupon property
     */
    firstCoupon?: Json;
    /**
     * The frequency property
     */
    frequency?: Json;
    /**
     * The issue property
     */
    issue?: Json;
    /**
     * The maturity property
     */
    maturity?: Json;
    /**
     * The rate property
     */
    rate?: Json;
    /**
     * The redemption property
     */
    redemption?: Json;
    /**
     * The settlement property
     */
    settlement?: Json;
    /**
     * The yld property
     */
    yld?: Json;
}
export function serializeOddFPricePostRequestBody(writer: SerializationWriter, oddFPricePostRequestBody: OddFPricePostRequestBody | undefined = {} as OddFPricePostRequestBody) : void {
        writer.writeObjectValue<Json>("basis", oddFPricePostRequestBody.basis, );
        writer.writeObjectValue<Json>("firstCoupon", oddFPricePostRequestBody.firstCoupon, );
        writer.writeObjectValue<Json>("frequency", oddFPricePostRequestBody.frequency, );
        writer.writeObjectValue<Json>("issue", oddFPricePostRequestBody.issue, );
        writer.writeObjectValue<Json>("maturity", oddFPricePostRequestBody.maturity, );
        writer.writeObjectValue<Json>("rate", oddFPricePostRequestBody.rate, );
        writer.writeObjectValue<Json>("redemption", oddFPricePostRequestBody.redemption, );
        writer.writeObjectValue<Json>("settlement", oddFPricePostRequestBody.settlement, );
        writer.writeObjectValue<Json>("yld", oddFPricePostRequestBody.yld, );
        writer.writeAdditionalData(oddFPricePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
