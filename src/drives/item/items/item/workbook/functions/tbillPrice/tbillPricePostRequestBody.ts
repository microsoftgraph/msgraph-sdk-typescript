import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTbillPricePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTbillPricePostRequestBody;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTbillPricePostRequestBody(tbillPricePostRequestBody: TbillPricePostRequestBody | undefined = {} as TbillPricePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "discount": n => { tbillPricePostRequestBody.discount = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "maturity": n => { tbillPricePostRequestBody.maturity = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "settlement": n => { tbillPricePostRequestBody.settlement = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTbillPricePostRequestBody(writer: SerializationWriter, tbillPricePostRequestBody: TbillPricePostRequestBody | undefined = {} as TbillPricePostRequestBody) : void {
        writer.writeObjectValue<Json>("discount", tbillPricePostRequestBody.discount, );
        writer.writeObjectValue<Json>("maturity", tbillPricePostRequestBody.maturity, );
        writer.writeObjectValue<Json>("settlement", tbillPricePostRequestBody.settlement, );
        writer.writeAdditionalData(tbillPricePostRequestBody.additionalData);
}
export interface TbillPricePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The discount property
     */
    discount?: Json;
    /**
     * The maturity property
     */
    maturity?: Json;
    /**
     * The settlement property
     */
    settlement?: Json;
}
