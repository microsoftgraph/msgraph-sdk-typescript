import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createDollarFrPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDollarFrPostRequestBody;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoDollarFrPostRequestBody(dollarFrPostRequestBody: DollarFrPostRequestBody | undefined = {} as DollarFrPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "decimalDollar": n => { dollarFrPostRequestBody.decimalDollar = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "fraction": n => { dollarFrPostRequestBody.fraction = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface DollarFrPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The decimalDollar property
     */
    decimalDollar?: Json;
    /**
     * The fraction property
     */
    fraction?: Json;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeDollarFrPostRequestBody(writer: SerializationWriter, dollarFrPostRequestBody: DollarFrPostRequestBody | undefined = {} as DollarFrPostRequestBody) : void {
        writer.writeObjectValue<Json>("decimalDollar", dollarFrPostRequestBody.decimalDollar, );
        writer.writeObjectValue<Json>("fraction", dollarFrPostRequestBody.fraction, );
        writer.writeAdditionalData(dollarFrPostRequestBody.additionalData);
}
