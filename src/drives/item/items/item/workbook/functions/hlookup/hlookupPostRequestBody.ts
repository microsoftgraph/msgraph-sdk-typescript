// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createHlookupPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoHlookupPostRequestBody;
}
export function deserializeIntoHlookupPostRequestBody(hlookupPostRequestBody: HlookupPostRequestBody | undefined = {} as HlookupPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "lookupValue": n => { hlookupPostRequestBody.lookupValue = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "rangeLookup": n => { hlookupPostRequestBody.rangeLookup = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "rowIndexNum": n => { hlookupPostRequestBody.rowIndexNum = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "tableArray": n => { hlookupPostRequestBody.tableArray = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface HlookupPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The lookupValue property
     */
    lookupValue?: Json;
    /**
     * The rangeLookup property
     */
    rangeLookup?: Json;
    /**
     * The rowIndexNum property
     */
    rowIndexNum?: Json;
    /**
     * The tableArray property
     */
    tableArray?: Json;
}
export function serializeHlookupPostRequestBody(writer: SerializationWriter, hlookupPostRequestBody: HlookupPostRequestBody | undefined = {} as HlookupPostRequestBody) : void {
        writer.writeObjectValue<Json>("lookupValue", hlookupPostRequestBody.lookupValue, );
        writer.writeObjectValue<Json>("rangeLookup", hlookupPostRequestBody.rangeLookup, );
        writer.writeObjectValue<Json>("rowIndexNum", hlookupPostRequestBody.rowIndexNum, );
        writer.writeObjectValue<Json>("tableArray", hlookupPostRequestBody.tableArray, );
        writer.writeAdditionalData(hlookupPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
