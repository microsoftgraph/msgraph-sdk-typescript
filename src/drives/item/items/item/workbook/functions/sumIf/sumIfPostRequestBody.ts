// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSumIfPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSumIfPostRequestBody;
}
export function deserializeIntoSumIfPostRequestBody(sumIfPostRequestBody: SumIfPostRequestBody | undefined = {} as SumIfPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "criteria": n => { sumIfPostRequestBody.criteria = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "range": n => { sumIfPostRequestBody.range = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "sumRange": n => { sumIfPostRequestBody.sumRange = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeSumIfPostRequestBody(writer: SerializationWriter, sumIfPostRequestBody: SumIfPostRequestBody | undefined = {} as SumIfPostRequestBody) : void {
        writer.writeObjectValue<Json>("criteria", sumIfPostRequestBody.criteria, );
        writer.writeObjectValue<Json>("range", sumIfPostRequestBody.range, );
        writer.writeObjectValue<Json>("sumRange", sumIfPostRequestBody.sumRange, );
        writer.writeAdditionalData(sumIfPostRequestBody.additionalData);
}
export interface SumIfPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The criteria property
     */
    criteria?: Json;
    /**
     * The range property
     */
    range?: Json;
    /**
     * The sumRange property
     */
    sumRange?: Json;
}
// tslint:enable
// eslint-enable
