// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDcountAPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDcountAPostRequestBody;
}
export interface DcountAPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The criteria property
     */
    criteria?: Json;
    /**
     * The database property
     */
    database?: Json;
    /**
     * The field property
     */
    field?: Json;
}
export function deserializeIntoDcountAPostRequestBody(dcountAPostRequestBody: DcountAPostRequestBody | undefined = {} as DcountAPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "criteria": n => { dcountAPostRequestBody.criteria = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "database": n => { dcountAPostRequestBody.database = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "field": n => { dcountAPostRequestBody.field = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeDcountAPostRequestBody(writer: SerializationWriter, dcountAPostRequestBody: DcountAPostRequestBody | undefined = {} as DcountAPostRequestBody) : void {
        writer.writeObjectValue<Json>("criteria", dcountAPostRequestBody.criteria, );
        writer.writeObjectValue<Json>("database", dcountAPostRequestBody.database, );
        writer.writeObjectValue<Json>("field", dcountAPostRequestBody.field, );
        writer.writeAdditionalData(dcountAPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
