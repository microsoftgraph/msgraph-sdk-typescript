// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTimePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTimePostRequestBody;
}
export function deserializeIntoTimePostRequestBody(timePostRequestBody: TimePostRequestBody | undefined = {} as TimePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "hour": n => { timePostRequestBody.hour = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "minute": n => { timePostRequestBody.minute = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "second": n => { timePostRequestBody.second = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeTimePostRequestBody(writer: SerializationWriter, timePostRequestBody: TimePostRequestBody | undefined = {} as TimePostRequestBody) : void {
        writer.writeObjectValue<Json>("hour", timePostRequestBody.hour, );
        writer.writeObjectValue<Json>("minute", timePostRequestBody.minute, );
        writer.writeObjectValue<Json>("second", timePostRequestBody.second, );
        writer.writeAdditionalData(timePostRequestBody.additionalData);
}
export interface TimePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The hour property
     */
    hour?: Json;
    /**
     * The minute property
     */
    minute?: Json;
    /**
     * The second property
     */
    second?: Json;
}
// tslint:enable
// eslint-enable
