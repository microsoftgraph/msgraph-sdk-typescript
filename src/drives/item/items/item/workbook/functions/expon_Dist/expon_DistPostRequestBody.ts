// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createExpon_DistPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoExpon_DistPostRequestBody;
}
export function deserializeIntoExpon_DistPostRequestBody(expon_DistPostRequestBody: Expon_DistPostRequestBody | undefined = {} as Expon_DistPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "cumulative": n => { expon_DistPostRequestBody.cumulative = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "lambda": n => { expon_DistPostRequestBody.lambda = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "x": n => { expon_DistPostRequestBody.x = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface Expon_DistPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The cumulative property
     */
    cumulative?: Json;
    /**
     * The lambda property
     */
    lambda?: Json;
    /**
     * The x property
     */
    x?: Json;
}
export function serializeExpon_DistPostRequestBody(writer: SerializationWriter, expon_DistPostRequestBody: Expon_DistPostRequestBody | undefined = {} as Expon_DistPostRequestBody) : void {
        writer.writeObjectValue<Json>("cumulative", expon_DistPostRequestBody.cumulative, serializeJson);
        writer.writeObjectValue<Json>("lambda", expon_DistPostRequestBody.lambda, serializeJson);
        writer.writeObjectValue<Json>("x", expon_DistPostRequestBody.x, serializeJson);
        writer.writeAdditionalData(expon_DistPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
