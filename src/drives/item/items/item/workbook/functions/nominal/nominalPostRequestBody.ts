// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createNominalPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoNominalPostRequestBody;
}
export function deserializeIntoNominalPostRequestBody(nominalPostRequestBody: NominalPostRequestBody | undefined = {} as NominalPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "effectRate": n => { nominalPostRequestBody.effectRate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "npery": n => { nominalPostRequestBody.npery = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface NominalPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The effectRate property
     */
    effectRate?: Json;
    /**
     * The npery property
     */
    npery?: Json;
}
export function serializeNominalPostRequestBody(writer: SerializationWriter, nominalPostRequestBody: NominalPostRequestBody | undefined = {} as NominalPostRequestBody) : void {
        writer.writeObjectValue<Json>("effectRate", nominalPostRequestBody.effectRate, serializeJson);
        writer.writeObjectValue<Json>("npery", nominalPostRequestBody.npery, serializeJson);
        writer.writeAdditionalData(nominalPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
