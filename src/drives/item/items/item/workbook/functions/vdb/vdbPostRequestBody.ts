// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createVdbPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoVdbPostRequestBody;
}
export function deserializeIntoVdbPostRequestBody(vdbPostRequestBody: VdbPostRequestBody | undefined = {} as VdbPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "cost": n => { vdbPostRequestBody.cost = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "endPeriod": n => { vdbPostRequestBody.endPeriod = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "factor": n => { vdbPostRequestBody.factor = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "life": n => { vdbPostRequestBody.life = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "noSwitch": n => { vdbPostRequestBody.noSwitch = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "salvage": n => { vdbPostRequestBody.salvage = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "startPeriod": n => { vdbPostRequestBody.startPeriod = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeVdbPostRequestBody(writer: SerializationWriter, vdbPostRequestBody: VdbPostRequestBody | undefined = {} as VdbPostRequestBody) : void {
        writer.writeObjectValue<Json>("cost", vdbPostRequestBody.cost, serializeJson);
        writer.writeObjectValue<Json>("endPeriod", vdbPostRequestBody.endPeriod, serializeJson);
        writer.writeObjectValue<Json>("factor", vdbPostRequestBody.factor, serializeJson);
        writer.writeObjectValue<Json>("life", vdbPostRequestBody.life, serializeJson);
        writer.writeObjectValue<Json>("noSwitch", vdbPostRequestBody.noSwitch, serializeJson);
        writer.writeObjectValue<Json>("salvage", vdbPostRequestBody.salvage, serializeJson);
        writer.writeObjectValue<Json>("startPeriod", vdbPostRequestBody.startPeriod, serializeJson);
        writer.writeAdditionalData(vdbPostRequestBody.additionalData);
}
export interface VdbPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The cost property
     */
    cost?: Json;
    /**
     * The endPeriod property
     */
    endPeriod?: Json;
    /**
     * The factor property
     */
    factor?: Json;
    /**
     * The life property
     */
    life?: Json;
    /**
     * The noSwitch property
     */
    noSwitch?: Json;
    /**
     * The salvage property
     */
    salvage?: Json;
    /**
     * The startPeriod property
     */
    startPeriod?: Json;
}
// tslint:enable
// eslint-enable
