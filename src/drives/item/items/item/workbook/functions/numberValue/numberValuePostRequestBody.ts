// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createNumberValuePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoNumberValuePostRequestBody;
}
export function deserializeIntoNumberValuePostRequestBody(numberValuePostRequestBody: NumberValuePostRequestBody | undefined = {} as NumberValuePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "decimalSeparator": n => { numberValuePostRequestBody.decimalSeparator = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "groupSeparator": n => { numberValuePostRequestBody.groupSeparator = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "text": n => { numberValuePostRequestBody.text = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface NumberValuePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The decimalSeparator property
     */
    decimalSeparator?: Json;
    /**
     * The groupSeparator property
     */
    groupSeparator?: Json;
    /**
     * The text property
     */
    text?: Json;
}
export function serializeNumberValuePostRequestBody(writer: SerializationWriter, numberValuePostRequestBody: NumberValuePostRequestBody | undefined = {} as NumberValuePostRequestBody) : void {
        writer.writeObjectValue<Json>("decimalSeparator", numberValuePostRequestBody.decimalSeparator, );
        writer.writeObjectValue<Json>("groupSeparator", numberValuePostRequestBody.groupSeparator, );
        writer.writeObjectValue<Json>("text", numberValuePostRequestBody.text, );
        writer.writeAdditionalData(numberValuePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
