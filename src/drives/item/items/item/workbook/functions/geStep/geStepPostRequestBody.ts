// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGeStepPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGeStepPostRequestBody;
}
export function deserializeIntoGeStepPostRequestBody(geStepPostRequestBody: GeStepPostRequestBody | undefined = {} as GeStepPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "number": n => { geStepPostRequestBody.number = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "step": n => { geStepPostRequestBody.step = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface GeStepPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The number property
     */
    number?: Json;
    /**
     * The step property
     */
    step?: Json;
}
export function serializeGeStepPostRequestBody(writer: SerializationWriter, geStepPostRequestBody: GeStepPostRequestBody | undefined = {} as GeStepPostRequestBody) : void {
        writer.writeObjectValue<Json>("number", geStepPostRequestBody.number, );
        writer.writeObjectValue<Json>("step", geStepPostRequestBody.step, );
        writer.writeAdditionalData(geStepPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
