// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createNorm_InvPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoNorm_InvPostRequestBody;
}
export function deserializeIntoNorm_InvPostRequestBody(norm_InvPostRequestBody: Norm_InvPostRequestBody | undefined = {} as Norm_InvPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "mean": n => { norm_InvPostRequestBody.mean = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "probability": n => { norm_InvPostRequestBody.probability = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "standardDev": n => { norm_InvPostRequestBody.standardDev = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface Norm_InvPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The mean property
     */
    mean?: Json;
    /**
     * The probability property
     */
    probability?: Json;
    /**
     * The standardDev property
     */
    standardDev?: Json;
}
export function serializeNorm_InvPostRequestBody(writer: SerializationWriter, norm_InvPostRequestBody: Norm_InvPostRequestBody | undefined = {} as Norm_InvPostRequestBody) : void {
        writer.writeObjectValue<Json>("mean", norm_InvPostRequestBody.mean, serializeJson);
        writer.writeObjectValue<Json>("probability", norm_InvPostRequestBody.probability, serializeJson);
        writer.writeObjectValue<Json>("standardDev", norm_InvPostRequestBody.standardDev, serializeJson);
        writer.writeAdditionalData(norm_InvPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
