// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOddLPricePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOddLPricePostRequestBody;
}
export function deserializeIntoOddLPricePostRequestBody(oddLPricePostRequestBody: OddLPricePostRequestBody | undefined = {} as OddLPricePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "basis": n => { oddLPricePostRequestBody.basis = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "frequency": n => { oddLPricePostRequestBody.frequency = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "lastInterest": n => { oddLPricePostRequestBody.lastInterest = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "maturity": n => { oddLPricePostRequestBody.maturity = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "rate": n => { oddLPricePostRequestBody.rate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "redemption": n => { oddLPricePostRequestBody.redemption = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "settlement": n => { oddLPricePostRequestBody.settlement = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "yld": n => { oddLPricePostRequestBody.yld = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface OddLPricePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The basis property
     */
    basis?: Json;
    /**
     * The frequency property
     */
    frequency?: Json;
    /**
     * The lastInterest property
     */
    lastInterest?: Json;
    /**
     * The maturity property
     */
    maturity?: Json;
    /**
     * The rate property
     */
    rate?: Json;
    /**
     * The redemption property
     */
    redemption?: Json;
    /**
     * The settlement property
     */
    settlement?: Json;
    /**
     * The yld property
     */
    yld?: Json;
}
export function serializeOddLPricePostRequestBody(writer: SerializationWriter, oddLPricePostRequestBody: OddLPricePostRequestBody | undefined = {} as OddLPricePostRequestBody) : void {
        writer.writeObjectValue<Json>("basis", oddLPricePostRequestBody.basis, serializeJson);
        writer.writeObjectValue<Json>("frequency", oddLPricePostRequestBody.frequency, serializeJson);
        writer.writeObjectValue<Json>("lastInterest", oddLPricePostRequestBody.lastInterest, serializeJson);
        writer.writeObjectValue<Json>("maturity", oddLPricePostRequestBody.maturity, serializeJson);
        writer.writeObjectValue<Json>("rate", oddLPricePostRequestBody.rate, serializeJson);
        writer.writeObjectValue<Json>("redemption", oddLPricePostRequestBody.redemption, serializeJson);
        writer.writeObjectValue<Json>("settlement", oddLPricePostRequestBody.settlement, serializeJson);
        writer.writeObjectValue<Json>("yld", oddLPricePostRequestBody.yld, serializeJson);
        writer.writeAdditionalData(oddLPricePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
