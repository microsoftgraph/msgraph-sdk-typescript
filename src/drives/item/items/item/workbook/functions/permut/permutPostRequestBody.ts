// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPermutPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPermutPostRequestBody;
}
export function deserializeIntoPermutPostRequestBody(permutPostRequestBody: PermutPostRequestBody | undefined = {} as PermutPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "number": n => { permutPostRequestBody.number = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "numberChosen": n => { permutPostRequestBody.numberChosen = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface PermutPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The number property
     */
    number?: Json;
    /**
     * The numberChosen property
     */
    numberChosen?: Json;
}
export function serializePermutPostRequestBody(writer: SerializationWriter, permutPostRequestBody: PermutPostRequestBody | undefined = {} as PermutPostRequestBody) : void {
        writer.writeObjectValue<Json>("number", permutPostRequestBody.number, );
        writer.writeObjectValue<Json>("numberChosen", permutPostRequestBody.numberChosen, );
        writer.writeAdditionalData(permutPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
