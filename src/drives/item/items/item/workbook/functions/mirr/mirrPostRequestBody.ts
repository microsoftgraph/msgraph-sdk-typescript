// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMirrPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMirrPostRequestBody;
}
export function deserializeIntoMirrPostRequestBody(mirrPostRequestBody: MirrPostRequestBody | undefined = {} as MirrPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "financeRate": n => { mirrPostRequestBody.financeRate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "reinvestRate": n => { mirrPostRequestBody.reinvestRate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "values": n => { mirrPostRequestBody.values = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface MirrPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The financeRate property
     */
    financeRate?: Json;
    /**
     * The reinvestRate property
     */
    reinvestRate?: Json;
    /**
     * The values property
     */
    values?: Json;
}
export function serializeMirrPostRequestBody(writer: SerializationWriter, mirrPostRequestBody: MirrPostRequestBody | undefined = {} as MirrPostRequestBody) : void {
    writer.writeObjectValue<Json>("financeRate", mirrPostRequestBody.financeRate, serializeJson);
    writer.writeObjectValue<Json>("reinvestRate", mirrPostRequestBody.reinvestRate, serializeJson);
    writer.writeObjectValue<Json>("values", mirrPostRequestBody.values, serializeJson);
    writer.writeAdditionalData(mirrPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
