// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CoupPcdPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The basis property
     */
    basis?: Json;
    /**
     * The frequency property
     */
    frequency?: Json;
    /**
     * The maturity property
     */
    maturity?: Json;
    /**
     * The settlement property
     */
    settlement?: Json;
}
export function createCoupPcdPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCoupPcdPostRequestBody;
}
export function deserializeIntoCoupPcdPostRequestBody(coupPcdPostRequestBody: CoupPcdPostRequestBody | undefined = {} as CoupPcdPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "basis": n => { coupPcdPostRequestBody.basis = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "frequency": n => { coupPcdPostRequestBody.frequency = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "maturity": n => { coupPcdPostRequestBody.maturity = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "settlement": n => { coupPcdPostRequestBody.settlement = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeCoupPcdPostRequestBody(writer: SerializationWriter, coupPcdPostRequestBody: CoupPcdPostRequestBody | undefined = {} as CoupPcdPostRequestBody) : void {
        writer.writeObjectValue<Json>("basis", coupPcdPostRequestBody.basis, );
        writer.writeObjectValue<Json>("frequency", coupPcdPostRequestBody.frequency, );
        writer.writeObjectValue<Json>("maturity", coupPcdPostRequestBody.maturity, );
        writer.writeObjectValue<Json>("settlement", coupPcdPostRequestBody.settlement, );
        writer.writeAdditionalData(coupPcdPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
