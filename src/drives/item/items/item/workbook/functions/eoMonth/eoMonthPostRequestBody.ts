// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEoMonthPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEoMonthPostRequestBody;
}
export function deserializeIntoEoMonthPostRequestBody(eoMonthPostRequestBody: EoMonthPostRequestBody | undefined = {} as EoMonthPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "months": n => { eoMonthPostRequestBody.months = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "startDate": n => { eoMonthPostRequestBody.startDate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface EoMonthPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The months property
     */
    months?: Json;
    /**
     * The startDate property
     */
    startDate?: Json;
}
export function serializeEoMonthPostRequestBody(writer: SerializationWriter, eoMonthPostRequestBody: EoMonthPostRequestBody | undefined = {} as EoMonthPostRequestBody) : void {
        writer.writeObjectValue<Json>("months", eoMonthPostRequestBody.months, );
        writer.writeObjectValue<Json>("startDate", eoMonthPostRequestBody.startDate, );
        writer.writeAdditionalData(eoMonthPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
