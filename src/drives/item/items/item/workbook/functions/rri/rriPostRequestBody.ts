// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRriPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRriPostRequestBody;
}
export function deserializeIntoRriPostRequestBody(rriPostRequestBody: RriPostRequestBody | undefined = {} as RriPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "fv": n => { rriPostRequestBody.fv = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "nper": n => { rriPostRequestBody.nper = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "pv": n => { rriPostRequestBody.pv = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface RriPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The fv property
     */
    fv?: Json;
    /**
     * The nper property
     */
    nper?: Json;
    /**
     * The pv property
     */
    pv?: Json;
}
export function serializeRriPostRequestBody(writer: SerializationWriter, rriPostRequestBody: RriPostRequestBody | undefined = {} as RriPostRequestBody) : void {
        writer.writeObjectValue<Json>("fv", rriPostRequestBody.fv, );
        writer.writeObjectValue<Json>("nper", rriPostRequestBody.nper, );
        writer.writeObjectValue<Json>("pv", rriPostRequestBody.pv, );
        writer.writeAdditionalData(rriPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
