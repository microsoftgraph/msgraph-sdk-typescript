// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWeekNumPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWeekNumPostRequestBody;
}
export function deserializeIntoWeekNumPostRequestBody(weekNumPostRequestBody: WeekNumPostRequestBody | undefined = {} as WeekNumPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "returnType": n => { weekNumPostRequestBody.returnType = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "serialNumber": n => { weekNumPostRequestBody.serialNumber = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeWeekNumPostRequestBody(writer: SerializationWriter, weekNumPostRequestBody: WeekNumPostRequestBody | undefined = {} as WeekNumPostRequestBody) : void {
        writer.writeObjectValue<Json>("returnType", weekNumPostRequestBody.returnType, );
        writer.writeObjectValue<Json>("serialNumber", weekNumPostRequestBody.serialNumber, );
        writer.writeAdditionalData(weekNumPostRequestBody.additionalData);
}
export interface WeekNumPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The returnType property
     */
    returnType?: Json;
    /**
     * The serialNumber property
     */
    serialNumber?: Json;
}
// tslint:enable
// eslint-enable
