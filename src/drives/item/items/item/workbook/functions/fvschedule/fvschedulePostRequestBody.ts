// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFvschedulePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFvschedulePostRequestBody;
}
export function deserializeIntoFvschedulePostRequestBody(fvschedulePostRequestBody: FvschedulePostRequestBody | undefined = {} as FvschedulePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "principal": n => { fvschedulePostRequestBody.principal = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "schedule": n => { fvschedulePostRequestBody.schedule = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface FvschedulePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The principal property
     */
    principal?: Json;
    /**
     * The schedule property
     */
    schedule?: Json;
}
export function serializeFvschedulePostRequestBody(writer: SerializationWriter, fvschedulePostRequestBody: FvschedulePostRequestBody | undefined = {} as FvschedulePostRequestBody) : void {
        writer.writeObjectValue<Json>("principal", fvschedulePostRequestBody.principal, serializeJson);
        writer.writeObjectValue<Json>("schedule", fvschedulePostRequestBody.schedule, serializeJson);
        writer.writeAdditionalData(fvschedulePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
