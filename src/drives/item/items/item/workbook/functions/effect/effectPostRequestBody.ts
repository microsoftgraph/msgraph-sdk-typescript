// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEffectPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEffectPostRequestBody;
}
export function deserializeIntoEffectPostRequestBody(effectPostRequestBody: EffectPostRequestBody | undefined = {} as EffectPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "nominalRate": n => { effectPostRequestBody.nominalRate = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "npery": n => { effectPostRequestBody.npery = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface EffectPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The nominalRate property
     */
    nominalRate?: Json;
    /**
     * The npery property
     */
    npery?: Json;
}
export function serializeEffectPostRequestBody(writer: SerializationWriter, effectPostRequestBody: EffectPostRequestBody | undefined = {} as EffectPostRequestBody) : void {
        writer.writeObjectValue<Json>("nominalRate", effectPostRequestBody.nominalRate, );
        writer.writeObjectValue<Json>("npery", effectPostRequestBody.npery, );
        writer.writeAdditionalData(effectPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
