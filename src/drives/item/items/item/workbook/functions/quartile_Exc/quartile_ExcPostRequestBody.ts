// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createQuartile_ExcPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoQuartile_ExcPostRequestBody;
}
export function deserializeIntoQuartile_ExcPostRequestBody(quartile_ExcPostRequestBody: Quartile_ExcPostRequestBody | undefined = {} as Quartile_ExcPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "array": n => { quartile_ExcPostRequestBody.array = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "quart": n => { quartile_ExcPostRequestBody.quart = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export interface Quartile_ExcPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The array property
     */
    array?: Json;
    /**
     * The quart property
     */
    quart?: Json;
}
export function serializeQuartile_ExcPostRequestBody(writer: SerializationWriter, quartile_ExcPostRequestBody: Quartile_ExcPostRequestBody | undefined = {} as Quartile_ExcPostRequestBody) : void {
        writer.writeObjectValue<Json>("array", quartile_ExcPostRequestBody.array, );
        writer.writeObjectValue<Json>("quart", quartile_ExcPostRequestBody.quart, );
        writer.writeAdditionalData(quartile_ExcPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
