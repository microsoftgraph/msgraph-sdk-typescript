// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CountGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: number;
}
export function createCountGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCountGetResponse;
}
export function deserializeIntoCountGetResponse(countGetResponse: CountGetResponse | undefined = {} as CountGetResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { countGetResponse.value = n.getNumberValue(); },
    }
}
export function serializeCountGetResponse(writer: SerializationWriter, countGetResponse: CountGetResponse | undefined = {} as CountGetResponse) : void {
        writer.writeNumberValue("value", countGetResponse.value);
        writer.writeAdditionalData(countGetResponse.additionalData);
}
// tslint:enable
// eslint-enable
