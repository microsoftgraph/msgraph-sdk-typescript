// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createWorkbookIconFromDiscriminatorValue, serializeWorkbookIcon, type WorkbookIcon } from '../../../../../../../../../../../models/workbookIcon';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApplyIconFilterPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The icon property
     */
    icon?: WorkbookIcon;
}
export function createApplyIconFilterPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoApplyIconFilterPostRequestBody;
}
export function deserializeIntoApplyIconFilterPostRequestBody(applyIconFilterPostRequestBody: ApplyIconFilterPostRequestBody | undefined = {} as ApplyIconFilterPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "icon": n => { applyIconFilterPostRequestBody.icon = n.getObjectValue<WorkbookIcon>(createWorkbookIconFromDiscriminatorValue); },
    }
}
export function serializeApplyIconFilterPostRequestBody(writer: SerializationWriter, applyIconFilterPostRequestBody: ApplyIconFilterPostRequestBody | undefined = {} as ApplyIconFilterPostRequestBody) : void {
        writer.writeObjectValue<WorkbookIcon>("icon", applyIconFilterPostRequestBody.icon, );
        writer.writeAdditionalData(applyIconFilterPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
