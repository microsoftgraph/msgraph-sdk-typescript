// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApplyCustomFilterPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The criteria1 property
     */
    criteria1?: string;
    /**
     * The criteria2 property
     */
    criteria2?: string;
    /**
     * The oper property
     */
    oper?: string;
}
export function createApplyCustomFilterPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoApplyCustomFilterPostRequestBody;
}
export function deserializeIntoApplyCustomFilterPostRequestBody(applyCustomFilterPostRequestBody: ApplyCustomFilterPostRequestBody | undefined = {} as ApplyCustomFilterPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "criteria1": n => { applyCustomFilterPostRequestBody.criteria1 = n.getStringValue(); },
        "criteria2": n => { applyCustomFilterPostRequestBody.criteria2 = n.getStringValue(); },
        "oper": n => { applyCustomFilterPostRequestBody.oper = n.getStringValue(); },
    }
}
export function serializeApplyCustomFilterPostRequestBody(writer: SerializationWriter, applyCustomFilterPostRequestBody: ApplyCustomFilterPostRequestBody | undefined = {} as ApplyCustomFilterPostRequestBody) : void {
        writer.writeStringValue("criteria1", applyCustomFilterPostRequestBody.criteria1);
        writer.writeStringValue("criteria2", applyCustomFilterPostRequestBody.criteria2);
        writer.writeStringValue("oper", applyCustomFilterPostRequestBody.oper);
        writer.writeAdditionalData(applyCustomFilterPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
