import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createImageWithWidthGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoImageWithWidthGetResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoImageWithWidthGetResponse(imageWithWidthGetResponse: ImageWithWidthGetResponse | undefined = {} as ImageWithWidthGetResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { imageWithWidthGetResponse.value = n.getStringValue(); },
    }
}
export interface ImageWithWidthGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeImageWithWidthGetResponse(writer: SerializationWriter, imageWithWidthGetResponse: ImageWithWidthGetResponse | undefined = {} as ImageWithWidthGetResponse) : void {
        writer.writeStringValue("value", imageWithWidthGetResponse.value);
        writer.writeAdditionalData(imageWithWidthGetResponse.additionalData);
}
