// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSetDataPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSetDataPostRequestBody;
}
export function deserializeIntoSetDataPostRequestBody(setDataPostRequestBody: SetDataPostRequestBody | undefined = {} as SetDataPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "seriesBy": n => { setDataPostRequestBody.seriesBy = n.getStringValue(); },
        "sourceData": n => { setDataPostRequestBody.sourceData = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeSetDataPostRequestBody(writer: SerializationWriter, setDataPostRequestBody: SetDataPostRequestBody | undefined = {} as SetDataPostRequestBody) : void {
        writer.writeStringValue("seriesBy", setDataPostRequestBody.seriesBy);
        writer.writeObjectValue<Json>("sourceData", setDataPostRequestBody.sourceData, serializeJson);
        writer.writeAdditionalData(setDataPostRequestBody.additionalData);
}
export interface SetDataPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The seriesBy property
     */
    seriesBy?: string;
    /**
     * The sourceData property
     */
    sourceData?: Json;
}
// tslint:enable
// eslint-enable
