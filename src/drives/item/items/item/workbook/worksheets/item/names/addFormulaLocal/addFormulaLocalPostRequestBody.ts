import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AddFormulaLocalPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The comment property
     */
    comment?: string;
    /**
     * The formula property
     */
    formula?: string;
    /**
     * The name property
     */
    name?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAddFormulaLocalPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAddFormulaLocalPostRequestBody;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAddFormulaLocalPostRequestBody(addFormulaLocalPostRequestBody: AddFormulaLocalPostRequestBody | undefined = {} as AddFormulaLocalPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "comment": n => { addFormulaLocalPostRequestBody.comment = n.getStringValue(); },
        "formula": n => { addFormulaLocalPostRequestBody.formula = n.getStringValue(); },
        "name": n => { addFormulaLocalPostRequestBody.name = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAddFormulaLocalPostRequestBody(writer: SerializationWriter, addFormulaLocalPostRequestBody: AddFormulaLocalPostRequestBody | undefined = {} as AddFormulaLocalPostRequestBody) : void {
        writer.writeStringValue("comment", addFormulaLocalPostRequestBody.comment);
        writer.writeStringValue("formula", addFormulaLocalPostRequestBody.formula);
        writer.writeStringValue("name", addFormulaLocalPostRequestBody.name);
        writer.writeAdditionalData(addFormulaLocalPostRequestBody.additionalData);
}
