// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from '../../../../../../../../../../models/json';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSetPositionPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSetPositionPostRequestBody;
}
export function deserializeIntoSetPositionPostRequestBody(setPositionPostRequestBody: SetPositionPostRequestBody | undefined = {} as SetPositionPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "endCell": n => { setPositionPostRequestBody.endCell = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "startCell": n => { setPositionPostRequestBody.startCell = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeSetPositionPostRequestBody(writer: SerializationWriter, setPositionPostRequestBody: SetPositionPostRequestBody | undefined = {} as SetPositionPostRequestBody) : void {
        writer.writeObjectValue<Json>("endCell", setPositionPostRequestBody.endCell, );
        writer.writeObjectValue<Json>("startCell", setPositionPostRequestBody.startCell, );
        writer.writeAdditionalData(setPositionPostRequestBody.additionalData);
}
export interface SetPositionPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The endCell property
     */
    endCell?: Json;
    /**
     * The startCell property
     */
    startCell?: Json;
}
// tslint:enable
// eslint-enable
