import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createPreviewPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPreviewPostRequestBody;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoPreviewPostRequestBody(previewPostRequestBody: PreviewPostRequestBody | undefined = {} as PreviewPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "page": n => { previewPostRequestBody.page = n.getStringValue(); },
        "zoom": n => { previewPostRequestBody.zoom = n.getNumberValue(); },
    }
}
export interface PreviewPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The page property
     */
    page?: string;
    /**
     * The zoom property
     */
    zoom?: number;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializePreviewPostRequestBody(writer: SerializationWriter, previewPostRequestBody: PreviewPostRequestBody | undefined = {} as PreviewPostRequestBody) : void {
        writer.writeStringValue("page", previewPostRequestBody.page);
        writer.writeNumberValue("zoom", previewPostRequestBody.zoom);
        writer.writeAdditionalData(previewPostRequestBody.additionalData);
}
