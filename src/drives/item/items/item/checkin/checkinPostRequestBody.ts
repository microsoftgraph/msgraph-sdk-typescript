// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CheckinPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The checkInAs property
     */
    checkInAs?: string;
    /**
     * The comment property
     */
    comment?: string;
}
export function createCheckinPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCheckinPostRequestBody;
}
export function deserializeIntoCheckinPostRequestBody(checkinPostRequestBody: CheckinPostRequestBody | undefined = {} as CheckinPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "checkInAs": n => { checkinPostRequestBody.checkInAs = n.getStringValue(); },
        "comment": n => { checkinPostRequestBody.comment = n.getStringValue(); },
    }
}
export function serializeCheckinPostRequestBody(writer: SerializationWriter, checkinPostRequestBody: CheckinPostRequestBody | undefined = {} as CheckinPostRequestBody) : void {
        writer.writeStringValue("checkInAs", checkinPostRequestBody.checkInAs);
        writer.writeStringValue("comment", checkinPostRequestBody.comment);
        writer.writeAdditionalData(checkinPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
