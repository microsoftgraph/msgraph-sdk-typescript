import { deserializeIntoBaseDeltaFunctionResponse, serializeBaseDeltaFunctionResponse, type BaseDeltaFunctionResponse } from '../../../../../models/baseDeltaFunctionResponse';
import { createDriveItemFromDiscriminatorValue, serializeDriveItem, type DriveItem } from '../../../../../models/driveItem';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createDeltaWithTokenResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeltaWithTokenResponse;
}
export interface DeltaWithTokenResponse extends BaseDeltaFunctionResponse, Parsable {
    /**
     * The value property
     */
    value?: DriveItem[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoDeltaWithTokenResponse(deltaWithTokenResponse: DeltaWithTokenResponse | undefined = {} as DeltaWithTokenResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseDeltaFunctionResponse(deltaWithTokenResponse),
        "value": n => { deltaWithTokenResponse.value = n.getCollectionOfObjectValues<DriveItem>(createDriveItemFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeDeltaWithTokenResponse(writer: SerializationWriter, deltaWithTokenResponse: DeltaWithTokenResponse | undefined = {} as DeltaWithTokenResponse) : void {
        serializeBaseDeltaFunctionResponse(writer, deltaWithTokenResponse)
        writer.writeCollectionOfObjectValues<DriveItem>("value", deltaWithTokenResponse.value, );
}
