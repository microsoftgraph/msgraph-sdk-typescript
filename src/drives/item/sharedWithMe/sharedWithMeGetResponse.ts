// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../models/baseCollectionPaginationCountResponse';
import { createDriveItemFromDiscriminatorValue, serializeDriveItem, type DriveItem } from '../../../models/driveItem';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSharedWithMeGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSharedWithMeGetResponse;
}
export function deserializeIntoSharedWithMeGetResponse(sharedWithMeGetResponse: SharedWithMeGetResponse | undefined = {} as SharedWithMeGetResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sharedWithMeGetResponse),
        "value": n => { sharedWithMeGetResponse.value = n.getCollectionOfObjectValues<DriveItem>(createDriveItemFromDiscriminatorValue); },
    }
}
export function serializeSharedWithMeGetResponse(writer: SerializationWriter, sharedWithMeGetResponse: SharedWithMeGetResponse | undefined = {} as SharedWithMeGetResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, sharedWithMeGetResponse)
        writer.writeCollectionOfObjectValues<DriveItem>("value", sharedWithMeGetResponse.value, serializeDriveItem);
}
export interface SharedWithMeGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DriveItem[];
}
// tslint:enable
// eslint-enable
