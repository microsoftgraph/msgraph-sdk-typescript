// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createRemovePasswordPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRemovePasswordPostRequestBody;
}
export function deserializeIntoRemovePasswordPostRequestBody(removePasswordPostRequestBody: RemovePasswordPostRequestBody | undefined = {} as RemovePasswordPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "keyId": n => { removePasswordPostRequestBody.keyId = n.getGuidValue(); },
    }
}
export interface RemovePasswordPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The keyId property
     */
    keyId?: Guid;
}
export function serializeRemovePasswordPostRequestBody(writer: SerializationWriter, removePasswordPostRequestBody: RemovePasswordPostRequestBody | undefined = {} as RemovePasswordPostRequestBody) : void {
        writer.writeGuidValue("keyId", removePasswordPostRequestBody.keyId);
        writer.writeAdditionalData(removePasswordPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
