// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createKeyCredentialFromDiscriminatorValue, serializeKeyCredential, type KeyCredential } from '../../../models/keyCredential';
import { createPasswordCredentialFromDiscriminatorValue, serializePasswordCredential, type PasswordCredential } from '../../../models/passwordCredential';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AddKeyPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The keyCredential property
     */
    keyCredential?: KeyCredential;
    /**
     * The passwordCredential property
     */
    passwordCredential?: PasswordCredential;
    /**
     * The proof property
     */
    proof?: string;
}
export function createAddKeyPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAddKeyPostRequestBody;
}
export function deserializeIntoAddKeyPostRequestBody(addKeyPostRequestBody: AddKeyPostRequestBody | undefined = {} as AddKeyPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "keyCredential": n => { addKeyPostRequestBody.keyCredential = n.getObjectValue<KeyCredential>(createKeyCredentialFromDiscriminatorValue); },
        "passwordCredential": n => { addKeyPostRequestBody.passwordCredential = n.getObjectValue<PasswordCredential>(createPasswordCredentialFromDiscriminatorValue); },
        "proof": n => { addKeyPostRequestBody.proof = n.getStringValue(); },
    }
}
export function serializeAddKeyPostRequestBody(writer: SerializationWriter, addKeyPostRequestBody: AddKeyPostRequestBody | undefined = {} as AddKeyPostRequestBody) : void {
        writer.writeObjectValue<KeyCredential>("keyCredential", addKeyPostRequestBody.keyCredential, );
        writer.writeObjectValue<PasswordCredential>("passwordCredential", addKeyPostRequestBody.passwordCredential, );
        writer.writeStringValue("proof", addKeyPostRequestBody.proof);
        writer.writeAdditionalData(addKeyPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
