// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue, serializeSynchronizationSecretKeyStringValuePair, type SynchronizationSecretKeyStringValuePair } from '../../../../../../models/synchronizationSecretKeyStringValuePair';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createValidateCredentialsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoValidateCredentialsPostRequestBody;
}
export function deserializeIntoValidateCredentialsPostRequestBody(validateCredentialsPostRequestBody: ValidateCredentialsPostRequestBody | undefined = {} as ValidateCredentialsPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "applicationIdentifier": n => { validateCredentialsPostRequestBody.applicationIdentifier = n.getStringValue(); },
        "credentials": n => { validateCredentialsPostRequestBody.credentials = n.getCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>(createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue); },
        "templateId": n => { validateCredentialsPostRequestBody.templateId = n.getStringValue(); },
        "useSavedCredentials": n => { validateCredentialsPostRequestBody.useSavedCredentials = n.getBooleanValue(); },
    }
}
export function serializeValidateCredentialsPostRequestBody(writer: SerializationWriter, validateCredentialsPostRequestBody: ValidateCredentialsPostRequestBody | undefined = {} as ValidateCredentialsPostRequestBody) : void {
        writer.writeStringValue("applicationIdentifier", validateCredentialsPostRequestBody.applicationIdentifier);
        writer.writeCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>("credentials", validateCredentialsPostRequestBody.credentials, serializeSynchronizationSecretKeyStringValuePair);
        writer.writeStringValue("templateId", validateCredentialsPostRequestBody.templateId);
        writer.writeBooleanValue("useSavedCredentials", validateCredentialsPostRequestBody.useSavedCredentials);
        writer.writeAdditionalData(validateCredentialsPostRequestBody.additionalData);
}
export interface ValidateCredentialsPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The applicationIdentifier property
     */
    applicationIdentifier?: string;
    /**
     * The credentials property
     */
    credentials?: SynchronizationSecretKeyStringValuePair[];
    /**
     * The templateId property
     */
    templateId?: string;
    /**
     * The useSavedCredentials property
     */
    useSavedCredentials?: boolean;
}
// tslint:enable
// eslint-enable
