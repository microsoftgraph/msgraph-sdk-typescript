// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../../../../../models/baseCollectionPaginationCountResponse';
import { createFilterOperatorSchemaFromDiscriminatorValue, serializeFilterOperatorSchema, type FilterOperatorSchema } from '../../../../../../../models/filterOperatorSchema';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFilterOperatorsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFilterOperatorsGetResponse;
}
export function deserializeIntoFilterOperatorsGetResponse(filterOperatorsGetResponse: FilterOperatorsGetResponse | undefined = {} as FilterOperatorsGetResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(filterOperatorsGetResponse),
        "value": n => { filterOperatorsGetResponse.value = n.getCollectionOfObjectValues<FilterOperatorSchema>(createFilterOperatorSchemaFromDiscriminatorValue); },
    }
}
export interface FilterOperatorsGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: FilterOperatorSchema[];
}
export function serializeFilterOperatorsGetResponse(writer: SerializationWriter, filterOperatorsGetResponse: FilterOperatorsGetResponse | undefined = {} as FilterOperatorsGetResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, filterOperatorsGetResponse)
        writer.writeCollectionOfObjectValues<FilterOperatorSchema>("value", filterOperatorsGetResponse.value, );
}
// tslint:enable
// eslint-enable
