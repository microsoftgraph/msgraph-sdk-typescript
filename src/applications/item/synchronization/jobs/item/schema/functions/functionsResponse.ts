import { createAttributeMappingFunctionSchemaFromDiscriminatorValue, serializeAttributeMappingFunctionSchema, type AttributeMappingFunctionSchema } from '../../../../../../../models/attributeMappingFunctionSchema';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../../../../../models/baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createFunctionsResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFunctionsResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoFunctionsResponse(functionsResponse: FunctionsResponse | undefined = {} as FunctionsResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(functionsResponse),
        "value": n => { functionsResponse.value = n.getCollectionOfObjectValues<AttributeMappingFunctionSchema>(createAttributeMappingFunctionSchemaFromDiscriminatorValue); },
    }
}
export interface FunctionsResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AttributeMappingFunctionSchema[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeFunctionsResponse(writer: SerializationWriter, functionsResponse: FunctionsResponse | undefined = {} as FunctionsResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, functionsResponse)
        writer.writeCollectionOfObjectValues<AttributeMappingFunctionSchema>("value", functionsResponse.value, );
}
