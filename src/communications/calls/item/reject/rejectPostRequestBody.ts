// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { RejectReason } from '../../../../models/rejectReason';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRejectPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRejectPostRequestBody;
}
export function deserializeIntoRejectPostRequestBody(rejectPostRequestBody: RejectPostRequestBody | undefined = {} as RejectPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "callbackUri": n => { rejectPostRequestBody.callbackUri = n.getStringValue(); },
        "reason": n => { rejectPostRequestBody.reason = n.getEnumValue<RejectReason>(RejectReason); },
    }
}
export interface RejectPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The callbackUri property
     */
    callbackUri?: string;
    /**
     * The reason property
     */
    reason?: RejectReason;
}
export function serializeRejectPostRequestBody(writer: SerializationWriter, rejectPostRequestBody: RejectPostRequestBody | undefined = {} as RejectPostRequestBody) : void {
        writer.writeStringValue("callbackUri", rejectPostRequestBody.callbackUri);
        writer.writeEnumValue<RejectReason>("reason", rejectPostRequestBody.reason);
        writer.writeAdditionalData(rejectPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
