// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createPromptFromDiscriminatorValue, serializePrompt, type Prompt } from '../../../../models/prompt';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlayPromptPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlayPromptPostRequestBody;
}
export function deserializeIntoPlayPromptPostRequestBody(playPromptPostRequestBody: PlayPromptPostRequestBody | undefined = {} as PlayPromptPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "clientContext": n => { playPromptPostRequestBody.clientContext = n.getStringValue(); },
        "prompts": n => { playPromptPostRequestBody.prompts = n.getCollectionOfObjectValues<Prompt>(createPromptFromDiscriminatorValue); },
    }
}
export interface PlayPromptPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The clientContext property
     */
    clientContext?: string;
    /**
     * The prompts property
     */
    prompts?: Prompt[];
}
export function serializePlayPromptPostRequestBody(writer: SerializationWriter, playPromptPostRequestBody: PlayPromptPostRequestBody | undefined = {} as PlayPromptPostRequestBody) : void {
        writer.writeStringValue("clientContext", playPromptPostRequestBody.clientContext);
        writer.writeCollectionOfObjectValues<Prompt>("prompts", playPromptPostRequestBody.prompts, );
        writer.writeAdditionalData(playPromptPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
