// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createInvitationParticipantInfoFromDiscriminatorValue, serializeInvitationParticipantInfo, type InvitationParticipantInfo } from '../../../../models/invitationParticipantInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRedirectPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRedirectPostRequestBody;
}
export function deserializeIntoRedirectPostRequestBody(redirectPostRequestBody: RedirectPostRequestBody | undefined = {} as RedirectPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "callbackUri": n => { redirectPostRequestBody.callbackUri = n.getStringValue(); },
        "targets": n => { redirectPostRequestBody.targets = n.getCollectionOfObjectValues<InvitationParticipantInfo>(createInvitationParticipantInfoFromDiscriminatorValue); },
        "timeout": n => { redirectPostRequestBody.timeout = n.getNumberValue(); },
    }
}
export interface RedirectPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The callbackUri property
     */
    callbackUri?: string;
    /**
     * The targets property
     */
    targets?: InvitationParticipantInfo[];
    /**
     * The timeout property
     */
    timeout?: number;
}
export function serializeRedirectPostRequestBody(writer: SerializationWriter, redirectPostRequestBody: RedirectPostRequestBody | undefined = {} as RedirectPostRequestBody) : void {
        writer.writeStringValue("callbackUri", redirectPostRequestBody.callbackUri);
        writer.writeCollectionOfObjectValues<InvitationParticipantInfo>("targets", redirectPostRequestBody.targets, serializeInvitationParticipantInfo);
        writer.writeNumberValue("timeout", redirectPostRequestBody.timeout);
        writer.writeAdditionalData(redirectPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
