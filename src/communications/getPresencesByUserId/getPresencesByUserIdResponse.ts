import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../models/baseCollectionPaginationCountResponse';
import { createPresenceFromDiscriminatorValue, serializePresence, type Presence } from '../../models/presence';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createGetPresencesByUserIdResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGetPresencesByUserIdResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoGetPresencesByUserIdResponse(getPresencesByUserIdResponse: GetPresencesByUserIdResponse | undefined = {} as GetPresencesByUserIdResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getPresencesByUserIdResponse),
        "value": n => { getPresencesByUserIdResponse.value = n.getCollectionOfObjectValues<Presence>(createPresenceFromDiscriminatorValue); },
    }
}
export interface GetPresencesByUserIdResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Presence[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeGetPresencesByUserIdResponse(writer: SerializationWriter, getPresencesByUserIdResponse: GetPresencesByUserIdResponse | undefined = {} as GetPresencesByUserIdResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, getPresencesByUserIdResponse)
        writer.writeCollectionOfObjectValues<Presence>("value", getPresencesByUserIdResponse.value, );
}
