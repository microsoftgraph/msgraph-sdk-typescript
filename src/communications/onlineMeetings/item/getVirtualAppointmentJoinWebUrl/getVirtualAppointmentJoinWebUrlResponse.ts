import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createGetVirtualAppointmentJoinWebUrlResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGetVirtualAppointmentJoinWebUrlResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoGetVirtualAppointmentJoinWebUrlResponse(getVirtualAppointmentJoinWebUrlResponse: GetVirtualAppointmentJoinWebUrlResponse | undefined = {} as GetVirtualAppointmentJoinWebUrlResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { getVirtualAppointmentJoinWebUrlResponse.value = n.getStringValue(); },
    }
}
export interface GetVirtualAppointmentJoinWebUrlResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeGetVirtualAppointmentJoinWebUrlResponse(writer: SerializationWriter, getVirtualAppointmentJoinWebUrlResponse: GetVirtualAppointmentJoinWebUrlResponse | undefined = {} as GetVirtualAppointmentJoinWebUrlResponse) : void {
        writer.writeStringValue("value", getVirtualAppointmentJoinWebUrlResponse.value);
        writer.writeAdditionalData(getVirtualAppointmentJoinWebUrlResponse.additionalData);
}
