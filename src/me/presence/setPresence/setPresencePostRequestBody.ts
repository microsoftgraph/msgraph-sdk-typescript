// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Duration, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSetPresencePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSetPresencePostRequestBody;
}
export function deserializeIntoSetPresencePostRequestBody(setPresencePostRequestBody: SetPresencePostRequestBody | undefined = {} as SetPresencePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "activity": n => { setPresencePostRequestBody.activity = n.getStringValue(); },
        "availability": n => { setPresencePostRequestBody.availability = n.getStringValue(); },
        "expirationDuration": n => { setPresencePostRequestBody.expirationDuration = n.getDurationValue(); },
        "sessionId": n => { setPresencePostRequestBody.sessionId = n.getStringValue(); },
    }
}
export function serializeSetPresencePostRequestBody(writer: SerializationWriter, setPresencePostRequestBody: SetPresencePostRequestBody | undefined = {} as SetPresencePostRequestBody) : void {
        writer.writeStringValue("activity", setPresencePostRequestBody.activity);
        writer.writeStringValue("availability", setPresencePostRequestBody.availability);
        writer.writeDurationValue("expirationDuration", setPresencePostRequestBody.expirationDuration);
        writer.writeStringValue("sessionId", setPresencePostRequestBody.sessionId);
        writer.writeAdditionalData(setPresencePostRequestBody.additionalData);
}
export interface SetPresencePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The activity property
     */
    activity?: string;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The availability property
     */
    availability?: string;
    /**
     * The expirationDuration property
     */
    expirationDuration?: Duration;
    /**
     * The sessionId property
     */
    sessionId?: string;
}
// tslint:enable
// eslint-enable
