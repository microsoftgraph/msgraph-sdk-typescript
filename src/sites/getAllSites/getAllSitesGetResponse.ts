// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../models/baseCollectionPaginationCountResponse';
import { createSiteFromDiscriminatorValue, serializeSite, type Site } from '../../models/site';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGetAllSitesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGetAllSitesGetResponse;
}
export function deserializeIntoGetAllSitesGetResponse(getAllSitesGetResponse: GetAllSitesGetResponse | undefined = {} as GetAllSitesGetResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getAllSitesGetResponse),
        "value": n => { getAllSitesGetResponse.value = n.getCollectionOfObjectValues<Site>(createSiteFromDiscriminatorValue); },
    }
}
export interface GetAllSitesGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Site[];
}
export function serializeGetAllSitesGetResponse(writer: SerializationWriter, getAllSitesGetResponse: GetAllSitesGetResponse | undefined = {} as GetAllSitesGetResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, getAllSitesGetResponse)
        writer.writeCollectionOfObjectValues<Site>("value", getAllSitesGetResponse.value, );
}
// tslint:enable
// eslint-enable
