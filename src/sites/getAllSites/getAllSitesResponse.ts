import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../models/baseCollectionPaginationCountResponse';
import { createSiteFromDiscriminatorValue, serializeSite, type Site } from '../../models/site';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createGetAllSitesResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGetAllSitesResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoGetAllSitesResponse(getAllSitesResponse: GetAllSitesResponse | undefined = {} as GetAllSitesResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getAllSitesResponse),
        "value": n => { getAllSitesResponse.value = n.getCollectionOfObjectValues<Site>(createSiteFromDiscriminatorValue); },
    }
}
export interface GetAllSitesResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Site[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeGetAllSitesResponse(writer: SerializationWriter, getAllSitesResponse: GetAllSitesResponse | undefined = {} as GetAllSitesResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, getAllSitesResponse)
        writer.writeCollectionOfObjectValues<Site>("value", getAllSitesResponse.value, );
}
