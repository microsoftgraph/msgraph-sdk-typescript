// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createItemReferenceFromDiscriminatorValue, serializeItemReference, type ItemReference } from '../../../../../models/itemReference';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CopyToDefaultContentLocationPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The destinationFileName property
     */
    destinationFileName?: string;
    /**
     * The sourceFile property
     */
    sourceFile?: ItemReference;
}
export function createCopyToDefaultContentLocationPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCopyToDefaultContentLocationPostRequestBody;
}
export function deserializeIntoCopyToDefaultContentLocationPostRequestBody(copyToDefaultContentLocationPostRequestBody: CopyToDefaultContentLocationPostRequestBody | undefined = {} as CopyToDefaultContentLocationPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "destinationFileName": n => { copyToDefaultContentLocationPostRequestBody.destinationFileName = n.getStringValue(); },
        "sourceFile": n => { copyToDefaultContentLocationPostRequestBody.sourceFile = n.getObjectValue<ItemReference>(createItemReferenceFromDiscriminatorValue); },
    }
}
export function serializeCopyToDefaultContentLocationPostRequestBody(writer: SerializationWriter, copyToDefaultContentLocationPostRequestBody: CopyToDefaultContentLocationPostRequestBody | undefined = {} as CopyToDefaultContentLocationPostRequestBody) : void {
        writer.writeStringValue("destinationFileName", copyToDefaultContentLocationPostRequestBody.destinationFileName);
        writer.writeObjectValue<ItemReference>("sourceFile", copyToDefaultContentLocationPostRequestBody.sourceFile, );
        writer.writeAdditionalData(copyToDefaultContentLocationPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
