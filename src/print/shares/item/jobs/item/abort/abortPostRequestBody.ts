import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AbortPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The reason property
     */
    reason?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAbortPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAbortPostRequestBody;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAbortPostRequestBody(abortPostRequestBody: AbortPostRequestBody | undefined = {} as AbortPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "reason": n => { abortPostRequestBody.reason = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAbortPostRequestBody(writer: SerializationWriter, abortPostRequestBody: AbortPostRequestBody | undefined = {} as AbortPostRequestBody) : void {
        writer.writeStringValue("reason", abortPostRequestBody.reason);
        writer.writeAdditionalData(abortPostRequestBody.additionalData);
}
