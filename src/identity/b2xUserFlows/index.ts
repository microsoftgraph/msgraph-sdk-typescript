/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createB2xIdentityUserFlowCollectionResponseFromDiscriminatorValue, createB2xIdentityUserFlowFromDiscriminatorValue, serializeB2xIdentityUserFlow, type B2xIdentityUserFlow, type B2xIdentityUserFlowCollectionResponse } from '../../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { B2xIdentityUserFlowItemRequestBuilderNavigationMetadata, B2xIdentityUserFlowItemRequestBuilderRequestsMetadata, B2xIdentityUserFlowItemRequestBuilderUriTemplate, type B2xIdentityUserFlowItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the b2xUserFlows property of the microsoft.graph.identityContainer entity.
 */
export interface B2xUserFlowsRequestBuilder extends BaseRequestBuilder<B2xUserFlowsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the b2xUserFlows property of the microsoft.graph.identityContainer entity.
     * @param b2xIdentityUserFlowId The unique identifier of b2xIdentityUserFlow
     * @returns a B2xIdentityUserFlowItemRequestBuilder
     */
     byB2xIdentityUserFlowId(b2xIdentityUserFlowId: string) : B2xIdentityUserFlowItemRequestBuilder;
    /**
     * Retrieve a list of b2xIdentityUserFlow objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of B2xIdentityUserFlowCollectionResponse
     * @see {@link https://learn.microsoft.com/graph/api/identitycontainer-list-b2xuserflows?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<B2xUserFlowsRequestBuilderGetQueryParameters> | undefined) : Promise<B2xIdentityUserFlowCollectionResponse | undefined>;
    /**
     * Create a new b2xIdentityUserFlow object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of B2xIdentityUserFlow
     * @see {@link https://learn.microsoft.com/graph/api/identitycontainer-post-b2xuserflows?view=graph-rest-1.0|Find more info here}
     */
     post(body: B2xIdentityUserFlow, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<B2xIdentityUserFlow | undefined>;
    /**
     * Retrieve a list of b2xIdentityUserFlow objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<B2xUserFlowsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new b2xIdentityUserFlow object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: B2xIdentityUserFlow, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a list of b2xIdentityUserFlow objects.
 */
export interface B2xUserFlowsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const B2xUserFlowsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const B2xUserFlowsRequestBuilderNavigationMetadata: Record<Exclude<keyof B2xUserFlowsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byB2xIdentityUserFlowId: {
        uriTemplate: B2xIdentityUserFlowItemRequestBuilderUriTemplate,
        requestsMetadata: B2xIdentityUserFlowItemRequestBuilderRequestsMetadata,
        navigationMetadata: B2xIdentityUserFlowItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["b2xIdentityUserFlow%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const B2xUserFlowsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createB2xIdentityUserFlowCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: B2xUserFlowsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createB2xIdentityUserFlowFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeB2xIdentityUserFlow,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const B2xUserFlowsRequestBuilderUriTemplate = "{+baseurl}/identity/b2xUserFlows{?%24top,%24skip,%24search,%24filter,%24count,%24orderby,%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
