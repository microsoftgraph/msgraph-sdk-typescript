// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAssignmentOrderFromDiscriminatorValue, serializeAssignmentOrder, type AssignmentOrder } from '../../../../../models/assignmentOrder';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSetOrderPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSetOrderPostRequestBody;
}
export function deserializeIntoSetOrderPostRequestBody(setOrderPostRequestBody: SetOrderPostRequestBody | undefined = {} as SetOrderPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "newAssignmentOrder": n => { setOrderPostRequestBody.newAssignmentOrder = n.getObjectValue<AssignmentOrder>(createAssignmentOrderFromDiscriminatorValue); },
    }
}
export function serializeSetOrderPostRequestBody(writer: SerializationWriter, setOrderPostRequestBody: SetOrderPostRequestBody | undefined = {} as SetOrderPostRequestBody) : void {
        writer.writeObjectValue<AssignmentOrder>("newAssignmentOrder", setOrderPostRequestBody.newAssignmentOrder, );
        writer.writeAdditionalData(setOrderPostRequestBody.additionalData);
}
export interface SetOrderPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The newAssignmentOrder property
     */
    newAssignmentOrder?: AssignmentOrder;
}
// tslint:enable
// eslint-enable
