import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../models/baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AvailableProviderTypesResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: string[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAvailableProviderTypesResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAvailableProviderTypesResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAvailableProviderTypesResponse(availableProviderTypesResponse: AvailableProviderTypesResponse | undefined = {} as AvailableProviderTypesResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(availableProviderTypesResponse),
        "value": n => { availableProviderTypesResponse.value = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAvailableProviderTypesResponse(writer: SerializationWriter, availableProviderTypesResponse: AvailableProviderTypesResponse | undefined = {} as AvailableProviderTypesResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, availableProviderTypesResponse)
        writer.writeCollectionOfPrimitiveValues<string>("value", availableProviderTypesResponse.value);
}
