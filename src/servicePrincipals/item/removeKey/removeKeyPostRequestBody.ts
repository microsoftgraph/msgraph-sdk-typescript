// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createRemoveKeyPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRemoveKeyPostRequestBody;
}
export function deserializeIntoRemoveKeyPostRequestBody(removeKeyPostRequestBody: RemoveKeyPostRequestBody | undefined = {} as RemoveKeyPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "keyId": n => { removeKeyPostRequestBody.keyId = n.getGuidValue(); },
        "proof": n => { removeKeyPostRequestBody.proof = n.getStringValue(); },
    }
}
export interface RemoveKeyPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The keyId property
     */
    keyId?: Guid;
    /**
     * The proof property
     */
    proof?: string;
}
export function serializeRemoveKeyPostRequestBody(writer: SerializationWriter, removeKeyPostRequestBody: RemoveKeyPostRequestBody | undefined = {} as RemoveKeyPostRequestBody) : void {
        writer.writeGuidValue("keyId", removeKeyPostRequestBody.keyId);
        writer.writeStringValue("proof", removeKeyPostRequestBody.proof);
        writer.writeAdditionalData(removeKeyPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
