// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createValidatePropertiesPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoValidatePropertiesPostRequestBody;
}
export function deserializeIntoValidatePropertiesPostRequestBody(validatePropertiesPostRequestBody: ValidatePropertiesPostRequestBody | undefined = {} as ValidatePropertiesPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "displayName": n => { validatePropertiesPostRequestBody.displayName = n.getStringValue(); },
        "entityType": n => { validatePropertiesPostRequestBody.entityType = n.getStringValue(); },
        "mailNickname": n => { validatePropertiesPostRequestBody.mailNickname = n.getStringValue(); },
        "onBehalfOfUserId": n => { validatePropertiesPostRequestBody.onBehalfOfUserId = n.getGuidValue(); },
    }
}
export function serializeValidatePropertiesPostRequestBody(writer: SerializationWriter, validatePropertiesPostRequestBody: ValidatePropertiesPostRequestBody | undefined = {} as ValidatePropertiesPostRequestBody) : void {
        writer.writeStringValue("displayName", validatePropertiesPostRequestBody.displayName);
        writer.writeStringValue("entityType", validatePropertiesPostRequestBody.entityType);
        writer.writeStringValue("mailNickname", validatePropertiesPostRequestBody.mailNickname);
        writer.writeGuidValue("onBehalfOfUserId", validatePropertiesPostRequestBody.onBehalfOfUserId);
        writer.writeAdditionalData(validatePropertiesPostRequestBody.additionalData);
}
export interface ValidatePropertiesPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The displayName property
     */
    displayName?: string;
    /**
     * The entityType property
     */
    entityType?: string;
    /**
     * The mailNickname property
     */
    mailNickname?: string;
    /**
     * The onBehalfOfUserId property
     */
    onBehalfOfUserId?: Guid;
}
// tslint:enable
// eslint-enable
