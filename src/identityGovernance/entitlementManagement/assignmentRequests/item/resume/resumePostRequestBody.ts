// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createCustomExtensionDataFromDiscriminatorValue, serializeCustomExtensionData, type CustomExtensionData } from '../../../../../models/customExtensionData';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createResumePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoResumePostRequestBody;
}
export function deserializeIntoResumePostRequestBody(resumePostRequestBody: ResumePostRequestBody | undefined = {} as ResumePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "data": n => { resumePostRequestBody.data = n.getObjectValue<CustomExtensionData>(createCustomExtensionDataFromDiscriminatorValue); },
        "source": n => { resumePostRequestBody.source = n.getStringValue(); },
        "type": n => { resumePostRequestBody.type = n.getStringValue(); },
    }
}
export interface ResumePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The data property
     */
    data?: CustomExtensionData;
    /**
     * The source property
     */
    source?: string;
    /**
     * The type property
     */
    type?: string;
}
export function serializeResumePostRequestBody(writer: SerializationWriter, resumePostRequestBody: ResumePostRequestBody | undefined = {} as ResumePostRequestBody) : void {
        writer.writeObjectValue<CustomExtensionData>("data", resumePostRequestBody.data, );
        writer.writeStringValue("source", resumePostRequestBody.source);
        writer.writeStringValue("type", resumePostRequestBody.type);
        writer.writeAdditionalData(resumePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
