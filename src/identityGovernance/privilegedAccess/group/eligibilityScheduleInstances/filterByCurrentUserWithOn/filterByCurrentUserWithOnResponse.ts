import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../../../models/baseCollectionPaginationCountResponse';
import { createPrivilegedAccessGroupEligibilityScheduleInstanceFromDiscriminatorValue, serializePrivilegedAccessGroupEligibilityScheduleInstance, type PrivilegedAccessGroupEligibilityScheduleInstance } from '../../../../../models/privilegedAccessGroupEligibilityScheduleInstance';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createFilterByCurrentUserWithOnResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFilterByCurrentUserWithOnResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoFilterByCurrentUserWithOnResponse(filterByCurrentUserWithOnResponse: FilterByCurrentUserWithOnResponse | undefined = {} as FilterByCurrentUserWithOnResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(filterByCurrentUserWithOnResponse),
        "value": n => { filterByCurrentUserWithOnResponse.value = n.getCollectionOfObjectValues<PrivilegedAccessGroupEligibilityScheduleInstance>(createPrivilegedAccessGroupEligibilityScheduleInstanceFromDiscriminatorValue); },
    }
}
export interface FilterByCurrentUserWithOnResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PrivilegedAccessGroupEligibilityScheduleInstance[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeFilterByCurrentUserWithOnResponse(writer: SerializationWriter, filterByCurrentUserWithOnResponse: FilterByCurrentUserWithOnResponse | undefined = {} as FilterByCurrentUserWithOnResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, filterByCurrentUserWithOnResponse)
        writer.writeCollectionOfObjectValues<PrivilegedAccessGroupEligibilityScheduleInstance>("value", filterByCurrentUserWithOnResponse.value, );
}
