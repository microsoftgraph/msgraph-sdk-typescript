// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createUserFromDiscriminatorValue, serializeUser, type User } from '../../../../../../models/user';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ActivatePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The subjects property
     */
    subjects?: User[];
}
export function createActivatePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoActivatePostRequestBody;
}
export function deserializeIntoActivatePostRequestBody(activatePostRequestBody: ActivatePostRequestBody | undefined = {} as ActivatePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "subjects": n => { activatePostRequestBody.subjects = n.getCollectionOfObjectValues<User>(createUserFromDiscriminatorValue); },
    }
}
export function serializeActivatePostRequestBody(writer: SerializationWriter, activatePostRequestBody: ActivatePostRequestBody | undefined = {} as ActivatePostRequestBody) : void {
        writer.writeCollectionOfObjectValues<User>("subjects", activatePostRequestBody.subjects, );
        writer.writeAdditionalData(activatePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
