// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../models/baseCollectionPaginationCountResponse';
import { type ODataError } from '../../../models/oDataErrors/';
import { createODataErrorFromDiscriminatorValue, deserializeIntoODataError, serializeODataError } from '../../../models/oDataErrors/oDataError';
import { createResourceSpecificPermissionGrantFromDiscriminatorValue, serializeResourceSpecificPermissionGrant, type ResourceSpecificPermissionGrant } from '../../../models/resourceSpecificPermissionGrant';
import { BaseRequestBuilder, HttpMethod, RequestInformation, type Parsable, type ParsableFactory, type ParseNode, type RequestAdapter, type RequestConfiguration, type RequestOption, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CheckGrantedPermissionsForAppPostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ResourceSpecificPermissionGrant[];
}
export function createCheckGrantedPermissionsForAppPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCheckGrantedPermissionsForAppPostResponse;
}
export function deserializeIntoCheckGrantedPermissionsForAppPostResponse(checkGrantedPermissionsForAppPostResponse: CheckGrantedPermissionsForAppPostResponse | undefined = {} as CheckGrantedPermissionsForAppPostResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(checkGrantedPermissionsForAppPostResponse),
        "value": n => { checkGrantedPermissionsForAppPostResponse.value = n.getCollectionOfObjectValues<ResourceSpecificPermissionGrant>(createResourceSpecificPermissionGrantFromDiscriminatorValue); },
    }
}
export function serializeCheckGrantedPermissionsForAppPostResponse(writer: SerializationWriter, checkGrantedPermissionsForAppPostResponse: CheckGrantedPermissionsForAppPostResponse | undefined = {} as CheckGrantedPermissionsForAppPostResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, checkGrantedPermissionsForAppPostResponse)
    writer.writeCollectionOfObjectValues<ResourceSpecificPermissionGrant>("value", checkGrantedPermissionsForAppPostResponse.value, serializeResourceSpecificPermissionGrant);
}
/**
 * Provides operations to call the checkGrantedPermissionsForApp method.
 */
export class CheckGrantedPermissionsForAppRequestBuilder extends BaseRequestBuilder {
    /**
     * Instantiates a new CheckGrantedPermissionsForAppRequestBuilder and sets the default values.
     * @param pathParameters The raw url or the Url template parameters for the request.
     * @param requestAdapter The request adapter to use to execute the requests.
     */
    public constructor(pathParameters: Record<string, unknown> | string | undefined, requestAdapter: RequestAdapter) {
        super(pathParameters, requestAdapter, "{+baseurl}/groups/{group%2Did}/checkGrantedPermissionsForApp");
    };
    /**
     * Invoke action checkGrantedPermissionsForApp
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of CheckGrantedPermissionsForAppPostResponse
     */
    public post(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<CheckGrantedPermissionsForAppPostResponse | undefined> {
        const requestInfo = this.toPostRequestInformation(
            requestConfiguration
        );
        const errorMapping = {
            "4XX": createODataErrorFromDiscriminatorValue,
            "5XX": createODataErrorFromDiscriminatorValue,
        } as Record<string, ParsableFactory<Parsable>>;
        return this.requestAdapter.sendAsync<CheckGrantedPermissionsForAppPostResponse>(requestInfo, createCheckGrantedPermissionsForAppPostResponseFromDiscriminatorValue, errorMapping);
    };
    /**
     * Invoke action checkGrantedPermissionsForApp
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
    public toPostRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation {
        const requestInfo = new RequestInformation(HttpMethod.POST, this.urlTemplate, this.pathParameters);
        requestInfo.configure(requestConfiguration);
        requestInfo.headers.tryAdd("Accept", "application/json");
        return requestInfo;
    };
    /**
     * Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
     * @param rawUrl The raw URL to use for the request builder.
     * @returns a checkGrantedPermissionsForAppRequestBuilder
     */
    public withUrl(rawUrl: string) : CheckGrantedPermissionsForAppRequestBuilder {
        if(!rawUrl) throw new Error("rawUrl cannot be undefined");
        return new CheckGrantedPermissionsForAppRequestBuilder(rawUrl, this.requestAdapter);
    };
}
// tslint:enable
// eslint-enable
