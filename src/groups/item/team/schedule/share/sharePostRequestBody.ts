// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSharePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSharePostRequestBody;
}
export function deserializeIntoSharePostRequestBody(sharePostRequestBody: SharePostRequestBody | undefined = {} as SharePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "endDateTime": n => { sharePostRequestBody.endDateTime = n.getDateValue(); },
        "notifyTeam": n => { sharePostRequestBody.notifyTeam = n.getBooleanValue(); },
        "startDateTime": n => { sharePostRequestBody.startDateTime = n.getDateValue(); },
    }
}
export function serializeSharePostRequestBody(writer: SerializationWriter, sharePostRequestBody: SharePostRequestBody | undefined = {} as SharePostRequestBody) : void {
        writer.writeDateValue("endDateTime", sharePostRequestBody.endDateTime);
        writer.writeBooleanValue("notifyTeam", sharePostRequestBody.notifyTeam);
        writer.writeDateValue("startDateTime", sharePostRequestBody.startDateTime);
        writer.writeAdditionalData(sharePostRequestBody.additionalData);
}
export interface SharePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The endDateTime property
     */
    endDateTime?: Date;
    /**
     * The notifyTeam property
     */
    notifyTeam?: boolean;
    /**
     * The startDateTime property
     */
    startDateTime?: Date;
}
// tslint:enable
// eslint-enable
