// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createSiteFromDiscriminatorValue, serializeSite, type Site } from '../../../../models/site';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRemovePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRemovePostRequestBody;
}
export function deserializeIntoRemovePostRequestBody(removePostRequestBody: RemovePostRequestBody | undefined = {} as RemovePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { removePostRequestBody.value = n.getCollectionOfObjectValues<Site>(createSiteFromDiscriminatorValue); },
    }
}
export interface RemovePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: Site[];
}
export function serializeRemovePostRequestBody(writer: SerializationWriter, removePostRequestBody: RemovePostRequestBody | undefined = {} as RemovePostRequestBody) : void {
        writer.writeCollectionOfObjectValues<Site>("value", removePostRequestBody.value, );
        writer.writeAdditionalData(removePostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
