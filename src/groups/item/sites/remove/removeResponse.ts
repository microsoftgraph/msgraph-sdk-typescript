import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../../models/baseCollectionPaginationCountResponse';
import { createSiteFromDiscriminatorValue, serializeSite, type Site } from '../../../../models/site';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createRemoveResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRemoveResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoRemoveResponse(removeResponse: RemoveResponse | undefined = {} as RemoveResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(removeResponse),
        "value": n => { removeResponse.value = n.getCollectionOfObjectValues<Site>(createSiteFromDiscriminatorValue); },
    }
}
export interface RemoveResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Site[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeRemoveResponse(writer: SerializationWriter, removeResponse: RemoveResponse | undefined = {} as RemoveResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, removeResponse)
        writer.writeCollectionOfObjectValues<Site>("value", removeResponse.value, );
}
