// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../../../../../../../models/baseCollectionPaginationCountResponse';
import { createContentTypeFromDiscriminatorValue, serializeContentType, type ContentType } from '../../../../../../../../models/contentType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGetCompatibleHubContentTypesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGetCompatibleHubContentTypesGetResponse;
}
export function deserializeIntoGetCompatibleHubContentTypesGetResponse(getCompatibleHubContentTypesGetResponse: GetCompatibleHubContentTypesGetResponse | undefined = {} as GetCompatibleHubContentTypesGetResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getCompatibleHubContentTypesGetResponse),
        "value": n => { getCompatibleHubContentTypesGetResponse.value = n.getCollectionOfObjectValues<ContentType>(createContentTypeFromDiscriminatorValue); },
    }
}
export interface GetCompatibleHubContentTypesGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ContentType[];
}
export function serializeGetCompatibleHubContentTypesGetResponse(writer: SerializationWriter, getCompatibleHubContentTypesGetResponse: GetCompatibleHubContentTypesGetResponse | undefined = {} as GetCompatibleHubContentTypesGetResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, getCompatibleHubContentTypesGetResponse)
        writer.writeCollectionOfObjectValues<ContentType>("value", getCompatibleHubContentTypesGetResponse.value, );
}
// tslint:enable
// eslint-enable
