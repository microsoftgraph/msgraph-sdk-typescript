/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createIdentityProtectionRootFromDiscriminatorValue, serializeIdentityProtectionRoot, type IdentityProtectionRoot } from '../models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../models/oDataErrors/';
import { RiskDetectionsRequestBuilderNavigationMetadata, RiskDetectionsRequestBuilderRequestsMetadata, RiskDetectionsRequestBuilderUriTemplate, type RiskDetectionsRequestBuilder } from './riskDetections/';
import { RiskyServicePrincipalsRequestBuilderNavigationMetadata, RiskyServicePrincipalsRequestBuilderRequestsMetadata, RiskyServicePrincipalsRequestBuilderUriTemplate, type RiskyServicePrincipalsRequestBuilder } from './riskyServicePrincipals/';
import { RiskyUsersRequestBuilderNavigationMetadata, RiskyUsersRequestBuilderRequestsMetadata, RiskyUsersRequestBuilderUriTemplate, type RiskyUsersRequestBuilder } from './riskyUsers/';
import { ServicePrincipalRiskDetectionsRequestBuilderNavigationMetadata, ServicePrincipalRiskDetectionsRequestBuilderRequestsMetadata, ServicePrincipalRiskDetectionsRequestBuilderUriTemplate, type ServicePrincipalRiskDetectionsRequestBuilder } from './servicePrincipalRiskDetections/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the identityProtectionRoot singleton.
 */
export interface IdentityProtectionRequestBuilder extends BaseRequestBuilder<IdentityProtectionRequestBuilder> {
    /**
     * Provides operations to manage the riskDetections property of the microsoft.graph.identityProtectionRoot entity.
     */
    get riskDetections(): RiskDetectionsRequestBuilder;
    /**
     * Provides operations to manage the riskyServicePrincipals property of the microsoft.graph.identityProtectionRoot entity.
     */
    get riskyServicePrincipals(): RiskyServicePrincipalsRequestBuilder;
    /**
     * Provides operations to manage the riskyUsers property of the microsoft.graph.identityProtectionRoot entity.
     */
    get riskyUsers(): RiskyUsersRequestBuilder;
    /**
     * Provides operations to manage the servicePrincipalRiskDetections property of the microsoft.graph.identityProtectionRoot entity.
     */
    get servicePrincipalRiskDetections(): ServicePrincipalRiskDetectionsRequestBuilder;
    /**
     * Get identityProtection
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of IdentityProtectionRoot
     */
     get(requestConfiguration?: RequestConfiguration<IdentityProtectionRequestBuilderGetQueryParameters> | undefined) : Promise<IdentityProtectionRoot | undefined>;
    /**
     * Update identityProtection
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of IdentityProtectionRoot
     */
     patch(body: IdentityProtectionRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<IdentityProtectionRoot | undefined>;
    /**
     * Get identityProtection
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<IdentityProtectionRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update identityProtection
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: IdentityProtectionRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get identityProtection
 */
export interface IdentityProtectionRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const IdentityProtectionRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const IdentityProtectionRequestBuilderNavigationMetadata: Record<Exclude<keyof IdentityProtectionRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    riskDetections: {
        uriTemplate: RiskDetectionsRequestBuilderUriTemplate,
        requestsMetadata: RiskDetectionsRequestBuilderRequestsMetadata,
        navigationMetadata: RiskDetectionsRequestBuilderNavigationMetadata,
    },
    riskyServicePrincipals: {
        uriTemplate: RiskyServicePrincipalsRequestBuilderUriTemplate,
        requestsMetadata: RiskyServicePrincipalsRequestBuilderRequestsMetadata,
        navigationMetadata: RiskyServicePrincipalsRequestBuilderNavigationMetadata,
    },
    riskyUsers: {
        uriTemplate: RiskyUsersRequestBuilderUriTemplate,
        requestsMetadata: RiskyUsersRequestBuilderRequestsMetadata,
        navigationMetadata: RiskyUsersRequestBuilderNavigationMetadata,
    },
    servicePrincipalRiskDetections: {
        uriTemplate: ServicePrincipalRiskDetectionsRequestBuilderUriTemplate,
        requestsMetadata: ServicePrincipalRiskDetectionsRequestBuilderRequestsMetadata,
        navigationMetadata: ServicePrincipalRiskDetectionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const IdentityProtectionRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createIdentityProtectionRootFromDiscriminatorValue,
        queryParametersMapper: IdentityProtectionRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createIdentityProtectionRootFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeIdentityProtectionRoot,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const IdentityProtectionRequestBuilderUriTemplate = "{+baseurl}/identityProtection{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
