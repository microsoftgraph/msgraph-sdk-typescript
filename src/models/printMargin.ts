// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrintMarginFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrintMargin;
}
export function deserializeIntoPrintMargin(printMargin: PrintMargin | undefined = {} as PrintMargin) : Record<string, (node: ParseNode) => void> {
    return {
        "bottom": n => { printMargin.bottom = n.getNumberValue(); },
        "left": n => { printMargin.left = n.getNumberValue(); },
        "@odata.type": n => { printMargin.odataType = n.getStringValue(); },
        "right": n => { printMargin.right = n.getNumberValue(); },
        "top": n => { printMargin.top = n.getNumberValue(); },
    }
}
export interface PrintMargin extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The margin in microns from the bottom edge.
     */
    bottom?: number;
    /**
     * The margin in microns from the left edge.
     */
    left?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The margin in microns from the right edge.
     */
    right?: number;
    /**
     * The margin in microns from the top edge.
     */
    top?: number;
}
export function serializePrintMargin(writer: SerializationWriter, printMargin: PrintMargin | undefined = {} as PrintMargin) : void {
        writer.writeNumberValue("bottom", printMargin.bottom);
        writer.writeNumberValue("left", printMargin.left);
        writer.writeStringValue("@odata.type", printMargin.odataType);
        writer.writeNumberValue("right", printMargin.right);
        writer.writeNumberValue("top", printMargin.top);
        writer.writeAdditionalData(printMargin.additionalData);
}
// tslint:enable
// eslint-enable
