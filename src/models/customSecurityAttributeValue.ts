// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createCustomSecurityAttributeValueFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCustomSecurityAttributeValue;
}
export interface CustomSecurityAttributeValue extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function deserializeIntoCustomSecurityAttributeValue(customSecurityAttributeValue: CustomSecurityAttributeValue | undefined = {} as CustomSecurityAttributeValue) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { customSecurityAttributeValue.odataType = n.getStringValue(); },
    }
}
export function serializeCustomSecurityAttributeValue(writer: SerializationWriter, customSecurityAttributeValue: CustomSecurityAttributeValue | undefined = {} as CustomSecurityAttributeValue) : void {
        writer.writeStringValue("@odata.type", customSecurityAttributeValue.odataType);
        writer.writeAdditionalData(customSecurityAttributeValue.additionalData);
}
// tslint:enable
// eslint-enable
