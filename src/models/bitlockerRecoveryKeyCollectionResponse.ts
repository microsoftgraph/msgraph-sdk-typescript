import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createBitlockerRecoveryKeyFromDiscriminatorValue, serializeBitlockerRecoveryKey, type BitlockerRecoveryKey } from './bitlockerRecoveryKey';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BitlockerRecoveryKeyCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: BitlockerRecoveryKey[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createBitlockerRecoveryKeyCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBitlockerRecoveryKeyCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoBitlockerRecoveryKeyCollectionResponse(bitlockerRecoveryKeyCollectionResponse: BitlockerRecoveryKeyCollectionResponse | undefined = {} as BitlockerRecoveryKeyCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(bitlockerRecoveryKeyCollectionResponse),
        "value": n => { bitlockerRecoveryKeyCollectionResponse.value = n.getCollectionOfObjectValues<BitlockerRecoveryKey>(createBitlockerRecoveryKeyFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeBitlockerRecoveryKeyCollectionResponse(writer: SerializationWriter, bitlockerRecoveryKeyCollectionResponse: BitlockerRecoveryKeyCollectionResponse | undefined = {} as BitlockerRecoveryKeyCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, bitlockerRecoveryKeyCollectionResponse)
        writer.writeCollectionOfObjectValues<BitlockerRecoveryKey>("value", bitlockerRecoveryKeyCollectionResponse.value, );
}
