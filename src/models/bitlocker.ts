// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createBitlockerRecoveryKeyFromDiscriminatorValue, serializeBitlockerRecoveryKey, type BitlockerRecoveryKey } from './bitlockerRecoveryKey';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Bitlocker extends Entity, Parsable {
    /**
     * The recovery keys associated with the bitlocker entity.
     */
    recoveryKeys?: BitlockerRecoveryKey[];
}
export function createBitlockerFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBitlocker;
}
export function deserializeIntoBitlocker(bitlocker: Bitlocker | undefined = {} as Bitlocker) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(bitlocker),
        "recoveryKeys": n => { bitlocker.recoveryKeys = n.getCollectionOfObjectValues<BitlockerRecoveryKey>(createBitlockerRecoveryKeyFromDiscriminatorValue); },
    }
}
export function serializeBitlocker(writer: SerializationWriter, bitlocker: Bitlocker | undefined = {} as Bitlocker) : void {
        serializeEntity(writer, bitlocker)
        writer.writeCollectionOfObjectValues<BitlockerRecoveryKey>("recoveryKeys", bitlocker.recoveryKeys, );
}
// tslint:enable
// eslint-enable
