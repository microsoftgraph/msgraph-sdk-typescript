// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createFilterClauseFromDiscriminatorValue, serializeFilterClause, type FilterClause } from './filterClause';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFilterGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFilterGroup;
}
export function deserializeIntoFilterGroup(filterGroup: FilterGroup | undefined = {} as FilterGroup) : Record<string, (node: ParseNode) => void> {
    return {
        "clauses": n => { filterGroup.clauses = n.getCollectionOfObjectValues<FilterClause>(createFilterClauseFromDiscriminatorValue); },
        "name": n => { filterGroup.name = n.getStringValue(); },
        "@odata.type": n => { filterGroup.odataType = n.getStringValue(); },
    }
}
export interface FilterGroup extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Filter clauses (conditions) of this group. All clauses in a group must be satisfied in order for the filter group to evaluate to true.
     */
    clauses?: FilterClause[];
    /**
     * Human-readable name of the filter group.
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeFilterGroup(writer: SerializationWriter, filterGroup: FilterGroup | undefined = {} as FilterGroup) : void {
        writer.writeCollectionOfObjectValues<FilterClause>("clauses", filterGroup.clauses, serializeFilterClause);
        writer.writeStringValue("name", filterGroup.name);
        writer.writeStringValue("@odata.type", filterGroup.odataType);
        writer.writeAdditionalData(filterGroup.additionalData);
}
// tslint:enable
// eslint-enable
