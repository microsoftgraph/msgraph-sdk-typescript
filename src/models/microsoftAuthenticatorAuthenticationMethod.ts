// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAuthenticationMethod, serializeAuthenticationMethod, type AuthenticationMethod } from './authenticationMethod';
import { createDeviceFromDiscriminatorValue, serializeDevice, type Device } from './device';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMicrosoftAuthenticatorAuthenticationMethodFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMicrosoftAuthenticatorAuthenticationMethod;
}
export function deserializeIntoMicrosoftAuthenticatorAuthenticationMethod(microsoftAuthenticatorAuthenticationMethod: MicrosoftAuthenticatorAuthenticationMethod | undefined = {} as MicrosoftAuthenticatorAuthenticationMethod) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuthenticationMethod(microsoftAuthenticatorAuthenticationMethod),
        "createdDateTime": n => { microsoftAuthenticatorAuthenticationMethod.createdDateTime = n.getDateValue(); },
        "device": n => { microsoftAuthenticatorAuthenticationMethod.device = n.getObjectValue<Device>(createDeviceFromDiscriminatorValue); },
        "deviceTag": n => { microsoftAuthenticatorAuthenticationMethod.deviceTag = n.getStringValue(); },
        "displayName": n => { microsoftAuthenticatorAuthenticationMethod.displayName = n.getStringValue(); },
        "phoneAppVersion": n => { microsoftAuthenticatorAuthenticationMethod.phoneAppVersion = n.getStringValue(); },
    }
}
export interface MicrosoftAuthenticatorAuthenticationMethod extends AuthenticationMethod, Parsable {
    /**
     * The date and time that this app was registered. This property is null if the device isn't registered for passwordless Phone Sign-In.
     */
    createdDateTime?: Date;
    /**
     * The registered device on which Microsoft Authenticator resides. This property is null if the device isn't registered for passwordless Phone Sign-In.
     */
    device?: Device;
    /**
     * Tags containing app metadata.
     */
    deviceTag?: string;
    /**
     * The name of the device on which this app is registered.
     */
    displayName?: string;
    /**
     * Numerical version of this instance of the Authenticator app.
     */
    phoneAppVersion?: string;
}
export function serializeMicrosoftAuthenticatorAuthenticationMethod(writer: SerializationWriter, microsoftAuthenticatorAuthenticationMethod: MicrosoftAuthenticatorAuthenticationMethod | undefined = {} as MicrosoftAuthenticatorAuthenticationMethod) : void {
        serializeAuthenticationMethod(writer, microsoftAuthenticatorAuthenticationMethod)
        writer.writeDateValue("createdDateTime", microsoftAuthenticatorAuthenticationMethod.createdDateTime);
        writer.writeObjectValue<Device>("device", microsoftAuthenticatorAuthenticationMethod.device, );
        writer.writeStringValue("deviceTag", microsoftAuthenticatorAuthenticationMethod.deviceTag);
        writer.writeStringValue("displayName", microsoftAuthenticatorAuthenticationMethod.displayName);
        writer.writeStringValue("phoneAppVersion", microsoftAuthenticatorAuthenticationMethod.phoneAppVersion);
}
// tslint:enable
// eslint-enable
