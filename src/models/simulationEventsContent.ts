// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createSimulationEventFromDiscriminatorValue, serializeSimulationEvent, type SimulationEvent } from './simulationEvent';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSimulationEventsContentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSimulationEventsContent;
}
export function deserializeIntoSimulationEventsContent(simulationEventsContent: SimulationEventsContent | undefined = {} as SimulationEventsContent) : Record<string, (node: ParseNode) => void> {
    return {
        "compromisedRate": n => { simulationEventsContent.compromisedRate = n.getNumberValue(); },
        "events": n => { simulationEventsContent.events = n.getCollectionOfObjectValues<SimulationEvent>(createSimulationEventFromDiscriminatorValue); },
        "@odata.type": n => { simulationEventsContent.odataType = n.getStringValue(); },
    }
}
export function serializeSimulationEventsContent(writer: SerializationWriter, simulationEventsContent: SimulationEventsContent | undefined = {} as SimulationEventsContent) : void {
        writer.writeNumberValue("compromisedRate", simulationEventsContent.compromisedRate);
        writer.writeCollectionOfObjectValues<SimulationEvent>("events", simulationEventsContent.events, serializeSimulationEvent);
        writer.writeStringValue("@odata.type", simulationEventsContent.odataType);
        writer.writeAdditionalData(simulationEventsContent.additionalData);
}
export interface SimulationEventsContent extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Actual percentage of users who fell for the simulated attack in an attack simulation and training campaign.
     */
    compromisedRate?: number;
    /**
     * List of simulation events in an attack simulation and training campaign.
     */
    events?: SimulationEvent[];
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
