// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMacOSIncludedAppFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMacOSIncludedApp;
}
export function deserializeIntoMacOSIncludedApp(macOSIncludedApp: MacOSIncludedApp | undefined = {} as MacOSIncludedApp) : Record<string, (node: ParseNode) => void> {
    return {
        "bundleId": n => { macOSIncludedApp.bundleId = n.getStringValue(); },
        "bundleVersion": n => { macOSIncludedApp.bundleVersion = n.getStringValue(); },
        "@odata.type": n => { macOSIncludedApp.odataType = n.getStringValue(); },
    }
}
export interface MacOSIncludedApp extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The bundleId of the app. This maps to the CFBundleIdentifier in the app's bundle configuration.
     */
    bundleId?: string;
    /**
     * The version of the app. This maps to the CFBundleShortVersion in the app's bundle configuration.
     */
    bundleVersion?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeMacOSIncludedApp(writer: SerializationWriter, macOSIncludedApp: MacOSIncludedApp | undefined = {} as MacOSIncludedApp) : void {
    writer.writeStringValue("bundleId", macOSIncludedApp.bundleId);
    writer.writeStringValue("bundleVersion", macOSIncludedApp.bundleVersion);
    writer.writeStringValue("@odata.type", macOSIncludedApp.odataType);
    writer.writeAdditionalData(macOSIncludedApp.additionalData);
}
// tslint:enable
// eslint-enable
