// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceExchangeAccessStateSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceExchangeAccessStateSummary;
}
export function deserializeIntoDeviceExchangeAccessStateSummary(deviceExchangeAccessStateSummary: DeviceExchangeAccessStateSummary | undefined = {} as DeviceExchangeAccessStateSummary) : Record<string, (node: ParseNode) => void> {
    return {
        "allowedDeviceCount": n => { deviceExchangeAccessStateSummary.allowedDeviceCount = n.getNumberValue(); },
        "blockedDeviceCount": n => { deviceExchangeAccessStateSummary.blockedDeviceCount = n.getNumberValue(); },
        "@odata.type": n => { deviceExchangeAccessStateSummary.odataType = n.getStringValue(); },
        "quarantinedDeviceCount": n => { deviceExchangeAccessStateSummary.quarantinedDeviceCount = n.getNumberValue(); },
        "unavailableDeviceCount": n => { deviceExchangeAccessStateSummary.unavailableDeviceCount = n.getNumberValue(); },
        "unknownDeviceCount": n => { deviceExchangeAccessStateSummary.unknownDeviceCount = n.getNumberValue(); },
    }
}
export interface DeviceExchangeAccessStateSummary extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Total count of devices with Exchange Access State: Allowed.
     */
    allowedDeviceCount?: number;
    /**
     * Total count of devices with Exchange Access State: Blocked.
     */
    blockedDeviceCount?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Total count of devices with Exchange Access State: Quarantined.
     */
    quarantinedDeviceCount?: number;
    /**
     * Total count of devices for which no Exchange Access State could be found.
     */
    unavailableDeviceCount?: number;
    /**
     * Total count of devices with Exchange Access State: Unknown.
     */
    unknownDeviceCount?: number;
}
export function serializeDeviceExchangeAccessStateSummary(writer: SerializationWriter, deviceExchangeAccessStateSummary: DeviceExchangeAccessStateSummary | undefined = {} as DeviceExchangeAccessStateSummary) : void {
    writer.writeNumberValue("allowedDeviceCount", deviceExchangeAccessStateSummary.allowedDeviceCount);
    writer.writeNumberValue("blockedDeviceCount", deviceExchangeAccessStateSummary.blockedDeviceCount);
    writer.writeStringValue("@odata.type", deviceExchangeAccessStateSummary.odataType);
    writer.writeNumberValue("quarantinedDeviceCount", deviceExchangeAccessStateSummary.quarantinedDeviceCount);
    writer.writeNumberValue("unavailableDeviceCount", deviceExchangeAccessStateSummary.unavailableDeviceCount);
    writer.writeNumberValue("unknownDeviceCount", deviceExchangeAccessStateSummary.unknownDeviceCount);
    writer.writeAdditionalData(deviceExchangeAccessStateSummary.additionalData);
}
// tslint:enable
// eslint-enable
