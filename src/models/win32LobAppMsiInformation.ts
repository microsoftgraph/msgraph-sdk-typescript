// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { Win32LobAppMsiPackageType } from './win32LobAppMsiPackageType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWin32LobAppMsiInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWin32LobAppMsiInformation;
}
export function deserializeIntoWin32LobAppMsiInformation(win32LobAppMsiInformation: Win32LobAppMsiInformation | undefined = {} as Win32LobAppMsiInformation) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { win32LobAppMsiInformation.odataType = n.getStringValue(); },
        "packageType": n => { win32LobAppMsiInformation.packageType = n.getEnumValue<Win32LobAppMsiPackageType>(Win32LobAppMsiPackageType); },
        "productCode": n => { win32LobAppMsiInformation.productCode = n.getStringValue(); },
        "productName": n => { win32LobAppMsiInformation.productName = n.getStringValue(); },
        "productVersion": n => { win32LobAppMsiInformation.productVersion = n.getStringValue(); },
        "publisher": n => { win32LobAppMsiInformation.publisher = n.getStringValue(); },
        "requiresReboot": n => { win32LobAppMsiInformation.requiresReboot = n.getBooleanValue(); },
        "upgradeCode": n => { win32LobAppMsiInformation.upgradeCode = n.getStringValue(); },
    }
}
export function serializeWin32LobAppMsiInformation(writer: SerializationWriter, win32LobAppMsiInformation: Win32LobAppMsiInformation | undefined = {} as Win32LobAppMsiInformation) : void {
        writer.writeStringValue("@odata.type", win32LobAppMsiInformation.odataType);
        writer.writeEnumValue<Win32LobAppMsiPackageType>("packageType", win32LobAppMsiInformation.packageType);
        writer.writeStringValue("productCode", win32LobAppMsiInformation.productCode);
        writer.writeStringValue("productName", win32LobAppMsiInformation.productName);
        writer.writeStringValue("productVersion", win32LobAppMsiInformation.productVersion);
        writer.writeStringValue("publisher", win32LobAppMsiInformation.publisher);
        writer.writeBooleanValue("requiresReboot", win32LobAppMsiInformation.requiresReboot);
        writer.writeStringValue("upgradeCode", win32LobAppMsiInformation.upgradeCode);
        writer.writeAdditionalData(win32LobAppMsiInformation.additionalData);
}
export interface Win32LobAppMsiInformation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Indicates the package type of an MSI Win32LobApp.
     */
    packageType?: Win32LobAppMsiPackageType;
    /**
     * The MSI product code.
     */
    productCode?: string;
    /**
     * The MSI product name.
     */
    productName?: string;
    /**
     * The MSI product version.
     */
    productVersion?: string;
    /**
     * The MSI publisher.
     */
    publisher?: string;
    /**
     * Whether the MSI app requires the machine to reboot to complete installation.
     */
    requiresReboot?: boolean;
    /**
     * The MSI upgrade code.
     */
    upgradeCode?: string;
}
// tslint:enable
// eslint-enable
