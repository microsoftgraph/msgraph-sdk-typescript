// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from './json';
import { createWorkbookChartAxisFormatFromDiscriminatorValue, serializeWorkbookChartAxisFormat, type WorkbookChartAxisFormat } from './workbookChartAxisFormat';
import { createWorkbookChartAxisTitleFromDiscriminatorValue, serializeWorkbookChartAxisTitle, type WorkbookChartAxisTitle } from './workbookChartAxisTitle';
import { createWorkbookChartGridlinesFromDiscriminatorValue, serializeWorkbookChartGridlines, type WorkbookChartGridlines } from './workbookChartGridlines';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookChartAxisFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookChartAxis;
}
export function deserializeIntoWorkbookChartAxis(workbookChartAxis: WorkbookChartAxis | undefined = {} as WorkbookChartAxis) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookChartAxis),
        "format": n => { workbookChartAxis.format = n.getObjectValue<WorkbookChartAxisFormat>(createWorkbookChartAxisFormatFromDiscriminatorValue); },
        "majorGridlines": n => { workbookChartAxis.majorGridlines = n.getObjectValue<WorkbookChartGridlines>(createWorkbookChartGridlinesFromDiscriminatorValue); },
        "majorUnit": n => { workbookChartAxis.majorUnit = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "maximum": n => { workbookChartAxis.maximum = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "minimum": n => { workbookChartAxis.minimum = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "minorGridlines": n => { workbookChartAxis.minorGridlines = n.getObjectValue<WorkbookChartGridlines>(createWorkbookChartGridlinesFromDiscriminatorValue); },
        "minorUnit": n => { workbookChartAxis.minorUnit = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "title": n => { workbookChartAxis.title = n.getObjectValue<WorkbookChartAxisTitle>(createWorkbookChartAxisTitleFromDiscriminatorValue); },
    }
}
export function serializeWorkbookChartAxis(writer: SerializationWriter, workbookChartAxis: WorkbookChartAxis | undefined = {} as WorkbookChartAxis) : void {
        serializeEntity(writer, workbookChartAxis)
        writer.writeObjectValue<WorkbookChartAxisFormat>("format", workbookChartAxis.format, );
        writer.writeObjectValue<WorkbookChartGridlines>("majorGridlines", workbookChartAxis.majorGridlines, );
        writer.writeObjectValue<Json>("majorUnit", workbookChartAxis.majorUnit, );
        writer.writeObjectValue<Json>("maximum", workbookChartAxis.maximum, );
        writer.writeObjectValue<Json>("minimum", workbookChartAxis.minimum, );
        writer.writeObjectValue<WorkbookChartGridlines>("minorGridlines", workbookChartAxis.minorGridlines, );
        writer.writeObjectValue<Json>("minorUnit", workbookChartAxis.minorUnit, );
        writer.writeObjectValue<WorkbookChartAxisTitle>("title", workbookChartAxis.title, );
}
export interface WorkbookChartAxis extends Entity, Parsable {
    /**
     * Represents the formatting of a chart object, which includes line and font formatting. Read-only.
     */
    format?: WorkbookChartAxisFormat;
    /**
     * Returns a gridlines object that represents the major gridlines for the specified axis. Read-only.
     */
    majorGridlines?: WorkbookChartGridlines;
    /**
     * Represents the interval between two major tick marks. Can be set to a numeric value or an empty string.  The returned value is always a number.
     */
    majorUnit?: Json;
    /**
     * Represents the maximum value on the value axis.  Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.
     */
    maximum?: Json;
    /**
     * Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number.
     */
    minimum?: Json;
    /**
     * Returns a Gridlines object that represents the minor gridlines for the specified axis. Read-only.
     */
    minorGridlines?: WorkbookChartGridlines;
    /**
     * Represents the interval between two minor tick marks. 'Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number.
     */
    minorUnit?: Json;
    /**
     * Represents the axis title. Read-only.
     */
    title?: WorkbookChartAxisTitle;
}
// tslint:enable
// eslint-enable
