// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDomainDnsRecord, serializeDomainDnsRecord, type DomainDnsRecord } from './domainDnsRecord';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDomainDnsMxRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDomainDnsMxRecord;
}
export function deserializeIntoDomainDnsMxRecord(domainDnsMxRecord: DomainDnsMxRecord | undefined = {} as DomainDnsMxRecord) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDomainDnsRecord(domainDnsMxRecord),
        "mailExchange": n => { domainDnsMxRecord.mailExchange = n.getStringValue(); },
        "preference": n => { domainDnsMxRecord.preference = n.getNumberValue(); },
    }
}
export interface DomainDnsMxRecord extends DomainDnsRecord, Parsable {
    /**
     * Value used when configuring the answer/destination/value of the MX record at the DNS host.
     */
    mailExchange?: string;
    /**
     * Value used when configuring the Preference/Priority property of the MX record at the DNS host.
     */
    preference?: number;
}
export function serializeDomainDnsMxRecord(writer: SerializationWriter, domainDnsMxRecord: DomainDnsMxRecord | undefined = {} as DomainDnsMxRecord) : void {
        serializeDomainDnsRecord(writer, domainDnsMxRecord)
        writer.writeStringValue("mailExchange", domainDnsMxRecord.mailExchange);
        writer.writeNumberValue("preference", domainDnsMxRecord.preference);
}
// tslint:enable
// eslint-enable
