// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookWorksheetProtectionOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookWorksheetProtectionOptions;
}
export function deserializeIntoWorkbookWorksheetProtectionOptions(workbookWorksheetProtectionOptions: WorkbookWorksheetProtectionOptions | undefined = {} as WorkbookWorksheetProtectionOptions) : Record<string, (node: ParseNode) => void> {
    return {
        "allowAutoFilter": n => { workbookWorksheetProtectionOptions.allowAutoFilter = n.getBooleanValue(); },
        "allowDeleteColumns": n => { workbookWorksheetProtectionOptions.allowDeleteColumns = n.getBooleanValue(); },
        "allowDeleteRows": n => { workbookWorksheetProtectionOptions.allowDeleteRows = n.getBooleanValue(); },
        "allowFormatCells": n => { workbookWorksheetProtectionOptions.allowFormatCells = n.getBooleanValue(); },
        "allowFormatColumns": n => { workbookWorksheetProtectionOptions.allowFormatColumns = n.getBooleanValue(); },
        "allowFormatRows": n => { workbookWorksheetProtectionOptions.allowFormatRows = n.getBooleanValue(); },
        "allowInsertColumns": n => { workbookWorksheetProtectionOptions.allowInsertColumns = n.getBooleanValue(); },
        "allowInsertHyperlinks": n => { workbookWorksheetProtectionOptions.allowInsertHyperlinks = n.getBooleanValue(); },
        "allowInsertRows": n => { workbookWorksheetProtectionOptions.allowInsertRows = n.getBooleanValue(); },
        "allowPivotTables": n => { workbookWorksheetProtectionOptions.allowPivotTables = n.getBooleanValue(); },
        "allowSort": n => { workbookWorksheetProtectionOptions.allowSort = n.getBooleanValue(); },
        "@odata.type": n => { workbookWorksheetProtectionOptions.odataType = n.getStringValue(); },
    }
}
export function serializeWorkbookWorksheetProtectionOptions(writer: SerializationWriter, workbookWorksheetProtectionOptions: WorkbookWorksheetProtectionOptions | undefined = {} as WorkbookWorksheetProtectionOptions) : void {
    writer.writeBooleanValue("allowAutoFilter", workbookWorksheetProtectionOptions.allowAutoFilter);
    writer.writeBooleanValue("allowDeleteColumns", workbookWorksheetProtectionOptions.allowDeleteColumns);
    writer.writeBooleanValue("allowDeleteRows", workbookWorksheetProtectionOptions.allowDeleteRows);
    writer.writeBooleanValue("allowFormatCells", workbookWorksheetProtectionOptions.allowFormatCells);
    writer.writeBooleanValue("allowFormatColumns", workbookWorksheetProtectionOptions.allowFormatColumns);
    writer.writeBooleanValue("allowFormatRows", workbookWorksheetProtectionOptions.allowFormatRows);
    writer.writeBooleanValue("allowInsertColumns", workbookWorksheetProtectionOptions.allowInsertColumns);
    writer.writeBooleanValue("allowInsertHyperlinks", workbookWorksheetProtectionOptions.allowInsertHyperlinks);
    writer.writeBooleanValue("allowInsertRows", workbookWorksheetProtectionOptions.allowInsertRows);
    writer.writeBooleanValue("allowPivotTables", workbookWorksheetProtectionOptions.allowPivotTables);
    writer.writeBooleanValue("allowSort", workbookWorksheetProtectionOptions.allowSort);
    writer.writeStringValue("@odata.type", workbookWorksheetProtectionOptions.odataType);
    writer.writeAdditionalData(workbookWorksheetProtectionOptions.additionalData);
}
export interface WorkbookWorksheetProtectionOptions extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Represents the worksheet protection option of allowing using auto filter feature.
     */
    allowAutoFilter?: boolean;
    /**
     * Represents the worksheet protection option of allowing deleting columns.
     */
    allowDeleteColumns?: boolean;
    /**
     * Represents the worksheet protection option of allowing deleting rows.
     */
    allowDeleteRows?: boolean;
    /**
     * Represents the worksheet protection option of allowing formatting cells.
     */
    allowFormatCells?: boolean;
    /**
     * Represents the worksheet protection option of allowing formatting columns.
     */
    allowFormatColumns?: boolean;
    /**
     * Represents the worksheet protection option of allowing formatting rows.
     */
    allowFormatRows?: boolean;
    /**
     * Represents the worksheet protection option of allowing inserting columns.
     */
    allowInsertColumns?: boolean;
    /**
     * Represents the worksheet protection option of allowing inserting hyperlinks.
     */
    allowInsertHyperlinks?: boolean;
    /**
     * Represents the worksheet protection option of allowing inserting rows.
     */
    allowInsertRows?: boolean;
    /**
     * Represents the worksheet protection option of allowing using pivot table feature.
     */
    allowPivotTables?: boolean;
    /**
     * Represents the worksheet protection option of allowing using sort feature.
     */
    allowSort?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
