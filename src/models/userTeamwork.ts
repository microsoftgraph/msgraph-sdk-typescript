// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAssociatedTeamInfoFromDiscriminatorValue, serializeAssociatedTeamInfo, type AssociatedTeamInfo } from './associatedTeamInfo';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createUserScopeTeamsAppInstallationFromDiscriminatorValue, serializeUserScopeTeamsAppInstallation, type UserScopeTeamsAppInstallation } from './userScopeTeamsAppInstallation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserTeamworkFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserTeamwork;
}
export function deserializeIntoUserTeamwork(userTeamwork: UserTeamwork | undefined = {} as UserTeamwork) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userTeamwork),
        "associatedTeams": n => { userTeamwork.associatedTeams = n.getCollectionOfObjectValues<AssociatedTeamInfo>(createAssociatedTeamInfoFromDiscriminatorValue); },
        "installedApps": n => { userTeamwork.installedApps = n.getCollectionOfObjectValues<UserScopeTeamsAppInstallation>(createUserScopeTeamsAppInstallationFromDiscriminatorValue); },
    }
}
export function serializeUserTeamwork(writer: SerializationWriter, userTeamwork: UserTeamwork | undefined = {} as UserTeamwork) : void {
        serializeEntity(writer, userTeamwork)
        writer.writeCollectionOfObjectValues<AssociatedTeamInfo>("associatedTeams", userTeamwork.associatedTeams, serializeAssociatedTeamInfo);
        writer.writeCollectionOfObjectValues<UserScopeTeamsAppInstallation>("installedApps", userTeamwork.installedApps, serializeUserScopeTeamsAppInstallation);
}
export interface UserTeamwork extends Entity, Parsable {
    /**
     * The list of associatedTeamInfo objects that a user is associated with.
     */
    associatedTeams?: AssociatedTeamInfo[];
    /**
     * The apps installed in the personal scope of this user.
     */
    installedApps?: UserScopeTeamsAppInstallation[];
}
// tslint:enable
// eslint-enable
