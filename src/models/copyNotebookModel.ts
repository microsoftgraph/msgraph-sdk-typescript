// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { createNotebookLinksFromDiscriminatorValue, serializeNotebookLinks, type NotebookLinks } from './notebookLinks';
import { OnenoteUserRole } from './onenoteUserRole';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CopyNotebookModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The createdBy property
     */
    createdBy?: string;
    /**
     * The createdByIdentity property
     */
    createdByIdentity?: IdentitySet;
    /**
     * The createdTime property
     */
    createdTime?: Date;
    /**
     * The id property
     */
    id?: string;
    /**
     * The isDefault property
     */
    isDefault?: boolean;
    /**
     * The isShared property
     */
    isShared?: boolean;
    /**
     * The lastModifiedBy property
     */
    lastModifiedBy?: string;
    /**
     * The lastModifiedByIdentity property
     */
    lastModifiedByIdentity?: IdentitySet;
    /**
     * The lastModifiedTime property
     */
    lastModifiedTime?: Date;
    /**
     * The links property
     */
    links?: NotebookLinks;
    /**
     * The name property
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The sectionGroupsUrl property
     */
    sectionGroupsUrl?: string;
    /**
     * The sectionsUrl property
     */
    sectionsUrl?: string;
    /**
     * The self property
     */
    self?: string;
    /**
     * The userRole property
     */
    userRole?: OnenoteUserRole;
}
export function createCopyNotebookModelFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCopyNotebookModel;
}
export function deserializeIntoCopyNotebookModel(copyNotebookModel: CopyNotebookModel | undefined = {} as CopyNotebookModel) : Record<string, (node: ParseNode) => void> {
    return {
        "createdBy": n => { copyNotebookModel.createdBy = n.getStringValue(); },
        "createdByIdentity": n => { copyNotebookModel.createdByIdentity = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdTime": n => { copyNotebookModel.createdTime = n.getDateValue(); },
        "id": n => { copyNotebookModel.id = n.getStringValue(); },
        "isDefault": n => { copyNotebookModel.isDefault = n.getBooleanValue(); },
        "isShared": n => { copyNotebookModel.isShared = n.getBooleanValue(); },
        "lastModifiedBy": n => { copyNotebookModel.lastModifiedBy = n.getStringValue(); },
        "lastModifiedByIdentity": n => { copyNotebookModel.lastModifiedByIdentity = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedTime": n => { copyNotebookModel.lastModifiedTime = n.getDateValue(); },
        "links": n => { copyNotebookModel.links = n.getObjectValue<NotebookLinks>(createNotebookLinksFromDiscriminatorValue); },
        "name": n => { copyNotebookModel.name = n.getStringValue(); },
        "@odata.type": n => { copyNotebookModel.odataType = n.getStringValue(); },
        "sectionGroupsUrl": n => { copyNotebookModel.sectionGroupsUrl = n.getStringValue(); },
        "sectionsUrl": n => { copyNotebookModel.sectionsUrl = n.getStringValue(); },
        "self": n => { copyNotebookModel.self = n.getStringValue(); },
        "userRole": n => { copyNotebookModel.userRole = n.getEnumValue<OnenoteUserRole>(OnenoteUserRole); },
    }
}
export function serializeCopyNotebookModel(writer: SerializationWriter, copyNotebookModel: CopyNotebookModel | undefined = {} as CopyNotebookModel) : void {
    writer.writeStringValue("createdBy", copyNotebookModel.createdBy);
    writer.writeObjectValue<IdentitySet>("createdByIdentity", copyNotebookModel.createdByIdentity, serializeIdentitySet);
    writer.writeDateValue("createdTime", copyNotebookModel.createdTime);
    writer.writeStringValue("id", copyNotebookModel.id);
    writer.writeBooleanValue("isDefault", copyNotebookModel.isDefault);
    writer.writeBooleanValue("isShared", copyNotebookModel.isShared);
    writer.writeStringValue("lastModifiedBy", copyNotebookModel.lastModifiedBy);
    writer.writeObjectValue<IdentitySet>("lastModifiedByIdentity", copyNotebookModel.lastModifiedByIdentity, serializeIdentitySet);
    writer.writeDateValue("lastModifiedTime", copyNotebookModel.lastModifiedTime);
    writer.writeObjectValue<NotebookLinks>("links", copyNotebookModel.links, serializeNotebookLinks);
    writer.writeStringValue("name", copyNotebookModel.name);
    writer.writeStringValue("@odata.type", copyNotebookModel.odataType);
    writer.writeStringValue("sectionGroupsUrl", copyNotebookModel.sectionGroupsUrl);
    writer.writeStringValue("sectionsUrl", copyNotebookModel.sectionsUrl);
    writer.writeStringValue("self", copyNotebookModel.self);
    writer.writeEnumValue<OnenoteUserRole>("userRole", copyNotebookModel.userRole);
    writer.writeAdditionalData(copyNotebookModel.additionalData);
}
// tslint:enable
// eslint-enable
