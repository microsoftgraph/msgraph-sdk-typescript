// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoIdentityProviderBase, serializeIdentityProviderBase, type IdentityProviderBase } from './identityProviderBase';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BuiltInIdentityProvider extends IdentityProviderBase, Parsable {
    /**
     * The identity provider type. For a B2B scenario, possible values: AADSignup, MicrosoftAccount, EmailOTP. Required.
     */
    identityProviderType?: string;
}
export function createBuiltInIdentityProviderFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBuiltInIdentityProvider;
}
export function deserializeIntoBuiltInIdentityProvider(builtInIdentityProvider: BuiltInIdentityProvider | undefined = {} as BuiltInIdentityProvider) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentityProviderBase(builtInIdentityProvider),
        "identityProviderType": n => { builtInIdentityProvider.identityProviderType = n.getStringValue(); },
    }
}
export function serializeBuiltInIdentityProvider(writer: SerializationWriter, builtInIdentityProvider: BuiltInIdentityProvider | undefined = {} as BuiltInIdentityProvider) : void {
        serializeIdentityProviderBase(writer, builtInIdentityProvider)
        writer.writeStringValue("identityProviderType", builtInIdentityProvider.identityProviderType);
}
// tslint:enable
// eslint-enable
