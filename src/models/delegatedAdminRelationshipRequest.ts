// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { DelegatedAdminRelationshipRequestAction } from './delegatedAdminRelationshipRequestAction';
import { DelegatedAdminRelationshipRequestStatus } from './delegatedAdminRelationshipRequestStatus';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDelegatedAdminRelationshipRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDelegatedAdminRelationshipRequest;
}
export interface DelegatedAdminRelationshipRequest extends Entity, Parsable {
    /**
     * The action property
     */
    action?: DelegatedAdminRelationshipRequestAction;
    /**
     * The date and time in ISO 8601 format and in UTC time when the relationship request was created. Read-only.
     */
    createdDateTime?: Date;
    /**
     * The date and time in ISO 8601 format and UTC time when this relationship request was last modified. Read-only.
     */
    lastModifiedDateTime?: Date;
    /**
     * The status of the request. Read-only. The possible values are: created, pending, succeeded, failed, unknownFutureValue.
     */
    status?: DelegatedAdminRelationshipRequestStatus;
}
export function deserializeIntoDelegatedAdminRelationshipRequest(delegatedAdminRelationshipRequest: DelegatedAdminRelationshipRequest | undefined = {} as DelegatedAdminRelationshipRequest) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(delegatedAdminRelationshipRequest),
        "action": n => { delegatedAdminRelationshipRequest.action = n.getEnumValue<DelegatedAdminRelationshipRequestAction>(DelegatedAdminRelationshipRequestAction); },
        "createdDateTime": n => { delegatedAdminRelationshipRequest.createdDateTime = n.getDateValue(); },
        "lastModifiedDateTime": n => { delegatedAdminRelationshipRequest.lastModifiedDateTime = n.getDateValue(); },
        "status": n => { delegatedAdminRelationshipRequest.status = n.getEnumValue<DelegatedAdminRelationshipRequestStatus>(DelegatedAdminRelationshipRequestStatus); },
    }
}
export function serializeDelegatedAdminRelationshipRequest(writer: SerializationWriter, delegatedAdminRelationshipRequest: DelegatedAdminRelationshipRequest | undefined = {} as DelegatedAdminRelationshipRequest) : void {
    serializeEntity(writer, delegatedAdminRelationshipRequest)
    writer.writeEnumValue<DelegatedAdminRelationshipRequestAction>("action", delegatedAdminRelationshipRequest.action);
    writer.writeDateValue("createdDateTime", delegatedAdminRelationshipRequest.createdDateTime);
    writer.writeDateValue("lastModifiedDateTime", delegatedAdminRelationshipRequest.lastModifiedDateTime);
    writer.writeEnumValue<DelegatedAdminRelationshipRequestStatus>("status", delegatedAdminRelationshipRequest.status);
}
// tslint:enable
// eslint-enable
