// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDisplayNameLocalizationFromDiscriminatorValue, serializeDisplayNameLocalization, type DisplayNameLocalization } from './displayNameLocalization';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ColumnValidation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Default BCP 47 language tag for the description.
     */
    defaultLanguage?: string;
    /**
     * Localized messages that explain what is needed for this column's value to be considered valid. User will be prompted with this message if validation fails.
     */
    descriptions?: DisplayNameLocalization[];
    /**
     * The formula to validate column value. For examples, see Examples of common formulas in lists.
     */
    formula?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createColumnValidationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoColumnValidation;
}
export function deserializeIntoColumnValidation(columnValidation: ColumnValidation | undefined = {} as ColumnValidation) : Record<string, (node: ParseNode) => void> {
    return {
        "defaultLanguage": n => { columnValidation.defaultLanguage = n.getStringValue(); },
        "descriptions": n => { columnValidation.descriptions = n.getCollectionOfObjectValues<DisplayNameLocalization>(createDisplayNameLocalizationFromDiscriminatorValue); },
        "formula": n => { columnValidation.formula = n.getStringValue(); },
        "@odata.type": n => { columnValidation.odataType = n.getStringValue(); },
    }
}
export function serializeColumnValidation(writer: SerializationWriter, columnValidation: ColumnValidation | undefined = {} as ColumnValidation) : void {
        writer.writeStringValue("defaultLanguage", columnValidation.defaultLanguage);
        writer.writeCollectionOfObjectValues<DisplayNameLocalization>("descriptions", columnValidation.descriptions, );
        writer.writeStringValue("formula", columnValidation.formula);
        writer.writeStringValue("@odata.type", columnValidation.odataType);
        writer.writeAdditionalData(columnValidation.additionalData);
}
// tslint:enable
// eslint-enable
