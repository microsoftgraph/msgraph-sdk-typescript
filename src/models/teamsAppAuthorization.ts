// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createTeamsAppPermissionSetFromDiscriminatorValue, serializeTeamsAppPermissionSet, type TeamsAppPermissionSet } from './teamsAppPermissionSet';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamsAppAuthorizationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamsAppAuthorization;
}
export function deserializeIntoTeamsAppAuthorization(teamsAppAuthorization: TeamsAppAuthorization | undefined = {} as TeamsAppAuthorization) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { teamsAppAuthorization.odataType = n.getStringValue(); },
        "requiredPermissionSet": n => { teamsAppAuthorization.requiredPermissionSet = n.getObjectValue<TeamsAppPermissionSet>(createTeamsAppPermissionSetFromDiscriminatorValue); },
    }
}
export function serializeTeamsAppAuthorization(writer: SerializationWriter, teamsAppAuthorization: TeamsAppAuthorization | undefined = {} as TeamsAppAuthorization) : void {
        writer.writeStringValue("@odata.type", teamsAppAuthorization.odataType);
        writer.writeObjectValue<TeamsAppPermissionSet>("requiredPermissionSet", teamsAppAuthorization.requiredPermissionSet, );
        writer.writeAdditionalData(teamsAppAuthorization.additionalData);
}
export interface TeamsAppAuthorization extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Set of permissions required by the teamsApp.
     */
    requiredPermissionSet?: TeamsAppPermissionSet;
}
// tslint:enable
// eslint-enable
