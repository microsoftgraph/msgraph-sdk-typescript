// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createEducationItemBodyFromDiscriminatorValue, serializeEducationItemBody, type EducationItemBody } from './educationItemBody';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRubricCriterionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRubricCriterion;
}
export function deserializeIntoRubricCriterion(rubricCriterion: RubricCriterion | undefined = {} as RubricCriterion) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { rubricCriterion.description = n.getObjectValue<EducationItemBody>(createEducationItemBodyFromDiscriminatorValue); },
        "@odata.type": n => { rubricCriterion.odataType = n.getStringValue(); },
    }
}
export interface RubricCriterion extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The description of this criterion.
     */
    description?: EducationItemBody;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeRubricCriterion(writer: SerializationWriter, rubricCriterion: RubricCriterion | undefined = {} as RubricCriterion) : void {
        writer.writeObjectValue<EducationItemBody>("description", rubricCriterion.description, );
        writer.writeStringValue("@odata.type", rubricCriterion.odataType);
        writer.writeAdditionalData(rubricCriterion.additionalData);
}
// tslint:enable
// eslint-enable
