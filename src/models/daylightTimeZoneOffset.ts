// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoStandardTimeZoneOffset, serializeStandardTimeZoneOffset, type StandardTimeZoneOffset } from './standardTimeZoneOffset';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDaylightTimeZoneOffsetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDaylightTimeZoneOffset;
}
export interface DaylightTimeZoneOffset extends Parsable, StandardTimeZoneOffset {
    /**
     * The time offset from Coordinated Universal Time (UTC) for daylight saving time. This value is in minutes.
     */
    daylightBias?: number;
}
export function deserializeIntoDaylightTimeZoneOffset(daylightTimeZoneOffset: DaylightTimeZoneOffset | undefined = {} as DaylightTimeZoneOffset) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoStandardTimeZoneOffset(daylightTimeZoneOffset),
        "daylightBias": n => { daylightTimeZoneOffset.daylightBias = n.getNumberValue(); },
    }
}
export function serializeDaylightTimeZoneOffset(writer: SerializationWriter, daylightTimeZoneOffset: DaylightTimeZoneOffset | undefined = {} as DaylightTimeZoneOffset) : void {
    serializeStandardTimeZoneOffset(writer, daylightTimeZoneOffset)
    writer.writeNumberValue("daylightBias", daylightTimeZoneOffset.daylightBias);
}
// tslint:enable
// eslint-enable
