import { deserializeIntoDictionary, serializeDictionary, type Dictionary } from './dictionary';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createResultTemplateDictionaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoResultTemplateDictionary;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoResultTemplateDictionary(resultTemplateDictionary: ResultTemplateDictionary | undefined = {} as ResultTemplateDictionary) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDictionary(resultTemplateDictionary),
    }
}
export interface ResultTemplateDictionary extends Dictionary, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeResultTemplateDictionary(writer: SerializationWriter, resultTemplateDictionary: ResultTemplateDictionary | undefined = {} as ResultTemplateDictionary) : void {
        serializeDictionary(writer, resultTemplateDictionary)
}
