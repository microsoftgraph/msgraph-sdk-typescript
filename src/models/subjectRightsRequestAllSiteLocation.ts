// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoSubjectRightsRequestSiteLocation, serializeSubjectRightsRequestSiteLocation, type SubjectRightsRequestSiteLocation } from './subjectRightsRequestSiteLocation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSubjectRightsRequestAllSiteLocationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSubjectRightsRequestAllSiteLocation;
}
export function deserializeIntoSubjectRightsRequestAllSiteLocation(subjectRightsRequestAllSiteLocation: SubjectRightsRequestAllSiteLocation | undefined = {} as SubjectRightsRequestAllSiteLocation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSubjectRightsRequestSiteLocation(subjectRightsRequestAllSiteLocation),
    }
}
export function serializeSubjectRightsRequestAllSiteLocation(writer: SerializationWriter, subjectRightsRequestAllSiteLocation: SubjectRightsRequestAllSiteLocation | undefined = {} as SubjectRightsRequestAllSiteLocation) : void {
    serializeSubjectRightsRequestSiteLocation(writer, subjectRightsRequestAllSiteLocation)
}
export interface SubjectRightsRequestAllSiteLocation extends Parsable, SubjectRightsRequestSiteLocation {
}
// tslint:enable
// eslint-enable
