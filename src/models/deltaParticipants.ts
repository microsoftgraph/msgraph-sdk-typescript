// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createParticipantFromDiscriminatorValue, serializeParticipant, type Participant } from './participant';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeltaParticipantsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeltaParticipants;
}
export interface DeltaParticipants extends Entity, Parsable {
    /**
     * The participants property
     */
    participants?: Participant[];
    /**
     * The sequenceNumber property
     */
    sequenceNumber?: number;
}
export function deserializeIntoDeltaParticipants(deltaParticipants: DeltaParticipants | undefined = {} as DeltaParticipants) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deltaParticipants),
        "participants": n => { deltaParticipants.participants = n.getCollectionOfObjectValues<Participant>(createParticipantFromDiscriminatorValue); },
        "sequenceNumber": n => { deltaParticipants.sequenceNumber = n.getNumberValue(); },
    }
}
export function serializeDeltaParticipants(writer: SerializationWriter, deltaParticipants: DeltaParticipants | undefined = {} as DeltaParticipants) : void {
        serializeEntity(writer, deltaParticipants)
        writer.writeCollectionOfObjectValues<Participant>("participants", deltaParticipants.participants, serializeParticipant);
        writer.writeNumberValue("sequenceNumber", deltaParticipants.sequenceNumber);
}
// tslint:enable
// eslint-enable
