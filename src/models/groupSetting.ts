// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createSettingValueFromDiscriminatorValue, serializeSettingValue, type SettingValue } from './settingValue';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGroupSettingFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGroupSetting;
}
export function deserializeIntoGroupSetting(groupSetting: GroupSetting | undefined = {} as GroupSetting) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(groupSetting),
        "displayName": n => { groupSetting.displayName = n.getStringValue(); },
        "templateId": n => { groupSetting.templateId = n.getStringValue(); },
        "values": n => { groupSetting.values = n.getCollectionOfObjectValues<SettingValue>(createSettingValueFromDiscriminatorValue); },
    }
}
export interface GroupSetting extends Entity, Parsable {
    /**
     * Display name of this group of settings, which comes from the associated template.
     */
    displayName?: string;
    /**
     * Unique identifier for the tenant-level groupSettingTemplates object that's been customized for this group-level settings object. Read-only.
     */
    templateId?: string;
    /**
     * Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced groupSettingTemplates object.
     */
    values?: SettingValue[];
}
export function serializeGroupSetting(writer: SerializationWriter, groupSetting: GroupSetting | undefined = {} as GroupSetting) : void {
        serializeEntity(writer, groupSetting)
        writer.writeStringValue("displayName", groupSetting.displayName);
        writer.writeStringValue("templateId", groupSetting.templateId);
        writer.writeCollectionOfObjectValues<SettingValue>("values", groupSetting.values, );
}
// tslint:enable
// eslint-enable
