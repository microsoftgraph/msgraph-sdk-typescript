// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoConditionalAccessSessionControl, serializeConditionalAccessSessionControl, type ConditionalAccessSessionControl } from './conditionalAccessSessionControl';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApplicationEnforcedRestrictionsSessionControl extends ConditionalAccessSessionControl, Parsable {
}
export function createApplicationEnforcedRestrictionsSessionControlFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoApplicationEnforcedRestrictionsSessionControl;
}
export function deserializeIntoApplicationEnforcedRestrictionsSessionControl(applicationEnforcedRestrictionsSessionControl: ApplicationEnforcedRestrictionsSessionControl | undefined = {} as ApplicationEnforcedRestrictionsSessionControl) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoConditionalAccessSessionControl(applicationEnforcedRestrictionsSessionControl),
    }
}
export function serializeApplicationEnforcedRestrictionsSessionControl(writer: SerializationWriter, applicationEnforcedRestrictionsSessionControl: ApplicationEnforcedRestrictionsSessionControl | undefined = {} as ApplicationEnforcedRestrictionsSessionControl) : void {
        serializeConditionalAccessSessionControl(writer, applicationEnforcedRestrictionsSessionControl)
}
// tslint:enable
// eslint-enable
