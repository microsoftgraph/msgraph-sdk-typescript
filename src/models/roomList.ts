// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoPlace, serializePlace, type Place } from './place';
import { createRoomFromDiscriminatorValue, serializeRoom, type Room } from './room';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRoomListFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRoomList;
}
export function deserializeIntoRoomList(roomList: RoomList | undefined = {} as RoomList) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPlace(roomList),
        "emailAddress": n => { roomList.emailAddress = n.getStringValue(); },
        "rooms": n => { roomList.rooms = n.getCollectionOfObjectValues<Room>(createRoomFromDiscriminatorValue); },
    }
}
export interface RoomList extends Parsable, Place {
    /**
     * The email address of the room list.
     */
    emailAddress?: string;
    /**
     * The rooms property
     */
    rooms?: Room[];
}
export function serializeRoomList(writer: SerializationWriter, roomList: RoomList | undefined = {} as RoomList) : void {
        serializePlace(writer, roomList)
        writer.writeStringValue("emailAddress", roomList.emailAddress);
        writer.writeCollectionOfObjectValues<Room>("rooms", roomList.rooms, serializeRoom);
}
// tslint:enable
// eslint-enable
