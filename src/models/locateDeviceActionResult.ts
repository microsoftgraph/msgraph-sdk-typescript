import { deserializeIntoDeviceActionResult, serializeDeviceActionResult, type DeviceActionResult } from './deviceActionResult';
import { createDeviceGeoLocationFromDiscriminatorValue, serializeDeviceGeoLocation, type DeviceGeoLocation } from './deviceGeoLocation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createLocateDeviceActionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoLocateDeviceActionResult;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoLocateDeviceActionResult(locateDeviceActionResult: LocateDeviceActionResult | undefined = {} as LocateDeviceActionResult) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDeviceActionResult(locateDeviceActionResult),
        "deviceLocation": n => { locateDeviceActionResult.deviceLocation = n.getObjectValue<DeviceGeoLocation>(createDeviceGeoLocationFromDiscriminatorValue); },
    }
}
export interface LocateDeviceActionResult extends DeviceActionResult, Parsable {
    /**
     * device location
     */
    deviceLocation?: DeviceGeoLocation;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeLocateDeviceActionResult(writer: SerializationWriter, locateDeviceActionResult: LocateDeviceActionResult | undefined = {} as LocateDeviceActionResult) : void {
        serializeDeviceActionResult(writer, locateDeviceActionResult)
        writer.writeObjectValue<DeviceGeoLocation>("deviceLocation", locateDeviceActionResult.deviceLocation, );
}
