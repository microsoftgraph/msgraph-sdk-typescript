// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type PrinterCreateOperation } from './index';
import { deserializeIntoPrinterCreateOperation } from './printerCreateOperation';
import { createPrintOperationStatusFromDiscriminatorValue, serializePrintOperationStatus, type PrintOperationStatus } from './printOperationStatus';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrintOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.printerCreateOperation":
                    return deserializeIntoPrinterCreateOperation;
            }
        }
    }
    return deserializeIntoPrintOperation;
}
export function deserializeIntoPrintOperation(printOperation: PrintOperation | undefined = {} as PrintOperation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(printOperation),
        "createdDateTime": n => { printOperation.createdDateTime = n.getDateValue(); },
        "status": n => { printOperation.status = n.getObjectValue<PrintOperationStatus>(createPrintOperationStatusFromDiscriminatorValue); },
    }
}
export interface PrintOperation extends Entity, Parsable {
    /**
     * The DateTimeOffset when the operation was created. Read-only.
     */
    createdDateTime?: Date;
    /**
     * The status property
     */
    status?: PrintOperationStatus;
}
export function serializePrintOperation(writer: SerializationWriter, printOperation: PrintOperation | undefined = {} as PrintOperation) : void {
    serializeEntity(writer, printOperation)
    writer.writeDateValue("createdDateTime", printOperation.createdDateTime);
    writer.writeObjectValue<PrintOperationStatus>("status", printOperation.status, serializePrintOperationStatus);
}
// tslint:enable
// eslint-enable
