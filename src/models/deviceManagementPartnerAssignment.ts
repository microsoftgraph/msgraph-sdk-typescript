// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue, serializeDeviceAndAppManagementAssignmentTarget, type DeviceAndAppManagementAssignmentTarget } from './deviceAndAppManagementAssignmentTarget';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceManagementPartnerAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceManagementPartnerAssignment;
}
export function deserializeIntoDeviceManagementPartnerAssignment(deviceManagementPartnerAssignment: DeviceManagementPartnerAssignment | undefined = {} as DeviceManagementPartnerAssignment) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { deviceManagementPartnerAssignment.odataType = n.getStringValue(); },
        "target": n => { deviceManagementPartnerAssignment.target = n.getObjectValue<DeviceAndAppManagementAssignmentTarget>(createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue); },
    }
}
export interface DeviceManagementPartnerAssignment extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * User groups targeting for devices to be enrolled through partner.
     */
    target?: DeviceAndAppManagementAssignmentTarget;
}
export function serializeDeviceManagementPartnerAssignment(writer: SerializationWriter, deviceManagementPartnerAssignment: DeviceManagementPartnerAssignment | undefined = {} as DeviceManagementPartnerAssignment) : void {
        writer.writeStringValue("@odata.type", deviceManagementPartnerAssignment.odataType);
        writer.writeObjectValue<DeviceAndAppManagementAssignmentTarget>("target", deviceManagementPartnerAssignment.target, );
        writer.writeAdditionalData(deviceManagementPartnerAssignment.additionalData);
}
// tslint:enable
// eslint-enable
