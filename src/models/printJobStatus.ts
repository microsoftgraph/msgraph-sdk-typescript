// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { PrintJobProcessingState } from './printJobProcessingState';
import { PrintJobStateDetail } from './printJobStateDetail';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrintJobStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrintJobStatus;
}
export function deserializeIntoPrintJobStatus(printJobStatus: PrintJobStatus | undefined = {} as PrintJobStatus) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { printJobStatus.description = n.getStringValue(); },
        "details": n => { printJobStatus.details = n.getCollectionOfEnumValues<PrintJobStateDetail>(PrintJobStateDetail); },
        "isAcquiredByPrinter": n => { printJobStatus.isAcquiredByPrinter = n.getBooleanValue(); },
        "@odata.type": n => { printJobStatus.odataType = n.getStringValue(); },
        "state": n => { printJobStatus.state = n.getEnumValue<PrintJobProcessingState>(PrintJobProcessingState); },
    }
}
export interface PrintJobStatus extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * A human-readable description of the print job's current processing state. Read-only.
     */
    description?: string;
    /**
     * Additional details for print job state. Valid values are described in the following table. Read-only.
     */
    details?: PrintJobStateDetail[];
    /**
     * True if the job was acknowledged by a printer; false otherwise. Read-only.
     */
    isAcquiredByPrinter?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The state property
     */
    state?: PrintJobProcessingState;
}
export function serializePrintJobStatus(writer: SerializationWriter, printJobStatus: PrintJobStatus | undefined = {} as PrintJobStatus) : void {
        writer.writeStringValue("description", printJobStatus.description);
        if(printJobStatus.details)
        writer.writeEnumValue<PrintJobStateDetail>("details", ...printJobStatus.details);
        writer.writeBooleanValue("isAcquiredByPrinter", printJobStatus.isAcquiredByPrinter);
        writer.writeStringValue("@odata.type", printJobStatus.odataType);
        writer.writeEnumValue<PrintJobProcessingState>("state", printJobStatus.state);
        writer.writeAdditionalData(printJobStatus.additionalData);
}
// tslint:enable
// eslint-enable
