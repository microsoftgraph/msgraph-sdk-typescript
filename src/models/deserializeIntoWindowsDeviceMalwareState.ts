import {deserializeIntoEntity} from './deserializeIntoEntity';
import {WindowsDeviceMalwareState} from './windowsDeviceMalwareState';
import {WindowsMalwareCategory} from './windowsMalwareCategory';
import {WindowsMalwareExecutionState} from './windowsMalwareExecutionState';
import {WindowsMalwareSeverity} from './windowsMalwareSeverity';
import {WindowsMalwareState} from './windowsMalwareState';
import {WindowsMalwareThreatState} from './windowsMalwareThreatState';
import {Parsable, ParseNode, SerializationWriter} from '@microsoft/kiota-abstractions';

export function deserializeIntoWindowsDeviceMalwareState(windowsDeviceMalwareState: WindowsDeviceMalwareState | undefined = {} as WindowsDeviceMalwareState) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(windowsDeviceMalwareState),
        "additionalInformationUrl": n => { windowsDeviceMalwareState.additionalInformationUrl = n.getStringValue(); },
        "category": n => { windowsDeviceMalwareState.category = n.getEnumValue<WindowsMalwareCategory>(WindowsMalwareCategory); },
        "detectionCount": n => { windowsDeviceMalwareState.detectionCount = n.getNumberValue(); },
        "displayName": n => { windowsDeviceMalwareState.displayName = n.getStringValue(); },
        "executionState": n => { windowsDeviceMalwareState.executionState = n.getEnumValue<WindowsMalwareExecutionState>(WindowsMalwareExecutionState); },
        "initialDetectionDateTime": n => { windowsDeviceMalwareState.initialDetectionDateTime = n.getDateValue(); },
        "lastStateChangeDateTime": n => { windowsDeviceMalwareState.lastStateChangeDateTime = n.getDateValue(); },
        "severity": n => { windowsDeviceMalwareState.severity = n.getEnumValue<WindowsMalwareSeverity>(WindowsMalwareSeverity); },
        "state": n => { windowsDeviceMalwareState.state = n.getEnumValue<WindowsMalwareState>(WindowsMalwareState); },
        "threatState": n => { windowsDeviceMalwareState.threatState = n.getEnumValue<WindowsMalwareThreatState>(WindowsMalwareThreatState); },
    }
}
