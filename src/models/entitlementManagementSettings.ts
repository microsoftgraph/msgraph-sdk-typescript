// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AccessPackageExternalUserLifecycleAction } from './accessPackageExternalUserLifecycleAction';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Duration, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEntitlementManagementSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEntitlementManagementSettings;
}
export function deserializeIntoEntitlementManagementSettings(entitlementManagementSettings: EntitlementManagementSettings | undefined = {} as EntitlementManagementSettings) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(entitlementManagementSettings),
        "durationUntilExternalUserDeletedAfterBlocked": n => { entitlementManagementSettings.durationUntilExternalUserDeletedAfterBlocked = n.getDurationValue(); },
        "externalUserLifecycleAction": n => { entitlementManagementSettings.externalUserLifecycleAction = n.getEnumValue<AccessPackageExternalUserLifecycleAction>(AccessPackageExternalUserLifecycleAction); },
    }
}
export interface EntitlementManagementSettings extends Entity, Parsable {
    /**
     * If externalUserLifecycleAction is blockSignInAndDelete, the duration, typically many days, after an external user is blocked from sign in before their account is deleted.
     */
    durationUntilExternalUserDeletedAfterBlocked?: Duration;
    /**
     * Automatic action that the service should take when an external user's last access package assignment is removed. The possible values are: none, blockSignIn, blockSignInAndDelete, unknownFutureValue.
     */
    externalUserLifecycleAction?: AccessPackageExternalUserLifecycleAction;
}
export function serializeEntitlementManagementSettings(writer: SerializationWriter, entitlementManagementSettings: EntitlementManagementSettings | undefined = {} as EntitlementManagementSettings) : void {
    serializeEntity(writer, entitlementManagementSettings)
    writer.writeDurationValue("durationUntilExternalUserDeletedAfterBlocked", entitlementManagementSettings.durationUntilExternalUserDeletedAfterBlocked);
    writer.writeEnumValue<AccessPackageExternalUserLifecycleAction>("externalUserLifecycleAction", entitlementManagementSettings.externalUserLifecycleAction);
}
// tslint:enable
// eslint-enable
