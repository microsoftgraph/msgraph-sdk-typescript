// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createExternalLinkFromDiscriminatorValue, serializeExternalLink, type ExternalLink } from './externalLink';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnenotePagePreviewLinksFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOnenotePagePreviewLinks;
}
export function deserializeIntoOnenotePagePreviewLinks(onenotePagePreviewLinks: OnenotePagePreviewLinks | undefined = {} as OnenotePagePreviewLinks) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { onenotePagePreviewLinks.odataType = n.getStringValue(); },
        "previewImageUrl": n => { onenotePagePreviewLinks.previewImageUrl = n.getObjectValue<ExternalLink>(createExternalLinkFromDiscriminatorValue); },
    }
}
export interface OnenotePagePreviewLinks extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The previewImageUrl property
     */
    previewImageUrl?: ExternalLink;
}
export function serializeOnenotePagePreviewLinks(writer: SerializationWriter, onenotePagePreviewLinks: OnenotePagePreviewLinks | undefined = {} as OnenotePagePreviewLinks) : void {
        writer.writeStringValue("@odata.type", onenotePagePreviewLinks.odataType);
        writer.writeObjectValue<ExternalLink>("previewImageUrl", onenotePagePreviewLinks.previewImageUrl, );
        writer.writeAdditionalData(onenotePagePreviewLinks.additionalData);
}
// tslint:enable
// eslint-enable
