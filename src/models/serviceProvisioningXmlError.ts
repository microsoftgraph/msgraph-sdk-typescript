// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoServiceProvisioningError, serializeServiceProvisioningError, type ServiceProvisioningError } from './serviceProvisioningError';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createServiceProvisioningXmlErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoServiceProvisioningXmlError;
}
export function deserializeIntoServiceProvisioningXmlError(serviceProvisioningXmlError: ServiceProvisioningXmlError | undefined = {} as ServiceProvisioningXmlError) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoServiceProvisioningError(serviceProvisioningXmlError),
        "errorDetail": n => { serviceProvisioningXmlError.errorDetail = n.getStringValue(); },
    }
}
export function serializeServiceProvisioningXmlError(writer: SerializationWriter, serviceProvisioningXmlError: ServiceProvisioningXmlError | undefined = {} as ServiceProvisioningXmlError) : void {
        serializeServiceProvisioningError(writer, serviceProvisioningXmlError)
        writer.writeStringValue("errorDetail", serviceProvisioningXmlError.errorDetail);
}
export interface ServiceProvisioningXmlError extends Parsable, ServiceProvisioningError {
    /**
     * The errorDetail property
     */
    errorDetail?: string;
}
// tslint:enable
// eslint-enable
