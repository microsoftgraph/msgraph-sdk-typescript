// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { ThreatAssessmentResultType } from './threatAssessmentResultType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createThreatAssessmentResultFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoThreatAssessmentResult;
}
export function deserializeIntoThreatAssessmentResult(threatAssessmentResult: ThreatAssessmentResult | undefined = {} as ThreatAssessmentResult) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(threatAssessmentResult),
        "createdDateTime": n => { threatAssessmentResult.createdDateTime = n.getDateValue(); },
        "message": n => { threatAssessmentResult.message = n.getStringValue(); },
        "resultType": n => { threatAssessmentResult.resultType = n.getEnumValue<ThreatAssessmentResultType>(ThreatAssessmentResultType); },
    }
}
export function serializeThreatAssessmentResult(writer: SerializationWriter, threatAssessmentResult: ThreatAssessmentResult | undefined = {} as ThreatAssessmentResult) : void {
        serializeEntity(writer, threatAssessmentResult)
        writer.writeDateValue("createdDateTime", threatAssessmentResult.createdDateTime);
        writer.writeStringValue("message", threatAssessmentResult.message);
        writer.writeEnumValue<ThreatAssessmentResultType>("resultType", threatAssessmentResult.resultType);
}
export interface ThreatAssessmentResult extends Entity, Parsable {
    /**
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date;
    /**
     * The result message for each threat assessment.
     */
    message?: string;
    /**
     * The threat assessment result type. Possible values are: checkPolicy, rescan.
     */
    resultType?: ThreatAssessmentResultType;
}
// tslint:enable
// eslint-enable
