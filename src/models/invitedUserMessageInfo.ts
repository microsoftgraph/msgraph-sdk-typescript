// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createRecipientFromDiscriminatorValue, serializeRecipient, type Recipient } from './recipient';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createInvitedUserMessageInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoInvitedUserMessageInfo;
}
export function deserializeIntoInvitedUserMessageInfo(invitedUserMessageInfo: InvitedUserMessageInfo | undefined = {} as InvitedUserMessageInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "ccRecipients": n => { invitedUserMessageInfo.ccRecipients = n.getCollectionOfObjectValues<Recipient>(createRecipientFromDiscriminatorValue); },
        "customizedMessageBody": n => { invitedUserMessageInfo.customizedMessageBody = n.getStringValue(); },
        "messageLanguage": n => { invitedUserMessageInfo.messageLanguage = n.getStringValue(); },
        "@odata.type": n => { invitedUserMessageInfo.odataType = n.getStringValue(); },
    }
}
export interface InvitedUserMessageInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Additional recipients the invitation message should be sent to. Currently only one additional recipient is supported.
     */
    ccRecipients?: Recipient[];
    /**
     * Customized message body you want to send if you don't want the default message.
     */
    customizedMessageBody?: string;
    /**
     * The language you want to send the default message in. If the customizedMessageBody is specified, this property is ignored, and the message is sent using the customizedMessageBody. The language format should be in ISO 639. The default is en-US.
     */
    messageLanguage?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeInvitedUserMessageInfo(writer: SerializationWriter, invitedUserMessageInfo: InvitedUserMessageInfo | undefined = {} as InvitedUserMessageInfo) : void {
        writer.writeCollectionOfObjectValues<Recipient>("ccRecipients", invitedUserMessageInfo.ccRecipients, serializeRecipient);
        writer.writeStringValue("customizedMessageBody", invitedUserMessageInfo.customizedMessageBody);
        writer.writeStringValue("messageLanguage", invitedUserMessageInfo.messageLanguage);
        writer.writeStringValue("@odata.type", invitedUserMessageInfo.odataType);
        writer.writeAdditionalData(invitedUserMessageInfo.additionalData);
}
// tslint:enable
// eslint-enable
