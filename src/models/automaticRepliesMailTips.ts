// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDateTimeTimeZoneFromDiscriminatorValue, serializeDateTimeTimeZone, type DateTimeTimeZone } from './dateTimeTimeZone';
import { createLocaleInfoFromDiscriminatorValue, serializeLocaleInfo, type LocaleInfo } from './localeInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AutomaticRepliesMailTips extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The automatic reply message.
     */
    message?: string;
    /**
     * The language that the automatic reply message is in.
     */
    messageLanguage?: LocaleInfo;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The date and time that automatic replies are set to end.
     */
    scheduledEndTime?: DateTimeTimeZone;
    /**
     * The date and time that automatic replies are set to begin.
     */
    scheduledStartTime?: DateTimeTimeZone;
}
export function createAutomaticRepliesMailTipsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAutomaticRepliesMailTips;
}
export function deserializeIntoAutomaticRepliesMailTips(automaticRepliesMailTips: AutomaticRepliesMailTips | undefined = {} as AutomaticRepliesMailTips) : Record<string, (node: ParseNode) => void> {
    return {
        "message": n => { automaticRepliesMailTips.message = n.getStringValue(); },
        "messageLanguage": n => { automaticRepliesMailTips.messageLanguage = n.getObjectValue<LocaleInfo>(createLocaleInfoFromDiscriminatorValue); },
        "@odata.type": n => { automaticRepliesMailTips.odataType = n.getStringValue(); },
        "scheduledEndTime": n => { automaticRepliesMailTips.scheduledEndTime = n.getObjectValue<DateTimeTimeZone>(createDateTimeTimeZoneFromDiscriminatorValue); },
        "scheduledStartTime": n => { automaticRepliesMailTips.scheduledStartTime = n.getObjectValue<DateTimeTimeZone>(createDateTimeTimeZoneFromDiscriminatorValue); },
    }
}
export function serializeAutomaticRepliesMailTips(writer: SerializationWriter, automaticRepliesMailTips: AutomaticRepliesMailTips | undefined = {} as AutomaticRepliesMailTips) : void {
    writer.writeStringValue("message", automaticRepliesMailTips.message);
    writer.writeObjectValue<LocaleInfo>("messageLanguage", automaticRepliesMailTips.messageLanguage, serializeLocaleInfo);
    writer.writeStringValue("@odata.type", automaticRepliesMailTips.odataType);
    writer.writeObjectValue<DateTimeTimeZone>("scheduledEndTime", automaticRepliesMailTips.scheduledEndTime, serializeDateTimeTimeZone);
    writer.writeObjectValue<DateTimeTimeZone>("scheduledStartTime", automaticRepliesMailTips.scheduledStartTime, serializeDateTimeTimeZone);
    writer.writeAdditionalData(automaticRepliesMailTips.additionalData);
}
// tslint:enable
// eslint-enable
