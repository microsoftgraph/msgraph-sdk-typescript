// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createPrintTaskDefinitionFromDiscriminatorValue, serializePrintTaskDefinition, type PrintTaskDefinition } from './printTaskDefinition';
import { createPrintTaskStatusFromDiscriminatorValue, serializePrintTaskStatus, type PrintTaskStatus } from './printTaskStatus';
import { createPrintTaskTriggerFromDiscriminatorValue, serializePrintTaskTrigger, type PrintTaskTrigger } from './printTaskTrigger';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrintTaskFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrintTask;
}
export function deserializeIntoPrintTask(printTask: PrintTask | undefined = {} as PrintTask) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(printTask),
        "definition": n => { printTask.definition = n.getObjectValue<PrintTaskDefinition>(createPrintTaskDefinitionFromDiscriminatorValue); },
        "parentUrl": n => { printTask.parentUrl = n.getStringValue(); },
        "status": n => { printTask.status = n.getObjectValue<PrintTaskStatus>(createPrintTaskStatusFromDiscriminatorValue); },
        "trigger": n => { printTask.trigger = n.getObjectValue<PrintTaskTrigger>(createPrintTaskTriggerFromDiscriminatorValue); },
    }
}
export interface PrintTask extends Entity, Parsable {
    /**
     * The definition property
     */
    definition?: PrintTaskDefinition;
    /**
     * The URL for the print entity that triggered this task. For example, https://graph.microsoft.com/v1.0/print/printers/{printerId}/jobs/{jobId}. Read-only.
     */
    parentUrl?: string;
    /**
     * The status property
     */
    status?: PrintTaskStatus;
    /**
     * The trigger property
     */
    trigger?: PrintTaskTrigger;
}
export function serializePrintTask(writer: SerializationWriter, printTask: PrintTask | undefined = {} as PrintTask) : void {
    serializeEntity(writer, printTask)
    writer.writeObjectValue<PrintTaskDefinition>("definition", printTask.definition, serializePrintTaskDefinition);
    writer.writeStringValue("parentUrl", printTask.parentUrl);
    writer.writeObjectValue<PrintTaskStatus>("status", printTask.status, serializePrintTaskStatus);
    writer.writeObjectValue<PrintTaskTrigger>("trigger", printTask.trigger, serializePrintTaskTrigger);
}
// tslint:enable
// eslint-enable
