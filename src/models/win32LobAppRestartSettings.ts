// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWin32LobAppRestartSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWin32LobAppRestartSettings;
}
export function deserializeIntoWin32LobAppRestartSettings(win32LobAppRestartSettings: Win32LobAppRestartSettings | undefined = {} as Win32LobAppRestartSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "countdownDisplayBeforeRestartInMinutes": n => { win32LobAppRestartSettings.countdownDisplayBeforeRestartInMinutes = n.getNumberValue(); },
        "gracePeriodInMinutes": n => { win32LobAppRestartSettings.gracePeriodInMinutes = n.getNumberValue(); },
        "@odata.type": n => { win32LobAppRestartSettings.odataType = n.getStringValue(); },
        "restartNotificationSnoozeDurationInMinutes": n => { win32LobAppRestartSettings.restartNotificationSnoozeDurationInMinutes = n.getNumberValue(); },
    }
}
export function serializeWin32LobAppRestartSettings(writer: SerializationWriter, win32LobAppRestartSettings: Win32LobAppRestartSettings | undefined = {} as Win32LobAppRestartSettings) : void {
    writer.writeNumberValue("countdownDisplayBeforeRestartInMinutes", win32LobAppRestartSettings.countdownDisplayBeforeRestartInMinutes);
    writer.writeNumberValue("gracePeriodInMinutes", win32LobAppRestartSettings.gracePeriodInMinutes);
    writer.writeStringValue("@odata.type", win32LobAppRestartSettings.odataType);
    writer.writeNumberValue("restartNotificationSnoozeDurationInMinutes", win32LobAppRestartSettings.restartNotificationSnoozeDurationInMinutes);
    writer.writeAdditionalData(win32LobAppRestartSettings.additionalData);
}
export interface Win32LobAppRestartSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The number of minutes before the restart time to display the countdown dialog for pending restarts.
     */
    countdownDisplayBeforeRestartInMinutes?: number;
    /**
     * The number of minutes to wait before restarting the device after an app installation.
     */
    gracePeriodInMinutes?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The number of minutes to snooze the restart notification dialog when the snooze button is selected.
     */
    restartNotificationSnoozeDurationInMinutes?: number;
}
// tslint:enable
// eslint-enable
