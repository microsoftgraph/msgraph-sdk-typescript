// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsDeviceStartupProcessPerformanceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsDeviceStartupProcessPerformance;
}
export function deserializeIntoUserExperienceAnalyticsDeviceStartupProcessPerformance(userExperienceAnalyticsDeviceStartupProcessPerformance: UserExperienceAnalyticsDeviceStartupProcessPerformance | undefined = {} as UserExperienceAnalyticsDeviceStartupProcessPerformance) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userExperienceAnalyticsDeviceStartupProcessPerformance),
        "deviceCount": n => { userExperienceAnalyticsDeviceStartupProcessPerformance.deviceCount = n.getNumberValue(); },
        "medianImpactInMs": n => { userExperienceAnalyticsDeviceStartupProcessPerformance.medianImpactInMs = n.getNumberValue(); },
        "processName": n => { userExperienceAnalyticsDeviceStartupProcessPerformance.processName = n.getStringValue(); },
        "productName": n => { userExperienceAnalyticsDeviceStartupProcessPerformance.productName = n.getStringValue(); },
        "publisher": n => { userExperienceAnalyticsDeviceStartupProcessPerformance.publisher = n.getStringValue(); },
        "totalImpactInMs": n => { userExperienceAnalyticsDeviceStartupProcessPerformance.totalImpactInMs = n.getNumberValue(); },
    }
}
export function serializeUserExperienceAnalyticsDeviceStartupProcessPerformance(writer: SerializationWriter, userExperienceAnalyticsDeviceStartupProcessPerformance: UserExperienceAnalyticsDeviceStartupProcessPerformance | undefined = {} as UserExperienceAnalyticsDeviceStartupProcessPerformance) : void {
    serializeEntity(writer, userExperienceAnalyticsDeviceStartupProcessPerformance)
    writer.writeNumberValue("deviceCount", userExperienceAnalyticsDeviceStartupProcessPerformance.deviceCount);
    writer.writeNumberValue("medianImpactInMs", userExperienceAnalyticsDeviceStartupProcessPerformance.medianImpactInMs);
    writer.writeStringValue("processName", userExperienceAnalyticsDeviceStartupProcessPerformance.processName);
    writer.writeStringValue("productName", userExperienceAnalyticsDeviceStartupProcessPerformance.productName);
    writer.writeStringValue("publisher", userExperienceAnalyticsDeviceStartupProcessPerformance.publisher);
    writer.writeNumberValue("totalImpactInMs", userExperienceAnalyticsDeviceStartupProcessPerformance.totalImpactInMs);
}
export interface UserExperienceAnalyticsDeviceStartupProcessPerformance extends Entity, Parsable {
    /**
     * The count of devices which initiated this process on startup. Supports: $filter, $select, $OrderBy. Read-only.
     */
    deviceCount?: number;
    /**
     * The median impact of startup process on device boot time in milliseconds. Supports: $filter, $select, $OrderBy. Read-only.
     */
    medianImpactInMs?: number;
    /**
     * The name of the startup process. Examples: outlook, excel. Supports: $select, $OrderBy. Read-only.
     */
    processName?: string;
    /**
     * The product name of the startup process. Examples: Microsoft Outlook, Microsoft Excel. Supports: $select, $OrderBy. Read-only.
     */
    productName?: string;
    /**
     * The publisher of the startup process. Examples: Microsoft Corporation, Contoso Corp. Supports: $select, $OrderBy. Read-only.
     */
    publisher?: string;
    /**
     * The total impact of startup process on device boot time in milliseconds. Supports: $filter, $select, $OrderBy. Read-only.
     */
    totalImpactInMs?: number;
}
// tslint:enable
// eslint-enable
