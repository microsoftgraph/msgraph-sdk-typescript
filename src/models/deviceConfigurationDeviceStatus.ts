// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { ComplianceStatus } from './complianceStatus';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceConfigurationDeviceStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceConfigurationDeviceStatus;
}
export function deserializeIntoDeviceConfigurationDeviceStatus(deviceConfigurationDeviceStatus: DeviceConfigurationDeviceStatus | undefined = {} as DeviceConfigurationDeviceStatus) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceConfigurationDeviceStatus),
        "complianceGracePeriodExpirationDateTime": n => { deviceConfigurationDeviceStatus.complianceGracePeriodExpirationDateTime = n.getDateValue(); },
        "deviceDisplayName": n => { deviceConfigurationDeviceStatus.deviceDisplayName = n.getStringValue(); },
        "deviceModel": n => { deviceConfigurationDeviceStatus.deviceModel = n.getStringValue(); },
        "lastReportedDateTime": n => { deviceConfigurationDeviceStatus.lastReportedDateTime = n.getDateValue(); },
        "status": n => { deviceConfigurationDeviceStatus.status = n.getEnumValue<ComplianceStatus>(ComplianceStatus); },
        "userName": n => { deviceConfigurationDeviceStatus.userName = n.getStringValue(); },
        "userPrincipalName": n => { deviceConfigurationDeviceStatus.userPrincipalName = n.getStringValue(); },
    }
}
export interface DeviceConfigurationDeviceStatus extends Entity, Parsable {
    /**
     * The DateTime when device compliance grace period expires
     */
    complianceGracePeriodExpirationDateTime?: Date;
    /**
     * Device name of the DevicePolicyStatus.
     */
    deviceDisplayName?: string;
    /**
     * The device model that is being reported
     */
    deviceModel?: string;
    /**
     * Last modified date time of the policy report.
     */
    lastReportedDateTime?: Date;
    /**
     * The status property
     */
    status?: ComplianceStatus;
    /**
     * The User Name that is being reported
     */
    userName?: string;
    /**
     * UserPrincipalName.
     */
    userPrincipalName?: string;
}
export function serializeDeviceConfigurationDeviceStatus(writer: SerializationWriter, deviceConfigurationDeviceStatus: DeviceConfigurationDeviceStatus | undefined = {} as DeviceConfigurationDeviceStatus) : void {
        serializeEntity(writer, deviceConfigurationDeviceStatus)
        writer.writeDateValue("complianceGracePeriodExpirationDateTime", deviceConfigurationDeviceStatus.complianceGracePeriodExpirationDateTime);
        writer.writeStringValue("deviceDisplayName", deviceConfigurationDeviceStatus.deviceDisplayName);
        writer.writeStringValue("deviceModel", deviceConfigurationDeviceStatus.deviceModel);
        writer.writeDateValue("lastReportedDateTime", deviceConfigurationDeviceStatus.lastReportedDateTime);
        writer.writeEnumValue<ComplianceStatus>("status", deviceConfigurationDeviceStatus.status);
        writer.writeStringValue("userName", deviceConfigurationDeviceStatus.userName);
        writer.writeStringValue("userPrincipalName", deviceConfigurationDeviceStatus.userPrincipalName);
}
// tslint:enable
// eslint-enable
