// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookOperationErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookOperationError;
}
export function deserializeIntoWorkbookOperationError(workbookOperationError: WorkbookOperationError | undefined = {} as WorkbookOperationError) : Record<string, (node: ParseNode) => void> {
    return {
        "code": n => { workbookOperationError.code = n.getStringValue(); },
        "innerError": n => { workbookOperationError.innerError = n.getObjectValue<WorkbookOperationError>(createWorkbookOperationErrorFromDiscriminatorValue); },
        "message": n => { workbookOperationError.message = n.getStringValue(); },
        "@odata.type": n => { workbookOperationError.odataType = n.getStringValue(); },
    }
}
export function serializeWorkbookOperationError(writer: SerializationWriter, workbookOperationError: WorkbookOperationError | undefined = {} as WorkbookOperationError) : void {
        writer.writeStringValue("code", workbookOperationError.code);
        writer.writeObjectValue<WorkbookOperationError>("innerError", workbookOperationError.innerError, serializeWorkbookOperationError);
        writer.writeStringValue("message", workbookOperationError.message);
        writer.writeStringValue("@odata.type", workbookOperationError.odataType);
        writer.writeAdditionalData(workbookOperationError.additionalData);
}
export interface WorkbookOperationError extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The error code.
     */
    code?: string;
    /**
     * The innerError property
     */
    innerError?: WorkbookOperationError;
    /**
     * The error message.
     */
    message?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
