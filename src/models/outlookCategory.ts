// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { CategoryColor } from './categoryColor';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOutlookCategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOutlookCategory;
}
export function deserializeIntoOutlookCategory(outlookCategory: OutlookCategory | undefined = {} as OutlookCategory) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(outlookCategory),
        "color": n => { outlookCategory.color = n.getEnumValue<CategoryColor>(CategoryColor); },
        "displayName": n => { outlookCategory.displayName = n.getStringValue(); },
    }
}
export interface OutlookCategory extends Entity, Parsable {
    /**
     * A pre-set color constant that characterizes a category, and that is mapped to one of 25 predefined colors. For more details, see the following note.
     */
    color?: CategoryColor;
    /**
     * A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.
     */
    displayName?: string;
}
export function serializeOutlookCategory(writer: SerializationWriter, outlookCategory: OutlookCategory | undefined = {} as OutlookCategory) : void {
    serializeEntity(writer, outlookCategory)
    writer.writeEnumValue<CategoryColor>("color", outlookCategory.color);
    writer.writeStringValue("displayName", outlookCategory.displayName);
}
// tslint:enable
// eslint-enable
