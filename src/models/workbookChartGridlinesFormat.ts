// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkbookChartLineFormatFromDiscriminatorValue, serializeWorkbookChartLineFormat, type WorkbookChartLineFormat } from './workbookChartLineFormat';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookChartGridlinesFormatFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookChartGridlinesFormat;
}
export function deserializeIntoWorkbookChartGridlinesFormat(workbookChartGridlinesFormat: WorkbookChartGridlinesFormat | undefined = {} as WorkbookChartGridlinesFormat) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookChartGridlinesFormat),
        "line": n => { workbookChartGridlinesFormat.line = n.getObjectValue<WorkbookChartLineFormat>(createWorkbookChartLineFormatFromDiscriminatorValue); },
    }
}
export function serializeWorkbookChartGridlinesFormat(writer: SerializationWriter, workbookChartGridlinesFormat: WorkbookChartGridlinesFormat | undefined = {} as WorkbookChartGridlinesFormat) : void {
        serializeEntity(writer, workbookChartGridlinesFormat)
        writer.writeObjectValue<WorkbookChartLineFormat>("line", workbookChartGridlinesFormat.line, serializeWorkbookChartLineFormat);
}
export interface WorkbookChartGridlinesFormat extends Entity, Parsable {
    /**
     * Represents chart line formatting. Read-only.
     */
    line?: WorkbookChartLineFormat;
}
// tslint:enable
// eslint-enable
