// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createRiskyUserHistoryItemFromDiscriminatorValue, serializeRiskyUserHistoryItem, type RiskyUserHistoryItem } from './riskyUserHistoryItem';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRiskyUserHistoryItemCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRiskyUserHistoryItemCollectionResponse;
}
export function deserializeIntoRiskyUserHistoryItemCollectionResponse(riskyUserHistoryItemCollectionResponse: RiskyUserHistoryItemCollectionResponse | undefined = {} as RiskyUserHistoryItemCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(riskyUserHistoryItemCollectionResponse),
        "value": n => { riskyUserHistoryItemCollectionResponse.value = n.getCollectionOfObjectValues<RiskyUserHistoryItem>(createRiskyUserHistoryItemFromDiscriminatorValue); },
    }
}
export interface RiskyUserHistoryItemCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RiskyUserHistoryItem[];
}
export function serializeRiskyUserHistoryItemCollectionResponse(writer: SerializationWriter, riskyUserHistoryItemCollectionResponse: RiskyUserHistoryItemCollectionResponse | undefined = {} as RiskyUserHistoryItemCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, riskyUserHistoryItemCollectionResponse)
        writer.writeCollectionOfObjectValues<RiskyUserHistoryItem>("value", riskyUserHistoryItemCollectionResponse.value, serializeRiskyUserHistoryItem);
}
// tslint:enable
// eslint-enable
