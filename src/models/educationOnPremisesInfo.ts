// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEducationOnPremisesInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEducationOnPremisesInfo;
}
export function deserializeIntoEducationOnPremisesInfo(educationOnPremisesInfo: EducationOnPremisesInfo | undefined = {} as EducationOnPremisesInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "immutableId": n => { educationOnPremisesInfo.immutableId = n.getStringValue(); },
        "@odata.type": n => { educationOnPremisesInfo.odataType = n.getStringValue(); },
    }
}
export interface EducationOnPremisesInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Unique identifier for the user object in Active Directory.
     */
    immutableId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeEducationOnPremisesInfo(writer: SerializationWriter, educationOnPremisesInfo: EducationOnPremisesInfo | undefined = {} as EducationOnPremisesInfo) : void {
        writer.writeStringValue("immutableId", educationOnPremisesInfo.immutableId);
        writer.writeStringValue("@odata.type", educationOnPremisesInfo.odataType);
        writer.writeAdditionalData(educationOnPremisesInfo.additionalData);
}
// tslint:enable
// eslint-enable
