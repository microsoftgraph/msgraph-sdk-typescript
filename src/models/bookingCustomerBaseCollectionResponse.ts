// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createBookingCustomerBaseFromDiscriminatorValue, serializeBookingCustomerBase, type BookingCustomerBase } from './bookingCustomerBase';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingCustomerBaseCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: BookingCustomerBase[];
}
export function createBookingCustomerBaseCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBookingCustomerBaseCollectionResponse;
}
export function deserializeIntoBookingCustomerBaseCollectionResponse(bookingCustomerBaseCollectionResponse: BookingCustomerBaseCollectionResponse | undefined = {} as BookingCustomerBaseCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(bookingCustomerBaseCollectionResponse),
        "value": n => { bookingCustomerBaseCollectionResponse.value = n.getCollectionOfObjectValues<BookingCustomerBase>(createBookingCustomerBaseFromDiscriminatorValue); },
    }
}
export function serializeBookingCustomerBaseCollectionResponse(writer: SerializationWriter, bookingCustomerBaseCollectionResponse: BookingCustomerBaseCollectionResponse | undefined = {} as BookingCustomerBaseCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, bookingCustomerBaseCollectionResponse)
        writer.writeCollectionOfObjectValues<BookingCustomerBase>("value", bookingCustomerBaseCollectionResponse.value, serializeBookingCustomerBase);
}
// tslint:enable
// eslint-enable
