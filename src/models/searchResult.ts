// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSearchResultFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSearchResult;
}
export function deserializeIntoSearchResult(searchResult: SearchResult | undefined = {} as SearchResult) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { searchResult.odataType = n.getStringValue(); },
        "onClickTelemetryUrl": n => { searchResult.onClickTelemetryUrl = n.getStringValue(); },
    }
}
export interface SearchResult extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.
     */
    onClickTelemetryUrl?: string;
}
export function serializeSearchResult(writer: SerializationWriter, searchResult: SearchResult | undefined = {} as SearchResult) : void {
    writer.writeStringValue("@odata.type", searchResult.odataType);
    writer.writeStringValue("onClickTelemetryUrl", searchResult.onClickTelemetryUrl);
    writer.writeAdditionalData(searchResult.additionalData);
}
// tslint:enable
// eslint-enable
