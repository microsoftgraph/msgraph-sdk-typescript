// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkbookChartGridlinesFormatFromDiscriminatorValue, serializeWorkbookChartGridlinesFormat, type WorkbookChartGridlinesFormat } from './workbookChartGridlinesFormat';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookChartGridlinesFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookChartGridlines;
}
export function deserializeIntoWorkbookChartGridlines(workbookChartGridlines: WorkbookChartGridlines | undefined = {} as WorkbookChartGridlines) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookChartGridlines),
        "format": n => { workbookChartGridlines.format = n.getObjectValue<WorkbookChartGridlinesFormat>(createWorkbookChartGridlinesFormatFromDiscriminatorValue); },
        "visible": n => { workbookChartGridlines.visible = n.getBooleanValue(); },
    }
}
export function serializeWorkbookChartGridlines(writer: SerializationWriter, workbookChartGridlines: WorkbookChartGridlines | undefined = {} as WorkbookChartGridlines) : void {
        serializeEntity(writer, workbookChartGridlines)
        writer.writeObjectValue<WorkbookChartGridlinesFormat>("format", workbookChartGridlines.format, serializeWorkbookChartGridlinesFormat);
        writer.writeBooleanValue("visible", workbookChartGridlines.visible);
}
export interface WorkbookChartGridlines extends Entity, Parsable {
    /**
     * Represents the formatting of chart gridlines. Read-only.
     */
    format?: WorkbookChartGridlinesFormat;
    /**
     * Boolean value representing if the axis gridlines are visible or not.
     */
    visible?: boolean;
}
// tslint:enable
// eslint-enable
