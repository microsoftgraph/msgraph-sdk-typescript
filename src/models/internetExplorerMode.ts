// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createBrowserSiteListFromDiscriminatorValue, serializeBrowserSiteList, type BrowserSiteList } from './browserSiteList';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createInternetExplorerModeFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoInternetExplorerMode;
}
export function deserializeIntoInternetExplorerMode(internetExplorerMode: InternetExplorerMode | undefined = {} as InternetExplorerMode) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(internetExplorerMode),
        "siteLists": n => { internetExplorerMode.siteLists = n.getCollectionOfObjectValues<BrowserSiteList>(createBrowserSiteListFromDiscriminatorValue); },
    }
}
export interface InternetExplorerMode extends Entity, Parsable {
    /**
     * A collection of site lists to support Internet Explorer mode.
     */
    siteLists?: BrowserSiteList[];
}
export function serializeInternetExplorerMode(writer: SerializationWriter, internetExplorerMode: InternetExplorerMode | undefined = {} as InternetExplorerMode) : void {
    serializeEntity(writer, internetExplorerMode)
    writer.writeCollectionOfObjectValues<BrowserSiteList>("siteLists", internetExplorerMode.siteLists, serializeBrowserSiteList);
}
// tslint:enable
// eslint-enable
