// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type TeleconferenceDeviceScreenSharingQuality } from './index';
import { deserializeIntoTeleconferenceDeviceMediaQuality, serializeTeleconferenceDeviceMediaQuality, type TeleconferenceDeviceMediaQuality } from './teleconferenceDeviceMediaQuality';
import { deserializeIntoTeleconferenceDeviceScreenSharingQuality } from './teleconferenceDeviceScreenSharingQuality';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeleconferenceDeviceVideoQualityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.teleconferenceDeviceScreenSharingQuality":
                    return deserializeIntoTeleconferenceDeviceScreenSharingQuality;
            }
        }
    }
    return deserializeIntoTeleconferenceDeviceVideoQuality;
}
export function deserializeIntoTeleconferenceDeviceVideoQuality(teleconferenceDeviceVideoQuality: TeleconferenceDeviceVideoQuality | undefined = {} as TeleconferenceDeviceVideoQuality) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTeleconferenceDeviceMediaQuality(teleconferenceDeviceVideoQuality),
        "averageInboundBitRate": n => { teleconferenceDeviceVideoQuality.averageInboundBitRate = n.getNumberValue(); },
        "averageInboundFrameRate": n => { teleconferenceDeviceVideoQuality.averageInboundFrameRate = n.getNumberValue(); },
        "averageOutboundBitRate": n => { teleconferenceDeviceVideoQuality.averageOutboundBitRate = n.getNumberValue(); },
        "averageOutboundFrameRate": n => { teleconferenceDeviceVideoQuality.averageOutboundFrameRate = n.getNumberValue(); },
    }
}
export function serializeTeleconferenceDeviceVideoQuality(writer: SerializationWriter, teleconferenceDeviceVideoQuality: TeleconferenceDeviceVideoQuality | undefined = {} as TeleconferenceDeviceVideoQuality) : void {
        serializeTeleconferenceDeviceMediaQuality(writer, teleconferenceDeviceVideoQuality)
        writer.writeNumberValue("averageInboundBitRate", teleconferenceDeviceVideoQuality.averageInboundBitRate);
        writer.writeNumberValue("averageInboundFrameRate", teleconferenceDeviceVideoQuality.averageInboundFrameRate);
        writer.writeNumberValue("averageOutboundBitRate", teleconferenceDeviceVideoQuality.averageOutboundBitRate);
        writer.writeNumberValue("averageOutboundFrameRate", teleconferenceDeviceVideoQuality.averageOutboundFrameRate);
}
export interface TeleconferenceDeviceVideoQuality extends Parsable, TeleconferenceDeviceMediaQuality {
    /**
     * The average inbound stream video bit rate per second.
     */
    averageInboundBitRate?: number;
    /**
     * The average inbound stream video frame rate per second.
     */
    averageInboundFrameRate?: number;
    /**
     * The average outbound stream video bit rate per second.
     */
    averageOutboundBitRate?: number;
    /**
     * The average outbound stream video frame rate per second.
     */
    averageOutboundFrameRate?: number;
}
// tslint:enable
// eslint-enable
