// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createPlannerBucketFromDiscriminatorValue, serializePlannerBucket, type PlannerBucket } from './plannerBucket';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlannerBucketCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerBucketCollectionResponse;
}
export function deserializeIntoPlannerBucketCollectionResponse(plannerBucketCollectionResponse: PlannerBucketCollectionResponse | undefined = {} as PlannerBucketCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(plannerBucketCollectionResponse),
        "value": n => { plannerBucketCollectionResponse.value = n.getCollectionOfObjectValues<PlannerBucket>(createPlannerBucketFromDiscriminatorValue); },
    }
}
export interface PlannerBucketCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PlannerBucket[];
}
export function serializePlannerBucketCollectionResponse(writer: SerializationWriter, plannerBucketCollectionResponse: PlannerBucketCollectionResponse | undefined = {} as PlannerBucketCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, plannerBucketCollectionResponse)
    writer.writeCollectionOfObjectValues<PlannerBucket>("value", plannerBucketCollectionResponse.value, serializePlannerBucket);
}
// tslint:enable
// eslint-enable
