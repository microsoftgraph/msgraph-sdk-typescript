import { deserializeIntoEducationAssignmentRecipient, serializeEducationAssignmentRecipient, type EducationAssignmentRecipient } from './educationAssignmentRecipient';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createEducationAssignmentIndividualRecipientFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEducationAssignmentIndividualRecipient;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoEducationAssignmentIndividualRecipient(educationAssignmentIndividualRecipient: EducationAssignmentIndividualRecipient | undefined = {} as EducationAssignmentIndividualRecipient) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEducationAssignmentRecipient(educationAssignmentIndividualRecipient),
        "recipients": n => { educationAssignmentIndividualRecipient.recipients = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface EducationAssignmentIndividualRecipient extends EducationAssignmentRecipient, Parsable {
    /**
     * A collection of IDs of the recipients.
     */
    recipients?: string[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeEducationAssignmentIndividualRecipient(writer: SerializationWriter, educationAssignmentIndividualRecipient: EducationAssignmentIndividualRecipient | undefined = {} as EducationAssignmentIndividualRecipient) : void {
        serializeEducationAssignmentRecipient(writer, educationAssignmentIndividualRecipient)
        writer.writeCollectionOfPrimitiveValues<string>("recipients", educationAssignmentIndividualRecipient.recipients);
}
