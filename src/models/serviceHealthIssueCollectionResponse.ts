// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createServiceHealthIssueFromDiscriminatorValue, serializeServiceHealthIssue, type ServiceHealthIssue } from './serviceHealthIssue';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createServiceHealthIssueCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoServiceHealthIssueCollectionResponse;
}
export function deserializeIntoServiceHealthIssueCollectionResponse(serviceHealthIssueCollectionResponse: ServiceHealthIssueCollectionResponse | undefined = {} as ServiceHealthIssueCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(serviceHealthIssueCollectionResponse),
        "value": n => { serviceHealthIssueCollectionResponse.value = n.getCollectionOfObjectValues<ServiceHealthIssue>(createServiceHealthIssueFromDiscriminatorValue); },
    }
}
export function serializeServiceHealthIssueCollectionResponse(writer: SerializationWriter, serviceHealthIssueCollectionResponse: ServiceHealthIssueCollectionResponse | undefined = {} as ServiceHealthIssueCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, serviceHealthIssueCollectionResponse)
    writer.writeCollectionOfObjectValues<ServiceHealthIssue>("value", serviceHealthIssueCollectionResponse.value, serializeServiceHealthIssue);
}
export interface ServiceHealthIssueCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ServiceHealthIssue[];
}
// tslint:enable
// eslint-enable
