// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AttachmentType } from './attachmentType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AttachmentInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type of the attachment. The possible values are: file, item, reference. Required.
     */
    attachmentType?: AttachmentType;
    /**
     * The nature of the data in the attachment. Optional.
     */
    contentType?: string;
    /**
     * The display name of the attachment. This can be a descriptive string and doesn't have to be the actual file name. Required.
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The length of the attachment in bytes. Required.
     */
    size?: number;
}
export function createAttachmentInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAttachmentInfo;
}
export function deserializeIntoAttachmentInfo(attachmentInfo: AttachmentInfo | undefined = {} as AttachmentInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "attachmentType": n => { attachmentInfo.attachmentType = n.getEnumValue<AttachmentType>(AttachmentType); },
        "contentType": n => { attachmentInfo.contentType = n.getStringValue(); },
        "name": n => { attachmentInfo.name = n.getStringValue(); },
        "@odata.type": n => { attachmentInfo.odataType = n.getStringValue(); },
        "size": n => { attachmentInfo.size = n.getNumberValue(); },
    }
}
export function serializeAttachmentInfo(writer: SerializationWriter, attachmentInfo: AttachmentInfo | undefined = {} as AttachmentInfo) : void {
    writer.writeEnumValue<AttachmentType>("attachmentType", attachmentInfo.attachmentType);
    writer.writeStringValue("contentType", attachmentInfo.contentType);
    writer.writeStringValue("name", attachmentInfo.name);
    writer.writeStringValue("@odata.type", attachmentInfo.odataType);
    writer.writeNumberValue("size", attachmentInfo.size);
    writer.writeAdditionalData(attachmentInfo.additionalData);
}
// tslint:enable
// eslint-enable
