// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoWindowsUpdateInstallScheduleType, serializeWindowsUpdateInstallScheduleType, type WindowsUpdateInstallScheduleType } from './windowsUpdateInstallScheduleType';
import { type Parsable, type ParseNode, type SerializationWriter, type TimeOnly } from '@microsoft/kiota-abstractions';

export function createWindowsUpdateActiveHoursInstallFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsUpdateActiveHoursInstall;
}
export function deserializeIntoWindowsUpdateActiveHoursInstall(windowsUpdateActiveHoursInstall: WindowsUpdateActiveHoursInstall | undefined = {} as WindowsUpdateActiveHoursInstall) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWindowsUpdateInstallScheduleType(windowsUpdateActiveHoursInstall),
        "activeHoursEnd": n => { windowsUpdateActiveHoursInstall.activeHoursEnd = n.getTimeOnlyValue(); },
        "activeHoursStart": n => { windowsUpdateActiveHoursInstall.activeHoursStart = n.getTimeOnlyValue(); },
    }
}
export function serializeWindowsUpdateActiveHoursInstall(writer: SerializationWriter, windowsUpdateActiveHoursInstall: WindowsUpdateActiveHoursInstall | undefined = {} as WindowsUpdateActiveHoursInstall) : void {
    serializeWindowsUpdateInstallScheduleType(writer, windowsUpdateActiveHoursInstall)
    writer.writeTimeOnlyValue("activeHoursEnd", windowsUpdateActiveHoursInstall.activeHoursEnd);
    writer.writeTimeOnlyValue("activeHoursStart", windowsUpdateActiveHoursInstall.activeHoursStart);
}
export interface WindowsUpdateActiveHoursInstall extends Parsable, WindowsUpdateInstallScheduleType {
    /**
     * Active Hours End
     */
    activeHoursEnd?: TimeOnly;
    /**
     * Active Hours Start
     */
    activeHoursStart?: TimeOnly;
}
// tslint:enable
// eslint-enable
