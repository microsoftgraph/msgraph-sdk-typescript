// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createPrivilegedAccessGroupFromDiscriminatorValue, serializePrivilegedAccessGroup, type PrivilegedAccessGroup } from './privilegedAccessGroup';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrivilegedAccessRootFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrivilegedAccessRoot;
}
export function deserializeIntoPrivilegedAccessRoot(privilegedAccessRoot: PrivilegedAccessRoot | undefined = {} as PrivilegedAccessRoot) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(privilegedAccessRoot),
        "group": n => { privilegedAccessRoot.group = n.getObjectValue<PrivilegedAccessGroup>(createPrivilegedAccessGroupFromDiscriminatorValue); },
    }
}
export interface PrivilegedAccessRoot extends Entity, Parsable {
    /**
     * A group that's governed through Privileged Identity Management (PIM).
     */
    group?: PrivilegedAccessGroup;
}
export function serializePrivilegedAccessRoot(writer: SerializationWriter, privilegedAccessRoot: PrivilegedAccessRoot | undefined = {} as PrivilegedAccessRoot) : void {
        serializeEntity(writer, privilegedAccessRoot)
        writer.writeObjectValue<PrivilegedAccessGroup>("group", privilegedAccessRoot.group, serializePrivilegedAccessGroup);
}
// tslint:enable
// eslint-enable
