// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserAttributeValuesItemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserAttributeValuesItem;
}
export function deserializeIntoUserAttributeValuesItem(userAttributeValuesItem: UserAttributeValuesItem | undefined = {} as UserAttributeValuesItem) : Record<string, (node: ParseNode) => void> {
    return {
        "isDefault": n => { userAttributeValuesItem.isDefault = n.getBooleanValue(); },
        "name": n => { userAttributeValuesItem.name = n.getStringValue(); },
        "@odata.type": n => { userAttributeValuesItem.odataType = n.getStringValue(); },
        "value": n => { userAttributeValuesItem.value = n.getStringValue(); },
    }
}
export function serializeUserAttributeValuesItem(writer: SerializationWriter, userAttributeValuesItem: UserAttributeValuesItem | undefined = {} as UserAttributeValuesItem) : void {
        writer.writeBooleanValue("isDefault", userAttributeValuesItem.isDefault);
        writer.writeStringValue("name", userAttributeValuesItem.name);
        writer.writeStringValue("@odata.type", userAttributeValuesItem.odataType);
        writer.writeStringValue("value", userAttributeValuesItem.value);
        writer.writeAdditionalData(userAttributeValuesItem.additionalData);
}
export interface UserAttributeValuesItem extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Determines whether the value is set as the default.
     */
    isDefault?: boolean;
    /**
     * The display name of the property displayed to the user in the user flow.
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The value that is set when this item is selected.
     */
    value?: string;
}
// tslint:enable
// eslint-enable
