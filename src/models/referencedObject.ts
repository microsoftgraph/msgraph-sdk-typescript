// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createReferencedObjectFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoReferencedObject;
}
export function deserializeIntoReferencedObject(referencedObject: ReferencedObject | undefined = {} as ReferencedObject) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { referencedObject.odataType = n.getStringValue(); },
        "referencedObjectName": n => { referencedObject.referencedObjectName = n.getStringValue(); },
        "referencedProperty": n => { referencedObject.referencedProperty = n.getStringValue(); },
    }
}
export interface ReferencedObject extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Name of the referenced object. Must match one of the objects in the directory definition.
     */
    referencedObjectName?: string;
    /**
     * Currently not supported. Name of the property in the referenced object, the value for which is used as the reference.
     */
    referencedProperty?: string;
}
export function serializeReferencedObject(writer: SerializationWriter, referencedObject: ReferencedObject | undefined = {} as ReferencedObject) : void {
        writer.writeStringValue("@odata.type", referencedObject.odataType);
        writer.writeStringValue("referencedObjectName", referencedObject.referencedObjectName);
        writer.writeStringValue("referencedProperty", referencedObject.referencedProperty);
        writer.writeAdditionalData(referencedObject.additionalData);
}
// tslint:enable
// eslint-enable
