// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAccessPackageAnswer, serializeAccessPackageAnswer, type AccessPackageAnswer } from './accessPackageAnswer';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageAnswerString extends AccessPackageAnswer, Parsable {
    /**
     * The value stored on the requestor's user profile, if this answer is configured to be stored as a specific attribute.
     */
    value?: string;
}
export function createAccessPackageAnswerStringFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageAnswerString;
}
export function deserializeIntoAccessPackageAnswerString(accessPackageAnswerString: AccessPackageAnswerString | undefined = {} as AccessPackageAnswerString) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAccessPackageAnswer(accessPackageAnswerString),
        "value": n => { accessPackageAnswerString.value = n.getStringValue(); },
    }
}
export function serializeAccessPackageAnswerString(writer: SerializationWriter, accessPackageAnswerString: AccessPackageAnswerString | undefined = {} as AccessPackageAnswerString) : void {
    serializeAccessPackageAnswer(writer, accessPackageAnswerString)
    writer.writeStringValue("value", accessPackageAnswerString.value);
}
// tslint:enable
// eslint-enable
