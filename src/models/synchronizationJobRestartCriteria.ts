// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { SynchronizationJobRestartScope } from './synchronizationJobRestartScope';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSynchronizationJobRestartCriteriaFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSynchronizationJobRestartCriteria;
}
export function deserializeIntoSynchronizationJobRestartCriteria(synchronizationJobRestartCriteria: SynchronizationJobRestartCriteria | undefined = {} as SynchronizationJobRestartCriteria) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { synchronizationJobRestartCriteria.odataType = n.getStringValue(); },
        "resetScope": n => { synchronizationJobRestartCriteria.resetScope = n.getCollectionOfEnumValues<SynchronizationJobRestartScope>(SynchronizationJobRestartScope); },
    }
}
export function serializeSynchronizationJobRestartCriteria(writer: SerializationWriter, synchronizationJobRestartCriteria: SynchronizationJobRestartCriteria | undefined = {} as SynchronizationJobRestartCriteria) : void {
    writer.writeStringValue("@odata.type", synchronizationJobRestartCriteria.odataType);
    writer.writeEnumValue<SynchronizationJobRestartScope[]>("resetScope", synchronizationJobRestartCriteria.resetScope);
    writer.writeAdditionalData(synchronizationJobRestartCriteria.additionalData);
}
export interface SynchronizationJobRestartCriteria extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Comma-separated combination of the following values: None, ConnectorDataStore, Escrows, Watermark, QuarantineState, Full, ForceDeletes. The property can also be empty.   None: Starts a paused or quarantined provisioning job. DO NOT USE. Use the Start synchronizationJob API instead.ConnectorDataStore - Clears the underlying cache for all users. DO NOT USE. Contact Microsoft Support for guidance.Escrows - Provisioning failures are marked as escrows and retried. Clearing escrows will stop the service from retrying failures.Watermark - Removing the watermark causes the service to reevaluate all the users again, rather than just processing changes.QuarantineState - Temporarily lifts the quarantine.Use Full if you want all of the options.ForceDeletes - Forces the system to delete the pending deleted users when using the accidental deletions prevention feature and the deletion threshold is exceeded. Leaving this property empty emulates the Restart provisioning option in the Microsoft Entra admin center. It is similar to setting the resetScope to include QuarantineState, Watermark, and Escrows. This option meets most customer needs.
     */
    resetScope?: SynchronizationJobRestartScope[];
}
// tslint:enable
// eslint-enable
