// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { Win32LobAppFileSystemOperationType } from './win32LobAppFileSystemOperationType';
import { deserializeIntoWin32LobAppRule, serializeWin32LobAppRule, type Win32LobAppRule } from './win32LobAppRule';
import { Win32LobAppRuleOperator } from './win32LobAppRuleOperator';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWin32LobAppFileSystemRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWin32LobAppFileSystemRule;
}
export function deserializeIntoWin32LobAppFileSystemRule(win32LobAppFileSystemRule: Win32LobAppFileSystemRule | undefined = {} as Win32LobAppFileSystemRule) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWin32LobAppRule(win32LobAppFileSystemRule),
        "check32BitOn64System": n => { win32LobAppFileSystemRule.check32BitOn64System = n.getBooleanValue(); },
        "comparisonValue": n => { win32LobAppFileSystemRule.comparisonValue = n.getStringValue(); },
        "fileOrFolderName": n => { win32LobAppFileSystemRule.fileOrFolderName = n.getStringValue(); },
        "operationType": n => { win32LobAppFileSystemRule.operationType = n.getEnumValue<Win32LobAppFileSystemOperationType>(Win32LobAppFileSystemOperationType); },
        "operator": n => { win32LobAppFileSystemRule.operator = n.getEnumValue<Win32LobAppRuleOperator>(Win32LobAppRuleOperator); },
        "path": n => { win32LobAppFileSystemRule.path = n.getStringValue(); },
    }
}
export function serializeWin32LobAppFileSystemRule(writer: SerializationWriter, win32LobAppFileSystemRule: Win32LobAppFileSystemRule | undefined = {} as Win32LobAppFileSystemRule) : void {
        serializeWin32LobAppRule(writer, win32LobAppFileSystemRule)
        writer.writeBooleanValue("check32BitOn64System", win32LobAppFileSystemRule.check32BitOn64System);
        writer.writeStringValue("comparisonValue", win32LobAppFileSystemRule.comparisonValue);
        writer.writeStringValue("fileOrFolderName", win32LobAppFileSystemRule.fileOrFolderName);
        writer.writeEnumValue<Win32LobAppFileSystemOperationType>("operationType", win32LobAppFileSystemRule.operationType);
        writer.writeEnumValue<Win32LobAppRuleOperator>("operator", win32LobAppFileSystemRule.operator);
        writer.writeStringValue("path", win32LobAppFileSystemRule.path);
}
export interface Win32LobAppFileSystemRule extends Parsable, Win32LobAppRule {
    /**
     * A value indicating whether to expand environment variables in the 32-bit context on 64-bit systems.
     */
    check32BitOn64System?: boolean;
    /**
     * The file or folder comparison value.
     */
    comparisonValue?: string;
    /**
     * The file or folder name to look up.
     */
    fileOrFolderName?: string;
    /**
     * Contains all supported file system detection type.
     */
    operationType?: Win32LobAppFileSystemOperationType;
    /**
     * Contains properties for detection operator.
     */
    operator?: Win32LobAppRuleOperator;
    /**
     * The file or folder path to look up.
     */
    path?: string;
}
// tslint:enable
// eslint-enable
