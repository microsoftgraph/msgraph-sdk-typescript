// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAuthenticationCombinationConfiguration, serializeAuthenticationCombinationConfiguration, type AuthenticationCombinationConfiguration } from './authenticationCombinationConfiguration';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFido2CombinationConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFido2CombinationConfiguration;
}
export function deserializeIntoFido2CombinationConfiguration(fido2CombinationConfiguration: Fido2CombinationConfiguration | undefined = {} as Fido2CombinationConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuthenticationCombinationConfiguration(fido2CombinationConfiguration),
        "allowedAAGUIDs": n => { fido2CombinationConfiguration.allowedAAGUIDs = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface Fido2CombinationConfiguration extends AuthenticationCombinationConfiguration, Parsable {
    /**
     * A list of AAGUIDs allowed to be used as part of the specified authentication method combinations.
     */
    allowedAAGUIDs?: string[];
}
export function serializeFido2CombinationConfiguration(writer: SerializationWriter, fido2CombinationConfiguration: Fido2CombinationConfiguration | undefined = {} as Fido2CombinationConfiguration) : void {
    serializeAuthenticationCombinationConfiguration(writer, fido2CombinationConfiguration)
    writer.writeCollectionOfPrimitiveValues<string>("allowedAAGUIDs", fido2CombinationConfiguration.allowedAAGUIDs);
}
// tslint:enable
// eslint-enable
