// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { SelectionLikelihoodInfo } from './selectionLikelihoodInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createScoredEmailAddressFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoScoredEmailAddress;
}
export function deserializeIntoScoredEmailAddress(scoredEmailAddress: ScoredEmailAddress | undefined = {} as ScoredEmailAddress) : Record<string, (node: ParseNode) => void> {
    return {
        "address": n => { scoredEmailAddress.address = n.getStringValue(); },
        "itemId": n => { scoredEmailAddress.itemId = n.getStringValue(); },
        "@odata.type": n => { scoredEmailAddress.odataType = n.getStringValue(); },
        "relevanceScore": n => { scoredEmailAddress.relevanceScore = n.getNumberValue(); },
        "selectionLikelihood": n => { scoredEmailAddress.selectionLikelihood = n.getEnumValue<SelectionLikelihoodInfo>(SelectionLikelihoodInfo); },
    }
}
export interface ScoredEmailAddress extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The email address.
     */
    address?: string;
    /**
     * The itemId property
     */
    itemId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the userâ€™s communication and collaboration patterns and business relationships.
     */
    relevanceScore?: number;
    /**
     * The selectionLikelihood property
     */
    selectionLikelihood?: SelectionLikelihoodInfo;
}
export function serializeScoredEmailAddress(writer: SerializationWriter, scoredEmailAddress: ScoredEmailAddress | undefined = {} as ScoredEmailAddress) : void {
    writer.writeStringValue("address", scoredEmailAddress.address);
    writer.writeStringValue("itemId", scoredEmailAddress.itemId);
    writer.writeStringValue("@odata.type", scoredEmailAddress.odataType);
    writer.writeNumberValue("relevanceScore", scoredEmailAddress.relevanceScore);
    writer.writeEnumValue<SelectionLikelihoodInfo>("selectionLikelihood", scoredEmailAddress.selectionLikelihood);
    writer.writeAdditionalData(scoredEmailAddress.additionalData);
}
// tslint:enable
// eslint-enable
