import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createDomainFromDiscriminatorValue, serializeDomain, type Domain } from './domain';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createDomainCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDomainCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoDomainCollectionResponse(domainCollectionResponse: DomainCollectionResponse | undefined = {} as DomainCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(domainCollectionResponse),
        "value": n => { domainCollectionResponse.value = n.getCollectionOfObjectValues<Domain>(createDomainFromDiscriminatorValue); },
    }
}
export interface DomainCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Domain[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeDomainCollectionResponse(writer: SerializationWriter, domainCollectionResponse: DomainCollectionResponse | undefined = {} as DomainCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, domainCollectionResponse)
        writer.writeCollectionOfObjectValues<Domain>("value", domainCollectionResponse.value, );
}
