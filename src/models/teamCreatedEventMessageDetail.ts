// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEventMessageDetail, serializeEventMessageDetail, type EventMessageDetail } from './eventMessageDetail';
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamCreatedEventMessageDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamCreatedEventMessageDetail;
}
export function deserializeIntoTeamCreatedEventMessageDetail(teamCreatedEventMessageDetail: TeamCreatedEventMessageDetail | undefined = {} as TeamCreatedEventMessageDetail) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEventMessageDetail(teamCreatedEventMessageDetail),
        "initiator": n => { teamCreatedEventMessageDetail.initiator = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "teamDescription": n => { teamCreatedEventMessageDetail.teamDescription = n.getStringValue(); },
        "teamDisplayName": n => { teamCreatedEventMessageDetail.teamDisplayName = n.getStringValue(); },
        "teamId": n => { teamCreatedEventMessageDetail.teamId = n.getStringValue(); },
    }
}
export function serializeTeamCreatedEventMessageDetail(writer: SerializationWriter, teamCreatedEventMessageDetail: TeamCreatedEventMessageDetail | undefined = {} as TeamCreatedEventMessageDetail) : void {
        serializeEventMessageDetail(writer, teamCreatedEventMessageDetail)
        writer.writeObjectValue<IdentitySet>("initiator", teamCreatedEventMessageDetail.initiator, serializeIdentitySet);
        writer.writeStringValue("teamDescription", teamCreatedEventMessageDetail.teamDescription);
        writer.writeStringValue("teamDisplayName", teamCreatedEventMessageDetail.teamDisplayName);
        writer.writeStringValue("teamId", teamCreatedEventMessageDetail.teamId);
}
export interface TeamCreatedEventMessageDetail extends EventMessageDetail, Parsable {
    /**
     * Initiator of the event.
     */
    initiator?: IdentitySet;
    /**
     * Description for the team.
     */
    teamDescription?: string;
    /**
     * Display name of the team.
     */
    teamDisplayName?: string;
    /**
     * Unique identifier of the team.
     */
    teamId?: string;
}
// tslint:enable
// eslint-enable
