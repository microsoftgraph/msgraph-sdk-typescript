// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAttackSimulationUserFromDiscriminatorValue, serializeAttackSimulationUser, type AttackSimulationUser } from './attackSimulationUser';
import { createUserTrainingStatusInfoFromDiscriminatorValue, serializeUserTrainingStatusInfo, type UserTrainingStatusInfo } from './userTrainingStatusInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AttackSimulationTrainingUserCoverage extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * User in an attack simulation and training campaign.
     */
    attackSimulationUser?: AttackSimulationUser;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * List of assigned trainings and their statuses for the user.
     */
    userTrainings?: UserTrainingStatusInfo[];
}
export function createAttackSimulationTrainingUserCoverageFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAttackSimulationTrainingUserCoverage;
}
export function deserializeIntoAttackSimulationTrainingUserCoverage(attackSimulationTrainingUserCoverage: AttackSimulationTrainingUserCoverage | undefined = {} as AttackSimulationTrainingUserCoverage) : Record<string, (node: ParseNode) => void> {
    return {
        "attackSimulationUser": n => { attackSimulationTrainingUserCoverage.attackSimulationUser = n.getObjectValue<AttackSimulationUser>(createAttackSimulationUserFromDiscriminatorValue); },
        "@odata.type": n => { attackSimulationTrainingUserCoverage.odataType = n.getStringValue(); },
        "userTrainings": n => { attackSimulationTrainingUserCoverage.userTrainings = n.getCollectionOfObjectValues<UserTrainingStatusInfo>(createUserTrainingStatusInfoFromDiscriminatorValue); },
    }
}
export function serializeAttackSimulationTrainingUserCoverage(writer: SerializationWriter, attackSimulationTrainingUserCoverage: AttackSimulationTrainingUserCoverage | undefined = {} as AttackSimulationTrainingUserCoverage) : void {
        writer.writeObjectValue<AttackSimulationUser>("attackSimulationUser", attackSimulationTrainingUserCoverage.attackSimulationUser, );
        writer.writeStringValue("@odata.type", attackSimulationTrainingUserCoverage.odataType);
        writer.writeCollectionOfObjectValues<UserTrainingStatusInfo>("userTrainings", attackSimulationTrainingUserCoverage.userTrainings, );
        writer.writeAdditionalData(attackSimulationTrainingUserCoverage.additionalData);
}
// tslint:enable
// eslint-enable
