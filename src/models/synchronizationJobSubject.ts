import { createSynchronizationLinkedObjectsFromDiscriminatorValue, serializeSynchronizationLinkedObjects, type SynchronizationLinkedObjects } from './synchronizationLinkedObjects';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createSynchronizationJobSubjectFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSynchronizationJobSubject;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoSynchronizationJobSubject(synchronizationJobSubject: SynchronizationJobSubject | undefined = {} as SynchronizationJobSubject) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { synchronizationJobSubject.links = n.getObjectValue<SynchronizationLinkedObjects>(createSynchronizationLinkedObjectsFromDiscriminatorValue); },
        "objectId": n => { synchronizationJobSubject.objectId = n.getStringValue(); },
        "objectTypeName": n => { synchronizationJobSubject.objectTypeName = n.getStringValue(); },
        "@odata.type": n => { synchronizationJobSubject.odataType = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeSynchronizationJobSubject(writer: SerializationWriter, synchronizationJobSubject: SynchronizationJobSubject | undefined = {} as SynchronizationJobSubject) : void {
        writer.writeObjectValue<SynchronizationLinkedObjects>("links", synchronizationJobSubject.links, );
        writer.writeStringValue("objectId", synchronizationJobSubject.objectId);
        writer.writeStringValue("objectTypeName", synchronizationJobSubject.objectTypeName);
        writer.writeStringValue("@odata.type", synchronizationJobSubject.odataType);
        writer.writeAdditionalData(synchronizationJobSubject.additionalData);
}
export interface SynchronizationJobSubject extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Principals that you would like to provision.
     */
    links?: SynchronizationLinkedObjects;
    /**
     * The identifier of an object to which a synchronizationJob is to be applied. Can be one of the following: An onPremisesDistinguishedName for synchronization from Active Directory to Azure AD.The user ID for synchronization from Azure AD to a third-party.The Worker ID of the Workday worker for synchronization from Workday to either Active Directory or Azure AD.
     */
    objectId?: string;
    /**
     * The type of the object to which a synchronizationJob is to be applied. Can be one of the following: user for synchronizing between Active Directory and Azure AD.User for synchronizing a user between Azure AD and a third-party application. Worker for synchronization a user between Workday and either Active Directory or Azure AD.Group for synchronizing a group between Azure AD and a third-party application.
     */
    objectTypeName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
