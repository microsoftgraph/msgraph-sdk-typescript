// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { UserExperienceAnalyticsHealthState } from './userExperienceAnalyticsHealthState';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsModelScoresFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsModelScores;
}
export function deserializeIntoUserExperienceAnalyticsModelScores(userExperienceAnalyticsModelScores: UserExperienceAnalyticsModelScores | undefined = {} as UserExperienceAnalyticsModelScores) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userExperienceAnalyticsModelScores),
        "appReliabilityScore": n => { userExperienceAnalyticsModelScores.appReliabilityScore = n.getNumberValue(); },
        "batteryHealthScore": n => { userExperienceAnalyticsModelScores.batteryHealthScore = n.getNumberValue(); },
        "endpointAnalyticsScore": n => { userExperienceAnalyticsModelScores.endpointAnalyticsScore = n.getNumberValue(); },
        "healthStatus": n => { userExperienceAnalyticsModelScores.healthStatus = n.getEnumValue<UserExperienceAnalyticsHealthState>(UserExperienceAnalyticsHealthState); },
        "manufacturer": n => { userExperienceAnalyticsModelScores.manufacturer = n.getStringValue(); },
        "model": n => { userExperienceAnalyticsModelScores.model = n.getStringValue(); },
        "modelDeviceCount": n => { userExperienceAnalyticsModelScores.modelDeviceCount = n.getNumberValue(); },
        "startupPerformanceScore": n => { userExperienceAnalyticsModelScores.startupPerformanceScore = n.getNumberValue(); },
        "workFromAnywhereScore": n => { userExperienceAnalyticsModelScores.workFromAnywhereScore = n.getNumberValue(); },
    }
}
export function serializeUserExperienceAnalyticsModelScores(writer: SerializationWriter, userExperienceAnalyticsModelScores: UserExperienceAnalyticsModelScores | undefined = {} as UserExperienceAnalyticsModelScores) : void {
    serializeEntity(writer, userExperienceAnalyticsModelScores)
    writer.writeNumberValue("appReliabilityScore", userExperienceAnalyticsModelScores.appReliabilityScore);
    writer.writeNumberValue("batteryHealthScore", userExperienceAnalyticsModelScores.batteryHealthScore);
    writer.writeNumberValue("endpointAnalyticsScore", userExperienceAnalyticsModelScores.endpointAnalyticsScore);
    writer.writeEnumValue<UserExperienceAnalyticsHealthState>("healthStatus", userExperienceAnalyticsModelScores.healthStatus);
    writer.writeStringValue("manufacturer", userExperienceAnalyticsModelScores.manufacturer);
    writer.writeStringValue("model", userExperienceAnalyticsModelScores.model);
    writer.writeNumberValue("modelDeviceCount", userExperienceAnalyticsModelScores.modelDeviceCount);
    writer.writeNumberValue("startupPerformanceScore", userExperienceAnalyticsModelScores.startupPerformanceScore);
    writer.writeNumberValue("workFromAnywhereScore", userExperienceAnalyticsModelScores.workFromAnywhereScore);
}
export interface UserExperienceAnalyticsModelScores extends Entity, Parsable {
    /**
     * Indicates a score calculated from application health data to indicate when a device is having problems running one or more applications. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    appReliabilityScore?: number;
    /**
     * Indicates a calulated score indicating the health of the device's battery. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    batteryHealthScore?: number;
    /**
     * Indicates a weighted average of the various scores. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    endpointAnalyticsScore?: number;
    /**
     * The healthStatus property
     */
    healthStatus?: UserExperienceAnalyticsHealthState;
    /**
     * The manufacturer name of the device. Examples: Microsoft Corporation, HP, Lenovo. Supports: $select, $OrderBy. Read-only.
     */
    manufacturer?: string;
    /**
     * The model name of the device. Supports: $select, $OrderBy. Read-only.
     */
    model?: string;
    /**
     * Indicates unique devices count of given model in a consolidated report. Supports: $select, $OrderBy. Read-only. Valid values -9.22337203685478E+18 to 9.22337203685478E+18
     */
    modelDeviceCount?: number;
    /**
     * Indicates a weighted average of boot score and logon score used for measuring startup performance. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    startupPerformanceScore?: number;
    /**
     * Indicates a weighted score of the work from anywhere on a device level. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    workFromAnywhereScore?: number;
}
// tslint:enable
// eslint-enable
