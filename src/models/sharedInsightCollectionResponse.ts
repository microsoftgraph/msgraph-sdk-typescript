// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createSharedInsightFromDiscriminatorValue, serializeSharedInsight, type SharedInsight } from './sharedInsight';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSharedInsightCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSharedInsightCollectionResponse;
}
export function deserializeIntoSharedInsightCollectionResponse(sharedInsightCollectionResponse: SharedInsightCollectionResponse | undefined = {} as SharedInsightCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sharedInsightCollectionResponse),
        "value": n => { sharedInsightCollectionResponse.value = n.getCollectionOfObjectValues<SharedInsight>(createSharedInsightFromDiscriminatorValue); },
    }
}
export function serializeSharedInsightCollectionResponse(writer: SerializationWriter, sharedInsightCollectionResponse: SharedInsightCollectionResponse | undefined = {} as SharedInsightCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, sharedInsightCollectionResponse)
        writer.writeCollectionOfObjectValues<SharedInsight>("value", sharedInsightCollectionResponse.value, serializeSharedInsight);
}
export interface SharedInsightCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SharedInsight[];
}
// tslint:enable
// eslint-enable
