// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookRangeBorderFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookRangeBorder;
}
export function deserializeIntoWorkbookRangeBorder(workbookRangeBorder: WorkbookRangeBorder | undefined = {} as WorkbookRangeBorder) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookRangeBorder),
        "color": n => { workbookRangeBorder.color = n.getStringValue(); },
        "sideIndex": n => { workbookRangeBorder.sideIndex = n.getStringValue(); },
        "style": n => { workbookRangeBorder.style = n.getStringValue(); },
        "weight": n => { workbookRangeBorder.weight = n.getStringValue(); },
    }
}
export function serializeWorkbookRangeBorder(writer: SerializationWriter, workbookRangeBorder: WorkbookRangeBorder | undefined = {} as WorkbookRangeBorder) : void {
        serializeEntity(writer, workbookRangeBorder)
        writer.writeStringValue("color", workbookRangeBorder.color);
        writer.writeStringValue("sideIndex", workbookRangeBorder.sideIndex);
        writer.writeStringValue("style", workbookRangeBorder.style);
        writer.writeStringValue("weight", workbookRangeBorder.weight);
}
export interface WorkbookRangeBorder extends Entity, Parsable {
    /**
     * HTML color code representing the color of the border line, of the form #RRGGBB (for example 'FFA500') or as a named HTML color (for example 'orange').
     */
    color?: string;
    /**
     * Constant value that indicates the specific side of the border. The possible values are: EdgeTop, EdgeBottom, EdgeLeft, EdgeRight, InsideVertical, InsideHorizontal, DiagonalDown, DiagonalUp. Read-only.
     */
    sideIndex?: string;
    /**
     * One of the constants of line style specifying the line style for the border. The possible values are: None, Continuous, Dash, DashDot, DashDotDot, Dot, Double, SlantDashDot.
     */
    style?: string;
    /**
     * Specifies the weight of the border around a range. The possible values are: Hairline, Thin, Medium, Thick.
     */
    weight?: string;
}
// tslint:enable
// eslint-enable
