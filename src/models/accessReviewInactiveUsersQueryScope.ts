// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAccessReviewQueryScope, serializeAccessReviewQueryScope, type AccessReviewQueryScope } from './accessReviewQueryScope';
import { type Duration, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessReviewInactiveUsersQueryScope extends AccessReviewQueryScope, Parsable {
    /**
     * Defines the duration of inactivity. Inactivity is based on the last sign in date of the user compared to the access review instance's start date. If this property is not specified, it's assigned the default value PT0S.
     */
    inactiveDuration?: Duration;
}
export function createAccessReviewInactiveUsersQueryScopeFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessReviewInactiveUsersQueryScope;
}
export function deserializeIntoAccessReviewInactiveUsersQueryScope(accessReviewInactiveUsersQueryScope: AccessReviewInactiveUsersQueryScope | undefined = {} as AccessReviewInactiveUsersQueryScope) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAccessReviewQueryScope(accessReviewInactiveUsersQueryScope),
        "inactiveDuration": n => { accessReviewInactiveUsersQueryScope.inactiveDuration = n.getDurationValue(); },
    }
}
export function serializeAccessReviewInactiveUsersQueryScope(writer: SerializationWriter, accessReviewInactiveUsersQueryScope: AccessReviewInactiveUsersQueryScope | undefined = {} as AccessReviewInactiveUsersQueryScope) : void {
    serializeAccessReviewQueryScope(writer, accessReviewInactiveUsersQueryScope)
    writer.writeDurationValue("inactiveDuration", accessReviewInactiveUsersQueryScope.inactiveDuration);
}
// tslint:enable
// eslint-enable
