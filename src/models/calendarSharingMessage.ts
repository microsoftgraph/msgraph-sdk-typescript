// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createCalendarSharingMessageActionFromDiscriminatorValue, serializeCalendarSharingMessageAction, type CalendarSharingMessageAction } from './calendarSharingMessageAction';
import { deserializeIntoMessage, serializeMessage, type Message } from './message';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CalendarSharingMessage extends Message, Parsable {
    /**
     * The canAccept property
     */
    canAccept?: boolean;
    /**
     * The sharingMessageAction property
     */
    sharingMessageAction?: CalendarSharingMessageAction;
    /**
     * The sharingMessageActions property
     */
    sharingMessageActions?: CalendarSharingMessageAction[];
    /**
     * The suggestedCalendarName property
     */
    suggestedCalendarName?: string;
}
export function createCalendarSharingMessageFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCalendarSharingMessage;
}
export function deserializeIntoCalendarSharingMessage(calendarSharingMessage: CalendarSharingMessage | undefined = {} as CalendarSharingMessage) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMessage(calendarSharingMessage),
        "canAccept": n => { calendarSharingMessage.canAccept = n.getBooleanValue(); },
        "sharingMessageAction": n => { calendarSharingMessage.sharingMessageAction = n.getObjectValue<CalendarSharingMessageAction>(createCalendarSharingMessageActionFromDiscriminatorValue); },
        "sharingMessageActions": n => { calendarSharingMessage.sharingMessageActions = n.getCollectionOfObjectValues<CalendarSharingMessageAction>(createCalendarSharingMessageActionFromDiscriminatorValue); },
        "suggestedCalendarName": n => { calendarSharingMessage.suggestedCalendarName = n.getStringValue(); },
    }
}
export function serializeCalendarSharingMessage(writer: SerializationWriter, calendarSharingMessage: CalendarSharingMessage | undefined = {} as CalendarSharingMessage) : void {
    serializeMessage(writer, calendarSharingMessage)
    writer.writeBooleanValue("canAccept", calendarSharingMessage.canAccept);
    writer.writeObjectValue<CalendarSharingMessageAction>("sharingMessageAction", calendarSharingMessage.sharingMessageAction, serializeCalendarSharingMessageAction);
    writer.writeCollectionOfObjectValues<CalendarSharingMessageAction>("sharingMessageActions", calendarSharingMessage.sharingMessageActions, serializeCalendarSharingMessageAction);
    writer.writeStringValue("suggestedCalendarName", calendarSharingMessage.suggestedCalendarName);
}
// tslint:enable
// eslint-enable
