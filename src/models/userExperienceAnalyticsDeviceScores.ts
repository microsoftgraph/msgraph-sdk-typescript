// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { UserExperienceAnalyticsHealthState } from './userExperienceAnalyticsHealthState';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsDeviceScoresFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsDeviceScores;
}
export function deserializeIntoUserExperienceAnalyticsDeviceScores(userExperienceAnalyticsDeviceScores: UserExperienceAnalyticsDeviceScores | undefined = {} as UserExperienceAnalyticsDeviceScores) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userExperienceAnalyticsDeviceScores),
        "appReliabilityScore": n => { userExperienceAnalyticsDeviceScores.appReliabilityScore = n.getNumberValue(); },
        "batteryHealthScore": n => { userExperienceAnalyticsDeviceScores.batteryHealthScore = n.getNumberValue(); },
        "deviceName": n => { userExperienceAnalyticsDeviceScores.deviceName = n.getStringValue(); },
        "endpointAnalyticsScore": n => { userExperienceAnalyticsDeviceScores.endpointAnalyticsScore = n.getNumberValue(); },
        "healthStatus": n => { userExperienceAnalyticsDeviceScores.healthStatus = n.getEnumValue<UserExperienceAnalyticsHealthState>(UserExperienceAnalyticsHealthState); },
        "manufacturer": n => { userExperienceAnalyticsDeviceScores.manufacturer = n.getStringValue(); },
        "model": n => { userExperienceAnalyticsDeviceScores.model = n.getStringValue(); },
        "startupPerformanceScore": n => { userExperienceAnalyticsDeviceScores.startupPerformanceScore = n.getNumberValue(); },
        "workFromAnywhereScore": n => { userExperienceAnalyticsDeviceScores.workFromAnywhereScore = n.getNumberValue(); },
    }
}
export function serializeUserExperienceAnalyticsDeviceScores(writer: SerializationWriter, userExperienceAnalyticsDeviceScores: UserExperienceAnalyticsDeviceScores | undefined = {} as UserExperienceAnalyticsDeviceScores) : void {
        serializeEntity(writer, userExperienceAnalyticsDeviceScores)
        writer.writeNumberValue("appReliabilityScore", userExperienceAnalyticsDeviceScores.appReliabilityScore);
        writer.writeNumberValue("batteryHealthScore", userExperienceAnalyticsDeviceScores.batteryHealthScore);
        writer.writeStringValue("deviceName", userExperienceAnalyticsDeviceScores.deviceName);
        writer.writeNumberValue("endpointAnalyticsScore", userExperienceAnalyticsDeviceScores.endpointAnalyticsScore);
        writer.writeEnumValue<UserExperienceAnalyticsHealthState>("healthStatus", userExperienceAnalyticsDeviceScores.healthStatus);
        writer.writeStringValue("manufacturer", userExperienceAnalyticsDeviceScores.manufacturer);
        writer.writeStringValue("model", userExperienceAnalyticsDeviceScores.model);
        writer.writeNumberValue("startupPerformanceScore", userExperienceAnalyticsDeviceScores.startupPerformanceScore);
        writer.writeNumberValue("workFromAnywhereScore", userExperienceAnalyticsDeviceScores.workFromAnywhereScore);
}
export interface UserExperienceAnalyticsDeviceScores extends Entity, Parsable {
    /**
     * Indicates a score calculated from application health data to indicate when a device is having problems running one or more applications. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    appReliabilityScore?: number;
    /**
     * Indicates a calulated score indicating the health of the device's battery. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    batteryHealthScore?: number;
    /**
     * The name of the device. Supports: $select, $OrderBy. Read-only.
     */
    deviceName?: string;
    /**
     * Indicates a weighted average of the various scores. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    endpointAnalyticsScore?: number;
    /**
     * The healthStatus property
     */
    healthStatus?: UserExperienceAnalyticsHealthState;
    /**
     * The manufacturer name of the device. Examples: Microsoft Corporation, HP, Lenovo. Supports: $select, $OrderBy. Read-only.
     */
    manufacturer?: string;
    /**
     * The model name of the device. Supports: $select, $OrderBy. Read-only.
     */
    model?: string;
    /**
     * Indicates a weighted average of boot score and logon score used for measuring startup performance. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    startupPerformanceScore?: number;
    /**
     * Indicates a weighted score of the work from anywhere on a device level. Valid values range from 0-100. Value -1 means associated score is unavailable. A higher score indicates a healthier device. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    workFromAnywhereScore?: number;
}
// tslint:enable
// eslint-enable
