// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessPackageCatalogFromDiscriminatorValue, serializeAccessPackageCatalog, type AccessPackageCatalog } from './accessPackageCatalog';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageCatalogCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AccessPackageCatalog[];
}
export function createAccessPackageCatalogCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageCatalogCollectionResponse;
}
export function deserializeIntoAccessPackageCatalogCollectionResponse(accessPackageCatalogCollectionResponse: AccessPackageCatalogCollectionResponse | undefined = {} as AccessPackageCatalogCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(accessPackageCatalogCollectionResponse),
        "value": n => { accessPackageCatalogCollectionResponse.value = n.getCollectionOfObjectValues<AccessPackageCatalog>(createAccessPackageCatalogFromDiscriminatorValue); },
    }
}
export function serializeAccessPackageCatalogCollectionResponse(writer: SerializationWriter, accessPackageCatalogCollectionResponse: AccessPackageCatalogCollectionResponse | undefined = {} as AccessPackageCatalogCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, accessPackageCatalogCollectionResponse)
        writer.writeCollectionOfObjectValues<AccessPackageCatalog>("value", accessPackageCatalogCollectionResponse.value, );
}
// tslint:enable
// eslint-enable
