// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type SwapShiftsChangeRequest } from './index';
import { deserializeIntoScheduleChangeRequest, serializeScheduleChangeRequest, type ScheduleChangeRequest } from './scheduleChangeRequest';
import { deserializeIntoSwapShiftsChangeRequest } from './swapShiftsChangeRequest';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOfferShiftRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.swapShiftsChangeRequest":
                    return deserializeIntoSwapShiftsChangeRequest;
            }
        }
    }
    return deserializeIntoOfferShiftRequest;
}
export function deserializeIntoOfferShiftRequest(offerShiftRequest: OfferShiftRequest | undefined = {} as OfferShiftRequest) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoScheduleChangeRequest(offerShiftRequest),
        "recipientActionDateTime": n => { offerShiftRequest.recipientActionDateTime = n.getDateValue(); },
        "recipientActionMessage": n => { offerShiftRequest.recipientActionMessage = n.getStringValue(); },
        "recipientUserId": n => { offerShiftRequest.recipientUserId = n.getStringValue(); },
        "senderShiftId": n => { offerShiftRequest.senderShiftId = n.getStringValue(); },
    }
}
export interface OfferShiftRequest extends Parsable, ScheduleChangeRequest {
    /**
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
     */
    recipientActionDateTime?: Date;
    /**
     * Custom message sent by recipient of the offer shift request.
     */
    recipientActionMessage?: string;
    /**
     * User ID of the recipient of the offer shift request.
     */
    recipientUserId?: string;
    /**
     * User ID of the sender of the offer shift request.
     */
    senderShiftId?: string;
}
export function serializeOfferShiftRequest(writer: SerializationWriter, offerShiftRequest: OfferShiftRequest | undefined = {} as OfferShiftRequest) : void {
    serializeScheduleChangeRequest(writer, offerShiftRequest)
    writer.writeStringValue("recipientActionMessage", offerShiftRequest.recipientActionMessage);
    writer.writeStringValue("recipientUserId", offerShiftRequest.recipientUserId);
    writer.writeStringValue("senderShiftId", offerShiftRequest.senderShiftId);
}
// tslint:enable
// eslint-enable
