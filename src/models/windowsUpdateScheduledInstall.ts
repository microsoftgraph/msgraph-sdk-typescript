// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { WeeklySchedule } from './weeklySchedule';
import { deserializeIntoWindowsUpdateInstallScheduleType, serializeWindowsUpdateInstallScheduleType, type WindowsUpdateInstallScheduleType } from './windowsUpdateInstallScheduleType';
import { type Parsable, type ParseNode, type SerializationWriter, type TimeOnly } from '@microsoft/kiota-abstractions';

export function createWindowsUpdateScheduledInstallFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsUpdateScheduledInstall;
}
export function deserializeIntoWindowsUpdateScheduledInstall(windowsUpdateScheduledInstall: WindowsUpdateScheduledInstall | undefined = {} as WindowsUpdateScheduledInstall) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWindowsUpdateInstallScheduleType(windowsUpdateScheduledInstall),
        "scheduledInstallDay": n => { windowsUpdateScheduledInstall.scheduledInstallDay = n.getEnumValue<WeeklySchedule>(WeeklySchedule); },
        "scheduledInstallTime": n => { windowsUpdateScheduledInstall.scheduledInstallTime = n.getTimeOnlyValue(); },
    }
}
export function serializeWindowsUpdateScheduledInstall(writer: SerializationWriter, windowsUpdateScheduledInstall: WindowsUpdateScheduledInstall | undefined = {} as WindowsUpdateScheduledInstall) : void {
    serializeWindowsUpdateInstallScheduleType(writer, windowsUpdateScheduledInstall)
    writer.writeEnumValue<WeeklySchedule>("scheduledInstallDay", windowsUpdateScheduledInstall.scheduledInstallDay);
    writer.writeTimeOnlyValue("scheduledInstallTime", windowsUpdateScheduledInstall.scheduledInstallTime);
}
export interface WindowsUpdateScheduledInstall extends Parsable, WindowsUpdateInstallScheduleType {
    /**
     * Possible values for a weekly schedule.
     */
    scheduledInstallDay?: WeeklySchedule;
    /**
     * Scheduled Install Time during day
     */
    scheduledInstallTime?: TimeOnly;
}
// tslint:enable
// eslint-enable
