import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createLearningCourseActivityFromDiscriminatorValue, serializeLearningCourseActivity, type LearningCourseActivity } from './learningCourseActivity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createEmployeeExperienceUserFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEmployeeExperienceUser;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoEmployeeExperienceUser(employeeExperienceUser: EmployeeExperienceUser | undefined = {} as EmployeeExperienceUser) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(employeeExperienceUser),
        "learningCourseActivities": n => { employeeExperienceUser.learningCourseActivities = n.getCollectionOfObjectValues<LearningCourseActivity>(createLearningCourseActivityFromDiscriminatorValue); },
    }
}
export interface EmployeeExperienceUser extends Entity, Parsable {
    /**
     * The learningCourseActivities property
     */
    learningCourseActivities?: LearningCourseActivity[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeEmployeeExperienceUser(writer: SerializationWriter, employeeExperienceUser: EmployeeExperienceUser | undefined = {} as EmployeeExperienceUser) : void {
        serializeEntity(writer, employeeExperienceUser)
        writer.writeCollectionOfObjectValues<LearningCourseActivity>("learningCourseActivities", employeeExperienceUser.learningCourseActivities, );
}
