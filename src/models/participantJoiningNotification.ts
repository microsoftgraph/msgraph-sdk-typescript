import { createCallFromDiscriminatorValue, serializeCall, type Call } from './call';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createParticipantJoiningNotificationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoParticipantJoiningNotification;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoParticipantJoiningNotification(participantJoiningNotification: ParticipantJoiningNotification | undefined = {} as ParticipantJoiningNotification) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(participantJoiningNotification),
        "call": n => { participantJoiningNotification.call = n.getObjectValue<Call>(createCallFromDiscriminatorValue); },
    }
}
export interface ParticipantJoiningNotification extends Entity, Parsable {
    /**
     * The call property
     */
    call?: Call;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeParticipantJoiningNotification(writer: SerializationWriter, participantJoiningNotification: ParticipantJoiningNotification | undefined = {} as ParticipantJoiningNotification) : void {
        serializeEntity(writer, participantJoiningNotification)
        writer.writeObjectValue<Call>("call", participantJoiningNotification.call, );
}
