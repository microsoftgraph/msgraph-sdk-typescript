// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { BookingReminderRecipients } from './bookingReminderRecipients';
import { type AdditionalDataHolder, type Duration, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingReminder extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The message in the reminder.
     */
    message?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The amount of time before the start of an appointment that the reminder should be sent. It's denoted in ISO 8601 format.
     */
    offset?: Duration;
    /**
     * The recipients property
     */
    recipients?: BookingReminderRecipients;
}
export function createBookingReminderFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBookingReminder;
}
export function deserializeIntoBookingReminder(bookingReminder: BookingReminder | undefined = {} as BookingReminder) : Record<string, (node: ParseNode) => void> {
    return {
        "message": n => { bookingReminder.message = n.getStringValue(); },
        "@odata.type": n => { bookingReminder.odataType = n.getStringValue(); },
        "offset": n => { bookingReminder.offset = n.getDurationValue(); },
        "recipients": n => { bookingReminder.recipients = n.getEnumValue<BookingReminderRecipients>(BookingReminderRecipients); },
    }
}
export function serializeBookingReminder(writer: SerializationWriter, bookingReminder: BookingReminder | undefined = {} as BookingReminder) : void {
    writer.writeStringValue("message", bookingReminder.message);
    writer.writeStringValue("@odata.type", bookingReminder.odataType);
    writer.writeDurationValue("offset", bookingReminder.offset);
    writer.writeEnumValue<BookingReminderRecipients>("recipients", bookingReminder.recipients);
    writer.writeAdditionalData(bookingReminder.additionalData);
}
// tslint:enable
// eslint-enable
