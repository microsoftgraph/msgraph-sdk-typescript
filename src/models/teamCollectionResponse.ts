import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createTeamFromDiscriminatorValue, serializeTeam, type Team } from './team';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTeamCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTeamCollectionResponse(teamCollectionResponse: TeamCollectionResponse | undefined = {} as TeamCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(teamCollectionResponse),
        "value": n => { teamCollectionResponse.value = n.getCollectionOfObjectValues<Team>(createTeamFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTeamCollectionResponse(writer: SerializationWriter, teamCollectionResponse: TeamCollectionResponse | undefined = {} as TeamCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, teamCollectionResponse)
        writer.writeCollectionOfObjectValues<Team>("value", teamCollectionResponse.value, );
}
export interface TeamCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Team[];
}
