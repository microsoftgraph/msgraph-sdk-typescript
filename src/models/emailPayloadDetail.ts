// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoPayloadDetail, serializePayloadDetail, type PayloadDetail } from './payloadDetail';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEmailPayloadDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEmailPayloadDetail;
}
export function deserializeIntoEmailPayloadDetail(emailPayloadDetail: EmailPayloadDetail | undefined = {} as EmailPayloadDetail) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPayloadDetail(emailPayloadDetail),
        "fromEmail": n => { emailPayloadDetail.fromEmail = n.getStringValue(); },
        "fromName": n => { emailPayloadDetail.fromName = n.getStringValue(); },
        "isExternalSender": n => { emailPayloadDetail.isExternalSender = n.getBooleanValue(); },
        "subject": n => { emailPayloadDetail.subject = n.getStringValue(); },
    }
}
export interface EmailPayloadDetail extends Parsable, PayloadDetail {
    /**
     * Email address of the user.
     */
    fromEmail?: string;
    /**
     * Display name of the user.
     */
    fromName?: string;
    /**
     * Indicates whether the sender isn't from the user's organization.
     */
    isExternalSender?: boolean;
    /**
     * The subject of the email address sent to the user.
     */
    subject?: string;
}
export function serializeEmailPayloadDetail(writer: SerializationWriter, emailPayloadDetail: EmailPayloadDetail | undefined = {} as EmailPayloadDetail) : void {
        serializePayloadDetail(writer, emailPayloadDetail)
        writer.writeStringValue("fromEmail", emailPayloadDetail.fromEmail);
        writer.writeStringValue("fromName", emailPayloadDetail.fromName);
        writer.writeBooleanValue("isExternalSender", emailPayloadDetail.isExternalSender);
        writer.writeStringValue("subject", emailPayloadDetail.subject);
}
// tslint:enable
// eslint-enable
