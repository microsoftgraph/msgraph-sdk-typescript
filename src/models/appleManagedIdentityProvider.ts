// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoIdentityProviderBase, serializeIdentityProviderBase, type IdentityProviderBase } from './identityProviderBase';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AppleManagedIdentityProvider extends IdentityProviderBase, Parsable {
    /**
     * The certificate data, which is a long string of text from the certificate. Can be null.
     */
    certificateData?: string;
    /**
     * The Apple developer identifier. Required.
     */
    developerId?: string;
    /**
     * The Apple key identifier. Required.
     */
    keyId?: string;
    /**
     * The Apple service identifier. Required.
     */
    serviceId?: string;
}
export function createAppleManagedIdentityProviderFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAppleManagedIdentityProvider;
}
export function deserializeIntoAppleManagedIdentityProvider(appleManagedIdentityProvider: AppleManagedIdentityProvider | undefined = {} as AppleManagedIdentityProvider) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentityProviderBase(appleManagedIdentityProvider),
        "certificateData": n => { appleManagedIdentityProvider.certificateData = n.getStringValue(); },
        "developerId": n => { appleManagedIdentityProvider.developerId = n.getStringValue(); },
        "keyId": n => { appleManagedIdentityProvider.keyId = n.getStringValue(); },
        "serviceId": n => { appleManagedIdentityProvider.serviceId = n.getStringValue(); },
    }
}
export function serializeAppleManagedIdentityProvider(writer: SerializationWriter, appleManagedIdentityProvider: AppleManagedIdentityProvider | undefined = {} as AppleManagedIdentityProvider) : void {
    serializeIdentityProviderBase(writer, appleManagedIdentityProvider)
    writer.writeStringValue("certificateData", appleManagedIdentityProvider.certificateData);
    writer.writeStringValue("developerId", appleManagedIdentityProvider.developerId);
    writer.writeStringValue("keyId", appleManagedIdentityProvider.keyId);
    writer.writeStringValue("serviceId", appleManagedIdentityProvider.serviceId);
}
// tslint:enable
// eslint-enable
