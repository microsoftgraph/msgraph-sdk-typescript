// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsScoreHistoryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsScoreHistory;
}
export function deserializeIntoUserExperienceAnalyticsScoreHistory(userExperienceAnalyticsScoreHistory: UserExperienceAnalyticsScoreHistory | undefined = {} as UserExperienceAnalyticsScoreHistory) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userExperienceAnalyticsScoreHistory),
        "startupDateTime": n => { userExperienceAnalyticsScoreHistory.startupDateTime = n.getDateValue(); },
    }
}
export function serializeUserExperienceAnalyticsScoreHistory(writer: SerializationWriter, userExperienceAnalyticsScoreHistory: UserExperienceAnalyticsScoreHistory | undefined = {} as UserExperienceAnalyticsScoreHistory) : void {
    serializeEntity(writer, userExperienceAnalyticsScoreHistory)
    writer.writeDateValue("startupDateTime", userExperienceAnalyticsScoreHistory.startupDateTime);
}
export interface UserExperienceAnalyticsScoreHistory extends Entity, Parsable {
    /**
     * The device startup date time. The value cannot be modified and is automatically populated. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Returned by default.
     */
    startupDateTime?: Date;
}
// tslint:enable
// eslint-enable
