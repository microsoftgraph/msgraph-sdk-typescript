import { deserializeIntoManagedEBook, serializeManagedEBook, type ManagedEBook } from './managedEBook';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { Guid } from 'guid-typescript';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createIosVppEBookFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosVppEBook;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoIosVppEBook(iosVppEBook: IosVppEBook | undefined = {} as IosVppEBook) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoManagedEBook(iosVppEBook),
        "appleId": n => { iosVppEBook.appleId = n.getStringValue(); },
        "genres": n => { iosVppEBook.genres = n.getCollectionOfPrimitiveValues<string>(); },
        "language": n => { iosVppEBook.language = n.getStringValue(); },
        "seller": n => { iosVppEBook.seller = n.getStringValue(); },
        "totalLicenseCount": n => { iosVppEBook.totalLicenseCount = n.getNumberValue(); },
        "usedLicenseCount": n => { iosVppEBook.usedLicenseCount = n.getNumberValue(); },
        "vppOrganizationName": n => { iosVppEBook.vppOrganizationName = n.getStringValue(); },
        "vppTokenId": n => { iosVppEBook.vppTokenId = n.getGuidValue(); },
    }
}
export interface IosVppEBook extends ManagedEBook, Parsable {
    /**
     * The Apple ID associated with Vpp token.
     */
    appleId?: string;
    /**
     * Genres.
     */
    genres?: string[];
    /**
     * Language.
     */
    language?: string;
    /**
     * Seller.
     */
    seller?: string;
    /**
     * Total license count.
     */
    totalLicenseCount?: number;
    /**
     * Used license count.
     */
    usedLicenseCount?: number;
    /**
     * The Vpp token's organization name.
     */
    vppOrganizationName?: string;
    /**
     * The Vpp token ID.
     */
    vppTokenId?: Guid;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeIosVppEBook(writer: SerializationWriter, iosVppEBook: IosVppEBook | undefined = {} as IosVppEBook) : void {
        serializeManagedEBook(writer, iosVppEBook)
        writer.writeStringValue("appleId", iosVppEBook.appleId);
        writer.writeCollectionOfPrimitiveValues<string>("genres", iosVppEBook.genres);
        writer.writeStringValue("language", iosVppEBook.language);
        writer.writeStringValue("seller", iosVppEBook.seller);
        writer.writeNumberValue("totalLicenseCount", iosVppEBook.totalLicenseCount);
        writer.writeNumberValue("usedLicenseCount", iosVppEBook.usedLicenseCount);
        writer.writeStringValue("vppOrganizationName", iosVppEBook.vppOrganizationName);
        writer.writeGuidValue("vppTokenId", iosVppEBook.vppTokenId);
}
