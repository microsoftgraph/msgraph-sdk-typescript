// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createMobileAppContentFileFromDiscriminatorValue, serializeMobileAppContentFile, type MobileAppContentFile } from './mobileAppContentFile';
import { createMobileContainedAppFromDiscriminatorValue, serializeMobileContainedApp, type MobileContainedApp } from './mobileContainedApp';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMobileAppContentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMobileAppContent;
}
export function deserializeIntoMobileAppContent(mobileAppContent: MobileAppContent | undefined = {} as MobileAppContent) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(mobileAppContent),
        "containedApps": n => { mobileAppContent.containedApps = n.getCollectionOfObjectValues<MobileContainedApp>(createMobileContainedAppFromDiscriminatorValue); },
        "files": n => { mobileAppContent.files = n.getCollectionOfObjectValues<MobileAppContentFile>(createMobileAppContentFileFromDiscriminatorValue); },
    }
}
export interface MobileAppContent extends Entity, Parsable {
    /**
     * The collection of contained apps in a MobileLobApp acting as a package.
     */
    containedApps?: MobileContainedApp[];
    /**
     * The list of files for this app content version.
     */
    files?: MobileAppContentFile[];
}
export function serializeMobileAppContent(writer: SerializationWriter, mobileAppContent: MobileAppContent | undefined = {} as MobileAppContent) : void {
        serializeEntity(writer, mobileAppContent)
        writer.writeCollectionOfObjectValues<MobileContainedApp>("containedApps", mobileAppContent.containedApps, );
        writer.writeCollectionOfObjectValues<MobileAppContentFile>("files", mobileAppContent.files, );
}
// tslint:enable
// eslint-enable
