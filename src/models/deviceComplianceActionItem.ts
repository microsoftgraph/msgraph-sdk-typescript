// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { DeviceComplianceActionType } from './deviceComplianceActionType';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceComplianceActionItemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceComplianceActionItem;
}
export function deserializeIntoDeviceComplianceActionItem(deviceComplianceActionItem: DeviceComplianceActionItem | undefined = {} as DeviceComplianceActionItem) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceComplianceActionItem),
        "actionType": n => { deviceComplianceActionItem.actionType = n.getEnumValue<DeviceComplianceActionType>(DeviceComplianceActionType); },
        "gracePeriodHours": n => { deviceComplianceActionItem.gracePeriodHours = n.getNumberValue(); },
        "notificationMessageCCList": n => { deviceComplianceActionItem.notificationMessageCCList = n.getCollectionOfPrimitiveValues<string>(); },
        "notificationTemplateId": n => { deviceComplianceActionItem.notificationTemplateId = n.getStringValue(); },
    }
}
export interface DeviceComplianceActionItem extends Entity, Parsable {
    /**
     * Scheduled Action Type Enum
     */
    actionType?: DeviceComplianceActionType;
    /**
     * Number of hours to wait till the action will be enforced. Valid values 0 to 8760
     */
    gracePeriodHours?: number;
    /**
     * A list of group IDs to speicify who to CC this notification message to.
     */
    notificationMessageCCList?: string[];
    /**
     * What notification Message template to use
     */
    notificationTemplateId?: string;
}
export function serializeDeviceComplianceActionItem(writer: SerializationWriter, deviceComplianceActionItem: DeviceComplianceActionItem | undefined = {} as DeviceComplianceActionItem) : void {
    serializeEntity(writer, deviceComplianceActionItem)
    writer.writeEnumValue<DeviceComplianceActionType>("actionType", deviceComplianceActionItem.actionType);
    writer.writeNumberValue("gracePeriodHours", deviceComplianceActionItem.gracePeriodHours);
    writer.writeCollectionOfPrimitiveValues<string>("notificationMessageCCList", deviceComplianceActionItem.notificationMessageCCList);
    writer.writeStringValue("notificationTemplateId", deviceComplianceActionItem.notificationTemplateId);
}
// tslint:enable
// eslint-enable
