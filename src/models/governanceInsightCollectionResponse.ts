// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createGovernanceInsightFromDiscriminatorValue, serializeGovernanceInsight, type GovernanceInsight } from './governanceInsight';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGovernanceInsightCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGovernanceInsightCollectionResponse;
}
export function deserializeIntoGovernanceInsightCollectionResponse(governanceInsightCollectionResponse: GovernanceInsightCollectionResponse | undefined = {} as GovernanceInsightCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(governanceInsightCollectionResponse),
        "value": n => { governanceInsightCollectionResponse.value = n.getCollectionOfObjectValues<GovernanceInsight>(createGovernanceInsightFromDiscriminatorValue); },
    }
}
export interface GovernanceInsightCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: GovernanceInsight[];
}
export function serializeGovernanceInsightCollectionResponse(writer: SerializationWriter, governanceInsightCollectionResponse: GovernanceInsightCollectionResponse | undefined = {} as GovernanceInsightCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, governanceInsightCollectionResponse)
    writer.writeCollectionOfObjectValues<GovernanceInsight>("value", governanceInsightCollectionResponse.value, serializeGovernanceInsight);
}
// tslint:enable
// eslint-enable
