// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEventMessageDetail, serializeEventMessageDetail, type EventMessageDetail } from './eventMessageDetail';
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CallTranscriptEventMessageDetail extends EventMessageDetail, Parsable {
    /**
     * Unique identifier of the call.
     */
    callId?: string;
    /**
     * Unique identifier for a call transcript.
     */
    callTranscriptICalUid?: string;
    /**
     * The organizer of the meeting.
     */
    meetingOrganizer?: IdentitySet;
}
export function createCallTranscriptEventMessageDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCallTranscriptEventMessageDetail;
}
export function deserializeIntoCallTranscriptEventMessageDetail(callTranscriptEventMessageDetail: CallTranscriptEventMessageDetail | undefined = {} as CallTranscriptEventMessageDetail) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEventMessageDetail(callTranscriptEventMessageDetail),
        "callId": n => { callTranscriptEventMessageDetail.callId = n.getStringValue(); },
        "callTranscriptICalUid": n => { callTranscriptEventMessageDetail.callTranscriptICalUid = n.getStringValue(); },
        "meetingOrganizer": n => { callTranscriptEventMessageDetail.meetingOrganizer = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
    }
}
export function serializeCallTranscriptEventMessageDetail(writer: SerializationWriter, callTranscriptEventMessageDetail: CallTranscriptEventMessageDetail | undefined = {} as CallTranscriptEventMessageDetail) : void {
        serializeEventMessageDetail(writer, callTranscriptEventMessageDetail)
        writer.writeStringValue("callId", callTranscriptEventMessageDetail.callId);
        writer.writeStringValue("callTranscriptICalUid", callTranscriptEventMessageDetail.callTranscriptICalUid);
        writer.writeObjectValue<IdentitySet>("meetingOrganizer", callTranscriptEventMessageDetail.meetingOrganizer, serializeIdentitySet);
}
// tslint:enable
// eslint-enable
