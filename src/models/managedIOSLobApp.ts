// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIosDeviceTypeFromDiscriminatorValue, serializeIosDeviceType, type IosDeviceType } from './iosDeviceType';
import { createIosMinimumOperatingSystemFromDiscriminatorValue, serializeIosMinimumOperatingSystem, type IosMinimumOperatingSystem } from './iosMinimumOperatingSystem';
import { deserializeIntoManagedMobileLobApp, serializeManagedMobileLobApp, type ManagedMobileLobApp } from './managedMobileLobApp';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createManagedIOSLobAppFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoManagedIOSLobApp;
}
export function deserializeIntoManagedIOSLobApp(managedIOSLobApp: ManagedIOSLobApp | undefined = {} as ManagedIOSLobApp) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoManagedMobileLobApp(managedIOSLobApp),
        "applicableDeviceType": n => { managedIOSLobApp.applicableDeviceType = n.getObjectValue<IosDeviceType>(createIosDeviceTypeFromDiscriminatorValue); },
        "buildNumber": n => { managedIOSLobApp.buildNumber = n.getStringValue(); },
        "bundleId": n => { managedIOSLobApp.bundleId = n.getStringValue(); },
        "expirationDateTime": n => { managedIOSLobApp.expirationDateTime = n.getDateValue(); },
        "minimumSupportedOperatingSystem": n => { managedIOSLobApp.minimumSupportedOperatingSystem = n.getObjectValue<IosMinimumOperatingSystem>(createIosMinimumOperatingSystemFromDiscriminatorValue); },
        "versionNumber": n => { managedIOSLobApp.versionNumber = n.getStringValue(); },
    }
}
export interface ManagedIOSLobApp extends ManagedMobileLobApp, Parsable {
    /**
     * Contains properties of the possible iOS device types the mobile app can run on.
     */
    applicableDeviceType?: IosDeviceType;
    /**
     * The build number of managed iOS Line of Business (LoB) app.
     */
    buildNumber?: string;
    /**
     * The Identity Name.
     */
    bundleId?: string;
    /**
     * The expiration time.
     */
    expirationDateTime?: Date;
    /**
     * The value for the minimum applicable operating system.
     */
    minimumSupportedOperatingSystem?: IosMinimumOperatingSystem;
    /**
     * The version number of managed iOS Line of Business (LoB) app.
     */
    versionNumber?: string;
}
export function serializeManagedIOSLobApp(writer: SerializationWriter, managedIOSLobApp: ManagedIOSLobApp | undefined = {} as ManagedIOSLobApp) : void {
        serializeManagedMobileLobApp(writer, managedIOSLobApp)
        writer.writeObjectValue<IosDeviceType>("applicableDeviceType", managedIOSLobApp.applicableDeviceType, serializeIosDeviceType);
        writer.writeStringValue("buildNumber", managedIOSLobApp.buildNumber);
        writer.writeStringValue("bundleId", managedIOSLobApp.bundleId);
        writer.writeDateValue("expirationDateTime", managedIOSLobApp.expirationDateTime);
        writer.writeObjectValue<IosMinimumOperatingSystem>("minimumSupportedOperatingSystem", managedIOSLobApp.minimumSupportedOperatingSystem, serializeIosMinimumOperatingSystem);
        writer.writeStringValue("versionNumber", managedIOSLobApp.versionNumber);
}
// tslint:enable
// eslint-enable
