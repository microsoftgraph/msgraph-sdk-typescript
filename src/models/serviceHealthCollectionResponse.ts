import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createServiceHealthFromDiscriminatorValue, serializeServiceHealth, type ServiceHealth } from './serviceHealth';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createServiceHealthCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoServiceHealthCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoServiceHealthCollectionResponse(serviceHealthCollectionResponse: ServiceHealthCollectionResponse | undefined = {} as ServiceHealthCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(serviceHealthCollectionResponse),
        "value": n => { serviceHealthCollectionResponse.value = n.getCollectionOfObjectValues<ServiceHealth>(createServiceHealthFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeServiceHealthCollectionResponse(writer: SerializationWriter, serviceHealthCollectionResponse: ServiceHealthCollectionResponse | undefined = {} as ServiceHealthCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, serviceHealthCollectionResponse)
        writer.writeCollectionOfObjectValues<ServiceHealth>("value", serviceHealthCollectionResponse.value, );
}
export interface ServiceHealthCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ServiceHealth[];
}
