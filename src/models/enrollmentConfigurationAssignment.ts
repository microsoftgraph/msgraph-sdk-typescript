// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue, serializeDeviceAndAppManagementAssignmentTarget, type DeviceAndAppManagementAssignmentTarget } from './deviceAndAppManagementAssignmentTarget';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEnrollmentConfigurationAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEnrollmentConfigurationAssignment;
}
export function deserializeIntoEnrollmentConfigurationAssignment(enrollmentConfigurationAssignment: EnrollmentConfigurationAssignment | undefined = {} as EnrollmentConfigurationAssignment) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(enrollmentConfigurationAssignment),
        "target": n => { enrollmentConfigurationAssignment.target = n.getObjectValue<DeviceAndAppManagementAssignmentTarget>(createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue); },
    }
}
export interface EnrollmentConfigurationAssignment extends Entity, Parsable {
    /**
     * Represents an assignment to managed devices in the tenant
     */
    target?: DeviceAndAppManagementAssignmentTarget;
}
export function serializeEnrollmentConfigurationAssignment(writer: SerializationWriter, enrollmentConfigurationAssignment: EnrollmentConfigurationAssignment | undefined = {} as EnrollmentConfigurationAssignment) : void {
    serializeEntity(writer, enrollmentConfigurationAssignment)
    writer.writeObjectValue<DeviceAndAppManagementAssignmentTarget>("target", enrollmentConfigurationAssignment.target, serializeDeviceAndAppManagementAssignmentTarget);
}
// tslint:enable
// eslint-enable
