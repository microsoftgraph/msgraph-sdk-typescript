// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSharedFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoShared;
}
export function deserializeIntoShared(shared: Shared | undefined = {} as Shared) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { shared.odataType = n.getStringValue(); },
        "owner": n => { shared.owner = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "scope": n => { shared.scope = n.getStringValue(); },
        "sharedBy": n => { shared.sharedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "sharedDateTime": n => { shared.sharedDateTime = n.getDateValue(); },
    }
}
export function serializeShared(writer: SerializationWriter, shared: Shared | undefined = {} as Shared) : void {
    writer.writeStringValue("@odata.type", shared.odataType);
    writer.writeObjectValue<IdentitySet>("owner", shared.owner, serializeIdentitySet);
    writer.writeStringValue("scope", shared.scope);
    writer.writeObjectValue<IdentitySet>("sharedBy", shared.sharedBy, serializeIdentitySet);
    writer.writeDateValue("sharedDateTime", shared.sharedDateTime);
    writer.writeAdditionalData(shared.additionalData);
}
export interface Shared extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The identity of the owner of the shared item. Read-only.
     */
    owner?: IdentitySet;
    /**
     * Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.
     */
    scope?: string;
    /**
     * The identity of the user who shared the item. Read-only.
     */
    sharedBy?: IdentitySet;
    /**
     * The UTC date and time when the item was shared. Read-only.
     */
    sharedDateTime?: Date;
}
// tslint:enable
// eslint-enable
