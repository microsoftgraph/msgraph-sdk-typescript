// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEventMessageDetail, serializeEventMessageDetail, type EventMessageDetail } from './eventMessageDetail';
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { TeamworkCallEventType } from './teamworkCallEventType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CallStartedEventMessageDetail extends EventMessageDetail, Parsable {
    /**
     * Represents the call event type. Possible values are: call, meeting, screenShare, unknownFutureValue.
     */
    callEventType?: TeamworkCallEventType;
    /**
     * Unique identifier of the call.
     */
    callId?: string;
    /**
     * Initiator of the event.
     */
    initiator?: IdentitySet;
}
export function createCallStartedEventMessageDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCallStartedEventMessageDetail;
}
export function deserializeIntoCallStartedEventMessageDetail(callStartedEventMessageDetail: CallStartedEventMessageDetail | undefined = {} as CallStartedEventMessageDetail) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEventMessageDetail(callStartedEventMessageDetail),
        "callEventType": n => { callStartedEventMessageDetail.callEventType = n.getEnumValue<TeamworkCallEventType>(TeamworkCallEventType); },
        "callId": n => { callStartedEventMessageDetail.callId = n.getStringValue(); },
        "initiator": n => { callStartedEventMessageDetail.initiator = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
    }
}
export function serializeCallStartedEventMessageDetail(writer: SerializationWriter, callStartedEventMessageDetail: CallStartedEventMessageDetail | undefined = {} as CallStartedEventMessageDetail) : void {
        serializeEventMessageDetail(writer, callStartedEventMessageDetail)
        writer.writeEnumValue<TeamworkCallEventType>("callEventType", callStartedEventMessageDetail.callEventType);
        writer.writeStringValue("callId", callStartedEventMessageDetail.callId);
        writer.writeObjectValue<IdentitySet>("initiator", callStartedEventMessageDetail.initiator, serializeIdentitySet);
}
// tslint:enable
// eslint-enable
