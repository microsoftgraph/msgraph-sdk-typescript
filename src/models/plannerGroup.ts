// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createPlannerPlanFromDiscriminatorValue, serializePlannerPlan, type PlannerPlan } from './plannerPlan';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlannerGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerGroup;
}
export function deserializeIntoPlannerGroup(plannerGroup: PlannerGroup | undefined = {} as PlannerGroup) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(plannerGroup),
        "plans": n => { plannerGroup.plans = n.getCollectionOfObjectValues<PlannerPlan>(createPlannerPlanFromDiscriminatorValue); },
    }
}
export interface PlannerGroup extends Entity, Parsable {
    /**
     * Read-only. Nullable. Returns the plannerPlans owned by the group.
     */
    plans?: PlannerPlan[];
}
export function serializePlannerGroup(writer: SerializationWriter, plannerGroup: PlannerGroup | undefined = {} as PlannerGroup) : void {
    serializeEntity(writer, plannerGroup)
    writer.writeCollectionOfObjectValues<PlannerPlan>("plans", plannerGroup.plans, serializePlannerPlan);
}
// tslint:enable
// eslint-enable
