// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamMessagingSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamMessagingSettings;
}
export function deserializeIntoTeamMessagingSettings(teamMessagingSettings: TeamMessagingSettings | undefined = {} as TeamMessagingSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "allowChannelMentions": n => { teamMessagingSettings.allowChannelMentions = n.getBooleanValue(); },
        "allowOwnerDeleteMessages": n => { teamMessagingSettings.allowOwnerDeleteMessages = n.getBooleanValue(); },
        "allowTeamMentions": n => { teamMessagingSettings.allowTeamMentions = n.getBooleanValue(); },
        "allowUserDeleteMessages": n => { teamMessagingSettings.allowUserDeleteMessages = n.getBooleanValue(); },
        "allowUserEditMessages": n => { teamMessagingSettings.allowUserEditMessages = n.getBooleanValue(); },
        "@odata.type": n => { teamMessagingSettings.odataType = n.getStringValue(); },
    }
}
export function serializeTeamMessagingSettings(writer: SerializationWriter, teamMessagingSettings: TeamMessagingSettings | undefined = {} as TeamMessagingSettings) : void {
        writer.writeBooleanValue("allowChannelMentions", teamMessagingSettings.allowChannelMentions);
        writer.writeBooleanValue("allowOwnerDeleteMessages", teamMessagingSettings.allowOwnerDeleteMessages);
        writer.writeBooleanValue("allowTeamMentions", teamMessagingSettings.allowTeamMentions);
        writer.writeBooleanValue("allowUserDeleteMessages", teamMessagingSettings.allowUserDeleteMessages);
        writer.writeBooleanValue("allowUserEditMessages", teamMessagingSettings.allowUserEditMessages);
        writer.writeStringValue("@odata.type", teamMessagingSettings.odataType);
        writer.writeAdditionalData(teamMessagingSettings.additionalData);
}
export interface TeamMessagingSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If set to true, @channel mentions are allowed.
     */
    allowChannelMentions?: boolean;
    /**
     * If set to true, owners can delete any message.
     */
    allowOwnerDeleteMessages?: boolean;
    /**
     * If set to true, @team mentions are allowed.
     */
    allowTeamMentions?: boolean;
    /**
     * If set to true, users can delete their messages.
     */
    allowUserDeleteMessages?: boolean;
    /**
     * If set to true, users can edit their messages.
     */
    allowUserEditMessages?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
