// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAuthenticationMethodTarget, serializeAuthenticationMethodTarget, type AuthenticationMethodTarget } from './authenticationMethodTarget';
import { MicrosoftAuthenticatorAuthenticationMode } from './microsoftAuthenticatorAuthenticationMode';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMicrosoftAuthenticatorAuthenticationMethodTargetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMicrosoftAuthenticatorAuthenticationMethodTarget;
}
export function deserializeIntoMicrosoftAuthenticatorAuthenticationMethodTarget(microsoftAuthenticatorAuthenticationMethodTarget: MicrosoftAuthenticatorAuthenticationMethodTarget | undefined = {} as MicrosoftAuthenticatorAuthenticationMethodTarget) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuthenticationMethodTarget(microsoftAuthenticatorAuthenticationMethodTarget),
        "authenticationMode": n => { microsoftAuthenticatorAuthenticationMethodTarget.authenticationMode = n.getEnumValue<MicrosoftAuthenticatorAuthenticationMode>(MicrosoftAuthenticatorAuthenticationMode); },
    }
}
export interface MicrosoftAuthenticatorAuthenticationMethodTarget extends AuthenticationMethodTarget, Parsable {
    /**
     * The authenticationMode property
     */
    authenticationMode?: MicrosoftAuthenticatorAuthenticationMode;
}
export function serializeMicrosoftAuthenticatorAuthenticationMethodTarget(writer: SerializationWriter, microsoftAuthenticatorAuthenticationMethodTarget: MicrosoftAuthenticatorAuthenticationMethodTarget | undefined = {} as MicrosoftAuthenticatorAuthenticationMethodTarget) : void {
        serializeAuthenticationMethodTarget(writer, microsoftAuthenticatorAuthenticationMethodTarget)
        writer.writeEnumValue<MicrosoftAuthenticatorAuthenticationMode>("authenticationMode", microsoftAuthenticatorAuthenticationMethodTarget.authenticationMode);
}
// tslint:enable
// eslint-enable
