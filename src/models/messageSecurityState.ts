// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMessageSecurityStateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMessageSecurityState;
}
export function deserializeIntoMessageSecurityState(messageSecurityState: MessageSecurityState | undefined = {} as MessageSecurityState) : Record<string, (node: ParseNode) => void> {
    return {
        "connectingIP": n => { messageSecurityState.connectingIP = n.getStringValue(); },
        "deliveryAction": n => { messageSecurityState.deliveryAction = n.getStringValue(); },
        "deliveryLocation": n => { messageSecurityState.deliveryLocation = n.getStringValue(); },
        "directionality": n => { messageSecurityState.directionality = n.getStringValue(); },
        "internetMessageId": n => { messageSecurityState.internetMessageId = n.getStringValue(); },
        "messageFingerprint": n => { messageSecurityState.messageFingerprint = n.getStringValue(); },
        "messageReceivedDateTime": n => { messageSecurityState.messageReceivedDateTime = n.getDateValue(); },
        "messageSubject": n => { messageSecurityState.messageSubject = n.getStringValue(); },
        "networkMessageId": n => { messageSecurityState.networkMessageId = n.getStringValue(); },
        "@odata.type": n => { messageSecurityState.odataType = n.getStringValue(); },
    }
}
export interface MessageSecurityState extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The connectingIP property
     */
    connectingIP?: string;
    /**
     * The deliveryAction property
     */
    deliveryAction?: string;
    /**
     * The deliveryLocation property
     */
    deliveryLocation?: string;
    /**
     * The directionality property
     */
    directionality?: string;
    /**
     * The internetMessageId property
     */
    internetMessageId?: string;
    /**
     * The messageFingerprint property
     */
    messageFingerprint?: string;
    /**
     * The messageReceivedDateTime property
     */
    messageReceivedDateTime?: Date;
    /**
     * The messageSubject property
     */
    messageSubject?: string;
    /**
     * The networkMessageId property
     */
    networkMessageId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeMessageSecurityState(writer: SerializationWriter, messageSecurityState: MessageSecurityState | undefined = {} as MessageSecurityState) : void {
    writer.writeStringValue("connectingIP", messageSecurityState.connectingIP);
    writer.writeStringValue("deliveryAction", messageSecurityState.deliveryAction);
    writer.writeStringValue("deliveryLocation", messageSecurityState.deliveryLocation);
    writer.writeStringValue("directionality", messageSecurityState.directionality);
    writer.writeStringValue("internetMessageId", messageSecurityState.internetMessageId);
    writer.writeStringValue("messageFingerprint", messageSecurityState.messageFingerprint);
    writer.writeDateValue("messageReceivedDateTime", messageSecurityState.messageReceivedDateTime);
    writer.writeStringValue("messageSubject", messageSecurityState.messageSubject);
    writer.writeStringValue("networkMessageId", messageSecurityState.networkMessageId);
    writer.writeStringValue("@odata.type", messageSecurityState.odataType);
    writer.writeAdditionalData(messageSecurityState.additionalData);
}
// tslint:enable
// eslint-enable
