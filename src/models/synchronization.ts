// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createSynchronizationJobFromDiscriminatorValue, serializeSynchronizationJob, type SynchronizationJob } from './synchronizationJob';
import { createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue, serializeSynchronizationSecretKeyStringValuePair, type SynchronizationSecretKeyStringValuePair } from './synchronizationSecretKeyStringValuePair';
import { createSynchronizationTemplateFromDiscriminatorValue, serializeSynchronizationTemplate, type SynchronizationTemplate } from './synchronizationTemplate';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSynchronizationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSynchronization;
}
export function deserializeIntoSynchronization(synchronization: Synchronization | undefined = {} as Synchronization) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(synchronization),
        "jobs": n => { synchronization.jobs = n.getCollectionOfObjectValues<SynchronizationJob>(createSynchronizationJobFromDiscriminatorValue); },
        "secrets": n => { synchronization.secrets = n.getCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>(createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue); },
        "templates": n => { synchronization.templates = n.getCollectionOfObjectValues<SynchronizationTemplate>(createSynchronizationTemplateFromDiscriminatorValue); },
    }
}
export function serializeSynchronization(writer: SerializationWriter, synchronization: Synchronization | undefined = {} as Synchronization) : void {
    serializeEntity(writer, synchronization)
    writer.writeCollectionOfObjectValues<SynchronizationJob>("jobs", synchronization.jobs, serializeSynchronizationJob);
    writer.writeCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>("secrets", synchronization.secrets, serializeSynchronizationSecretKeyStringValuePair);
    writer.writeCollectionOfObjectValues<SynchronizationTemplate>("templates", synchronization.templates, serializeSynchronizationTemplate);
}
export interface Synchronization extends Entity, Parsable {
    /**
     * Performs synchronization by periodically running in the background, polling for changes in one directory, and pushing them to another directory.
     */
    jobs?: SynchronizationJob[];
    /**
     * Represents a collection of credentials to access provisioned cloud applications.
     */
    secrets?: SynchronizationSecretKeyStringValuePair[];
    /**
     * Preconfigured synchronization settings for a particular application.
     */
    templates?: SynchronizationTemplate[];
}
// tslint:enable
// eslint-enable
