// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoMeetingInfo, serializeMeetingInfo, type MeetingInfo } from './meetingInfo';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createJoinMeetingIdMeetingInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoJoinMeetingIdMeetingInfo;
}
export function deserializeIntoJoinMeetingIdMeetingInfo(joinMeetingIdMeetingInfo: JoinMeetingIdMeetingInfo | undefined = {} as JoinMeetingIdMeetingInfo) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMeetingInfo(joinMeetingIdMeetingInfo),
        "joinMeetingId": n => { joinMeetingIdMeetingInfo.joinMeetingId = n.getStringValue(); },
        "passcode": n => { joinMeetingIdMeetingInfo.passcode = n.getStringValue(); },
    }
}
export interface JoinMeetingIdMeetingInfo extends MeetingInfo, Parsable {
    /**
     * The ID used to join the meeting.
     */
    joinMeetingId?: string;
    /**
     * The passcode used to join the meeting. Optional.
     */
    passcode?: string;
}
export function serializeJoinMeetingIdMeetingInfo(writer: SerializationWriter, joinMeetingIdMeetingInfo: JoinMeetingIdMeetingInfo | undefined = {} as JoinMeetingIdMeetingInfo) : void {
        serializeMeetingInfo(writer, joinMeetingIdMeetingInfo)
        writer.writeStringValue("joinMeetingId", joinMeetingIdMeetingInfo.joinMeetingId);
        writer.writeStringValue("passcode", joinMeetingIdMeetingInfo.passcode);
}
// tslint:enable
// eslint-enable
