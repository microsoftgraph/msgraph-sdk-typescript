import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type WindowsUniversalAppXContainedApp } from './index';
import { deserializeIntoWindowsUniversalAppXContainedApp } from './windowsUniversalAppXContainedApp';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createMobileContainedAppFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.windowsUniversalAppXContainedApp":
                    return deserializeIntoWindowsUniversalAppXContainedApp;
            }
        }
    }
    return deserializeIntoMobileContainedApp;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoMobileContainedApp(mobileContainedApp: MobileContainedApp | undefined = {} as MobileContainedApp) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(mobileContainedApp),
    }
}
export interface MobileContainedApp extends Entity, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeMobileContainedApp(writer: SerializationWriter, mobileContainedApp: MobileContainedApp | undefined = {} as MobileContainedApp) : void {
        serializeEntity(writer, mobileContainedApp)
}
