// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { EducationGender } from './educationGender';
import { type AdditionalDataHolder, type DateOnly, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEducationStudentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEducationStudent;
}
export function deserializeIntoEducationStudent(educationStudent: EducationStudent | undefined = {} as EducationStudent) : Record<string, (node: ParseNode) => void> {
    return {
        "birthDate": n => { educationStudent.birthDate = n.getDateOnlyValue(); },
        "externalId": n => { educationStudent.externalId = n.getStringValue(); },
        "gender": n => { educationStudent.gender = n.getEnumValue<EducationGender>(EducationGender); },
        "grade": n => { educationStudent.grade = n.getStringValue(); },
        "graduationYear": n => { educationStudent.graduationYear = n.getStringValue(); },
        "@odata.type": n => { educationStudent.odataType = n.getStringValue(); },
        "studentNumber": n => { educationStudent.studentNumber = n.getStringValue(); },
    }
}
export interface EducationStudent extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Birth date of the student.
     */
    birthDate?: DateOnly;
    /**
     * ID of the student in the source system.
     */
    externalId?: string;
    /**
     * The possible values are: female, male, other, unknownFutureValue.
     */
    gender?: EducationGender;
    /**
     * Current grade level of the student.
     */
    grade?: string;
    /**
     * Year the student is graduating from the school.
     */
    graduationYear?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Student Number.
     */
    studentNumber?: string;
}
export function serializeEducationStudent(writer: SerializationWriter, educationStudent: EducationStudent | undefined = {} as EducationStudent) : void {
    writer.writeDateOnlyValue("birthDate", educationStudent.birthDate);
    writer.writeStringValue("externalId", educationStudent.externalId);
    writer.writeEnumValue<EducationGender>("gender", educationStudent.gender);
    writer.writeStringValue("grade", educationStudent.grade);
    writer.writeStringValue("graduationYear", educationStudent.graduationYear);
    writer.writeStringValue("@odata.type", educationStudent.odataType);
    writer.writeStringValue("studentNumber", educationStudent.studentNumber);
    writer.writeAdditionalData(educationStudent.additionalData);
}
// tslint:enable
// eslint-enable
