// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { EndpointType } from './endpointType';
import { createIdentityFromDiscriminatorValue, serializeIdentity, type Identity } from './identity';
import { deserializeIntoIdentitySet, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CommunicationsIdentitySet extends IdentitySet, Parsable {
    /**
     * The applicationInstance property
     */
    applicationInstance?: Identity;
    /**
     * The assertedIdentity property
     */
    assertedIdentity?: Identity;
    /**
     * The azureCommunicationServicesUser property
     */
    azureCommunicationServicesUser?: Identity;
    /**
     * The encrypted property
     */
    encrypted?: Identity;
    /**
     * The endpointType property
     */
    endpointType?: EndpointType;
    /**
     * The guest property
     */
    guest?: Identity;
    /**
     * The onPremises property
     */
    onPremises?: Identity;
    /**
     * The phone property
     */
    phone?: Identity;
}
export function createCommunicationsIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCommunicationsIdentitySet;
}
export function deserializeIntoCommunicationsIdentitySet(communicationsIdentitySet: CommunicationsIdentitySet | undefined = {} as CommunicationsIdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(communicationsIdentitySet),
        "applicationInstance": n => { communicationsIdentitySet.applicationInstance = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "assertedIdentity": n => { communicationsIdentitySet.assertedIdentity = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "azureCommunicationServicesUser": n => { communicationsIdentitySet.azureCommunicationServicesUser = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "encrypted": n => { communicationsIdentitySet.encrypted = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "endpointType": n => { communicationsIdentitySet.endpointType = n.getEnumValue<EndpointType>(EndpointType); },
        "guest": n => { communicationsIdentitySet.guest = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "onPremises": n => { communicationsIdentitySet.onPremises = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "phone": n => { communicationsIdentitySet.phone = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
export function serializeCommunicationsIdentitySet(writer: SerializationWriter, communicationsIdentitySet: CommunicationsIdentitySet | undefined = {} as CommunicationsIdentitySet) : void {
        serializeIdentitySet(writer, communicationsIdentitySet)
        writer.writeObjectValue<Identity>("applicationInstance", communicationsIdentitySet.applicationInstance, );
        writer.writeObjectValue<Identity>("assertedIdentity", communicationsIdentitySet.assertedIdentity, );
        writer.writeObjectValue<Identity>("azureCommunicationServicesUser", communicationsIdentitySet.azureCommunicationServicesUser, );
        writer.writeObjectValue<Identity>("encrypted", communicationsIdentitySet.encrypted, );
        writer.writeEnumValue<EndpointType>("endpointType", communicationsIdentitySet.endpointType);
        writer.writeObjectValue<Identity>("guest", communicationsIdentitySet.guest, );
        writer.writeObjectValue<Identity>("onPremises", communicationsIdentitySet.onPremises, );
        writer.writeObjectValue<Identity>("phone", communicationsIdentitySet.phone, );
}
// tslint:enable
// eslint-enable
