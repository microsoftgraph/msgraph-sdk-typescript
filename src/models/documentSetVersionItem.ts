import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createDocumentSetVersionItemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDocumentSetVersionItem;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoDocumentSetVersionItem(documentSetVersionItem: DocumentSetVersionItem | undefined = {} as DocumentSetVersionItem) : Record<string, (node: ParseNode) => void> {
    return {
        "itemId": n => { documentSetVersionItem.itemId = n.getStringValue(); },
        "@odata.type": n => { documentSetVersionItem.odataType = n.getStringValue(); },
        "title": n => { documentSetVersionItem.title = n.getStringValue(); },
        "versionId": n => { documentSetVersionItem.versionId = n.getStringValue(); },
    }
}
export interface DocumentSetVersionItem extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The unique identifier for the item.
     */
    itemId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The title of the item.
     */
    title?: string;
    /**
     * The version ID of the item.
     */
    versionId?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeDocumentSetVersionItem(writer: SerializationWriter, documentSetVersionItem: DocumentSetVersionItem | undefined = {} as DocumentSetVersionItem) : void {
        writer.writeStringValue("itemId", documentSetVersionItem.itemId);
        writer.writeStringValue("@odata.type", documentSetVersionItem.odataType);
        writer.writeStringValue("title", documentSetVersionItem.title);
        writer.writeStringValue("versionId", documentSetVersionItem.versionId);
        writer.writeAdditionalData(documentSetVersionItem.additionalData);
}
