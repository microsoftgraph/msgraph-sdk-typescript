// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createEdgeFromDiscriminatorValue, serializeEdge, type Edge } from './edge';
import { createPeopleAdminSettingsFromDiscriminatorValue, serializePeopleAdminSettings, type PeopleAdminSettings } from './peopleAdminSettings';
import { createServiceAnnouncementFromDiscriminatorValue, serializeServiceAnnouncement, type ServiceAnnouncement } from './serviceAnnouncement';
import { createSharepointFromDiscriminatorValue, serializeSharepoint, type Sharepoint } from './sharepoint';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Admin extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * A container for Microsoft Edge resources. Read-only.
     */
    edge?: Edge;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The people property
     */
    people?: PeopleAdminSettings;
    /**
     * A container for service communications resources. Read-only.
     */
    serviceAnnouncement?: ServiceAnnouncement;
    /**
     * The sharepoint property
     */
    sharepoint?: Sharepoint;
}
export function createAdminFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAdmin;
}
export function deserializeIntoAdmin(admin: Admin | undefined = {} as Admin) : Record<string, (node: ParseNode) => void> {
    return {
        "edge": n => { admin.edge = n.getObjectValue<Edge>(createEdgeFromDiscriminatorValue); },
        "@odata.type": n => { admin.odataType = n.getStringValue(); },
        "people": n => { admin.people = n.getObjectValue<PeopleAdminSettings>(createPeopleAdminSettingsFromDiscriminatorValue); },
        "serviceAnnouncement": n => { admin.serviceAnnouncement = n.getObjectValue<ServiceAnnouncement>(createServiceAnnouncementFromDiscriminatorValue); },
        "sharepoint": n => { admin.sharepoint = n.getObjectValue<Sharepoint>(createSharepointFromDiscriminatorValue); },
    }
}
export function serializeAdmin(writer: SerializationWriter, admin: Admin | undefined = {} as Admin) : void {
        writer.writeObjectValue<Edge>("edge", admin.edge, );
        writer.writeStringValue("@odata.type", admin.odataType);
        writer.writeObjectValue<PeopleAdminSettings>("people", admin.people, );
        writer.writeObjectValue<ServiceAnnouncement>("serviceAnnouncement", admin.serviceAnnouncement, );
        writer.writeObjectValue<Sharepoint>("sharepoint", admin.sharepoint, );
        writer.writeAdditionalData(admin.additionalData);
}
// tslint:enable
// eslint-enable
