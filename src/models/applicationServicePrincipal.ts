// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createApplicationFromDiscriminatorValue, serializeApplication, type Application } from './application';
import { createServicePrincipalFromDiscriminatorValue, serializeServicePrincipal, type ServicePrincipal } from './servicePrincipal';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApplicationServicePrincipal extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The application property
     */
    application?: Application;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The servicePrincipal property
     */
    servicePrincipal?: ServicePrincipal;
}
export function createApplicationServicePrincipalFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoApplicationServicePrincipal;
}
export function deserializeIntoApplicationServicePrincipal(applicationServicePrincipal: ApplicationServicePrincipal | undefined = {} as ApplicationServicePrincipal) : Record<string, (node: ParseNode) => void> {
    return {
        "application": n => { applicationServicePrincipal.application = n.getObjectValue<Application>(createApplicationFromDiscriminatorValue); },
        "@odata.type": n => { applicationServicePrincipal.odataType = n.getStringValue(); },
        "servicePrincipal": n => { applicationServicePrincipal.servicePrincipal = n.getObjectValue<ServicePrincipal>(createServicePrincipalFromDiscriminatorValue); },
    }
}
export function serializeApplicationServicePrincipal(writer: SerializationWriter, applicationServicePrincipal: ApplicationServicePrincipal | undefined = {} as ApplicationServicePrincipal) : void {
        writer.writeObjectValue<Application>("application", applicationServicePrincipal.application, );
        writer.writeStringValue("@odata.type", applicationServicePrincipal.odataType);
        writer.writeObjectValue<ServicePrincipal>("servicePrincipal", applicationServicePrincipal.servicePrincipal, );
        writer.writeAdditionalData(applicationServicePrincipal.additionalData);
}
// tslint:enable
// eslint-enable
