// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type IosMobileAppConfiguration } from './index';
import { deserializeIntoIosMobileAppConfiguration } from './iosMobileAppConfiguration';
import { createManagedDeviceMobileAppConfigurationAssignmentFromDiscriminatorValue, serializeManagedDeviceMobileAppConfigurationAssignment, type ManagedDeviceMobileAppConfigurationAssignment } from './managedDeviceMobileAppConfigurationAssignment';
import { createManagedDeviceMobileAppConfigurationDeviceStatusFromDiscriminatorValue, serializeManagedDeviceMobileAppConfigurationDeviceStatus, type ManagedDeviceMobileAppConfigurationDeviceStatus } from './managedDeviceMobileAppConfigurationDeviceStatus';
import { createManagedDeviceMobileAppConfigurationDeviceSummaryFromDiscriminatorValue, serializeManagedDeviceMobileAppConfigurationDeviceSummary, type ManagedDeviceMobileAppConfigurationDeviceSummary } from './managedDeviceMobileAppConfigurationDeviceSummary';
import { createManagedDeviceMobileAppConfigurationUserStatusFromDiscriminatorValue, serializeManagedDeviceMobileAppConfigurationUserStatus, type ManagedDeviceMobileAppConfigurationUserStatus } from './managedDeviceMobileAppConfigurationUserStatus';
import { createManagedDeviceMobileAppConfigurationUserSummaryFromDiscriminatorValue, serializeManagedDeviceMobileAppConfigurationUserSummary, type ManagedDeviceMobileAppConfigurationUserSummary } from './managedDeviceMobileAppConfigurationUserSummary';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createManagedDeviceMobileAppConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.iosMobileAppConfiguration":
                    return deserializeIntoIosMobileAppConfiguration;
            }
        }
    }
    return deserializeIntoManagedDeviceMobileAppConfiguration;
}
export function deserializeIntoManagedDeviceMobileAppConfiguration(managedDeviceMobileAppConfiguration: ManagedDeviceMobileAppConfiguration | undefined = {} as ManagedDeviceMobileAppConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedDeviceMobileAppConfiguration),
        "assignments": n => { managedDeviceMobileAppConfiguration.assignments = n.getCollectionOfObjectValues<ManagedDeviceMobileAppConfigurationAssignment>(createManagedDeviceMobileAppConfigurationAssignmentFromDiscriminatorValue); },
        "createdDateTime": n => { managedDeviceMobileAppConfiguration.createdDateTime = n.getDateValue(); },
        "description": n => { managedDeviceMobileAppConfiguration.description = n.getStringValue(); },
        "deviceStatuses": n => { managedDeviceMobileAppConfiguration.deviceStatuses = n.getCollectionOfObjectValues<ManagedDeviceMobileAppConfigurationDeviceStatus>(createManagedDeviceMobileAppConfigurationDeviceStatusFromDiscriminatorValue); },
        "deviceStatusSummary": n => { managedDeviceMobileAppConfiguration.deviceStatusSummary = n.getObjectValue<ManagedDeviceMobileAppConfigurationDeviceSummary>(createManagedDeviceMobileAppConfigurationDeviceSummaryFromDiscriminatorValue); },
        "displayName": n => { managedDeviceMobileAppConfiguration.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { managedDeviceMobileAppConfiguration.lastModifiedDateTime = n.getDateValue(); },
        "targetedMobileApps": n => { managedDeviceMobileAppConfiguration.targetedMobileApps = n.getCollectionOfPrimitiveValues<string>(); },
        "userStatuses": n => { managedDeviceMobileAppConfiguration.userStatuses = n.getCollectionOfObjectValues<ManagedDeviceMobileAppConfigurationUserStatus>(createManagedDeviceMobileAppConfigurationUserStatusFromDiscriminatorValue); },
        "userStatusSummary": n => { managedDeviceMobileAppConfiguration.userStatusSummary = n.getObjectValue<ManagedDeviceMobileAppConfigurationUserSummary>(createManagedDeviceMobileAppConfigurationUserSummaryFromDiscriminatorValue); },
        "version": n => { managedDeviceMobileAppConfiguration.version = n.getNumberValue(); },
    }
}
export interface ManagedDeviceMobileAppConfiguration extends Entity, Parsable {
    /**
     * The list of group assignemenets for app configration.
     */
    assignments?: ManagedDeviceMobileAppConfigurationAssignment[];
    /**
     * DateTime the object was created.
     */
    createdDateTime?: Date;
    /**
     * Admin provided description of the Device Configuration.
     */
    description?: string;
    /**
     * List of ManagedDeviceMobileAppConfigurationDeviceStatus.
     */
    deviceStatuses?: ManagedDeviceMobileAppConfigurationDeviceStatus[];
    /**
     * App configuration device status summary.
     */
    deviceStatusSummary?: ManagedDeviceMobileAppConfigurationDeviceSummary;
    /**
     * Admin provided name of the device configuration.
     */
    displayName?: string;
    /**
     * DateTime the object was last modified.
     */
    lastModifiedDateTime?: Date;
    /**
     * the associated app.
     */
    targetedMobileApps?: string[];
    /**
     * List of ManagedDeviceMobileAppConfigurationUserStatus.
     */
    userStatuses?: ManagedDeviceMobileAppConfigurationUserStatus[];
    /**
     * App configuration user status summary.
     */
    userStatusSummary?: ManagedDeviceMobileAppConfigurationUserSummary;
    /**
     * Version of the device configuration.
     */
    version?: number;
}
export function serializeManagedDeviceMobileAppConfiguration(writer: SerializationWriter, managedDeviceMobileAppConfiguration: ManagedDeviceMobileAppConfiguration | undefined = {} as ManagedDeviceMobileAppConfiguration) : void {
        serializeEntity(writer, managedDeviceMobileAppConfiguration)
        writer.writeCollectionOfObjectValues<ManagedDeviceMobileAppConfigurationAssignment>("assignments", managedDeviceMobileAppConfiguration.assignments, serializeManagedDeviceMobileAppConfigurationAssignment);
        writer.writeDateValue("createdDateTime", managedDeviceMobileAppConfiguration.createdDateTime);
        writer.writeStringValue("description", managedDeviceMobileAppConfiguration.description);
        writer.writeCollectionOfObjectValues<ManagedDeviceMobileAppConfigurationDeviceStatus>("deviceStatuses", managedDeviceMobileAppConfiguration.deviceStatuses, serializeManagedDeviceMobileAppConfigurationDeviceStatus);
        writer.writeObjectValue<ManagedDeviceMobileAppConfigurationDeviceSummary>("deviceStatusSummary", managedDeviceMobileAppConfiguration.deviceStatusSummary, serializeManagedDeviceMobileAppConfigurationDeviceSummary);
        writer.writeStringValue("displayName", managedDeviceMobileAppConfiguration.displayName);
        writer.writeDateValue("lastModifiedDateTime", managedDeviceMobileAppConfiguration.lastModifiedDateTime);
        writer.writeCollectionOfPrimitiveValues<string>("targetedMobileApps", managedDeviceMobileAppConfiguration.targetedMobileApps);
        writer.writeCollectionOfObjectValues<ManagedDeviceMobileAppConfigurationUserStatus>("userStatuses", managedDeviceMobileAppConfiguration.userStatuses, serializeManagedDeviceMobileAppConfigurationUserStatus);
        writer.writeObjectValue<ManagedDeviceMobileAppConfigurationUserSummary>("userStatusSummary", managedDeviceMobileAppConfiguration.userStatusSummary, serializeManagedDeviceMobileAppConfigurationUserSummary);
        writer.writeNumberValue("version", managedDeviceMobileAppConfiguration.version);
}
// tslint:enable
// eslint-enable
