// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPublicClientApplicationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPublicClientApplication;
}
export function deserializeIntoPublicClientApplication(publicClientApplication: PublicClientApplication | undefined = {} as PublicClientApplication) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { publicClientApplication.odataType = n.getStringValue(); },
        "redirectUris": n => { publicClientApplication.redirectUris = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface PublicClientApplication extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Specifies the URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth 2.0 authorization codes and access tokens are sent.
     */
    redirectUris?: string[];
}
export function serializePublicClientApplication(writer: SerializationWriter, publicClientApplication: PublicClientApplication | undefined = {} as PublicClientApplication) : void {
        writer.writeStringValue("@odata.type", publicClientApplication.odataType);
        writer.writeCollectionOfPrimitiveValues<string>("redirectUris", publicClientApplication.redirectUris);
        writer.writeAdditionalData(publicClientApplication.additionalData);
}
// tslint:enable
// eslint-enable
