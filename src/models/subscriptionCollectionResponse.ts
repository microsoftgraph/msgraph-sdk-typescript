// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createSubscriptionFromDiscriminatorValue, serializeSubscription, type Subscription } from './subscription';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSubscriptionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSubscriptionCollectionResponse;
}
export function deserializeIntoSubscriptionCollectionResponse(subscriptionCollectionResponse: SubscriptionCollectionResponse | undefined = {} as SubscriptionCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(subscriptionCollectionResponse),
        "value": n => { subscriptionCollectionResponse.value = n.getCollectionOfObjectValues<Subscription>(createSubscriptionFromDiscriminatorValue); },
    }
}
export function serializeSubscriptionCollectionResponse(writer: SerializationWriter, subscriptionCollectionResponse: SubscriptionCollectionResponse | undefined = {} as SubscriptionCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, subscriptionCollectionResponse)
        writer.writeCollectionOfObjectValues<Subscription>("value", subscriptionCollectionResponse.value, serializeSubscription);
}
export interface SubscriptionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Subscription[];
}
// tslint:enable
// eslint-enable
