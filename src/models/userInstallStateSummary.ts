// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDeviceInstallStateFromDiscriminatorValue, serializeDeviceInstallState, type DeviceInstallState } from './deviceInstallState';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserInstallStateSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserInstallStateSummary;
}
export function deserializeIntoUserInstallStateSummary(userInstallStateSummary: UserInstallStateSummary | undefined = {} as UserInstallStateSummary) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userInstallStateSummary),
        "deviceStates": n => { userInstallStateSummary.deviceStates = n.getCollectionOfObjectValues<DeviceInstallState>(createDeviceInstallStateFromDiscriminatorValue); },
        "failedDeviceCount": n => { userInstallStateSummary.failedDeviceCount = n.getNumberValue(); },
        "installedDeviceCount": n => { userInstallStateSummary.installedDeviceCount = n.getNumberValue(); },
        "notInstalledDeviceCount": n => { userInstallStateSummary.notInstalledDeviceCount = n.getNumberValue(); },
        "userName": n => { userInstallStateSummary.userName = n.getStringValue(); },
    }
}
export function serializeUserInstallStateSummary(writer: SerializationWriter, userInstallStateSummary: UserInstallStateSummary | undefined = {} as UserInstallStateSummary) : void {
        serializeEntity(writer, userInstallStateSummary)
        writer.writeCollectionOfObjectValues<DeviceInstallState>("deviceStates", userInstallStateSummary.deviceStates, serializeDeviceInstallState);
        writer.writeNumberValue("failedDeviceCount", userInstallStateSummary.failedDeviceCount);
        writer.writeNumberValue("installedDeviceCount", userInstallStateSummary.installedDeviceCount);
        writer.writeNumberValue("notInstalledDeviceCount", userInstallStateSummary.notInstalledDeviceCount);
        writer.writeStringValue("userName", userInstallStateSummary.userName);
}
export interface UserInstallStateSummary extends Entity, Parsable {
    /**
     * The install state of the eBook.
     */
    deviceStates?: DeviceInstallState[];
    /**
     * Failed Device Count.
     */
    failedDeviceCount?: number;
    /**
     * Installed Device Count.
     */
    installedDeviceCount?: number;
    /**
     * Not installed device count.
     */
    notInstalledDeviceCount?: number;
    /**
     * User name.
     */
    userName?: string;
}
// tslint:enable
// eslint-enable
