// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createSynchronizationJobSubjectFromDiscriminatorValue, serializeSynchronizationJobSubject, type SynchronizationJobSubject } from './synchronizationJobSubject';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSynchronizationJobApplicationParametersFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSynchronizationJobApplicationParameters;
}
export function deserializeIntoSynchronizationJobApplicationParameters(synchronizationJobApplicationParameters: SynchronizationJobApplicationParameters | undefined = {} as SynchronizationJobApplicationParameters) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { synchronizationJobApplicationParameters.odataType = n.getStringValue(); },
        "ruleId": n => { synchronizationJobApplicationParameters.ruleId = n.getStringValue(); },
        "subjects": n => { synchronizationJobApplicationParameters.subjects = n.getCollectionOfObjectValues<SynchronizationJobSubject>(createSynchronizationJobSubjectFromDiscriminatorValue); },
    }
}
export function serializeSynchronizationJobApplicationParameters(writer: SerializationWriter, synchronizationJobApplicationParameters: SynchronizationJobApplicationParameters | undefined = {} as SynchronizationJobApplicationParameters) : void {
        writer.writeStringValue("@odata.type", synchronizationJobApplicationParameters.odataType);
        writer.writeStringValue("ruleId", synchronizationJobApplicationParameters.ruleId);
        writer.writeCollectionOfObjectValues<SynchronizationJobSubject>("subjects", synchronizationJobApplicationParameters.subjects, serializeSynchronizationJobSubject);
        writer.writeAdditionalData(synchronizationJobApplicationParameters.additionalData);
}
export interface SynchronizationJobApplicationParameters extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The identifier of the synchronizationRule to be applied. This rule ID is defined in the schema for a given synchronization job or template.
     */
    ruleId?: string;
    /**
     * The identifiers of one or more objects to which a synchronizationJob is to be applied.
     */
    subjects?: SynchronizationJobSubject[];
}
// tslint:enable
// eslint-enable
