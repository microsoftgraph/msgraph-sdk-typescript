// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessPackageLocalizedTextFromDiscriminatorValue, serializeAccessPackageLocalizedText, type AccessPackageLocalizedText } from './accessPackageLocalizedText';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageAnswerChoice extends AdditionalDataHolder, Parsable {
    /**
     * The actual value of the selected choice. This is typically a string value which is understandable by applications. Required.
     */
    actualValue?: string;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The text of the answer choice represented in a format for a specific locale.
     */
    localizations?: AccessPackageLocalizedText[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The text property
     */
    text?: string;
}
export function createAccessPackageAnswerChoiceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageAnswerChoice;
}
export function deserializeIntoAccessPackageAnswerChoice(accessPackageAnswerChoice: AccessPackageAnswerChoice | undefined = {} as AccessPackageAnswerChoice) : Record<string, (node: ParseNode) => void> {
    return {
        "actualValue": n => { accessPackageAnswerChoice.actualValue = n.getStringValue(); },
        "localizations": n => { accessPackageAnswerChoice.localizations = n.getCollectionOfObjectValues<AccessPackageLocalizedText>(createAccessPackageLocalizedTextFromDiscriminatorValue); },
        "@odata.type": n => { accessPackageAnswerChoice.odataType = n.getStringValue(); },
        "text": n => { accessPackageAnswerChoice.text = n.getStringValue(); },
    }
}
export function serializeAccessPackageAnswerChoice(writer: SerializationWriter, accessPackageAnswerChoice: AccessPackageAnswerChoice | undefined = {} as AccessPackageAnswerChoice) : void {
    writer.writeStringValue("actualValue", accessPackageAnswerChoice.actualValue);
    writer.writeCollectionOfObjectValues<AccessPackageLocalizedText>("localizations", accessPackageAnswerChoice.localizations, serializeAccessPackageLocalizedText);
    writer.writeStringValue("@odata.type", accessPackageAnswerChoice.odataType);
    writer.writeStringValue("text", accessPackageAnswerChoice.text);
    writer.writeAdditionalData(accessPackageAnswerChoice.additionalData);
}
// tslint:enable
// eslint-enable
