// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createPublicErrorFromDiscriminatorValue, serializePublicError, type PublicError } from '../publicError';
import { deserializeIntoExternalActivity, serializeExternalActivity, type ExternalActivity } from './externalActivity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createExternalActivityResultFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoExternalActivityResult;
}
export function deserializeIntoExternalActivityResult(externalActivityResult: ExternalActivityResult | undefined = {} as ExternalActivityResult) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoExternalActivity(externalActivityResult),
        "error": n => { externalActivityResult.errorEscaped = n.getObjectValue<PublicError>(createPublicErrorFromDiscriminatorValue); },
    }
}
export interface ExternalActivityResult extends ExternalActivity, Parsable {
    /**
     * Error information that explains the failure to process an external activity.
     */
    errorEscaped?: PublicError;
}
export function serializeExternalActivityResult(writer: SerializationWriter, externalActivityResult: ExternalActivityResult | undefined = {} as ExternalActivityResult) : void {
        serializeExternalActivity(writer, externalActivityResult)
        writer.writeObjectValue<PublicError>("error", externalActivityResult.errorEscaped, serializePublicError);
}
// tslint:enable
// eslint-enable
