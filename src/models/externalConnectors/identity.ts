// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from '../entity';
import { IdentityType } from './identityType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIdentity;
}
export function deserializeIntoIdentity(identity: Identity | undefined = {} as Identity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(identity),
        "type": n => { identity.type = n.getEnumValue<IdentityType>(IdentityType); },
    }
}
export interface Identity extends Entity, Parsable {
    /**
     * The type of identity. Possible values are: user or group for Microsoft Entra identities and externalgroup for groups in an external system.
     */
    type?: IdentityType;
}
export function serializeIdentity(writer: SerializationWriter, identity: Identity | undefined = {} as Identity) : void {
    serializeEntity(writer, identity)
    writer.writeEnumValue<IdentityType>("type", identity.type);
}
// tslint:enable
// eslint-enable
