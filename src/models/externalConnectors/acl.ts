// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AccessType } from './accessType';
import { AclType } from './aclType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Acl extends AdditionalDataHolder, Parsable {
    /**
     * The accessType property
     */
    accessType?: AccessType;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The type property
     */
    type?: AclType;
    /**
     * The unique identifer of the identity. For Microsoft Entra identities, value is set to the object identifier of the user, group or tenant for types user, group and everyone (and everyoneExceptGuests) respectively. For external groups value is set to the ID of the externalGroup
     */
    value?: string;
}
export function createAclFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAcl;
}
export function deserializeIntoAcl(acl: Acl | undefined = {} as Acl) : Record<string, (node: ParseNode) => void> {
    return {
        "accessType": n => { acl.accessType = n.getEnumValue<AccessType>(AccessType); },
        "@odata.type": n => { acl.odataType = n.getStringValue(); },
        "type": n => { acl.type = n.getEnumValue<AclType>(AclType); },
        "value": n => { acl.value = n.getStringValue(); },
    }
}
export function serializeAcl(writer: SerializationWriter, acl: Acl | undefined = {} as Acl) : void {
    writer.writeEnumValue<AccessType>("accessType", acl.accessType);
    writer.writeStringValue("@odata.type", acl.odataType);
    writer.writeEnumValue<AclType>("type", acl.type);
    writer.writeStringValue("value", acl.value);
    writer.writeAdditionalData(acl.additionalData);
}
// tslint:enable
// eslint-enable
