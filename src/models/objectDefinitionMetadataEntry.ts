// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { ObjectDefinitionMetadata } from './objectDefinitionMetadata';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createObjectDefinitionMetadataEntryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoObjectDefinitionMetadataEntry;
}
export function deserializeIntoObjectDefinitionMetadataEntry(objectDefinitionMetadataEntry: ObjectDefinitionMetadataEntry | undefined = {} as ObjectDefinitionMetadataEntry) : Record<string, (node: ParseNode) => void> {
    return {
        "key": n => { objectDefinitionMetadataEntry.key = n.getEnumValue<ObjectDefinitionMetadata>(ObjectDefinitionMetadata); },
        "@odata.type": n => { objectDefinitionMetadataEntry.odataType = n.getStringValue(); },
        "value": n => { objectDefinitionMetadataEntry.value = n.getStringValue(); },
    }
}
export interface ObjectDefinitionMetadataEntry extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Possible values are: PropertyNameAccountEnabled, PropertyNameSoftDeleted, IsSoftDeletionSupported, IsSynchronizeAllSupported, ConnectorDataStorageRequired, Extensions, LinkTypeName.
     */
    key?: ObjectDefinitionMetadata;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Value of the metadata property.
     */
    value?: string;
}
export function serializeObjectDefinitionMetadataEntry(writer: SerializationWriter, objectDefinitionMetadataEntry: ObjectDefinitionMetadataEntry | undefined = {} as ObjectDefinitionMetadataEntry) : void {
        writer.writeEnumValue<ObjectDefinitionMetadata>("key", objectDefinitionMetadataEntry.key);
        writer.writeStringValue("@odata.type", objectDefinitionMetadataEntry.odataType);
        writer.writeStringValue("value", objectDefinitionMetadataEntry.value);
        writer.writeAdditionalData(objectDefinitionMetadataEntry.additionalData);
}
// tslint:enable
// eslint-enable
