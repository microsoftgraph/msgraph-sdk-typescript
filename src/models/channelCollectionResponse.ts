import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createChannelFromDiscriminatorValue, serializeChannel, type Channel } from './channel';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ChannelCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Channel[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createChannelCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoChannelCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoChannelCollectionResponse(channelCollectionResponse: ChannelCollectionResponse | undefined = {} as ChannelCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(channelCollectionResponse),
        "value": n => { channelCollectionResponse.value = n.getCollectionOfObjectValues<Channel>(createChannelFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeChannelCollectionResponse(writer: SerializationWriter, channelCollectionResponse: ChannelCollectionResponse | undefined = {} as ChannelCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, channelCollectionResponse)
        writer.writeCollectionOfObjectValues<Channel>("value", channelCollectionResponse.value, );
}
