// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAuthenticationMethod, serializeAuthenticationMethod, type AuthenticationMethod } from './authenticationMethod';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPasswordAuthenticationMethodFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPasswordAuthenticationMethod;
}
export function deserializeIntoPasswordAuthenticationMethod(passwordAuthenticationMethod: PasswordAuthenticationMethod | undefined = {} as PasswordAuthenticationMethod) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuthenticationMethod(passwordAuthenticationMethod),
        "createdDateTime": n => { passwordAuthenticationMethod.createdDateTime = n.getDateValue(); },
        "password": n => { passwordAuthenticationMethod.password = n.getStringValue(); },
    }
}
export interface PasswordAuthenticationMethod extends AuthenticationMethod, Parsable {
    /**
     * The date and time when this password was last updated. This property is currently not populated. Read-only. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date;
    /**
     * For security, the password is always returned as null from a LIST or GET operation.
     */
    password?: string;
}
export function serializePasswordAuthenticationMethod(writer: SerializationWriter, passwordAuthenticationMethod: PasswordAuthenticationMethod | undefined = {} as PasswordAuthenticationMethod) : void {
    serializeAuthenticationMethod(writer, passwordAuthenticationMethod)
    writer.writeDateValue("createdDateTime", passwordAuthenticationMethod.createdDateTime);
    writer.writeStringValue("password", passwordAuthenticationMethod.password);
}
// tslint:enable
// eslint-enable
