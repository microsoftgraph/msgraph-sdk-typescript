// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AnswerInputType } from './answerInputType';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingCustomQuestion extends Entity, Parsable {
    /**
     * The expected answer type. The possible values are: text, radioButton, unknownFutureValue.
     */
    answerInputType?: AnswerInputType;
    /**
     * List of possible answer values.
     */
    answerOptions?: string[];
    /**
     * The question.
     */
    displayName?: string;
}
export function createBookingCustomQuestionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBookingCustomQuestion;
}
export function deserializeIntoBookingCustomQuestion(bookingCustomQuestion: BookingCustomQuestion | undefined = {} as BookingCustomQuestion) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(bookingCustomQuestion),
        "answerInputType": n => { bookingCustomQuestion.answerInputType = n.getEnumValue<AnswerInputType>(AnswerInputType); },
        "answerOptions": n => { bookingCustomQuestion.answerOptions = n.getCollectionOfPrimitiveValues<string>(); },
        "displayName": n => { bookingCustomQuestion.displayName = n.getStringValue(); },
    }
}
export function serializeBookingCustomQuestion(writer: SerializationWriter, bookingCustomQuestion: BookingCustomQuestion | undefined = {} as BookingCustomQuestion) : void {
        serializeEntity(writer, bookingCustomQuestion)
        writer.writeEnumValue<AnswerInputType>("answerInputType", bookingCustomQuestion.answerInputType);
        writer.writeCollectionOfPrimitiveValues<string>("answerOptions", bookingCustomQuestion.answerOptions);
        writer.writeStringValue("displayName", bookingCustomQuestion.displayName);
}
// tslint:enable
// eslint-enable
