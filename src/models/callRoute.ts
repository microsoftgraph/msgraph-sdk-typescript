// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { RoutingType } from './routingType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CallRoute extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The final property
     */
    final?: IdentitySet;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The original property
     */
    original?: IdentitySet;
    /**
     * The routingType property
     */
    routingType?: RoutingType;
}
export function createCallRouteFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCallRoute;
}
export function deserializeIntoCallRoute(callRoute: CallRoute | undefined = {} as CallRoute) : Record<string, (node: ParseNode) => void> {
    return {
        "final": n => { callRoute.final = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "@odata.type": n => { callRoute.odataType = n.getStringValue(); },
        "original": n => { callRoute.original = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "routingType": n => { callRoute.routingType = n.getEnumValue<RoutingType>(RoutingType); },
    }
}
export function serializeCallRoute(writer: SerializationWriter, callRoute: CallRoute | undefined = {} as CallRoute) : void {
    writer.writeObjectValue<IdentitySet>("final", callRoute.final, serializeIdentitySet);
    writer.writeStringValue("@odata.type", callRoute.odataType);
    writer.writeObjectValue<IdentitySet>("original", callRoute.original, serializeIdentitySet);
    writer.writeEnumValue<RoutingType>("routingType", callRoute.routingType);
    writer.writeAdditionalData(callRoute.additionalData);
}
// tslint:enable
// eslint-enable
