// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMalwareStateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMalwareState;
}
export function deserializeIntoMalwareState(malwareState: MalwareState | undefined = {} as MalwareState) : Record<string, (node: ParseNode) => void> {
    return {
        "category": n => { malwareState.category = n.getStringValue(); },
        "family": n => { malwareState.family = n.getStringValue(); },
        "name": n => { malwareState.name = n.getStringValue(); },
        "@odata.type": n => { malwareState.odataType = n.getStringValue(); },
        "severity": n => { malwareState.severity = n.getStringValue(); },
        "wasRunning": n => { malwareState.wasRunning = n.getBooleanValue(); },
    }
}
export interface MalwareState extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Provider-generated malware category (for example, trojan, ransomware, etc.).
     */
    category?: string;
    /**
     * Provider-generated malware family (for example, 'wannacry,' 'notpetya,' etc.).
     */
    family?: string;
    /**
     * Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Provider-determined severity of this malware.
     */
    severity?: string;
    /**
     * Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
     */
    wasRunning?: boolean;
}
export function serializeMalwareState(writer: SerializationWriter, malwareState: MalwareState | undefined = {} as MalwareState) : void {
    writer.writeStringValue("category", malwareState.category);
    writer.writeStringValue("family", malwareState.family);
    writer.writeStringValue("name", malwareState.name);
    writer.writeStringValue("@odata.type", malwareState.odataType);
    writer.writeStringValue("severity", malwareState.severity);
    writer.writeBooleanValue("wasRunning", malwareState.wasRunning);
    writer.writeAdditionalData(malwareState.additionalData);
}
// tslint:enable
// eslint-enable
