// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { PrintTaskProcessingState } from './printTaskProcessingState';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrintTaskStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrintTaskStatus;
}
export function deserializeIntoPrintTaskStatus(printTaskStatus: PrintTaskStatus | undefined = {} as PrintTaskStatus) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { printTaskStatus.description = n.getStringValue(); },
        "@odata.type": n => { printTaskStatus.odataType = n.getStringValue(); },
        "state": n => { printTaskStatus.state = n.getEnumValue<PrintTaskProcessingState>(PrintTaskProcessingState); },
    }
}
export interface PrintTaskStatus extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * A human-readable description of the current processing state of the printTask.
     */
    description?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The state property
     */
    state?: PrintTaskProcessingState;
}
export function serializePrintTaskStatus(writer: SerializationWriter, printTaskStatus: PrintTaskStatus | undefined = {} as PrintTaskStatus) : void {
    writer.writeStringValue("description", printTaskStatus.description);
    writer.writeStringValue("@odata.type", printTaskStatus.odataType);
    writer.writeEnumValue<PrintTaskProcessingState>("state", printTaskStatus.state);
    writer.writeAdditionalData(printTaskStatus.additionalData);
}
// tslint:enable
// eslint-enable
