// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createConversationFromDiscriminatorValue, serializeConversation, type Conversation } from './conversation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ConversationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Conversation[];
}
export function createConversationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoConversationCollectionResponse;
}
export function deserializeIntoConversationCollectionResponse(conversationCollectionResponse: ConversationCollectionResponse | undefined = {} as ConversationCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(conversationCollectionResponse),
        "value": n => { conversationCollectionResponse.value = n.getCollectionOfObjectValues<Conversation>(createConversationFromDiscriminatorValue); },
    }
}
export function serializeConversationCollectionResponse(writer: SerializationWriter, conversationCollectionResponse: ConversationCollectionResponse | undefined = {} as ConversationCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, conversationCollectionResponse)
        writer.writeCollectionOfObjectValues<Conversation>("value", conversationCollectionResponse.value, serializeConversation);
}
// tslint:enable
// eslint-enable
