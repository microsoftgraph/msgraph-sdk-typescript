// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AttendanceInterval extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Duration of the meeting interval in seconds; that is, the difference between joinDateTime and leaveDateTime.
     */
    durationInSeconds?: number;
    /**
     * The time the attendee joined in UTC.
     */
    joinDateTime?: Date;
    /**
     * The time the attendee left in UTC.
     */
    leaveDateTime?: Date;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createAttendanceIntervalFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAttendanceInterval;
}
export function deserializeIntoAttendanceInterval(attendanceInterval: AttendanceInterval | undefined = {} as AttendanceInterval) : Record<string, (node: ParseNode) => void> {
    return {
        "durationInSeconds": n => { attendanceInterval.durationInSeconds = n.getNumberValue(); },
        "joinDateTime": n => { attendanceInterval.joinDateTime = n.getDateValue(); },
        "leaveDateTime": n => { attendanceInterval.leaveDateTime = n.getDateValue(); },
        "@odata.type": n => { attendanceInterval.odataType = n.getStringValue(); },
    }
}
export function serializeAttendanceInterval(writer: SerializationWriter, attendanceInterval: AttendanceInterval | undefined = {} as AttendanceInterval) : void {
    writer.writeNumberValue("durationInSeconds", attendanceInterval.durationInSeconds);
    writer.writeDateValue("joinDateTime", attendanceInterval.joinDateTime);
    writer.writeDateValue("leaveDateTime", attendanceInterval.leaveDateTime);
    writer.writeStringValue("@odata.type", attendanceInterval.odataType);
    writer.writeAdditionalData(attendanceInterval.additionalData);
}
// tslint:enable
// eslint-enable
