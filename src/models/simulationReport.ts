// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createSimulationReportOverviewFromDiscriminatorValue, serializeSimulationReportOverview, type SimulationReportOverview } from './simulationReportOverview';
import { createUserSimulationDetailsFromDiscriminatorValue, serializeUserSimulationDetails, type UserSimulationDetails } from './userSimulationDetails';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSimulationReportFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSimulationReport;
}
export function deserializeIntoSimulationReport(simulationReport: SimulationReport | undefined = {} as SimulationReport) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { simulationReport.odataType = n.getStringValue(); },
        "overview": n => { simulationReport.overview = n.getObjectValue<SimulationReportOverview>(createSimulationReportOverviewFromDiscriminatorValue); },
        "simulationUsers": n => { simulationReport.simulationUsers = n.getCollectionOfObjectValues<UserSimulationDetails>(createUserSimulationDetailsFromDiscriminatorValue); },
    }
}
export function serializeSimulationReport(writer: SerializationWriter, simulationReport: SimulationReport | undefined = {} as SimulationReport) : void {
        writer.writeStringValue("@odata.type", simulationReport.odataType);
        writer.writeObjectValue<SimulationReportOverview>("overview", simulationReport.overview, serializeSimulationReportOverview);
        writer.writeCollectionOfObjectValues<UserSimulationDetails>("simulationUsers", simulationReport.simulationUsers, serializeUserSimulationDetails);
        writer.writeAdditionalData(simulationReport.additionalData);
}
export interface SimulationReport extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Overview of an attack simulation and training campaign.
     */
    overview?: SimulationReportOverview;
    /**
     * The tenant users and their online actions in an attack simulation and training campaign.
     */
    simulationUsers?: UserSimulationDetails[];
}
// tslint:enable
// eslint-enable
