// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAuthenticationMethod, serializeAuthenticationMethod, type AuthenticationMethod } from './authenticationMethod';
import { AuthenticationMethodKeyStrength } from './authenticationMethodKeyStrength';
import { createDeviceFromDiscriminatorValue, serializeDevice, type Device } from './device';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsHelloForBusinessAuthenticationMethodFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsHelloForBusinessAuthenticationMethod;
}
export function deserializeIntoWindowsHelloForBusinessAuthenticationMethod(windowsHelloForBusinessAuthenticationMethod: WindowsHelloForBusinessAuthenticationMethod | undefined = {} as WindowsHelloForBusinessAuthenticationMethod) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuthenticationMethod(windowsHelloForBusinessAuthenticationMethod),
        "createdDateTime": n => { windowsHelloForBusinessAuthenticationMethod.createdDateTime = n.getDateValue(); },
        "device": n => { windowsHelloForBusinessAuthenticationMethod.device = n.getObjectValue<Device>(createDeviceFromDiscriminatorValue); },
        "displayName": n => { windowsHelloForBusinessAuthenticationMethod.displayName = n.getStringValue(); },
        "keyStrength": n => { windowsHelloForBusinessAuthenticationMethod.keyStrength = n.getEnumValue<AuthenticationMethodKeyStrength>(AuthenticationMethodKeyStrength); },
    }
}
export function serializeWindowsHelloForBusinessAuthenticationMethod(writer: SerializationWriter, windowsHelloForBusinessAuthenticationMethod: WindowsHelloForBusinessAuthenticationMethod | undefined = {} as WindowsHelloForBusinessAuthenticationMethod) : void {
    serializeAuthenticationMethod(writer, windowsHelloForBusinessAuthenticationMethod)
    writer.writeDateValue("createdDateTime", windowsHelloForBusinessAuthenticationMethod.createdDateTime);
    writer.writeObjectValue<Device>("device", windowsHelloForBusinessAuthenticationMethod.device, serializeDevice);
    writer.writeStringValue("displayName", windowsHelloForBusinessAuthenticationMethod.displayName);
    writer.writeEnumValue<AuthenticationMethodKeyStrength>("keyStrength", windowsHelloForBusinessAuthenticationMethod.keyStrength);
}
export interface WindowsHelloForBusinessAuthenticationMethod extends AuthenticationMethod, Parsable {
    /**
     * The date and time that this Windows Hello for Business key was registered.
     */
    createdDateTime?: Date;
    /**
     * The registered device on which this Windows Hello for Business key resides. Supports $expand. When you get a user's Windows Hello for Business registration information, this property is returned only on a single GET and when you specify ?$expand. For example, GET /users/admin@contoso.com/authentication/windowsHelloForBusinessMethods/_jpuR-TGZtk6aQCLF3BQjA2?$expand=device.
     */
    device?: Device;
    /**
     * The name of the device on which Windows Hello for Business is registered
     */
    displayName?: string;
    /**
     * Key strength of this Windows Hello for Business key. Possible values are: normal, weak, unknown.
     */
    keyStrength?: AuthenticationMethodKeyStrength;
}
// tslint:enable
// eslint-enable
