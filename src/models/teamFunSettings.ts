// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { GiphyRatingType } from './giphyRatingType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamFunSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamFunSettings;
}
export function deserializeIntoTeamFunSettings(teamFunSettings: TeamFunSettings | undefined = {} as TeamFunSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "allowCustomMemes": n => { teamFunSettings.allowCustomMemes = n.getBooleanValue(); },
        "allowGiphy": n => { teamFunSettings.allowGiphy = n.getBooleanValue(); },
        "allowStickersAndMemes": n => { teamFunSettings.allowStickersAndMemes = n.getBooleanValue(); },
        "giphyContentRating": n => { teamFunSettings.giphyContentRating = n.getEnumValue<GiphyRatingType>(GiphyRatingType); },
        "@odata.type": n => { teamFunSettings.odataType = n.getStringValue(); },
    }
}
export function serializeTeamFunSettings(writer: SerializationWriter, teamFunSettings: TeamFunSettings | undefined = {} as TeamFunSettings) : void {
    writer.writeBooleanValue("allowCustomMemes", teamFunSettings.allowCustomMemes);
    writer.writeBooleanValue("allowGiphy", teamFunSettings.allowGiphy);
    writer.writeBooleanValue("allowStickersAndMemes", teamFunSettings.allowStickersAndMemes);
    writer.writeEnumValue<GiphyRatingType>("giphyContentRating", teamFunSettings.giphyContentRating);
    writer.writeStringValue("@odata.type", teamFunSettings.odataType);
    writer.writeAdditionalData(teamFunSettings.additionalData);
}
export interface TeamFunSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If set to true, enables users to include custom memes.
     */
    allowCustomMemes?: boolean;
    /**
     * If set to true, enables Giphy use.
     */
    allowGiphy?: boolean;
    /**
     * If set to true, enables users to include stickers and memes.
     */
    allowStickersAndMemes?: boolean;
    /**
     * Giphy content rating. Possible values are: moderate, strict.
     */
    giphyContentRating?: GiphyRatingType;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
