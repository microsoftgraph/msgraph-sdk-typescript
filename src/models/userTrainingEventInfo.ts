// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { TrainingStatus } from './trainingStatus';
import { createUserTrainingContentEventInfoFromDiscriminatorValue, serializeUserTrainingContentEventInfo, type UserTrainingContentEventInfo } from './userTrainingContentEventInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserTrainingEventInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserTrainingEventInfo;
}
export function deserializeIntoUserTrainingEventInfo(userTrainingEventInfo: UserTrainingEventInfo | undefined = {} as UserTrainingEventInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "displayName": n => { userTrainingEventInfo.displayName = n.getStringValue(); },
        "latestTrainingStatus": n => { userTrainingEventInfo.latestTrainingStatus = n.getEnumValue<TrainingStatus>(TrainingStatus); },
        "@odata.type": n => { userTrainingEventInfo.odataType = n.getStringValue(); },
        "trainingAssignedProperties": n => { userTrainingEventInfo.trainingAssignedProperties = n.getObjectValue<UserTrainingContentEventInfo>(createUserTrainingContentEventInfoFromDiscriminatorValue); },
        "trainingCompletedProperties": n => { userTrainingEventInfo.trainingCompletedProperties = n.getObjectValue<UserTrainingContentEventInfo>(createUserTrainingContentEventInfoFromDiscriminatorValue); },
        "trainingUpdatedProperties": n => { userTrainingEventInfo.trainingUpdatedProperties = n.getObjectValue<UserTrainingContentEventInfo>(createUserTrainingContentEventInfoFromDiscriminatorValue); },
    }
}
export function serializeUserTrainingEventInfo(writer: SerializationWriter, userTrainingEventInfo: UserTrainingEventInfo | undefined = {} as UserTrainingEventInfo) : void {
        writer.writeStringValue("displayName", userTrainingEventInfo.displayName);
        writer.writeEnumValue<TrainingStatus>("latestTrainingStatus", userTrainingEventInfo.latestTrainingStatus);
        writer.writeStringValue("@odata.type", userTrainingEventInfo.odataType);
        writer.writeObjectValue<UserTrainingContentEventInfo>("trainingAssignedProperties", userTrainingEventInfo.trainingAssignedProperties, serializeUserTrainingContentEventInfo);
        writer.writeObjectValue<UserTrainingContentEventInfo>("trainingCompletedProperties", userTrainingEventInfo.trainingCompletedProperties, serializeUserTrainingContentEventInfo);
        writer.writeObjectValue<UserTrainingContentEventInfo>("trainingUpdatedProperties", userTrainingEventInfo.trainingUpdatedProperties, serializeUserTrainingContentEventInfo);
        writer.writeAdditionalData(userTrainingEventInfo.additionalData);
}
export interface UserTrainingEventInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Display name of the training.
     */
    displayName?: string;
    /**
     * Latest status of the training assigned to the user. Possible values are: unknown, assigned, inProgress, completed, overdue, unknownFutureValue.
     */
    latestTrainingStatus?: TrainingStatus;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Event details of the training when it was assigned to the user.
     */
    trainingAssignedProperties?: UserTrainingContentEventInfo;
    /**
     * Event details of the training when it was completed by the user.
     */
    trainingCompletedProperties?: UserTrainingContentEventInfo;
    /**
     * Event details of the training when it was updated/in-progress by the user.
     */
    trainingUpdatedProperties?: UserTrainingContentEventInfo;
}
// tslint:enable
// eslint-enable
