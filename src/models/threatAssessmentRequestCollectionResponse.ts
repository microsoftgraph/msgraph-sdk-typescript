// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createThreatAssessmentRequestFromDiscriminatorValue, serializeThreatAssessmentRequest, type ThreatAssessmentRequest } from './threatAssessmentRequest';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createThreatAssessmentRequestCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoThreatAssessmentRequestCollectionResponse;
}
export function deserializeIntoThreatAssessmentRequestCollectionResponse(threatAssessmentRequestCollectionResponse: ThreatAssessmentRequestCollectionResponse | undefined = {} as ThreatAssessmentRequestCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(threatAssessmentRequestCollectionResponse),
        "value": n => { threatAssessmentRequestCollectionResponse.value = n.getCollectionOfObjectValues<ThreatAssessmentRequest>(createThreatAssessmentRequestFromDiscriminatorValue); },
    }
}
export function serializeThreatAssessmentRequestCollectionResponse(writer: SerializationWriter, threatAssessmentRequestCollectionResponse: ThreatAssessmentRequestCollectionResponse | undefined = {} as ThreatAssessmentRequestCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, threatAssessmentRequestCollectionResponse)
        writer.writeCollectionOfObjectValues<ThreatAssessmentRequest>("value", threatAssessmentRequestCollectionResponse.value, serializeThreatAssessmentRequest);
}
export interface ThreatAssessmentRequestCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ThreatAssessmentRequest[];
}
// tslint:enable
// eslint-enable
