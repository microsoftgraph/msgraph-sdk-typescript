// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAppManagementConfigurationFromDiscriminatorValue, serializeAppManagementConfiguration, type AppManagementConfiguration } from './appManagementConfiguration';
import { deserializeIntoPolicyBase, serializePolicyBase, type PolicyBase } from './policyBase';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTenantAppManagementPolicyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTenantAppManagementPolicy;
}
export function deserializeIntoTenantAppManagementPolicy(tenantAppManagementPolicy: TenantAppManagementPolicy | undefined = {} as TenantAppManagementPolicy) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPolicyBase(tenantAppManagementPolicy),
        "applicationRestrictions": n => { tenantAppManagementPolicy.applicationRestrictions = n.getObjectValue<AppManagementConfiguration>(createAppManagementConfigurationFromDiscriminatorValue); },
        "isEnabled": n => { tenantAppManagementPolicy.isEnabled = n.getBooleanValue(); },
        "servicePrincipalRestrictions": n => { tenantAppManagementPolicy.servicePrincipalRestrictions = n.getObjectValue<AppManagementConfiguration>(createAppManagementConfigurationFromDiscriminatorValue); },
    }
}
export function serializeTenantAppManagementPolicy(writer: SerializationWriter, tenantAppManagementPolicy: TenantAppManagementPolicy | undefined = {} as TenantAppManagementPolicy) : void {
    serializePolicyBase(writer, tenantAppManagementPolicy)
    writer.writeObjectValue<AppManagementConfiguration>("applicationRestrictions", tenantAppManagementPolicy.applicationRestrictions, serializeAppManagementConfiguration);
    writer.writeBooleanValue("isEnabled", tenantAppManagementPolicy.isEnabled);
    writer.writeObjectValue<AppManagementConfiguration>("servicePrincipalRestrictions", tenantAppManagementPolicy.servicePrincipalRestrictions, serializeAppManagementConfiguration);
}
export interface TenantAppManagementPolicy extends Parsable, PolicyBase {
    /**
     * Restrictions that apply as default to all application objects in the tenant.
     */
    applicationRestrictions?: AppManagementConfiguration;
    /**
     * Denotes whether the policy is enabled. Default value is false.
     */
    isEnabled?: boolean;
    /**
     * Restrictions that apply as default to all service principal objects in the tenant.
     */
    servicePrincipalRestrictions?: AppManagementConfiguration;
}
// tslint:enable
// eslint-enable
