import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createConversationMemberFromDiscriminatorValue, serializeConversationMember, type ConversationMember } from './conversationMember';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ConversationMemberCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ConversationMember[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createConversationMemberCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoConversationMemberCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoConversationMemberCollectionResponse(conversationMemberCollectionResponse: ConversationMemberCollectionResponse | undefined = {} as ConversationMemberCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(conversationMemberCollectionResponse),
        "value": n => { conversationMemberCollectionResponse.value = n.getCollectionOfObjectValues<ConversationMember>(createConversationMemberFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeConversationMemberCollectionResponse(writer: SerializationWriter, conversationMemberCollectionResponse: ConversationMemberCollectionResponse | undefined = {} as ConversationMemberCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, conversationMemberCollectionResponse)
        writer.writeCollectionOfObjectValues<ConversationMember>("value", conversationMemberCollectionResponse.value, );
}
