// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createPlannerTaskFromDiscriminatorValue, serializePlannerTask, type PlannerTask } from './plannerTask';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlannerTaskCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerTaskCollectionResponse;
}
export function deserializeIntoPlannerTaskCollectionResponse(plannerTaskCollectionResponse: PlannerTaskCollectionResponse | undefined = {} as PlannerTaskCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(plannerTaskCollectionResponse),
        "value": n => { plannerTaskCollectionResponse.value = n.getCollectionOfObjectValues<PlannerTask>(createPlannerTaskFromDiscriminatorValue); },
    }
}
export interface PlannerTaskCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PlannerTask[];
}
export function serializePlannerTaskCollectionResponse(writer: SerializationWriter, plannerTaskCollectionResponse: PlannerTaskCollectionResponse | undefined = {} as PlannerTaskCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, plannerTaskCollectionResponse)
        writer.writeCollectionOfObjectValues<PlannerTask>("value", plannerTaskCollectionResponse.value, serializePlannerTask);
}
// tslint:enable
// eslint-enable
