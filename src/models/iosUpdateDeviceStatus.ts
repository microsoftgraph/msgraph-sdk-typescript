// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { ComplianceStatus } from './complianceStatus';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { IosUpdatesInstallStatus } from './iosUpdatesInstallStatus';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIosUpdateDeviceStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosUpdateDeviceStatus;
}
export function deserializeIntoIosUpdateDeviceStatus(iosUpdateDeviceStatus: IosUpdateDeviceStatus | undefined = {} as IosUpdateDeviceStatus) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(iosUpdateDeviceStatus),
        "complianceGracePeriodExpirationDateTime": n => { iosUpdateDeviceStatus.complianceGracePeriodExpirationDateTime = n.getDateValue(); },
        "deviceDisplayName": n => { iosUpdateDeviceStatus.deviceDisplayName = n.getStringValue(); },
        "deviceId": n => { iosUpdateDeviceStatus.deviceId = n.getStringValue(); },
        "deviceModel": n => { iosUpdateDeviceStatus.deviceModel = n.getStringValue(); },
        "installStatus": n => { iosUpdateDeviceStatus.installStatus = n.getEnumValue<IosUpdatesInstallStatus>(IosUpdatesInstallStatus); },
        "lastReportedDateTime": n => { iosUpdateDeviceStatus.lastReportedDateTime = n.getDateValue(); },
        "osVersion": n => { iosUpdateDeviceStatus.osVersion = n.getStringValue(); },
        "status": n => { iosUpdateDeviceStatus.status = n.getEnumValue<ComplianceStatus>(ComplianceStatus); },
        "userId": n => { iosUpdateDeviceStatus.userId = n.getStringValue(); },
        "userName": n => { iosUpdateDeviceStatus.userName = n.getStringValue(); },
        "userPrincipalName": n => { iosUpdateDeviceStatus.userPrincipalName = n.getStringValue(); },
    }
}
export interface IosUpdateDeviceStatus extends Entity, Parsable {
    /**
     * The DateTime when device compliance grace period expires
     */
    complianceGracePeriodExpirationDateTime?: Date;
    /**
     * Device name of the DevicePolicyStatus.
     */
    deviceDisplayName?: string;
    /**
     * The device id that is being reported.
     */
    deviceId?: string;
    /**
     * The device model that is being reported
     */
    deviceModel?: string;
    /**
     * The installStatus property
     */
    installStatus?: IosUpdatesInstallStatus;
    /**
     * Last modified date time of the policy report.
     */
    lastReportedDateTime?: Date;
    /**
     * The device version that is being reported.
     */
    osVersion?: string;
    /**
     * The status property
     */
    status?: ComplianceStatus;
    /**
     * The User id that is being reported.
     */
    userId?: string;
    /**
     * The User Name that is being reported
     */
    userName?: string;
    /**
     * UserPrincipalName.
     */
    userPrincipalName?: string;
}
export function serializeIosUpdateDeviceStatus(writer: SerializationWriter, iosUpdateDeviceStatus: IosUpdateDeviceStatus | undefined = {} as IosUpdateDeviceStatus) : void {
    serializeEntity(writer, iosUpdateDeviceStatus)
    writer.writeDateValue("complianceGracePeriodExpirationDateTime", iosUpdateDeviceStatus.complianceGracePeriodExpirationDateTime);
    writer.writeStringValue("deviceDisplayName", iosUpdateDeviceStatus.deviceDisplayName);
    writer.writeStringValue("deviceId", iosUpdateDeviceStatus.deviceId);
    writer.writeStringValue("deviceModel", iosUpdateDeviceStatus.deviceModel);
    writer.writeEnumValue<IosUpdatesInstallStatus>("installStatus", iosUpdateDeviceStatus.installStatus);
    writer.writeDateValue("lastReportedDateTime", iosUpdateDeviceStatus.lastReportedDateTime);
    writer.writeStringValue("osVersion", iosUpdateDeviceStatus.osVersion);
    writer.writeEnumValue<ComplianceStatus>("status", iosUpdateDeviceStatus.status);
    writer.writeStringValue("userId", iosUpdateDeviceStatus.userId);
    writer.writeStringValue("userName", iosUpdateDeviceStatus.userName);
    writer.writeStringValue("userPrincipalName", iosUpdateDeviceStatus.userPrincipalName);
}
// tslint:enable
// eslint-enable
