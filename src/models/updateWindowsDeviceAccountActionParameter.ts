// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createWindowsDeviceAccountFromDiscriminatorValue, serializeWindowsDeviceAccount, type WindowsDeviceAccount } from './windowsDeviceAccount';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUpdateWindowsDeviceAccountActionParameterFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUpdateWindowsDeviceAccountActionParameter;
}
export function deserializeIntoUpdateWindowsDeviceAccountActionParameter(updateWindowsDeviceAccountActionParameter: UpdateWindowsDeviceAccountActionParameter | undefined = {} as UpdateWindowsDeviceAccountActionParameter) : Record<string, (node: ParseNode) => void> {
    return {
        "calendarSyncEnabled": n => { updateWindowsDeviceAccountActionParameter.calendarSyncEnabled = n.getBooleanValue(); },
        "deviceAccount": n => { updateWindowsDeviceAccountActionParameter.deviceAccount = n.getObjectValue<WindowsDeviceAccount>(createWindowsDeviceAccountFromDiscriminatorValue); },
        "deviceAccountEmail": n => { updateWindowsDeviceAccountActionParameter.deviceAccountEmail = n.getStringValue(); },
        "exchangeServer": n => { updateWindowsDeviceAccountActionParameter.exchangeServer = n.getStringValue(); },
        "@odata.type": n => { updateWindowsDeviceAccountActionParameter.odataType = n.getStringValue(); },
        "passwordRotationEnabled": n => { updateWindowsDeviceAccountActionParameter.passwordRotationEnabled = n.getBooleanValue(); },
        "sessionInitiationProtocalAddress": n => { updateWindowsDeviceAccountActionParameter.sessionInitiationProtocalAddress = n.getStringValue(); },
    }
}
export function serializeUpdateWindowsDeviceAccountActionParameter(writer: SerializationWriter, updateWindowsDeviceAccountActionParameter: UpdateWindowsDeviceAccountActionParameter | undefined = {} as UpdateWindowsDeviceAccountActionParameter) : void {
        writer.writeBooleanValue("calendarSyncEnabled", updateWindowsDeviceAccountActionParameter.calendarSyncEnabled);
        writer.writeObjectValue<WindowsDeviceAccount>("deviceAccount", updateWindowsDeviceAccountActionParameter.deviceAccount, );
        writer.writeStringValue("deviceAccountEmail", updateWindowsDeviceAccountActionParameter.deviceAccountEmail);
        writer.writeStringValue("exchangeServer", updateWindowsDeviceAccountActionParameter.exchangeServer);
        writer.writeStringValue("@odata.type", updateWindowsDeviceAccountActionParameter.odataType);
        writer.writeBooleanValue("passwordRotationEnabled", updateWindowsDeviceAccountActionParameter.passwordRotationEnabled);
        writer.writeStringValue("sessionInitiationProtocalAddress", updateWindowsDeviceAccountActionParameter.sessionInitiationProtocalAddress);
        writer.writeAdditionalData(updateWindowsDeviceAccountActionParameter.additionalData);
}
export interface UpdateWindowsDeviceAccountActionParameter extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Not yet documented
     */
    calendarSyncEnabled?: boolean;
    /**
     * Not yet documented
     */
    deviceAccount?: WindowsDeviceAccount;
    /**
     * Not yet documented
     */
    deviceAccountEmail?: string;
    /**
     * Not yet documented
     */
    exchangeServer?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Not yet documented
     */
    passwordRotationEnabled?: boolean;
    /**
     * Not yet documented
     */
    sessionInitiationProtocalAddress?: string;
}
// tslint:enable
// eslint-enable
