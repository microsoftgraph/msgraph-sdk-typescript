import { deserializeIntoConversationMember, serializeConversationMember, type ConversationMember } from './conversationMember';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createSkypeForBusinessUserConversationMemberFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSkypeForBusinessUserConversationMember;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoSkypeForBusinessUserConversationMember(skypeForBusinessUserConversationMember: SkypeForBusinessUserConversationMember | undefined = {} as SkypeForBusinessUserConversationMember) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoConversationMember(skypeForBusinessUserConversationMember),
        "tenantId": n => { skypeForBusinessUserConversationMember.tenantId = n.getStringValue(); },
        "userId": n => { skypeForBusinessUserConversationMember.userId = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeSkypeForBusinessUserConversationMember(writer: SerializationWriter, skypeForBusinessUserConversationMember: SkypeForBusinessUserConversationMember | undefined = {} as SkypeForBusinessUserConversationMember) : void {
        serializeConversationMember(writer, skypeForBusinessUserConversationMember)
        writer.writeStringValue("tenantId", skypeForBusinessUserConversationMember.tenantId);
        writer.writeStringValue("userId", skypeForBusinessUserConversationMember.userId);
}
export interface SkypeForBusinessUserConversationMember extends ConversationMember, Parsable {
    /**
     * ID of the tenant that the user belongs to.
     */
    tenantId?: string;
    /**
     * Azure Active Directory ID of the user.
     */
    userId?: string;
}
