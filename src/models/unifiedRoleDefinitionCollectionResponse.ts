// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createUnifiedRoleDefinitionFromDiscriminatorValue, serializeUnifiedRoleDefinition, type UnifiedRoleDefinition } from './unifiedRoleDefinition';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUnifiedRoleDefinitionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUnifiedRoleDefinitionCollectionResponse;
}
export function deserializeIntoUnifiedRoleDefinitionCollectionResponse(unifiedRoleDefinitionCollectionResponse: UnifiedRoleDefinitionCollectionResponse | undefined = {} as UnifiedRoleDefinitionCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(unifiedRoleDefinitionCollectionResponse),
        "value": n => { unifiedRoleDefinitionCollectionResponse.value = n.getCollectionOfObjectValues<UnifiedRoleDefinition>(createUnifiedRoleDefinitionFromDiscriminatorValue); },
    }
}
export function serializeUnifiedRoleDefinitionCollectionResponse(writer: SerializationWriter, unifiedRoleDefinitionCollectionResponse: UnifiedRoleDefinitionCollectionResponse | undefined = {} as UnifiedRoleDefinitionCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, unifiedRoleDefinitionCollectionResponse)
    writer.writeCollectionOfObjectValues<UnifiedRoleDefinition>("value", unifiedRoleDefinitionCollectionResponse.value, serializeUnifiedRoleDefinition);
}
export interface UnifiedRoleDefinitionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UnifiedRoleDefinition[];
}
// tslint:enable
// eslint-enable
