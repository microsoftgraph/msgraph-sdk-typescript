// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDelegatedAdminServiceManagementDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDelegatedAdminServiceManagementDetail;
}
export interface DelegatedAdminServiceManagementDetail extends Entity, Parsable {
    /**
     * The URL of the management portal for the managed service. Read-only.
     */
    serviceManagementUrl?: string;
    /**
     * The name of a managed service. Read-only.
     */
    serviceName?: string;
}
export function deserializeIntoDelegatedAdminServiceManagementDetail(delegatedAdminServiceManagementDetail: DelegatedAdminServiceManagementDetail | undefined = {} as DelegatedAdminServiceManagementDetail) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(delegatedAdminServiceManagementDetail),
        "serviceManagementUrl": n => { delegatedAdminServiceManagementDetail.serviceManagementUrl = n.getStringValue(); },
        "serviceName": n => { delegatedAdminServiceManagementDetail.serviceName = n.getStringValue(); },
    }
}
export function serializeDelegatedAdminServiceManagementDetail(writer: SerializationWriter, delegatedAdminServiceManagementDetail: DelegatedAdminServiceManagementDetail | undefined = {} as DelegatedAdminServiceManagementDetail) : void {
    serializeEntity(writer, delegatedAdminServiceManagementDetail)
    writer.writeStringValue("serviceManagementUrl", delegatedAdminServiceManagementDetail.serviceManagementUrl);
    writer.writeStringValue("serviceName", delegatedAdminServiceManagementDetail.serviceName);
}
// tslint:enable
// eslint-enable
