// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDeviceConfiguration, serializeDeviceConfiguration, type DeviceConfiguration } from './deviceConfiguration';
import { EditionUpgradeLicenseType } from './editionUpgradeLicenseType';
import { Windows10EditionType } from './windows10EditionType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEditionUpgradeConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEditionUpgradeConfiguration;
}
export function deserializeIntoEditionUpgradeConfiguration(editionUpgradeConfiguration: EditionUpgradeConfiguration | undefined = {} as EditionUpgradeConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDeviceConfiguration(editionUpgradeConfiguration),
        "license": n => { editionUpgradeConfiguration.license = n.getStringValue(); },
        "licenseType": n => { editionUpgradeConfiguration.licenseType = n.getEnumValue<EditionUpgradeLicenseType>(EditionUpgradeLicenseType); },
        "productKey": n => { editionUpgradeConfiguration.productKey = n.getStringValue(); },
        "targetEdition": n => { editionUpgradeConfiguration.targetEdition = n.getEnumValue<Windows10EditionType>(Windows10EditionType); },
    }
}
export interface EditionUpgradeConfiguration extends DeviceConfiguration, Parsable {
    /**
     * Edition Upgrade License File Content.
     */
    license?: string;
    /**
     * Edition Upgrade License type
     */
    licenseType?: EditionUpgradeLicenseType;
    /**
     * Edition Upgrade Product Key.
     */
    productKey?: string;
    /**
     * Windows 10 Edition type.
     */
    targetEdition?: Windows10EditionType;
}
export function serializeEditionUpgradeConfiguration(writer: SerializationWriter, editionUpgradeConfiguration: EditionUpgradeConfiguration | undefined = {} as EditionUpgradeConfiguration) : void {
    serializeDeviceConfiguration(writer, editionUpgradeConfiguration)
    writer.writeStringValue("license", editionUpgradeConfiguration.license);
    writer.writeEnumValue<EditionUpgradeLicenseType>("licenseType", editionUpgradeConfiguration.licenseType);
    writer.writeStringValue("productKey", editionUpgradeConfiguration.productKey);
    writer.writeEnumValue<Windows10EditionType>("targetEdition", editionUpgradeConfiguration.targetEdition);
}
// tslint:enable
// eslint-enable
