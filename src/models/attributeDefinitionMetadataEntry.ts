// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AttributeDefinitionMetadata } from './attributeDefinitionMetadata';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AttributeDefinitionMetadataEntry extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Possible values are: BaseAttributeName, ComplexObjectDefinition, IsContainer, IsCustomerDefined, IsDomainQualified, LinkPropertyNames, LinkTypeName, MaximumLength, ReferencedProperty.
     */
    key?: AttributeDefinitionMetadata;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Value of the metadata property.
     */
    value?: string;
}
export function createAttributeDefinitionMetadataEntryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAttributeDefinitionMetadataEntry;
}
export function deserializeIntoAttributeDefinitionMetadataEntry(attributeDefinitionMetadataEntry: AttributeDefinitionMetadataEntry | undefined = {} as AttributeDefinitionMetadataEntry) : Record<string, (node: ParseNode) => void> {
    return {
        "key": n => { attributeDefinitionMetadataEntry.key = n.getEnumValue<AttributeDefinitionMetadata>(AttributeDefinitionMetadata); },
        "@odata.type": n => { attributeDefinitionMetadataEntry.odataType = n.getStringValue(); },
        "value": n => { attributeDefinitionMetadataEntry.value = n.getStringValue(); },
    }
}
export function serializeAttributeDefinitionMetadataEntry(writer: SerializationWriter, attributeDefinitionMetadataEntry: AttributeDefinitionMetadataEntry | undefined = {} as AttributeDefinitionMetadataEntry) : void {
    writer.writeEnumValue<AttributeDefinitionMetadata>("key", attributeDefinitionMetadataEntry.key);
    writer.writeStringValue("@odata.type", attributeDefinitionMetadataEntry.odataType);
    writer.writeStringValue("value", attributeDefinitionMetadataEntry.value);
    writer.writeAdditionalData(attributeDefinitionMetadataEntry.additionalData);
}
// tslint:enable
// eslint-enable
