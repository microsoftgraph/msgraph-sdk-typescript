// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAppIdentityFromDiscriminatorValue, serializeAppIdentity, type AppIdentity } from './appIdentity';
import { createUserIdentityFromDiscriminatorValue, serializeUserIdentity, type UserIdentity } from './userIdentity';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AuditActivityInitiator extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If the resource initiating the activity is an app, this property indicates all the app related information like appId, Name, servicePrincipalId, Name.
     */
    app?: AppIdentity;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * If the resource initiating the activity is a user, this property Indicates all the user related information like userId, Name, UserPrinicpalName.
     */
    user?: UserIdentity;
}
export function createAuditActivityInitiatorFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAuditActivityInitiator;
}
export function deserializeIntoAuditActivityInitiator(auditActivityInitiator: AuditActivityInitiator | undefined = {} as AuditActivityInitiator) : Record<string, (node: ParseNode) => void> {
    return {
        "app": n => { auditActivityInitiator.app = n.getObjectValue<AppIdentity>(createAppIdentityFromDiscriminatorValue); },
        "@odata.type": n => { auditActivityInitiator.odataType = n.getStringValue(); },
        "user": n => { auditActivityInitiator.user = n.getObjectValue<UserIdentity>(createUserIdentityFromDiscriminatorValue); },
    }
}
export function serializeAuditActivityInitiator(writer: SerializationWriter, auditActivityInitiator: AuditActivityInitiator | undefined = {} as AuditActivityInitiator) : void {
        writer.writeObjectValue<AppIdentity>("app", auditActivityInitiator.app, serializeAppIdentity);
        writer.writeStringValue("@odata.type", auditActivityInitiator.odataType);
        writer.writeObjectValue<UserIdentity>("user", auditActivityInitiator.user, serializeUserIdentity);
        writer.writeAdditionalData(auditActivityInitiator.additionalData);
}
// tslint:enable
// eslint-enable
