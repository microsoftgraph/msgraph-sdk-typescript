// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDisplayNameLocalizationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDisplayNameLocalization;
}
export function deserializeIntoDisplayNameLocalization(displayNameLocalization: DisplayNameLocalization | undefined = {} as DisplayNameLocalization) : Record<string, (node: ParseNode) => void> {
    return {
        "displayName": n => { displayNameLocalization.displayName = n.getStringValue(); },
        "languageTag": n => { displayNameLocalization.languageTag = n.getStringValue(); },
        "@odata.type": n => { displayNameLocalization.odataType = n.getStringValue(); },
    }
}
export interface DisplayNameLocalization extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If present, the value of this field contains the displayName string that has been set for the language present in the languageTag field.
     */
    displayName?: string;
    /**
     * Provides the language culture-code and friendly name of the language that the displayName field has been provided in.
     */
    languageTag?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeDisplayNameLocalization(writer: SerializationWriter, displayNameLocalization: DisplayNameLocalization | undefined = {} as DisplayNameLocalization) : void {
        writer.writeStringValue("displayName", displayNameLocalization.displayName);
        writer.writeStringValue("languageTag", displayNameLocalization.languageTag);
        writer.writeStringValue("@odata.type", displayNameLocalization.odataType);
        writer.writeAdditionalData(displayNameLocalization.additionalData);
}
// tslint:enable
// eslint-enable
