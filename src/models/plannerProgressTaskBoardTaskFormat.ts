// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlannerProgressTaskBoardTaskFormatFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerProgressTaskBoardTaskFormat;
}
export function deserializeIntoPlannerProgressTaskBoardTaskFormat(plannerProgressTaskBoardTaskFormat: PlannerProgressTaskBoardTaskFormat | undefined = {} as PlannerProgressTaskBoardTaskFormat) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(plannerProgressTaskBoardTaskFormat),
        "orderHint": n => { plannerProgressTaskBoardTaskFormat.orderHint = n.getStringValue(); },
    }
}
export interface PlannerProgressTaskBoardTaskFormat extends Entity, Parsable {
    /**
     * Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner.
     */
    orderHint?: string;
}
export function serializePlannerProgressTaskBoardTaskFormat(writer: SerializationWriter, plannerProgressTaskBoardTaskFormat: PlannerProgressTaskBoardTaskFormat | undefined = {} as PlannerProgressTaskBoardTaskFormat) : void {
        serializeEntity(writer, plannerProgressTaskBoardTaskFormat)
        writer.writeStringValue("orderHint", plannerProgressTaskBoardTaskFormat.orderHint);
}
// tslint:enable
// eslint-enable
