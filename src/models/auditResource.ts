// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAuditPropertyFromDiscriminatorValue, serializeAuditProperty, type AuditProperty } from './auditProperty';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AuditResource extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Audit resource's type.
     */
    auditResourceType?: string;
    /**
     * Display name.
     */
    displayName?: string;
    /**
     * List of modified properties.
     */
    modifiedProperties?: AuditProperty[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Audit resource's Id.
     */
    resourceId?: string;
}
export function createAuditResourceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAuditResource;
}
export function deserializeIntoAuditResource(auditResource: AuditResource | undefined = {} as AuditResource) : Record<string, (node: ParseNode) => void> {
    return {
        "auditResourceType": n => { auditResource.auditResourceType = n.getStringValue(); },
        "displayName": n => { auditResource.displayName = n.getStringValue(); },
        "modifiedProperties": n => { auditResource.modifiedProperties = n.getCollectionOfObjectValues<AuditProperty>(createAuditPropertyFromDiscriminatorValue); },
        "@odata.type": n => { auditResource.odataType = n.getStringValue(); },
        "resourceId": n => { auditResource.resourceId = n.getStringValue(); },
    }
}
export function serializeAuditResource(writer: SerializationWriter, auditResource: AuditResource | undefined = {} as AuditResource) : void {
        writer.writeStringValue("auditResourceType", auditResource.auditResourceType);
        writer.writeStringValue("displayName", auditResource.displayName);
        writer.writeCollectionOfObjectValues<AuditProperty>("modifiedProperties", auditResource.modifiedProperties, );
        writer.writeStringValue("@odata.type", auditResource.odataType);
        writer.writeStringValue("resourceId", auditResource.resourceId);
        writer.writeAdditionalData(auditResource.additionalData);
}
// tslint:enable
// eslint-enable
