// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AttestationLevel } from './attestationLevel';
import { deserializeIntoAuthenticationMethod, serializeAuthenticationMethod, type AuthenticationMethod } from './authenticationMethod';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFido2AuthenticationMethodFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFido2AuthenticationMethod;
}
export function deserializeIntoFido2AuthenticationMethod(fido2AuthenticationMethod: Fido2AuthenticationMethod | undefined = {} as Fido2AuthenticationMethod) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuthenticationMethod(fido2AuthenticationMethod),
        "aaGuid": n => { fido2AuthenticationMethod.aaGuid = n.getStringValue(); },
        "attestationCertificates": n => { fido2AuthenticationMethod.attestationCertificates = n.getCollectionOfPrimitiveValues<string>(); },
        "attestationLevel": n => { fido2AuthenticationMethod.attestationLevel = n.getEnumValue<AttestationLevel>(AttestationLevel); },
        "createdDateTime": n => { fido2AuthenticationMethod.createdDateTime = n.getDateValue(); },
        "displayName": n => { fido2AuthenticationMethod.displayName = n.getStringValue(); },
        "model": n => { fido2AuthenticationMethod.model = n.getStringValue(); },
    }
}
export interface Fido2AuthenticationMethod extends AuthenticationMethod, Parsable {
    /**
     * Authenticator Attestation GUID, an identifier that indicates the type (e.g. make and model) of the authenticator.
     */
    aaGuid?: string;
    /**
     * The attestation certificate(s) attached to this security key.
     */
    attestationCertificates?: string[];
    /**
     * The attestation level of this FIDO2 security key. Possible values are: attested, or notAttested.
     */
    attestationLevel?: AttestationLevel;
    /**
     * The timestamp when this key was registered to the user.
     */
    createdDateTime?: Date;
    /**
     * The display name of the key as given by the user.
     */
    displayName?: string;
    /**
     * The manufacturer-assigned model of the FIDO2 security key.
     */
    model?: string;
}
export function serializeFido2AuthenticationMethod(writer: SerializationWriter, fido2AuthenticationMethod: Fido2AuthenticationMethod | undefined = {} as Fido2AuthenticationMethod) : void {
    serializeAuthenticationMethod(writer, fido2AuthenticationMethod)
    writer.writeStringValue("aaGuid", fido2AuthenticationMethod.aaGuid);
    writer.writeCollectionOfPrimitiveValues<string>("attestationCertificates", fido2AuthenticationMethod.attestationCertificates);
    writer.writeEnumValue<AttestationLevel>("attestationLevel", fido2AuthenticationMethod.attestationLevel);
    writer.writeDateValue("createdDateTime", fido2AuthenticationMethod.createdDateTime);
    writer.writeStringValue("displayName", fido2AuthenticationMethod.displayName);
    writer.writeStringValue("model", fido2AuthenticationMethod.model);
}
// tslint:enable
// eslint-enable
