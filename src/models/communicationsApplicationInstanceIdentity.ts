// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoIdentity, serializeIdentity, type Identity } from './identity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CommunicationsApplicationInstanceIdentity extends Identity, Parsable {
    /**
     * The hidden property
     */
    hidden?: boolean;
    /**
     * The tenantId property
     */
    tenantId?: string;
}
export function createCommunicationsApplicationInstanceIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCommunicationsApplicationInstanceIdentity;
}
export function deserializeIntoCommunicationsApplicationInstanceIdentity(communicationsApplicationInstanceIdentity: CommunicationsApplicationInstanceIdentity | undefined = {} as CommunicationsApplicationInstanceIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsApplicationInstanceIdentity),
        "hidden": n => { communicationsApplicationInstanceIdentity.hidden = n.getBooleanValue(); },
        "tenantId": n => { communicationsApplicationInstanceIdentity.tenantId = n.getStringValue(); },
    }
}
export function serializeCommunicationsApplicationInstanceIdentity(writer: SerializationWriter, communicationsApplicationInstanceIdentity: CommunicationsApplicationInstanceIdentity | undefined = {} as CommunicationsApplicationInstanceIdentity) : void {
        serializeIdentity(writer, communicationsApplicationInstanceIdentity)
        writer.writeBooleanValue("hidden", communicationsApplicationInstanceIdentity.hidden);
        writer.writeStringValue("tenantId", communicationsApplicationInstanceIdentity.tenantId);
}
// tslint:enable
// eslint-enable
