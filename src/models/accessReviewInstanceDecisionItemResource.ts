// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAccessReviewInstanceDecisionItemAccessPackageAssignmentPolicyResource } from './accessReviewInstanceDecisionItemAccessPackageAssignmentPolicyResource';
import { deserializeIntoAccessReviewInstanceDecisionItemAzureRoleResource } from './accessReviewInstanceDecisionItemAzureRoleResource';
import { deserializeIntoAccessReviewInstanceDecisionItemServicePrincipalResource } from './accessReviewInstanceDecisionItemServicePrincipalResource';
import { type AccessReviewInstanceDecisionItemAccessPackageAssignmentPolicyResource, type AccessReviewInstanceDecisionItemAzureRoleResource, type AccessReviewInstanceDecisionItemServicePrincipalResource } from './index';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessReviewInstanceDecisionItemResource extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Display name of the resource
     */
    displayName?: string;
    /**
     * Identifier of the resource
     */
    id?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Type of resource. Types include: Group, ServicePrincipal, DirectoryRole, AzureRole, AccessPackageAssignmentPolicy.
     */
    type?: string;
}
export function createAccessReviewInstanceDecisionItemResourceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.accessReviewInstanceDecisionItemAccessPackageAssignmentPolicyResource":
                    return deserializeIntoAccessReviewInstanceDecisionItemAccessPackageAssignmentPolicyResource;
                case "#microsoft.graph.accessReviewInstanceDecisionItemAzureRoleResource":
                    return deserializeIntoAccessReviewInstanceDecisionItemAzureRoleResource;
                case "#microsoft.graph.accessReviewInstanceDecisionItemServicePrincipalResource":
                    return deserializeIntoAccessReviewInstanceDecisionItemServicePrincipalResource;
            }
        }
    }
    return deserializeIntoAccessReviewInstanceDecisionItemResource;
}
export function deserializeIntoAccessReviewInstanceDecisionItemResource(accessReviewInstanceDecisionItemResource: AccessReviewInstanceDecisionItemResource | undefined = {} as AccessReviewInstanceDecisionItemResource) : Record<string, (node: ParseNode) => void> {
    return {
        "displayName": n => { accessReviewInstanceDecisionItemResource.displayName = n.getStringValue(); },
        "id": n => { accessReviewInstanceDecisionItemResource.id = n.getStringValue(); },
        "@odata.type": n => { accessReviewInstanceDecisionItemResource.odataType = n.getStringValue(); },
        "type": n => { accessReviewInstanceDecisionItemResource.type = n.getStringValue(); },
    }
}
export function serializeAccessReviewInstanceDecisionItemResource(writer: SerializationWriter, accessReviewInstanceDecisionItemResource: AccessReviewInstanceDecisionItemResource | undefined = {} as AccessReviewInstanceDecisionItemResource) : void {
    writer.writeStringValue("displayName", accessReviewInstanceDecisionItemResource.displayName);
    writer.writeStringValue("id", accessReviewInstanceDecisionItemResource.id);
    writer.writeStringValue("@odata.type", accessReviewInstanceDecisionItemResource.odataType);
    writer.writeStringValue("type", accessReviewInstanceDecisionItemResource.type);
    writer.writeAdditionalData(accessReviewInstanceDecisionItemResource.additionalData);
}
// tslint:enable
// eslint-enable
