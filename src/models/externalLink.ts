// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createExternalLinkFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoExternalLink;
}
export function deserializeIntoExternalLink(externalLink: ExternalLink | undefined = {} as ExternalLink) : Record<string, (node: ParseNode) => void> {
    return {
        "href": n => { externalLink.href = n.getStringValue(); },
        "@odata.type": n => { externalLink.odataType = n.getStringValue(); },
    }
}
export interface ExternalLink extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The URL of the link.
     */
    href?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeExternalLink(writer: SerializationWriter, externalLink: ExternalLink | undefined = {} as ExternalLink) : void {
    writer.writeStringValue("href", externalLink.href);
    writer.writeStringValue("@odata.type", externalLink.odataType);
    writer.writeAdditionalData(externalLink.additionalData);
}
// tslint:enable
// eslint-enable
