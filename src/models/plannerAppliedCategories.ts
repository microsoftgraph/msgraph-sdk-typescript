// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlannerAppliedCategoriesFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerAppliedCategories;
}
export function deserializeIntoPlannerAppliedCategories(plannerAppliedCategories: PlannerAppliedCategories | undefined = {} as PlannerAppliedCategories) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { plannerAppliedCategories.odataType = n.getStringValue(); },
    }
}
export interface PlannerAppliedCategories extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializePlannerAppliedCategories(writer: SerializationWriter, plannerAppliedCategories: PlannerAppliedCategories | undefined = {} as PlannerAppliedCategories) : void {
        writer.writeStringValue("@odata.type", plannerAppliedCategories.odataType);
        writer.writeAdditionalData(plannerAppliedCategories.additionalData);
}
// tslint:enable
// eslint-enable
