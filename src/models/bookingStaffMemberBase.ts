import { deserializeIntoBookingStaffMember } from './bookingStaffMember';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type BookingStaffMember } from './index';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingStaffMemberBase extends Entity, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createBookingStaffMemberBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.bookingStaffMember":
                    return deserializeIntoBookingStaffMember;
            }
        }
    }
    return deserializeIntoBookingStaffMemberBase;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoBookingStaffMemberBase(bookingStaffMemberBase: BookingStaffMemberBase | undefined = {} as BookingStaffMemberBase) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(bookingStaffMemberBase),
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeBookingStaffMemberBase(writer: SerializationWriter, bookingStaffMemberBase: BookingStaffMemberBase | undefined = {} as BookingStaffMemberBase) : void {
        serializeEntity(writer, bookingStaffMemberBase)
}
