import { createLearningCourseActivityFromDiscriminatorValue, serializeLearningCourseActivity, type LearningCourseActivity } from './learningCourseActivity';
import { createLearningProviderFromDiscriminatorValue, serializeLearningProvider, type LearningProvider } from './learningProvider';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createEmployeeExperienceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEmployeeExperience;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoEmployeeExperience(employeeExperience: EmployeeExperience | undefined = {} as EmployeeExperience) : Record<string, (node: ParseNode) => void> {
    return {
        "learningCourseActivities": n => { employeeExperience.learningCourseActivities = n.getCollectionOfObjectValues<LearningCourseActivity>(createLearningCourseActivityFromDiscriminatorValue); },
        "learningProviders": n => { employeeExperience.learningProviders = n.getCollectionOfObjectValues<LearningProvider>(createLearningProviderFromDiscriminatorValue); },
        "@odata.type": n => { employeeExperience.odataType = n.getStringValue(); },
    }
}
export interface EmployeeExperience extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The learningCourseActivities property
     */
    learningCourseActivities?: LearningCourseActivity[];
    /**
     * A collection of learning providers.
     */
    learningProviders?: LearningProvider[];
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeEmployeeExperience(writer: SerializationWriter, employeeExperience: EmployeeExperience | undefined = {} as EmployeeExperience) : void {
        writer.writeCollectionOfObjectValues<LearningCourseActivity>("learningCourseActivities", employeeExperience.learningCourseActivities, );
        writer.writeCollectionOfObjectValues<LearningProvider>("learningProviders", employeeExperience.learningProviders, );
        writer.writeStringValue("@odata.type", employeeExperience.odataType);
        writer.writeAdditionalData(employeeExperience.additionalData);
}
