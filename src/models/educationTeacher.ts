// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEducationTeacherFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEducationTeacher;
}
export function deserializeIntoEducationTeacher(educationTeacher: EducationTeacher | undefined = {} as EducationTeacher) : Record<string, (node: ParseNode) => void> {
    return {
        "externalId": n => { educationTeacher.externalId = n.getStringValue(); },
        "@odata.type": n => { educationTeacher.odataType = n.getStringValue(); },
        "teacherNumber": n => { educationTeacher.teacherNumber = n.getStringValue(); },
    }
}
export interface EducationTeacher extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * ID of the teacher in the source system.
     */
    externalId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Teacher number.
     */
    teacherNumber?: string;
}
export function serializeEducationTeacher(writer: SerializationWriter, educationTeacher: EducationTeacher | undefined = {} as EducationTeacher) : void {
    writer.writeStringValue("externalId", educationTeacher.externalId);
    writer.writeStringValue("@odata.type", educationTeacher.odataType);
    writer.writeStringValue("teacherNumber", educationTeacher.teacherNumber);
    writer.writeAdditionalData(educationTeacher.additionalData);
}
// tslint:enable
// eslint-enable
