// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createPermissionGrantConditionSetFromDiscriminatorValue, serializePermissionGrantConditionSet, type PermissionGrantConditionSet } from './permissionGrantConditionSet';
import { deserializeIntoPolicyBase, serializePolicyBase, type PolicyBase } from './policyBase';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPermissionGrantPolicyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPermissionGrantPolicy;
}
export function deserializeIntoPermissionGrantPolicy(permissionGrantPolicy: PermissionGrantPolicy | undefined = {} as PermissionGrantPolicy) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPolicyBase(permissionGrantPolicy),
        "excludes": n => { permissionGrantPolicy.excludes = n.getCollectionOfObjectValues<PermissionGrantConditionSet>(createPermissionGrantConditionSetFromDiscriminatorValue); },
        "includes": n => { permissionGrantPolicy.includes = n.getCollectionOfObjectValues<PermissionGrantConditionSet>(createPermissionGrantConditionSetFromDiscriminatorValue); },
    }
}
export interface PermissionGrantPolicy extends Parsable, PolicyBase {
    /**
     * Condition sets which are excluded in this permission grant policy. Automatically expanded on GET.
     */
    excludes?: PermissionGrantConditionSet[];
    /**
     * Condition sets which are included in this permission grant policy. Automatically expanded on GET.
     */
    includes?: PermissionGrantConditionSet[];
}
export function serializePermissionGrantPolicy(writer: SerializationWriter, permissionGrantPolicy: PermissionGrantPolicy | undefined = {} as PermissionGrantPolicy) : void {
        serializePolicyBase(writer, permissionGrantPolicy)
        writer.writeCollectionOfObjectValues<PermissionGrantConditionSet>("excludes", permissionGrantPolicy.excludes, serializePermissionGrantConditionSet);
        writer.writeCollectionOfObjectValues<PermissionGrantConditionSet>("includes", permissionGrantPolicy.includes, serializePermissionGrantConditionSet);
}
// tslint:enable
// eslint-enable
