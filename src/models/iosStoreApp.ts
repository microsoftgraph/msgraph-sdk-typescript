// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIosDeviceTypeFromDiscriminatorValue, serializeIosDeviceType, type IosDeviceType } from './iosDeviceType';
import { createIosMinimumOperatingSystemFromDiscriminatorValue, serializeIosMinimumOperatingSystem, type IosMinimumOperatingSystem } from './iosMinimumOperatingSystem';
import { deserializeIntoMobileApp, serializeMobileApp, type MobileApp } from './mobileApp';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIosStoreAppFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosStoreApp;
}
export function deserializeIntoIosStoreApp(iosStoreApp: IosStoreApp | undefined = {} as IosStoreApp) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMobileApp(iosStoreApp),
        "applicableDeviceType": n => { iosStoreApp.applicableDeviceType = n.getObjectValue<IosDeviceType>(createIosDeviceTypeFromDiscriminatorValue); },
        "appStoreUrl": n => { iosStoreApp.appStoreUrl = n.getStringValue(); },
        "bundleId": n => { iosStoreApp.bundleId = n.getStringValue(); },
        "minimumSupportedOperatingSystem": n => { iosStoreApp.minimumSupportedOperatingSystem = n.getObjectValue<IosMinimumOperatingSystem>(createIosMinimumOperatingSystemFromDiscriminatorValue); },
    }
}
export interface IosStoreApp extends MobileApp, Parsable {
    /**
     * Contains properties of the possible iOS device types the mobile app can run on.
     */
    applicableDeviceType?: IosDeviceType;
    /**
     * The Apple App Store URL
     */
    appStoreUrl?: string;
    /**
     * The Identity Name.
     */
    bundleId?: string;
    /**
     * The value for the minimum applicable operating system.
     */
    minimumSupportedOperatingSystem?: IosMinimumOperatingSystem;
}
export function serializeIosStoreApp(writer: SerializationWriter, iosStoreApp: IosStoreApp | undefined = {} as IosStoreApp) : void {
        serializeMobileApp(writer, iosStoreApp)
        writer.writeObjectValue<IosDeviceType>("applicableDeviceType", iosStoreApp.applicableDeviceType, serializeIosDeviceType);
        writer.writeStringValue("appStoreUrl", iosStoreApp.appStoreUrl);
        writer.writeStringValue("bundleId", iosStoreApp.bundleId);
        writer.writeObjectValue<IosMinimumOperatingSystem>("minimumSupportedOperatingSystem", iosStoreApp.minimumSupportedOperatingSystem, serializeIosMinimumOperatingSystem);
}
// tslint:enable
// eslint-enable
