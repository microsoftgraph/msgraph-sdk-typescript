// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type Win32LobAppFileSystemRule, type Win32LobAppPowerShellScriptRule, type Win32LobAppProductCodeRule, type Win32LobAppRegistryRule } from './index';
import { deserializeIntoWin32LobAppFileSystemRule } from './win32LobAppFileSystemRule';
import { deserializeIntoWin32LobAppPowerShellScriptRule } from './win32LobAppPowerShellScriptRule';
import { deserializeIntoWin32LobAppProductCodeRule } from './win32LobAppProductCodeRule';
import { deserializeIntoWin32LobAppRegistryRule } from './win32LobAppRegistryRule';
import { Win32LobAppRuleType } from './win32LobAppRuleType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWin32LobAppRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.win32LobAppFileSystemRule":
                    return deserializeIntoWin32LobAppFileSystemRule;
                case "#microsoft.graph.win32LobAppPowerShellScriptRule":
                    return deserializeIntoWin32LobAppPowerShellScriptRule;
                case "#microsoft.graph.win32LobAppProductCodeRule":
                    return deserializeIntoWin32LobAppProductCodeRule;
                case "#microsoft.graph.win32LobAppRegistryRule":
                    return deserializeIntoWin32LobAppRegistryRule;
            }
        }
    }
    return deserializeIntoWin32LobAppRule;
}
export function deserializeIntoWin32LobAppRule(win32LobAppRule: Win32LobAppRule | undefined = {} as Win32LobAppRule) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { win32LobAppRule.odataType = n.getStringValue(); },
        "ruleType": n => { win32LobAppRule.ruleType = n.getEnumValue<Win32LobAppRuleType>(Win32LobAppRuleType); },
    }
}
export function serializeWin32LobAppRule(writer: SerializationWriter, win32LobAppRule: Win32LobAppRule | undefined = {} as Win32LobAppRule) : void {
        writer.writeStringValue("@odata.type", win32LobAppRule.odataType);
        writer.writeEnumValue<Win32LobAppRuleType>("ruleType", win32LobAppRule.ruleType);
        writer.writeAdditionalData(win32LobAppRule.additionalData);
}
export interface Win32LobAppRule extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Contains rule types for Win32 LOB apps.
     */
    ruleType?: Win32LobAppRuleType;
}
// tslint:enable
// eslint-enable
