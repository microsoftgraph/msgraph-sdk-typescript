// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createSubjectSetFromDiscriminatorValue, serializeSubjectSet, type SubjectSet } from './subjectSet';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageAssignmentRequestorSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * False indicates that the requestor isn't permitted to include a schedule in their request.
     */
    allowCustomAssignmentSchedule?: boolean;
    /**
     * True allows on-behalf-of requestors to create a request to add access for another principal.
     */
    enableOnBehalfRequestorsToAddAccess?: boolean;
    /**
     * True allows on-behalf-of requestors to create a request to remove access for another principal.
     */
    enableOnBehalfRequestorsToRemoveAccess?: boolean;
    /**
     * True allows on-behalf-of requestors to create a request to update access for another principal.
     */
    enableOnBehalfRequestorsToUpdateAccess?: boolean;
    /**
     * True allows requestors to create a request to add access for themselves.
     */
    enableTargetsToSelfAddAccess?: boolean;
    /**
     * True allows requestors to create a request to remove their access.
     */
    enableTargetsToSelfRemoveAccess?: boolean;
    /**
     * True allows requestors to create a request to update their access.
     */
    enableTargetsToSelfUpdateAccess?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The principals who can request on-behalf-of others.
     */
    onBehalfRequestors?: SubjectSet[];
}
export function createAccessPackageAssignmentRequestorSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageAssignmentRequestorSettings;
}
export function deserializeIntoAccessPackageAssignmentRequestorSettings(accessPackageAssignmentRequestorSettings: AccessPackageAssignmentRequestorSettings | undefined = {} as AccessPackageAssignmentRequestorSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "allowCustomAssignmentSchedule": n => { accessPackageAssignmentRequestorSettings.allowCustomAssignmentSchedule = n.getBooleanValue(); },
        "enableOnBehalfRequestorsToAddAccess": n => { accessPackageAssignmentRequestorSettings.enableOnBehalfRequestorsToAddAccess = n.getBooleanValue(); },
        "enableOnBehalfRequestorsToRemoveAccess": n => { accessPackageAssignmentRequestorSettings.enableOnBehalfRequestorsToRemoveAccess = n.getBooleanValue(); },
        "enableOnBehalfRequestorsToUpdateAccess": n => { accessPackageAssignmentRequestorSettings.enableOnBehalfRequestorsToUpdateAccess = n.getBooleanValue(); },
        "enableTargetsToSelfAddAccess": n => { accessPackageAssignmentRequestorSettings.enableTargetsToSelfAddAccess = n.getBooleanValue(); },
        "enableTargetsToSelfRemoveAccess": n => { accessPackageAssignmentRequestorSettings.enableTargetsToSelfRemoveAccess = n.getBooleanValue(); },
        "enableTargetsToSelfUpdateAccess": n => { accessPackageAssignmentRequestorSettings.enableTargetsToSelfUpdateAccess = n.getBooleanValue(); },
        "@odata.type": n => { accessPackageAssignmentRequestorSettings.odataType = n.getStringValue(); },
        "onBehalfRequestors": n => { accessPackageAssignmentRequestorSettings.onBehalfRequestors = n.getCollectionOfObjectValues<SubjectSet>(createSubjectSetFromDiscriminatorValue); },
    }
}
export function serializeAccessPackageAssignmentRequestorSettings(writer: SerializationWriter, accessPackageAssignmentRequestorSettings: AccessPackageAssignmentRequestorSettings | undefined = {} as AccessPackageAssignmentRequestorSettings) : void {
        writer.writeBooleanValue("allowCustomAssignmentSchedule", accessPackageAssignmentRequestorSettings.allowCustomAssignmentSchedule);
        writer.writeBooleanValue("enableOnBehalfRequestorsToAddAccess", accessPackageAssignmentRequestorSettings.enableOnBehalfRequestorsToAddAccess);
        writer.writeBooleanValue("enableOnBehalfRequestorsToRemoveAccess", accessPackageAssignmentRequestorSettings.enableOnBehalfRequestorsToRemoveAccess);
        writer.writeBooleanValue("enableOnBehalfRequestorsToUpdateAccess", accessPackageAssignmentRequestorSettings.enableOnBehalfRequestorsToUpdateAccess);
        writer.writeBooleanValue("enableTargetsToSelfAddAccess", accessPackageAssignmentRequestorSettings.enableTargetsToSelfAddAccess);
        writer.writeBooleanValue("enableTargetsToSelfRemoveAccess", accessPackageAssignmentRequestorSettings.enableTargetsToSelfRemoveAccess);
        writer.writeBooleanValue("enableTargetsToSelfUpdateAccess", accessPackageAssignmentRequestorSettings.enableTargetsToSelfUpdateAccess);
        writer.writeStringValue("@odata.type", accessPackageAssignmentRequestorSettings.odataType);
        writer.writeCollectionOfObjectValues<SubjectSet>("onBehalfRequestors", accessPackageAssignmentRequestorSettings.onBehalfRequestors, );
        writer.writeAdditionalData(accessPackageAssignmentRequestorSettings.additionalData);
}
// tslint:enable
// eslint-enable
