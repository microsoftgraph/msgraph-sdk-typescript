// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceProtectionOverviewFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceProtectionOverview;
}
export function deserializeIntoDeviceProtectionOverview(deviceProtectionOverview: DeviceProtectionOverview | undefined = {} as DeviceProtectionOverview) : Record<string, (node: ParseNode) => void> {
    return {
        "cleanDeviceCount": n => { deviceProtectionOverview.cleanDeviceCount = n.getNumberValue(); },
        "criticalFailuresDeviceCount": n => { deviceProtectionOverview.criticalFailuresDeviceCount = n.getNumberValue(); },
        "inactiveThreatAgentDeviceCount": n => { deviceProtectionOverview.inactiveThreatAgentDeviceCount = n.getNumberValue(); },
        "@odata.type": n => { deviceProtectionOverview.odataType = n.getStringValue(); },
        "pendingFullScanDeviceCount": n => { deviceProtectionOverview.pendingFullScanDeviceCount = n.getNumberValue(); },
        "pendingManualStepsDeviceCount": n => { deviceProtectionOverview.pendingManualStepsDeviceCount = n.getNumberValue(); },
        "pendingOfflineScanDeviceCount": n => { deviceProtectionOverview.pendingOfflineScanDeviceCount = n.getNumberValue(); },
        "pendingQuickScanDeviceCount": n => { deviceProtectionOverview.pendingQuickScanDeviceCount = n.getNumberValue(); },
        "pendingRestartDeviceCount": n => { deviceProtectionOverview.pendingRestartDeviceCount = n.getNumberValue(); },
        "pendingSignatureUpdateDeviceCount": n => { deviceProtectionOverview.pendingSignatureUpdateDeviceCount = n.getNumberValue(); },
        "totalReportedDeviceCount": n => { deviceProtectionOverview.totalReportedDeviceCount = n.getNumberValue(); },
        "unknownStateThreatAgentDeviceCount": n => { deviceProtectionOverview.unknownStateThreatAgentDeviceCount = n.getNumberValue(); },
    }
}
export interface DeviceProtectionOverview extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Indicates number of devices reporting as clean
     */
    cleanDeviceCount?: number;
    /**
     * Indicates number of devices with critical failures
     */
    criticalFailuresDeviceCount?: number;
    /**
     * Indicates number of devices with inactive threat agent
     */
    inactiveThreatAgentDeviceCount?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Indicates number of devices pending full scan
     */
    pendingFullScanDeviceCount?: number;
    /**
     * Indicates number of devices with pending manual steps
     */
    pendingManualStepsDeviceCount?: number;
    /**
     * Indicates number of pending offline scan devices
     */
    pendingOfflineScanDeviceCount?: number;
    /**
     * Indicates the number of devices that have a pending full scan. Valid values -2147483648 to 2147483647
     */
    pendingQuickScanDeviceCount?: number;
    /**
     * Indicates number of devices pending restart
     */
    pendingRestartDeviceCount?: number;
    /**
     * Indicates number of devices with an old signature
     */
    pendingSignatureUpdateDeviceCount?: number;
    /**
     * Total device count.
     */
    totalReportedDeviceCount?: number;
    /**
     * Indicates number of devices with threat agent state as unknown
     */
    unknownStateThreatAgentDeviceCount?: number;
}
export function serializeDeviceProtectionOverview(writer: SerializationWriter, deviceProtectionOverview: DeviceProtectionOverview | undefined = {} as DeviceProtectionOverview) : void {
    writer.writeNumberValue("cleanDeviceCount", deviceProtectionOverview.cleanDeviceCount);
    writer.writeNumberValue("criticalFailuresDeviceCount", deviceProtectionOverview.criticalFailuresDeviceCount);
    writer.writeNumberValue("inactiveThreatAgentDeviceCount", deviceProtectionOverview.inactiveThreatAgentDeviceCount);
    writer.writeStringValue("@odata.type", deviceProtectionOverview.odataType);
    writer.writeNumberValue("pendingFullScanDeviceCount", deviceProtectionOverview.pendingFullScanDeviceCount);
    writer.writeNumberValue("pendingManualStepsDeviceCount", deviceProtectionOverview.pendingManualStepsDeviceCount);
    writer.writeNumberValue("pendingOfflineScanDeviceCount", deviceProtectionOverview.pendingOfflineScanDeviceCount);
    writer.writeNumberValue("pendingQuickScanDeviceCount", deviceProtectionOverview.pendingQuickScanDeviceCount);
    writer.writeNumberValue("pendingRestartDeviceCount", deviceProtectionOverview.pendingRestartDeviceCount);
    writer.writeNumberValue("pendingSignatureUpdateDeviceCount", deviceProtectionOverview.pendingSignatureUpdateDeviceCount);
    writer.writeNumberValue("totalReportedDeviceCount", deviceProtectionOverview.totalReportedDeviceCount);
    writer.writeNumberValue("unknownStateThreatAgentDeviceCount", deviceProtectionOverview.unknownStateThreatAgentDeviceCount);
    writer.writeAdditionalData(deviceProtectionOverview.additionalData);
}
// tslint:enable
// eslint-enable
