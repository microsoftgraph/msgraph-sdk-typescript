import { ContactRelationship } from './contactRelationship';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createRelatedContactFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRelatedContact;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoRelatedContact(relatedContact: RelatedContact | undefined = {} as RelatedContact) : Record<string, (node: ParseNode) => void> {
    return {
        "accessConsent": n => { relatedContact.accessConsent = n.getBooleanValue(); },
        "displayName": n => { relatedContact.displayName = n.getStringValue(); },
        "emailAddress": n => { relatedContact.emailAddress = n.getStringValue(); },
        "mobilePhone": n => { relatedContact.mobilePhone = n.getStringValue(); },
        "@odata.type": n => { relatedContact.odataType = n.getStringValue(); },
        "relationship": n => { relatedContact.relationship = n.getEnumValue<ContactRelationship>(ContactRelationship); },
    }
}
export interface RelatedContact extends AdditionalDataHolder, Parsable {
    /**
     * Indicates whether the user has been consented to access student data.
     */
    accessConsent?: boolean;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Name of the contact. Required.
     */
    displayName?: string;
    /**
     * Primary email address of the contact. Required.
     */
    emailAddress?: string;
    /**
     * Mobile phone number of the contact.
     */
    mobilePhone?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The relationship property
     */
    relationship?: ContactRelationship;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeRelatedContact(writer: SerializationWriter, relatedContact: RelatedContact | undefined = {} as RelatedContact) : void {
        writer.writeBooleanValue("accessConsent", relatedContact.accessConsent);
        writer.writeStringValue("displayName", relatedContact.displayName);
        writer.writeStringValue("emailAddress", relatedContact.emailAddress);
        writer.writeStringValue("mobilePhone", relatedContact.mobilePhone);
        writer.writeStringValue("@odata.type", relatedContact.odataType);
        writer.writeEnumValue<ContactRelationship>("relationship", relatedContact.relationship);
        writer.writeAdditionalData(relatedContact.additionalData);
}
