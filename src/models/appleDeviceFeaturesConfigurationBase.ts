// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDeviceConfiguration, serializeDeviceConfiguration, type DeviceConfiguration } from './deviceConfiguration';
import { type IosDeviceFeaturesConfiguration, type MacOSDeviceFeaturesConfiguration } from './index';
import { deserializeIntoIosDeviceFeaturesConfiguration } from './iosDeviceFeaturesConfiguration';
import { deserializeIntoMacOSDeviceFeaturesConfiguration } from './macOSDeviceFeaturesConfiguration';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AppleDeviceFeaturesConfigurationBase extends DeviceConfiguration, Parsable {
}
export function createAppleDeviceFeaturesConfigurationBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.iosDeviceFeaturesConfiguration":
                    return deserializeIntoIosDeviceFeaturesConfiguration;
                case "#microsoft.graph.macOSDeviceFeaturesConfiguration":
                    return deserializeIntoMacOSDeviceFeaturesConfiguration;
            }
        }
    }
    return deserializeIntoAppleDeviceFeaturesConfigurationBase;
}
export function deserializeIntoAppleDeviceFeaturesConfigurationBase(appleDeviceFeaturesConfigurationBase: AppleDeviceFeaturesConfigurationBase | undefined = {} as AppleDeviceFeaturesConfigurationBase) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDeviceConfiguration(appleDeviceFeaturesConfigurationBase),
    }
}
export function serializeAppleDeviceFeaturesConfigurationBase(writer: SerializationWriter, appleDeviceFeaturesConfigurationBase: AppleDeviceFeaturesConfigurationBase | undefined = {} as AppleDeviceFeaturesConfigurationBase) : void {
        serializeDeviceConfiguration(writer, appleDeviceFeaturesConfigurationBase)
}
// tslint:enable
// eslint-enable
