// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createContactFromDiscriminatorValue, serializeContact, type Contact } from './contact';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ContactCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Contact[];
}
export function createContactCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoContactCollectionResponse;
}
export function deserializeIntoContactCollectionResponse(contactCollectionResponse: ContactCollectionResponse | undefined = {} as ContactCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(contactCollectionResponse),
        "value": n => { contactCollectionResponse.value = n.getCollectionOfObjectValues<Contact>(createContactFromDiscriminatorValue); },
    }
}
export function serializeContactCollectionResponse(writer: SerializationWriter, contactCollectionResponse: ContactCollectionResponse | undefined = {} as ContactCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, contactCollectionResponse)
        writer.writeCollectionOfObjectValues<Contact>("value", contactCollectionResponse.value, serializeContact);
}
// tslint:enable
// eslint-enable
