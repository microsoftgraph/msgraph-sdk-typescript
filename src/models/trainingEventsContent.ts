// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAssignedTrainingInfoFromDiscriminatorValue, serializeAssignedTrainingInfo, type AssignedTrainingInfo } from './assignedTrainingInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTrainingEventsContentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTrainingEventsContent;
}
export function deserializeIntoTrainingEventsContent(trainingEventsContent: TrainingEventsContent | undefined = {} as TrainingEventsContent) : Record<string, (node: ParseNode) => void> {
    return {
        "assignedTrainingsInfos": n => { trainingEventsContent.assignedTrainingsInfos = n.getCollectionOfObjectValues<AssignedTrainingInfo>(createAssignedTrainingInfoFromDiscriminatorValue); },
        "@odata.type": n => { trainingEventsContent.odataType = n.getStringValue(); },
        "trainingsAssignedUserCount": n => { trainingEventsContent.trainingsAssignedUserCount = n.getNumberValue(); },
    }
}
export function serializeTrainingEventsContent(writer: SerializationWriter, trainingEventsContent: TrainingEventsContent | undefined = {} as TrainingEventsContent) : void {
        writer.writeCollectionOfObjectValues<AssignedTrainingInfo>("assignedTrainingsInfos", trainingEventsContent.assignedTrainingsInfos, serializeAssignedTrainingInfo);
        writer.writeStringValue("@odata.type", trainingEventsContent.odataType);
        writer.writeNumberValue("trainingsAssignedUserCount", trainingEventsContent.trainingsAssignedUserCount);
        writer.writeAdditionalData(trainingEventsContent.additionalData);
}
export interface TrainingEventsContent extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * List of assigned trainings and their information in an attack simulation and training campaign.
     */
    assignedTrainingsInfos?: AssignedTrainingInfo[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Number of users who were assigned trainings in an attack simulation and training campaign.
     */
    trainingsAssignedUserCount?: number;
}
// tslint:enable
// eslint-enable
