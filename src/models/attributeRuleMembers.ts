// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoSubjectSet, serializeSubjectSet, type SubjectSet } from './subjectSet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AttributeRuleMembers extends Parsable, SubjectSet {
    /**
     * A description of the membership rule.
     */
    description?: string;
    /**
     * Determines the allowed target users for this policy. For more information about the syntax of the membership rule, see Membership Rules syntax.
     */
    membershipRule?: string;
}
export function createAttributeRuleMembersFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAttributeRuleMembers;
}
export function deserializeIntoAttributeRuleMembers(attributeRuleMembers: AttributeRuleMembers | undefined = {} as AttributeRuleMembers) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSubjectSet(attributeRuleMembers),
        "description": n => { attributeRuleMembers.description = n.getStringValue(); },
        "membershipRule": n => { attributeRuleMembers.membershipRule = n.getStringValue(); },
    }
}
export function serializeAttributeRuleMembers(writer: SerializationWriter, attributeRuleMembers: AttributeRuleMembers | undefined = {} as AttributeRuleMembers) : void {
    serializeSubjectSet(writer, attributeRuleMembers)
    writer.writeStringValue("description", attributeRuleMembers.description);
    writer.writeStringValue("membershipRule", attributeRuleMembers.membershipRule);
}
// tslint:enable
// eslint-enable
