// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type WindowsUpdateActiveHoursInstall, type WindowsUpdateScheduledInstall } from './index';
import { deserializeIntoWindowsUpdateActiveHoursInstall } from './windowsUpdateActiveHoursInstall';
import { deserializeIntoWindowsUpdateScheduledInstall } from './windowsUpdateScheduledInstall';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsUpdateInstallScheduleTypeFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.windowsUpdateActiveHoursInstall":
                    return deserializeIntoWindowsUpdateActiveHoursInstall;
                case "#microsoft.graph.windowsUpdateScheduledInstall":
                    return deserializeIntoWindowsUpdateScheduledInstall;
            }
        }
    }
    return deserializeIntoWindowsUpdateInstallScheduleType;
}
export function deserializeIntoWindowsUpdateInstallScheduleType(windowsUpdateInstallScheduleType: WindowsUpdateInstallScheduleType | undefined = {} as WindowsUpdateInstallScheduleType) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { windowsUpdateInstallScheduleType.odataType = n.getStringValue(); },
    }
}
export function serializeWindowsUpdateInstallScheduleType(writer: SerializationWriter, windowsUpdateInstallScheduleType: WindowsUpdateInstallScheduleType | undefined = {} as WindowsUpdateInstallScheduleType) : void {
    writer.writeStringValue("@odata.type", windowsUpdateInstallScheduleType.odataType);
    writer.writeAdditionalData(windowsUpdateInstallScheduleType.additionalData);
}
export interface WindowsUpdateInstallScheduleType extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
