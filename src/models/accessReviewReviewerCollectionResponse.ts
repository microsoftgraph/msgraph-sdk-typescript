// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessReviewReviewerFromDiscriminatorValue, serializeAccessReviewReviewer, type AccessReviewReviewer } from './accessReviewReviewer';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessReviewReviewerCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AccessReviewReviewer[];
}
export function createAccessReviewReviewerCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessReviewReviewerCollectionResponse;
}
export function deserializeIntoAccessReviewReviewerCollectionResponse(accessReviewReviewerCollectionResponse: AccessReviewReviewerCollectionResponse | undefined = {} as AccessReviewReviewerCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(accessReviewReviewerCollectionResponse),
        "value": n => { accessReviewReviewerCollectionResponse.value = n.getCollectionOfObjectValues<AccessReviewReviewer>(createAccessReviewReviewerFromDiscriminatorValue); },
    }
}
export function serializeAccessReviewReviewerCollectionResponse(writer: SerializationWriter, accessReviewReviewerCollectionResponse: AccessReviewReviewerCollectionResponse | undefined = {} as AccessReviewReviewerCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, accessReviewReviewerCollectionResponse)
        writer.writeCollectionOfObjectValues<AccessReviewReviewer>("value", accessReviewReviewerCollectionResponse.value, );
}
// tslint:enable
// eslint-enable
