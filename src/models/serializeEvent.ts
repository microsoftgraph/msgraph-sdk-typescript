import {Attachment} from './attachment';
import {Attendee} from './attendee';
import {Calendar} from './calendar';
import {DateTimeTimeZone} from './dateTimeTimeZone';
import {Event} from './event';
import {EventType} from './eventType';
import {Extension} from './extension';
import {FreeBusyStatus} from './freeBusyStatus';
import {Importance} from './importance';
import {ItemBody} from './itemBody';
import {Location} from './location';
import {MultiValueLegacyExtendedProperty} from './multiValueLegacyExtendedProperty';
import {OnlineMeetingInfo} from './onlineMeetingInfo';
import {OnlineMeetingProviderType} from './onlineMeetingProviderType';
import {PatternedRecurrence} from './patternedRecurrence';
import {Recipient} from './recipient';
import {ResponseStatus} from './responseStatus';
import {Sensitivity} from './sensitivity';
import {serializeAttachment} from './serializeAttachment';
import {serializeAttendee} from './serializeAttendee';
import {serializeCalendar} from './serializeCalendar';
import {serializeDateTimeTimeZone} from './serializeDateTimeTimeZone';
import {serializeExtension} from './serializeExtension';
import {serializeItemBody} from './serializeItemBody';
import {serializeLocation} from './serializeLocation';
import {serializeMultiValueLegacyExtendedProperty} from './serializeMultiValueLegacyExtendedProperty';
import {serializeOnlineMeetingInfo} from './serializeOnlineMeetingInfo';
import {serializeOutlookItem} from './serializeOutlookItem';
import {serializePatternedRecurrence} from './serializePatternedRecurrence';
import {serializeRecipient} from './serializeRecipient';
import {serializeResponseStatus} from './serializeResponseStatus';
import {serializeSingleValueLegacyExtendedProperty} from './serializeSingleValueLegacyExtendedProperty';
import {SingleValueLegacyExtendedProperty} from './singleValueLegacyExtendedProperty';
import {Parsable, ParseNode, SerializationWriter} from '@microsoft/kiota-abstractions';

export function serializeEvent(writer: SerializationWriter, event: Event | undefined = {} as Event) : void {
        serializeOutlookItem(writer, event)
        writer.writeBooleanValue("allowNewTimeProposals", event.allowNewTimeProposals);
        writer.writeCollectionOfObjectValues<Attachment>("attachments", event.attachments, serializeAttachment);
        writer.writeCollectionOfObjectValues<Attendee>("attendees", event.attendees, serializeAttendee);
        writer.writeObjectValue<ItemBody>("body", event.body, serializeItemBody);
        writer.writeStringValue("bodyPreview", event.bodyPreview);
        writer.writeObjectValue<Calendar>("calendar", event.calendar, serializeCalendar);
        writer.writeObjectValue<DateTimeTimeZone>("end", event.end, serializeDateTimeTimeZone);
        writer.writeCollectionOfObjectValues<Extension>("extensions", event.extensions, serializeExtension);
        writer.writeBooleanValue("hasAttachments", event.hasAttachments);
        writer.writeBooleanValue("hideAttendees", event.hideAttendees);
        writer.writeStringValue("iCalUId", event.iCalUId);
        writer.writeEnumValue<Importance>("importance", event.importance);
        writer.writeCollectionOfObjectValues<Event>("instances", event.instances, serializeEvent);
        writer.writeBooleanValue("isAllDay", event.isAllDay);
        writer.writeBooleanValue("isCancelled", event.isCancelled);
        writer.writeBooleanValue("isDraft", event.isDraft);
        writer.writeBooleanValue("isOnlineMeeting", event.isOnlineMeeting);
        writer.writeBooleanValue("isOrganizer", event.isOrganizer);
        writer.writeBooleanValue("isReminderOn", event.isReminderOn);
        writer.writeObjectValue<Location>("location", event.location, serializeLocation);
        writer.writeCollectionOfObjectValues<Location>("locations", event.locations, serializeLocation);
        writer.writeCollectionOfObjectValues<MultiValueLegacyExtendedProperty>("multiValueExtendedProperties", event.multiValueExtendedProperties, serializeMultiValueLegacyExtendedProperty);
        writer.writeObjectValue<OnlineMeetingInfo>("onlineMeeting", event.onlineMeeting, serializeOnlineMeetingInfo);
        writer.writeEnumValue<OnlineMeetingProviderType>("onlineMeetingProvider", event.onlineMeetingProvider);
        writer.writeStringValue("onlineMeetingUrl", event.onlineMeetingUrl);
        writer.writeObjectValue<Recipient>("organizer", event.organizer, serializeRecipient);
        writer.writeStringValue("originalEndTimeZone", event.originalEndTimeZone);
        writer.writeDateValue("originalStart", event.originalStart);
        writer.writeStringValue("originalStartTimeZone", event.originalStartTimeZone);
        writer.writeObjectValue<PatternedRecurrence>("recurrence", event.recurrence, serializePatternedRecurrence);
        writer.writeNumberValue("reminderMinutesBeforeStart", event.reminderMinutesBeforeStart);
        writer.writeBooleanValue("responseRequested", event.responseRequested);
        writer.writeObjectValue<ResponseStatus>("responseStatus", event.responseStatus, serializeResponseStatus);
        writer.writeEnumValue<Sensitivity>("sensitivity", event.sensitivity);
        writer.writeStringValue("seriesMasterId", event.seriesMasterId);
        writer.writeEnumValue<FreeBusyStatus>("showAs", event.showAs);
        writer.writeCollectionOfObjectValues<SingleValueLegacyExtendedProperty>("singleValueExtendedProperties", event.singleValueExtendedProperties, serializeSingleValueLegacyExtendedProperty);
        writer.writeObjectValue<DateTimeTimeZone>("start", event.start, serializeDateTimeTimeZone);
        writer.writeStringValue("subject", event.subject);
        writer.writeStringValue("transactionId", event.transactionId);
        writer.writeEnumValue<EventType>("type", event.type);
        writer.writeStringValue("webLink", event.webLink);
}
