// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createUserExperienceAnalyticsInsightFromDiscriminatorValue, serializeUserExperienceAnalyticsInsight, type UserExperienceAnalyticsInsight } from './userExperienceAnalyticsInsight';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsOverviewFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsOverview;
}
export function deserializeIntoUserExperienceAnalyticsOverview(userExperienceAnalyticsOverview: UserExperienceAnalyticsOverview | undefined = {} as UserExperienceAnalyticsOverview) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userExperienceAnalyticsOverview),
        "insights": n => { userExperienceAnalyticsOverview.insights = n.getCollectionOfObjectValues<UserExperienceAnalyticsInsight>(createUserExperienceAnalyticsInsightFromDiscriminatorValue); },
    }
}
export function serializeUserExperienceAnalyticsOverview(writer: SerializationWriter, userExperienceAnalyticsOverview: UserExperienceAnalyticsOverview | undefined = {} as UserExperienceAnalyticsOverview) : void {
        serializeEntity(writer, userExperienceAnalyticsOverview)
        writer.writeCollectionOfObjectValues<UserExperienceAnalyticsInsight>("insights", userExperienceAnalyticsOverview.insights, );
}
export interface UserExperienceAnalyticsOverview extends Entity, Parsable {
    /**
     * The user experience analytics insights. Read-only.
     */
    insights?: UserExperienceAnalyticsInsight[];
}
// tslint:enable
// eslint-enable
