import { deserializeIntoAgreementFileProperties, serializeAgreementFileProperties, type AgreementFileProperties } from './agreementFileProperties';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AgreementFileVersion extends AgreementFileProperties, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAgreementFileVersionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAgreementFileVersion;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAgreementFileVersion(agreementFileVersion: AgreementFileVersion | undefined = {} as AgreementFileVersion) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAgreementFileProperties(agreementFileVersion),
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAgreementFileVersion(writer: SerializationWriter, agreementFileVersion: AgreementFileVersion | undefined = {} as AgreementFileVersion) : void {
        serializeAgreementFileProperties(writer, agreementFileVersion)
}
