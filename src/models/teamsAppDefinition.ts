// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { createTeamsAppAuthorizationFromDiscriminatorValue, serializeTeamsAppAuthorization, type TeamsAppAuthorization } from './teamsAppAuthorization';
import { TeamsAppPublishingState } from './teamsAppPublishingState';
import { createTeamworkBotFromDiscriminatorValue, serializeTeamworkBot, type TeamworkBot } from './teamworkBot';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamsAppDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamsAppDefinition;
}
export function deserializeIntoTeamsAppDefinition(teamsAppDefinition: TeamsAppDefinition | undefined = {} as TeamsAppDefinition) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsAppDefinition),
        "authorization": n => { teamsAppDefinition.authorization = n.getObjectValue<TeamsAppAuthorization>(createTeamsAppAuthorizationFromDiscriminatorValue); },
        "bot": n => { teamsAppDefinition.bot = n.getObjectValue<TeamworkBot>(createTeamworkBotFromDiscriminatorValue); },
        "createdBy": n => { teamsAppDefinition.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "description": n => { teamsAppDefinition.description = n.getStringValue(); },
        "displayName": n => { teamsAppDefinition.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { teamsAppDefinition.lastModifiedDateTime = n.getDateValue(); },
        "publishingState": n => { teamsAppDefinition.publishingState = n.getEnumValue<TeamsAppPublishingState>(TeamsAppPublishingState); },
        "shortDescription": n => { teamsAppDefinition.shortDescription = n.getStringValue(); },
        "teamsAppId": n => { teamsAppDefinition.teamsAppId = n.getStringValue(); },
        "version": n => { teamsAppDefinition.version = n.getStringValue(); },
    }
}
export function serializeTeamsAppDefinition(writer: SerializationWriter, teamsAppDefinition: TeamsAppDefinition | undefined = {} as TeamsAppDefinition) : void {
    serializeEntity(writer, teamsAppDefinition)
    writer.writeObjectValue<TeamsAppAuthorization>("authorization", teamsAppDefinition.authorization, serializeTeamsAppAuthorization);
    writer.writeObjectValue<TeamworkBot>("bot", teamsAppDefinition.bot, serializeTeamworkBot);
    writer.writeObjectValue<IdentitySet>("createdBy", teamsAppDefinition.createdBy, serializeIdentitySet);
    writer.writeStringValue("description", teamsAppDefinition.description);
    writer.writeStringValue("displayName", teamsAppDefinition.displayName);
    writer.writeDateValue("lastModifiedDateTime", teamsAppDefinition.lastModifiedDateTime);
    writer.writeEnumValue<TeamsAppPublishingState>("publishingState", teamsAppDefinition.publishingState);
    writer.writeStringValue("shortDescription", teamsAppDefinition.shortDescription);
    writer.writeStringValue("teamsAppId", teamsAppDefinition.teamsAppId);
    writer.writeStringValue("version", teamsAppDefinition.version);
}
export interface TeamsAppDefinition extends Entity, Parsable {
    /**
     * Authorization requirements specified in the Teams app manifest.
     */
    authorization?: TeamsAppAuthorization;
    /**
     * The details of the bot specified in the Teams app manifest.
     */
    bot?: TeamworkBot;
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet;
    /**
     * Verbose description of the application.
     */
    description?: string;
    /**
     * The name of the app provided by the app developer.
     */
    displayName?: string;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date;
    /**
     * The published status of a specific version of a Teams app. Possible values are:submitted—The specific version of the Teams app has been submitted and is under review. published—The request to publish the specific version of the Teams app has been approved by the admin and the app is published.  rejected—The admin rejected the request to publish the specific version of the Teams app.
     */
    publishingState?: TeamsAppPublishingState;
    /**
     * Short description of the application.
     */
    shortDescription?: string;
    /**
     * The ID from the Teams app manifest.
     */
    teamsAppId?: string;
    /**
     * The version number of the application.
     */
    version?: string;
}
// tslint:enable
// eslint-enable
