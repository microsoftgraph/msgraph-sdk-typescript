// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseEndUserNotification, serializeBaseEndUserNotification, type BaseEndUserNotification } from './baseEndUserNotification';
import { NotificationDeliveryFrequency } from './notificationDeliveryFrequency';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTrainingReminderNotificationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTrainingReminderNotification;
}
export function deserializeIntoTrainingReminderNotification(trainingReminderNotification: TrainingReminderNotification | undefined = {} as TrainingReminderNotification) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseEndUserNotification(trainingReminderNotification),
        "deliveryFrequency": n => { trainingReminderNotification.deliveryFrequency = n.getEnumValue<NotificationDeliveryFrequency>(NotificationDeliveryFrequency); },
    }
}
export function serializeTrainingReminderNotification(writer: SerializationWriter, trainingReminderNotification: TrainingReminderNotification | undefined = {} as TrainingReminderNotification) : void {
        serializeBaseEndUserNotification(writer, trainingReminderNotification)
        writer.writeEnumValue<NotificationDeliveryFrequency>("deliveryFrequency", trainingReminderNotification.deliveryFrequency);
}
export interface TrainingReminderNotification extends BaseEndUserNotification, Parsable {
    /**
     * Configurable frequency for the reminder email introduced during simulation creation. Possible values are: unknown, weekly, biWeekly, unknownFutureValue.
     */
    deliveryFrequency?: NotificationDeliveryFrequency;
}
// tslint:enable
// eslint-enable
