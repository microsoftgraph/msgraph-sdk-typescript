import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createWindowsMobileMSIFromDiscriminatorValue, serializeWindowsMobileMSI, type WindowsMobileMSI } from './windowsMobileMSI';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createWindowsMobileMSICollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsMobileMSICollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoWindowsMobileMSICollectionResponse(windowsMobileMSICollectionResponse: WindowsMobileMSICollectionResponse | undefined = {} as WindowsMobileMSICollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(windowsMobileMSICollectionResponse),
        "value": n => { windowsMobileMSICollectionResponse.value = n.getCollectionOfObjectValues<WindowsMobileMSI>(createWindowsMobileMSIFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeWindowsMobileMSICollectionResponse(writer: SerializationWriter, windowsMobileMSICollectionResponse: WindowsMobileMSICollectionResponse | undefined = {} as WindowsMobileMSICollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, windowsMobileMSICollectionResponse)
        writer.writeCollectionOfObjectValues<WindowsMobileMSI>("value", windowsMobileMSICollectionResponse.value, );
}
export interface WindowsMobileMSICollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: WindowsMobileMSI[];
}
