// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDelegatedAdminServiceManagementDetailFromDiscriminatorValue, serializeDelegatedAdminServiceManagementDetail, type DelegatedAdminServiceManagementDetail } from './delegatedAdminServiceManagementDetail';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDelegatedAdminCustomerFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDelegatedAdminCustomer;
}
export interface DelegatedAdminCustomer extends Entity, Parsable {
    /**
     * The Microsoft Entra ID display name of the customer tenant. Read-only. Supports $orderby.
     */
    displayName?: string;
    /**
     * Contains the management details of a service in the customer tenant that's managed by delegated administration.
     */
    serviceManagementDetails?: DelegatedAdminServiceManagementDetail[];
    /**
     * The Microsoft Entra ID-assigned tenant ID of the customer. Read-only.
     */
    tenantId?: string;
}
export function deserializeIntoDelegatedAdminCustomer(delegatedAdminCustomer: DelegatedAdminCustomer | undefined = {} as DelegatedAdminCustomer) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(delegatedAdminCustomer),
        "displayName": n => { delegatedAdminCustomer.displayName = n.getStringValue(); },
        "serviceManagementDetails": n => { delegatedAdminCustomer.serviceManagementDetails = n.getCollectionOfObjectValues<DelegatedAdminServiceManagementDetail>(createDelegatedAdminServiceManagementDetailFromDiscriminatorValue); },
        "tenantId": n => { delegatedAdminCustomer.tenantId = n.getStringValue(); },
    }
}
export function serializeDelegatedAdminCustomer(writer: SerializationWriter, delegatedAdminCustomer: DelegatedAdminCustomer | undefined = {} as DelegatedAdminCustomer) : void {
    serializeEntity(writer, delegatedAdminCustomer)
    writer.writeStringValue("displayName", delegatedAdminCustomer.displayName);
    writer.writeCollectionOfObjectValues<DelegatedAdminServiceManagementDetail>("serviceManagementDetails", delegatedAdminCustomer.serviceManagementDetails, serializeDelegatedAdminServiceManagementDetail);
    writer.writeStringValue("tenantId", delegatedAdminCustomer.tenantId);
}
// tslint:enable
// eslint-enable
