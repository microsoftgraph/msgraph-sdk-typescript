// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createSynchronizationJobSubjectFromDiscriminatorValue, serializeSynchronizationJobSubject, type SynchronizationJobSubject } from './synchronizationJobSubject';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSynchronizationLinkedObjectsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSynchronizationLinkedObjects;
}
export function deserializeIntoSynchronizationLinkedObjects(synchronizationLinkedObjects: SynchronizationLinkedObjects | undefined = {} as SynchronizationLinkedObjects) : Record<string, (node: ParseNode) => void> {
    return {
        "manager": n => { synchronizationLinkedObjects.manager = n.getObjectValue<SynchronizationJobSubject>(createSynchronizationJobSubjectFromDiscriminatorValue); },
        "members": n => { synchronizationLinkedObjects.members = n.getCollectionOfObjectValues<SynchronizationJobSubject>(createSynchronizationJobSubjectFromDiscriminatorValue); },
        "@odata.type": n => { synchronizationLinkedObjects.odataType = n.getStringValue(); },
        "owners": n => { synchronizationLinkedObjects.owners = n.getCollectionOfObjectValues<SynchronizationJobSubject>(createSynchronizationJobSubjectFromDiscriminatorValue); },
    }
}
export function serializeSynchronizationLinkedObjects(writer: SerializationWriter, synchronizationLinkedObjects: SynchronizationLinkedObjects | undefined = {} as SynchronizationLinkedObjects) : void {
        writer.writeObjectValue<SynchronizationJobSubject>("manager", synchronizationLinkedObjects.manager, );
        writer.writeCollectionOfObjectValues<SynchronizationJobSubject>("members", synchronizationLinkedObjects.members, );
        writer.writeStringValue("@odata.type", synchronizationLinkedObjects.odataType);
        writer.writeCollectionOfObjectValues<SynchronizationJobSubject>("owners", synchronizationLinkedObjects.owners, );
        writer.writeAdditionalData(synchronizationLinkedObjects.additionalData);
}
export interface SynchronizationLinkedObjects extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The manager property
     */
    manager?: SynchronizationJobSubject;
    /**
     * All group members that you would like to provision.
     */
    members?: SynchronizationJobSubject[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The owners property
     */
    owners?: SynchronizationJobSubject[];
}
// tslint:enable
// eslint-enable
