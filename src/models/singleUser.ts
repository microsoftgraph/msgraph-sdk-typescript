import { deserializeIntoSubjectSet, serializeSubjectSet, type SubjectSet } from './subjectSet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createSingleUserFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSingleUser;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoSingleUser(singleUser: SingleUser | undefined = {} as SingleUser) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSubjectSet(singleUser),
        "description": n => { singleUser.description = n.getStringValue(); },
        "userId": n => { singleUser.userId = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeSingleUser(writer: SerializationWriter, singleUser: SingleUser | undefined = {} as SingleUser) : void {
        serializeSubjectSet(writer, singleUser)
        writer.writeStringValue("description", singleUser.description);
        writer.writeStringValue("userId", singleUser.userId);
}
export interface SingleUser extends Parsable, SubjectSet {
    /**
     * The name of the user in Azure AD. Read only.
     */
    description?: string;
    /**
     * The ID of the user in Azure AD.
     */
    userId?: string;
}
