// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrinterShareViewpointFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrinterShareViewpoint;
}
export function deserializeIntoPrinterShareViewpoint(printerShareViewpoint: PrinterShareViewpoint | undefined = {} as PrinterShareViewpoint) : Record<string, (node: ParseNode) => void> {
    return {
        "lastUsedDateTime": n => { printerShareViewpoint.lastUsedDateTime = n.getDateValue(); },
        "@odata.type": n => { printerShareViewpoint.odataType = n.getStringValue(); },
    }
}
export interface PrinterShareViewpoint extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Date and time when the printer was last used by the signed-in user. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastUsedDateTime?: Date;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializePrinterShareViewpoint(writer: SerializationWriter, printerShareViewpoint: PrinterShareViewpoint | undefined = {} as PrinterShareViewpoint) : void {
        writer.writeDateValue("lastUsedDateTime", printerShareViewpoint.lastUsedDateTime);
        writer.writeStringValue("@odata.type", printerShareViewpoint.odataType);
        writer.writeAdditionalData(printerShareViewpoint.additionalData);
}
// tslint:enable
// eslint-enable
