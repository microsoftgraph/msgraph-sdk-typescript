// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createUserRegistrationDetailsFromDiscriminatorValue, serializeUserRegistrationDetails, type UserRegistrationDetails } from './userRegistrationDetails';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AuthenticationMethodsRoot extends Entity, Parsable {
    /**
     * Represents the state of a user's authentication methods, including which methods are registered and which features the user is registered and capable of (such as multifactor authentication, self-service password reset, and passwordless authentication).
     */
    userRegistrationDetails?: UserRegistrationDetails[];
}
export function createAuthenticationMethodsRootFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAuthenticationMethodsRoot;
}
export function deserializeIntoAuthenticationMethodsRoot(authenticationMethodsRoot: AuthenticationMethodsRoot | undefined = {} as AuthenticationMethodsRoot) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(authenticationMethodsRoot),
        "userRegistrationDetails": n => { authenticationMethodsRoot.userRegistrationDetails = n.getCollectionOfObjectValues<UserRegistrationDetails>(createUserRegistrationDetailsFromDiscriminatorValue); },
    }
}
export function serializeAuthenticationMethodsRoot(writer: SerializationWriter, authenticationMethodsRoot: AuthenticationMethodsRoot | undefined = {} as AuthenticationMethodsRoot) : void {
        serializeEntity(writer, authenticationMethodsRoot)
        writer.writeCollectionOfObjectValues<UserRegistrationDetails>("userRegistrationDetails", authenticationMethodsRoot.userRegistrationDetails, );
}
// tslint:enable
// eslint-enable
