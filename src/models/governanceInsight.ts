// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type MembershipOutlierInsight, type UserSignInInsight } from './index';
import { deserializeIntoMembershipOutlierInsight } from './membershipOutlierInsight';
import { deserializeIntoUserSignInInsight } from './userSignInInsight';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGovernanceInsightFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.membershipOutlierInsight":
                    return deserializeIntoMembershipOutlierInsight;
                case "#microsoft.graph.userSignInInsight":
                    return deserializeIntoUserSignInInsight;
            }
        }
    }
    return deserializeIntoGovernanceInsight;
}
export function deserializeIntoGovernanceInsight(governanceInsight: GovernanceInsight | undefined = {} as GovernanceInsight) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(governanceInsight),
        "insightCreatedDateTime": n => { governanceInsight.insightCreatedDateTime = n.getDateValue(); },
    }
}
export interface GovernanceInsight extends Entity, Parsable {
    /**
     * Indicates when the insight was created.
     */
    insightCreatedDateTime?: Date;
}
export function serializeGovernanceInsight(writer: SerializationWriter, governanceInsight: GovernanceInsight | undefined = {} as GovernanceInsight) : void {
    serializeEntity(writer, governanceInsight)
    writer.writeDateValue("insightCreatedDateTime", governanceInsight.insightCreatedDateTime);
}
// tslint:enable
// eslint-enable
