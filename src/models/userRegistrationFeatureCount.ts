// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AuthenticationMethodFeature } from './authenticationMethodFeature';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserRegistrationFeatureCountFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserRegistrationFeatureCount;
}
export function deserializeIntoUserRegistrationFeatureCount(userRegistrationFeatureCount: UserRegistrationFeatureCount | undefined = {} as UserRegistrationFeatureCount) : Record<string, (node: ParseNode) => void> {
    return {
        "feature": n => { userRegistrationFeatureCount.feature = n.getEnumValue<AuthenticationMethodFeature>(AuthenticationMethodFeature); },
        "@odata.type": n => { userRegistrationFeatureCount.odataType = n.getStringValue(); },
        "userCount": n => { userRegistrationFeatureCount.userCount = n.getNumberValue(); },
    }
}
export function serializeUserRegistrationFeatureCount(writer: SerializationWriter, userRegistrationFeatureCount: UserRegistrationFeatureCount | undefined = {} as UserRegistrationFeatureCount) : void {
        writer.writeEnumValue<AuthenticationMethodFeature>("feature", userRegistrationFeatureCount.feature);
        writer.writeStringValue("@odata.type", userRegistrationFeatureCount.odataType);
        writer.writeNumberValue("userCount", userRegistrationFeatureCount.userCount);
        writer.writeAdditionalData(userRegistrationFeatureCount.additionalData);
}
export interface UserRegistrationFeatureCount extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The feature property
     */
    feature?: AuthenticationMethodFeature;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Number of users.
     */
    userCount?: number;
}
// tslint:enable
// eslint-enable
