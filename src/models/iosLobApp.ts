// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIosDeviceTypeFromDiscriminatorValue, serializeIosDeviceType, type IosDeviceType } from './iosDeviceType';
import { createIosMinimumOperatingSystemFromDiscriminatorValue, serializeIosMinimumOperatingSystem, type IosMinimumOperatingSystem } from './iosMinimumOperatingSystem';
import { deserializeIntoMobileLobApp, serializeMobileLobApp, type MobileLobApp } from './mobileLobApp';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIosLobAppFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosLobApp;
}
export function deserializeIntoIosLobApp(iosLobApp: IosLobApp | undefined = {} as IosLobApp) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMobileLobApp(iosLobApp),
        "applicableDeviceType": n => { iosLobApp.applicableDeviceType = n.getObjectValue<IosDeviceType>(createIosDeviceTypeFromDiscriminatorValue); },
        "buildNumber": n => { iosLobApp.buildNumber = n.getStringValue(); },
        "bundleId": n => { iosLobApp.bundleId = n.getStringValue(); },
        "expirationDateTime": n => { iosLobApp.expirationDateTime = n.getDateValue(); },
        "minimumSupportedOperatingSystem": n => { iosLobApp.minimumSupportedOperatingSystem = n.getObjectValue<IosMinimumOperatingSystem>(createIosMinimumOperatingSystemFromDiscriminatorValue); },
        "versionNumber": n => { iosLobApp.versionNumber = n.getStringValue(); },
    }
}
export interface IosLobApp extends MobileLobApp, Parsable {
    /**
     * Contains properties of the possible iOS device types the mobile app can run on.
     */
    applicableDeviceType?: IosDeviceType;
    /**
     * The build number of iOS Line of Business (LoB) app.
     */
    buildNumber?: string;
    /**
     * The Identity Name.
     */
    bundleId?: string;
    /**
     * The expiration time.
     */
    expirationDateTime?: Date;
    /**
     * The value for the minimum applicable operating system.
     */
    minimumSupportedOperatingSystem?: IosMinimumOperatingSystem;
    /**
     * The version number of iOS Line of Business (LoB) app.
     */
    versionNumber?: string;
}
export function serializeIosLobApp(writer: SerializationWriter, iosLobApp: IosLobApp | undefined = {} as IosLobApp) : void {
        serializeMobileLobApp(writer, iosLobApp)
        writer.writeObjectValue<IosDeviceType>("applicableDeviceType", iosLobApp.applicableDeviceType, );
        writer.writeStringValue("buildNumber", iosLobApp.buildNumber);
        writer.writeStringValue("bundleId", iosLobApp.bundleId);
        writer.writeDateValue("expirationDateTime", iosLobApp.expirationDateTime);
        writer.writeObjectValue<IosMinimumOperatingSystem>("minimumSupportedOperatingSystem", iosLobApp.minimumSupportedOperatingSystem, );
        writer.writeStringValue("versionNumber", iosLobApp.versionNumber);
}
// tslint:enable
// eslint-enable
