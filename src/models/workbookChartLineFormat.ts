// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookChartLineFormatFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookChartLineFormat;
}
export function deserializeIntoWorkbookChartLineFormat(workbookChartLineFormat: WorkbookChartLineFormat | undefined = {} as WorkbookChartLineFormat) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookChartLineFormat),
        "color": n => { workbookChartLineFormat.color = n.getStringValue(); },
    }
}
export function serializeWorkbookChartLineFormat(writer: SerializationWriter, workbookChartLineFormat: WorkbookChartLineFormat | undefined = {} as WorkbookChartLineFormat) : void {
        serializeEntity(writer, workbookChartLineFormat)
        writer.writeStringValue("color", workbookChartLineFormat.color);
}
export interface WorkbookChartLineFormat extends Entity, Parsable {
    /**
     * HTML color code representing the color of lines in the chart.
     */
    color?: string;
}
// tslint:enable
// eslint-enable
