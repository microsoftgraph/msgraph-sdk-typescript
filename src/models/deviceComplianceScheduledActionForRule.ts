// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDeviceComplianceActionItemFromDiscriminatorValue, serializeDeviceComplianceActionItem, type DeviceComplianceActionItem } from './deviceComplianceActionItem';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceComplianceScheduledActionForRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceComplianceScheduledActionForRule;
}
export function deserializeIntoDeviceComplianceScheduledActionForRule(deviceComplianceScheduledActionForRule: DeviceComplianceScheduledActionForRule | undefined = {} as DeviceComplianceScheduledActionForRule) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceComplianceScheduledActionForRule),
        "ruleName": n => { deviceComplianceScheduledActionForRule.ruleName = n.getStringValue(); },
        "scheduledActionConfigurations": n => { deviceComplianceScheduledActionForRule.scheduledActionConfigurations = n.getCollectionOfObjectValues<DeviceComplianceActionItem>(createDeviceComplianceActionItemFromDiscriminatorValue); },
    }
}
export interface DeviceComplianceScheduledActionForRule extends Entity, Parsable {
    /**
     * Name of the rule which this scheduled action applies to. Currently scheduled actions are created per policy instead of per rule, thus RuleName is always set to default value PasswordRequired.
     */
    ruleName?: string;
    /**
     * The list of scheduled action configurations for this compliance policy. Compliance policy must have one and only one block scheduled action.
     */
    scheduledActionConfigurations?: DeviceComplianceActionItem[];
}
export function serializeDeviceComplianceScheduledActionForRule(writer: SerializationWriter, deviceComplianceScheduledActionForRule: DeviceComplianceScheduledActionForRule | undefined = {} as DeviceComplianceScheduledActionForRule) : void {
    serializeEntity(writer, deviceComplianceScheduledActionForRule)
    writer.writeStringValue("ruleName", deviceComplianceScheduledActionForRule.ruleName);
    writer.writeCollectionOfObjectValues<DeviceComplianceActionItem>("scheduledActionConfigurations", deviceComplianceScheduledActionForRule.scheduledActionConfigurations, serializeDeviceComplianceActionItem);
}
// tslint:enable
// eslint-enable
