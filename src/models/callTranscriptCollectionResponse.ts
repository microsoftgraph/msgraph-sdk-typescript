import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createCallTranscriptFromDiscriminatorValue, serializeCallTranscript, type CallTranscript } from './callTranscript';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CallTranscriptCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CallTranscript[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createCallTranscriptCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCallTranscriptCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoCallTranscriptCollectionResponse(callTranscriptCollectionResponse: CallTranscriptCollectionResponse | undefined = {} as CallTranscriptCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(callTranscriptCollectionResponse),
        "value": n => { callTranscriptCollectionResponse.value = n.getCollectionOfObjectValues<CallTranscript>(createCallTranscriptFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeCallTranscriptCollectionResponse(writer: SerializationWriter, callTranscriptCollectionResponse: CallTranscriptCollectionResponse | undefined = {} as CallTranscriptCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, callTranscriptCollectionResponse)
        writer.writeCollectionOfObjectValues<CallTranscript>("value", callTranscriptCollectionResponse.value, );
}
