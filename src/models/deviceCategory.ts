// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceCategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceCategory;
}
export function deserializeIntoDeviceCategory(deviceCategory: DeviceCategory | undefined = {} as DeviceCategory) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceCategory),
        "description": n => { deviceCategory.description = n.getStringValue(); },
        "displayName": n => { deviceCategory.displayName = n.getStringValue(); },
    }
}
export interface DeviceCategory extends Entity, Parsable {
    /**
     * Optional description for the device category.
     */
    description?: string;
    /**
     * Display name for the device category.
     */
    displayName?: string;
}
export function serializeDeviceCategory(writer: SerializationWriter, deviceCategory: DeviceCategory | undefined = {} as DeviceCategory) : void {
    serializeEntity(writer, deviceCategory)
    writer.writeStringValue("description", deviceCategory.description);
    writer.writeStringValue("displayName", deviceCategory.displayName);
}
// tslint:enable
// eslint-enable
