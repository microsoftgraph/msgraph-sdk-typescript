// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTimeZoneInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTimeZoneInformation;
}
export function deserializeIntoTimeZoneInformation(timeZoneInformation: TimeZoneInformation | undefined = {} as TimeZoneInformation) : Record<string, (node: ParseNode) => void> {
    return {
        "alias": n => { timeZoneInformation.alias = n.getStringValue(); },
        "displayName": n => { timeZoneInformation.displayName = n.getStringValue(); },
        "@odata.type": n => { timeZoneInformation.odataType = n.getStringValue(); },
    }
}
export function serializeTimeZoneInformation(writer: SerializationWriter, timeZoneInformation: TimeZoneInformation | undefined = {} as TimeZoneInformation) : void {
    writer.writeStringValue("alias", timeZoneInformation.alias);
    writer.writeStringValue("displayName", timeZoneInformation.displayName);
    writer.writeStringValue("@odata.type", timeZoneInformation.odataType);
    writer.writeAdditionalData(timeZoneInformation.additionalData);
}
export interface TimeZoneInformation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * An identifier for the time zone.
     */
    alias?: string;
    /**
     * A display string that represents the time zone.
     */
    displayName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
