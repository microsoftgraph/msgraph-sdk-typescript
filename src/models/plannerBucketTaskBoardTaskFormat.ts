import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createPlannerBucketTaskBoardTaskFormatFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerBucketTaskBoardTaskFormat;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoPlannerBucketTaskBoardTaskFormat(plannerBucketTaskBoardTaskFormat: PlannerBucketTaskBoardTaskFormat | undefined = {} as PlannerBucketTaskBoardTaskFormat) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(plannerBucketTaskBoardTaskFormat),
        "orderHint": n => { plannerBucketTaskBoardTaskFormat.orderHint = n.getStringValue(); },
    }
}
export interface PlannerBucketTaskBoardTaskFormat extends Entity, Parsable {
    /**
     * Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner.
     */
    orderHint?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializePlannerBucketTaskBoardTaskFormat(writer: SerializationWriter, plannerBucketTaskBoardTaskFormat: PlannerBucketTaskBoardTaskFormat | undefined = {} as PlannerBucketTaskBoardTaskFormat) : void {
        serializeEntity(writer, plannerBucketTaskBoardTaskFormat)
        writer.writeStringValue("orderHint", plannerBucketTaskBoardTaskFormat.orderHint);
}
