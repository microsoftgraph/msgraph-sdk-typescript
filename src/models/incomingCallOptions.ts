import { deserializeIntoCallOptions, serializeCallOptions, type CallOptions } from './callOptions';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createIncomingCallOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIncomingCallOptions;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoIncomingCallOptions(incomingCallOptions: IncomingCallOptions | undefined = {} as IncomingCallOptions) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCallOptions(incomingCallOptions),
    }
}
export interface IncomingCallOptions extends CallOptions, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeIncomingCallOptions(writer: SerializationWriter, incomingCallOptions: IncomingCallOptions | undefined = {} as IncomingCallOptions) : void {
        serializeCallOptions(writer, incomingCallOptions)
}
