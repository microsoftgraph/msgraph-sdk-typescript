// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { WorkforceIntegrationEncryptionProtocol } from './workforceIntegrationEncryptionProtocol';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkforceIntegrationEncryptionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkforceIntegrationEncryption;
}
export function deserializeIntoWorkforceIntegrationEncryption(workforceIntegrationEncryption: WorkforceIntegrationEncryption | undefined = {} as WorkforceIntegrationEncryption) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { workforceIntegrationEncryption.odataType = n.getStringValue(); },
        "protocol": n => { workforceIntegrationEncryption.protocol = n.getEnumValue<WorkforceIntegrationEncryptionProtocol>(WorkforceIntegrationEncryptionProtocol); },
        "secret": n => { workforceIntegrationEncryption.secret = n.getStringValue(); },
    }
}
export function serializeWorkforceIntegrationEncryption(writer: SerializationWriter, workforceIntegrationEncryption: WorkforceIntegrationEncryption | undefined = {} as WorkforceIntegrationEncryption) : void {
    writer.writeStringValue("@odata.type", workforceIntegrationEncryption.odataType);
    writer.writeEnumValue<WorkforceIntegrationEncryptionProtocol>("protocol", workforceIntegrationEncryption.protocol);
    writer.writeStringValue("secret", workforceIntegrationEncryption.secret);
    writer.writeAdditionalData(workforceIntegrationEncryption.additionalData);
}
export interface WorkforceIntegrationEncryption extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Possible values are: sharedSecret, unknownFutureValue.
     */
    protocol?: WorkforceIntegrationEncryptionProtocol;
    /**
     * Encryption shared secret.
     */
    secret?: string;
}
// tslint:enable
// eslint-enable
