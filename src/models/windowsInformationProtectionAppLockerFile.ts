// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsInformationProtectionAppLockerFileFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsInformationProtectionAppLockerFile;
}
export function deserializeIntoWindowsInformationProtectionAppLockerFile(windowsInformationProtectionAppLockerFile: WindowsInformationProtectionAppLockerFile | undefined = {} as WindowsInformationProtectionAppLockerFile) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(windowsInformationProtectionAppLockerFile),
        "displayName": n => { windowsInformationProtectionAppLockerFile.displayName = n.getStringValue(); },
        "file": n => { windowsInformationProtectionAppLockerFile.file = n.getStringValue(); },
        "fileHash": n => { windowsInformationProtectionAppLockerFile.fileHash = n.getStringValue(); },
        "version": n => { windowsInformationProtectionAppLockerFile.version = n.getStringValue(); },
    }
}
export function serializeWindowsInformationProtectionAppLockerFile(writer: SerializationWriter, windowsInformationProtectionAppLockerFile: WindowsInformationProtectionAppLockerFile | undefined = {} as WindowsInformationProtectionAppLockerFile) : void {
        serializeEntity(writer, windowsInformationProtectionAppLockerFile)
        writer.writeStringValue("displayName", windowsInformationProtectionAppLockerFile.displayName);
        writer.writeStringValue("file", windowsInformationProtectionAppLockerFile.file);
        writer.writeStringValue("fileHash", windowsInformationProtectionAppLockerFile.fileHash);
        writer.writeStringValue("version", windowsInformationProtectionAppLockerFile.version);
}
export interface WindowsInformationProtectionAppLockerFile extends Entity, Parsable {
    /**
     * The friendly name
     */
    displayName?: string;
    /**
     * File as a byte array
     */
    file?: string;
    /**
     * SHA256 hash of the file
     */
    fileHash?: string;
    /**
     * Version of the entity.
     */
    version?: string;
}
// tslint:enable
// eslint-enable
