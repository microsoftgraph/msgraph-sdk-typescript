// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceOperatingSystemSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceOperatingSystemSummary;
}
export function deserializeIntoDeviceOperatingSystemSummary(deviceOperatingSystemSummary: DeviceOperatingSystemSummary | undefined = {} as DeviceOperatingSystemSummary) : Record<string, (node: ParseNode) => void> {
    return {
        "androidCorporateWorkProfileCount": n => { deviceOperatingSystemSummary.androidCorporateWorkProfileCount = n.getNumberValue(); },
        "androidCount": n => { deviceOperatingSystemSummary.androidCount = n.getNumberValue(); },
        "androidDedicatedCount": n => { deviceOperatingSystemSummary.androidDedicatedCount = n.getNumberValue(); },
        "androidDeviceAdminCount": n => { deviceOperatingSystemSummary.androidDeviceAdminCount = n.getNumberValue(); },
        "androidFullyManagedCount": n => { deviceOperatingSystemSummary.androidFullyManagedCount = n.getNumberValue(); },
        "androidWorkProfileCount": n => { deviceOperatingSystemSummary.androidWorkProfileCount = n.getNumberValue(); },
        "configMgrDeviceCount": n => { deviceOperatingSystemSummary.configMgrDeviceCount = n.getNumberValue(); },
        "iosCount": n => { deviceOperatingSystemSummary.iosCount = n.getNumberValue(); },
        "macOSCount": n => { deviceOperatingSystemSummary.macOSCount = n.getNumberValue(); },
        "@odata.type": n => { deviceOperatingSystemSummary.odataType = n.getStringValue(); },
        "unknownCount": n => { deviceOperatingSystemSummary.unknownCount = n.getNumberValue(); },
        "windowsCount": n => { deviceOperatingSystemSummary.windowsCount = n.getNumberValue(); },
        "windowsMobileCount": n => { deviceOperatingSystemSummary.windowsMobileCount = n.getNumberValue(); },
    }
}
export interface DeviceOperatingSystemSummary extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The count of Corporate work profile Android devices. Also known as Corporate Owned Personally Enabled (COPE). Valid values -1 to 2147483647
     */
    androidCorporateWorkProfileCount?: number;
    /**
     * Number of android device count.
     */
    androidCount?: number;
    /**
     * Number of dedicated Android devices.
     */
    androidDedicatedCount?: number;
    /**
     * Number of device admin Android devices.
     */
    androidDeviceAdminCount?: number;
    /**
     * Number of fully managed Android devices.
     */
    androidFullyManagedCount?: number;
    /**
     * Number of work profile Android devices.
     */
    androidWorkProfileCount?: number;
    /**
     * Number of ConfigMgr managed devices.
     */
    configMgrDeviceCount?: number;
    /**
     * Number of iOS device count.
     */
    iosCount?: number;
    /**
     * Number of Mac OS X device count.
     */
    macOSCount?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Number of unknown device count.
     */
    unknownCount?: number;
    /**
     * Number of Windows device count.
     */
    windowsCount?: number;
    /**
     * Number of Windows mobile device count.
     */
    windowsMobileCount?: number;
}
export function serializeDeviceOperatingSystemSummary(writer: SerializationWriter, deviceOperatingSystemSummary: DeviceOperatingSystemSummary | undefined = {} as DeviceOperatingSystemSummary) : void {
        writer.writeNumberValue("androidCorporateWorkProfileCount", deviceOperatingSystemSummary.androidCorporateWorkProfileCount);
        writer.writeNumberValue("androidCount", deviceOperatingSystemSummary.androidCount);
        writer.writeNumberValue("androidDedicatedCount", deviceOperatingSystemSummary.androidDedicatedCount);
        writer.writeNumberValue("androidDeviceAdminCount", deviceOperatingSystemSummary.androidDeviceAdminCount);
        writer.writeNumberValue("androidFullyManagedCount", deviceOperatingSystemSummary.androidFullyManagedCount);
        writer.writeNumberValue("androidWorkProfileCount", deviceOperatingSystemSummary.androidWorkProfileCount);
        writer.writeNumberValue("configMgrDeviceCount", deviceOperatingSystemSummary.configMgrDeviceCount);
        writer.writeNumberValue("iosCount", deviceOperatingSystemSummary.iosCount);
        writer.writeNumberValue("macOSCount", deviceOperatingSystemSummary.macOSCount);
        writer.writeStringValue("@odata.type", deviceOperatingSystemSummary.odataType);
        writer.writeNumberValue("unknownCount", deviceOperatingSystemSummary.unknownCount);
        writer.writeNumberValue("windowsCount", deviceOperatingSystemSummary.windowsCount);
        writer.writeNumberValue("windowsMobileCount", deviceOperatingSystemSummary.windowsMobileCount);
        writer.writeAdditionalData(deviceOperatingSystemSummary.additionalData);
}
// tslint:enable
// eslint-enable
