// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createVerifiedDomainFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoVerifiedDomain;
}
export function deserializeIntoVerifiedDomain(verifiedDomain: VerifiedDomain | undefined = {} as VerifiedDomain) : Record<string, (node: ParseNode) => void> {
    return {
        "capabilities": n => { verifiedDomain.capabilities = n.getStringValue(); },
        "isDefault": n => { verifiedDomain.isDefault = n.getBooleanValue(); },
        "isInitial": n => { verifiedDomain.isInitial = n.getBooleanValue(); },
        "name": n => { verifiedDomain.name = n.getStringValue(); },
        "@odata.type": n => { verifiedDomain.odataType = n.getStringValue(); },
        "type": n => { verifiedDomain.type = n.getStringValue(); },
    }
}
export function serializeVerifiedDomain(writer: SerializationWriter, verifiedDomain: VerifiedDomain | undefined = {} as VerifiedDomain) : void {
        writer.writeStringValue("capabilities", verifiedDomain.capabilities);
        writer.writeBooleanValue("isDefault", verifiedDomain.isDefault);
        writer.writeBooleanValue("isInitial", verifiedDomain.isInitial);
        writer.writeStringValue("name", verifiedDomain.name);
        writer.writeStringValue("@odata.type", verifiedDomain.odataType);
        writer.writeStringValue("type", verifiedDomain.type);
        writer.writeAdditionalData(verifiedDomain.additionalData);
}
export interface VerifiedDomain extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * For example, Email, OfficeCommunicationsOnline.
     */
    capabilities?: string;
    /**
     * true if this is the default domain associated with the tenant; otherwise, false.
     */
    isDefault?: boolean;
    /**
     * true if this is the initial domain associated with the tenant; otherwise, false.
     */
    isInitial?: boolean;
    /**
     * The domain name; for example, contoso.onmicrosoft.com.
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * For example, Managed.
     */
    type?: string;
}
// tslint:enable
// eslint-enable
