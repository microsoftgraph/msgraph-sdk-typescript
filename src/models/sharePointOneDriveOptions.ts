// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { SearchContent } from './searchContent';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSharePointOneDriveOptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSharePointOneDriveOptions;
}
export function deserializeIntoSharePointOneDriveOptions(sharePointOneDriveOptions: SharePointOneDriveOptions | undefined = {} as SharePointOneDriveOptions) : Record<string, (node: ParseNode) => void> {
    return {
        "includeContent": n => { sharePointOneDriveOptions.includeContent = n.getCollectionOfEnumValues<SearchContent>(SearchContent); },
        "@odata.type": n => { sharePointOneDriveOptions.odataType = n.getStringValue(); },
    }
}
export function serializeSharePointOneDriveOptions(writer: SerializationWriter, sharePointOneDriveOptions: SharePointOneDriveOptions | undefined = {} as SharePointOneDriveOptions) : void {
        writer.writeEnumValue<SearchContent[]>("includeContent", sharePointOneDriveOptions.includeContent);
        writer.writeStringValue("@odata.type", sharePointOneDriveOptions.odataType);
        writer.writeAdditionalData(sharePointOneDriveOptions.additionalData);
}
export interface SharePointOneDriveOptions extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The type of search content. The possible values are: sharedContent, privateContent, unknownFutureValue. Read-only.
     */
    includeContent?: SearchContent[];
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
