// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createFileSystemInfoFromDiscriminatorValue, serializeFileSystemInfo, type FileSystemInfo } from './fileSystemInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDriveItemUploadablePropertiesFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDriveItemUploadableProperties;
}
export function deserializeIntoDriveItemUploadableProperties(driveItemUploadableProperties: DriveItemUploadableProperties | undefined = {} as DriveItemUploadableProperties) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { driveItemUploadableProperties.description = n.getStringValue(); },
        "fileSize": n => { driveItemUploadableProperties.fileSize = n.getNumberValue(); },
        "fileSystemInfo": n => { driveItemUploadableProperties.fileSystemInfo = n.getObjectValue<FileSystemInfo>(createFileSystemInfoFromDiscriminatorValue); },
        "name": n => { driveItemUploadableProperties.name = n.getStringValue(); },
        "@odata.type": n => { driveItemUploadableProperties.odataType = n.getStringValue(); },
    }
}
export interface DriveItemUploadableProperties extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Provides a user-visible description of the item. Read-write. Only on OneDrive Personal.
     */
    description?: string;
    /**
     * Provides an expected file size to perform a quota check prior to upload. Only on OneDrive Personal.
     */
    fileSize?: number;
    /**
     * File system information on client. Read-write.
     */
    fileSystemInfo?: FileSystemInfo;
    /**
     * The name of the item (filename and extension). Read-write.
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeDriveItemUploadableProperties(writer: SerializationWriter, driveItemUploadableProperties: DriveItemUploadableProperties | undefined = {} as DriveItemUploadableProperties) : void {
    writer.writeStringValue("description", driveItemUploadableProperties.description);
    writer.writeNumberValue("fileSize", driveItemUploadableProperties.fileSize);
    writer.writeObjectValue<FileSystemInfo>("fileSystemInfo", driveItemUploadableProperties.fileSystemInfo, serializeFileSystemInfo);
    writer.writeStringValue("name", driveItemUploadableProperties.name);
    writer.writeStringValue("@odata.type", driveItemUploadableProperties.odataType);
    writer.writeAdditionalData(driveItemUploadableProperties.additionalData);
}
// tslint:enable
// eslint-enable
