// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessPackageResourceEnvironmentFromDiscriminatorValue, serializeAccessPackageResourceEnvironment, type AccessPackageResourceEnvironment } from './accessPackageResourceEnvironment';
import { createAccessPackageResourceRoleFromDiscriminatorValue, serializeAccessPackageResourceRole, type AccessPackageResourceRole } from './accessPackageResourceRole';
import { createAccessPackageResourceScopeFromDiscriminatorValue, serializeAccessPackageResourceScope, type AccessPackageResourceScope } from './accessPackageResourceScope';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageResource extends Entity, Parsable {
    /**
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
     */
    createdDateTime?: Date;
    /**
     * A description for the resource.
     */
    description?: string;
    /**
     * The display name of the resource, such as the application name, group name or site name.
     */
    displayName?: string;
    /**
     * Contains the environment information for the resource. This can be set using either the @odata.bind annotation or the environment's originId.Supports $expand.
     */
    environment?: AccessPackageResourceEnvironment;
    /**
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
     */
    modifiedDateTime?: Date;
    /**
     * The unique identifier of the resource in the origin system. In the case of a Microsoft Entra group, this is the identifier of the group.
     */
    originId?: string;
    /**
     * The type of the resource in the origin system, such as SharePointOnline, AadApplication or AadGroup.
     */
    originSystem?: string;
    /**
     * Read-only. Nullable. Supports $expand.
     */
    roles?: AccessPackageResourceRole[];
    /**
     * Read-only. Nullable. Supports $expand.
     */
    scopes?: AccessPackageResourceScope[];
}
export function createAccessPackageResourceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageResource;
}
export function deserializeIntoAccessPackageResource(accessPackageResource: AccessPackageResource | undefined = {} as AccessPackageResource) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(accessPackageResource),
        "createdDateTime": n => { accessPackageResource.createdDateTime = n.getDateValue(); },
        "description": n => { accessPackageResource.description = n.getStringValue(); },
        "displayName": n => { accessPackageResource.displayName = n.getStringValue(); },
        "environment": n => { accessPackageResource.environment = n.getObjectValue<AccessPackageResourceEnvironment>(createAccessPackageResourceEnvironmentFromDiscriminatorValue); },
        "modifiedDateTime": n => { accessPackageResource.modifiedDateTime = n.getDateValue(); },
        "originId": n => { accessPackageResource.originId = n.getStringValue(); },
        "originSystem": n => { accessPackageResource.originSystem = n.getStringValue(); },
        "roles": n => { accessPackageResource.roles = n.getCollectionOfObjectValues<AccessPackageResourceRole>(createAccessPackageResourceRoleFromDiscriminatorValue); },
        "scopes": n => { accessPackageResource.scopes = n.getCollectionOfObjectValues<AccessPackageResourceScope>(createAccessPackageResourceScopeFromDiscriminatorValue); },
    }
}
export function serializeAccessPackageResource(writer: SerializationWriter, accessPackageResource: AccessPackageResource | undefined = {} as AccessPackageResource) : void {
        serializeEntity(writer, accessPackageResource)
        writer.writeDateValue("createdDateTime", accessPackageResource.createdDateTime);
        writer.writeStringValue("description", accessPackageResource.description);
        writer.writeStringValue("displayName", accessPackageResource.displayName);
        writer.writeObjectValue<AccessPackageResourceEnvironment>("environment", accessPackageResource.environment, serializeAccessPackageResourceEnvironment);
        writer.writeDateValue("modifiedDateTime", accessPackageResource.modifiedDateTime);
        writer.writeStringValue("originId", accessPackageResource.originId);
        writer.writeStringValue("originSystem", accessPackageResource.originSystem);
        writer.writeCollectionOfObjectValues<AccessPackageResourceRole>("roles", accessPackageResource.roles, serializeAccessPackageResourceRole);
        writer.writeCollectionOfObjectValues<AccessPackageResourceScope>("scopes", accessPackageResource.scopes, serializeAccessPackageResourceScope);
}
// tslint:enable
// eslint-enable
