// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDirectoryObject, serializeDirectoryObject, type DirectoryObject } from './directoryObject';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDirectoryRoleTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDirectoryRoleTemplate;
}
export function deserializeIntoDirectoryRoleTemplate(directoryRoleTemplate: DirectoryRoleTemplate | undefined = {} as DirectoryRoleTemplate) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObject(directoryRoleTemplate),
        "description": n => { directoryRoleTemplate.description = n.getStringValue(); },
        "displayName": n => { directoryRoleTemplate.displayName = n.getStringValue(); },
    }
}
export interface DirectoryRoleTemplate extends DirectoryObject, Parsable {
    /**
     * The description to set for the directory role. Read-only.
     */
    description?: string;
    /**
     * The display name to set for the directory role. Read-only.
     */
    displayName?: string;
}
export function serializeDirectoryRoleTemplate(writer: SerializationWriter, directoryRoleTemplate: DirectoryRoleTemplate | undefined = {} as DirectoryRoleTemplate) : void {
    serializeDirectoryObject(writer, directoryRoleTemplate)
    writer.writeStringValue("description", directoryRoleTemplate.description);
    writer.writeStringValue("displayName", directoryRoleTemplate.displayName);
}
// tslint:enable
// eslint-enable
