import { deserializeIntoStsPolicy, serializeStsPolicy, type StsPolicy } from './stsPolicy';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTokenIssuancePolicyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTokenIssuancePolicy;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTokenIssuancePolicy(tokenIssuancePolicy: TokenIssuancePolicy | undefined = {} as TokenIssuancePolicy) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoStsPolicy(tokenIssuancePolicy),
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTokenIssuancePolicy(writer: SerializationWriter, tokenIssuancePolicy: TokenIssuancePolicy | undefined = {} as TokenIssuancePolicy) : void {
        serializeStsPolicy(writer, tokenIssuancePolicy)
}
export interface TokenIssuancePolicy extends Parsable, StsPolicy {
}
