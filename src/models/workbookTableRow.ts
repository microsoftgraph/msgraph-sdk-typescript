// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from './json';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookTableRowFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookTableRow;
}
export function deserializeIntoWorkbookTableRow(workbookTableRow: WorkbookTableRow | undefined = {} as WorkbookTableRow) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookTableRow),
        "index": n => { workbookTableRow.index = n.getNumberValue(); },
        "values": n => { workbookTableRow.values = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeWorkbookTableRow(writer: SerializationWriter, workbookTableRow: WorkbookTableRow | undefined = {} as WorkbookTableRow) : void {
        serializeEntity(writer, workbookTableRow)
        writer.writeNumberValue("index", workbookTableRow.index);
        writer.writeObjectValue<Json>("values", workbookTableRow.values, );
}
export interface WorkbookTableRow extends Entity, Parsable {
    /**
     * Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.
     */
    index?: number;
    /**
     * Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string.
     */
    values?: Json;
}
// tslint:enable
// eslint-enable
