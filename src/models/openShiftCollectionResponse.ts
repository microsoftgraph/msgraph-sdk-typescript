// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createOpenShiftFromDiscriminatorValue, serializeOpenShift, type OpenShift } from './openShift';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOpenShiftCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOpenShiftCollectionResponse;
}
export function deserializeIntoOpenShiftCollectionResponse(openShiftCollectionResponse: OpenShiftCollectionResponse | undefined = {} as OpenShiftCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(openShiftCollectionResponse),
        "value": n => { openShiftCollectionResponse.value = n.getCollectionOfObjectValues<OpenShift>(createOpenShiftFromDiscriminatorValue); },
    }
}
export interface OpenShiftCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: OpenShift[];
}
export function serializeOpenShiftCollectionResponse(writer: SerializationWriter, openShiftCollectionResponse: OpenShiftCollectionResponse | undefined = {} as OpenShiftCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, openShiftCollectionResponse)
    writer.writeCollectionOfObjectValues<OpenShift>("value", openShiftCollectionResponse.value, serializeOpenShift);
}
// tslint:enable
// eslint-enable
