// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoTeleconferenceDeviceVideoQuality, serializeTeleconferenceDeviceVideoQuality, type TeleconferenceDeviceVideoQuality } from './teleconferenceDeviceVideoQuality';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeleconferenceDeviceScreenSharingQualityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeleconferenceDeviceScreenSharingQuality;
}
export function deserializeIntoTeleconferenceDeviceScreenSharingQuality(teleconferenceDeviceScreenSharingQuality: TeleconferenceDeviceScreenSharingQuality | undefined = {} as TeleconferenceDeviceScreenSharingQuality) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTeleconferenceDeviceVideoQuality(teleconferenceDeviceScreenSharingQuality),
    }
}
export function serializeTeleconferenceDeviceScreenSharingQuality(writer: SerializationWriter, teleconferenceDeviceScreenSharingQuality: TeleconferenceDeviceScreenSharingQuality | undefined = {} as TeleconferenceDeviceScreenSharingQuality) : void {
    serializeTeleconferenceDeviceVideoQuality(writer, teleconferenceDeviceScreenSharingQuality)
}
export interface TeleconferenceDeviceScreenSharingQuality extends Parsable, TeleconferenceDeviceVideoQuality {
}
// tslint:enable
// eslint-enable
