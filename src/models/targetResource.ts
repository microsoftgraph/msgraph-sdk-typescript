// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { GroupType } from './groupType';
import { createModifiedPropertyFromDiscriminatorValue, serializeModifiedProperty, type ModifiedProperty } from './modifiedProperty';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTargetResourceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTargetResource;
}
export function deserializeIntoTargetResource(targetResource: TargetResource | undefined = {} as TargetResource) : Record<string, (node: ParseNode) => void> {
    return {
        "displayName": n => { targetResource.displayName = n.getStringValue(); },
        "groupType": n => { targetResource.groupType = n.getEnumValue<GroupType>(GroupType); },
        "id": n => { targetResource.id = n.getStringValue(); },
        "modifiedProperties": n => { targetResource.modifiedProperties = n.getCollectionOfObjectValues<ModifiedProperty>(createModifiedPropertyFromDiscriminatorValue); },
        "@odata.type": n => { targetResource.odataType = n.getStringValue(); },
        "type": n => { targetResource.type = n.getStringValue(); },
        "userPrincipalName": n => { targetResource.userPrincipalName = n.getStringValue(); },
    }
}
export function serializeTargetResource(writer: SerializationWriter, targetResource: TargetResource | undefined = {} as TargetResource) : void {
        writer.writeStringValue("displayName", targetResource.displayName);
        writer.writeEnumValue<GroupType>("groupType", targetResource.groupType);
        writer.writeStringValue("id", targetResource.id);
        writer.writeCollectionOfObjectValues<ModifiedProperty>("modifiedProperties", targetResource.modifiedProperties, );
        writer.writeStringValue("@odata.type", targetResource.odataType);
        writer.writeStringValue("type", targetResource.type);
        writer.writeStringValue("userPrincipalName", targetResource.userPrincipalName);
        writer.writeAdditionalData(targetResource.additionalData);
}
export interface TargetResource extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Indicates the visible name defined for the resource. Typically specified when the resource is created.
     */
    displayName?: string;
    /**
     * When type is set to Group, this indicates the group type. Possible values are: unifiedGroups, azureAD, and unknownFutureValue
     */
    groupType?: GroupType;
    /**
     * Indicates the unique ID of the resource.
     */
    id?: string;
    /**
     * Indicates name, old value and new value of each attribute that changed. Property values depend on the operation type.
     */
    modifiedProperties?: ModifiedProperty[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Describes the resource type.  Example values include Application, Group, ServicePrincipal, and User.
     */
    type?: string;
    /**
     * When type is set to User, this includes the user name that initiated the action; null for other types.
     */
    userPrincipalName?: string;
}
// tslint:enable
// eslint-enable
