// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDomainDnsRecord, serializeDomainDnsRecord, type DomainDnsRecord } from './domainDnsRecord';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDomainDnsUnavailableRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDomainDnsUnavailableRecord;
}
export function deserializeIntoDomainDnsUnavailableRecord(domainDnsUnavailableRecord: DomainDnsUnavailableRecord | undefined = {} as DomainDnsUnavailableRecord) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDomainDnsRecord(domainDnsUnavailableRecord),
        "description": n => { domainDnsUnavailableRecord.description = n.getStringValue(); },
    }
}
export interface DomainDnsUnavailableRecord extends DomainDnsRecord, Parsable {
    /**
     * Provides the reason why the DomainDnsUnavailableRecord entity is returned.
     */
    description?: string;
}
export function serializeDomainDnsUnavailableRecord(writer: SerializationWriter, domainDnsUnavailableRecord: DomainDnsUnavailableRecord | undefined = {} as DomainDnsUnavailableRecord) : void {
        serializeDomainDnsRecord(writer, domainDnsUnavailableRecord)
        writer.writeStringValue("description", domainDnsUnavailableRecord.description);
}
// tslint:enable
// eslint-enable
