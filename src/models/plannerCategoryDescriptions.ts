// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlannerCategoryDescriptionsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerCategoryDescriptions;
}
export function deserializeIntoPlannerCategoryDescriptions(plannerCategoryDescriptions: PlannerCategoryDescriptions | undefined = {} as PlannerCategoryDescriptions) : Record<string, (node: ParseNode) => void> {
    return {
        "category1": n => { plannerCategoryDescriptions.category1 = n.getStringValue(); },
        "category10": n => { plannerCategoryDescriptions.category10 = n.getStringValue(); },
        "category11": n => { plannerCategoryDescriptions.category11 = n.getStringValue(); },
        "category12": n => { plannerCategoryDescriptions.category12 = n.getStringValue(); },
        "category13": n => { plannerCategoryDescriptions.category13 = n.getStringValue(); },
        "category14": n => { plannerCategoryDescriptions.category14 = n.getStringValue(); },
        "category15": n => { plannerCategoryDescriptions.category15 = n.getStringValue(); },
        "category16": n => { plannerCategoryDescriptions.category16 = n.getStringValue(); },
        "category17": n => { plannerCategoryDescriptions.category17 = n.getStringValue(); },
        "category18": n => { plannerCategoryDescriptions.category18 = n.getStringValue(); },
        "category19": n => { plannerCategoryDescriptions.category19 = n.getStringValue(); },
        "category2": n => { plannerCategoryDescriptions.category2 = n.getStringValue(); },
        "category20": n => { plannerCategoryDescriptions.category20 = n.getStringValue(); },
        "category21": n => { plannerCategoryDescriptions.category21 = n.getStringValue(); },
        "category22": n => { plannerCategoryDescriptions.category22 = n.getStringValue(); },
        "category23": n => { plannerCategoryDescriptions.category23 = n.getStringValue(); },
        "category24": n => { plannerCategoryDescriptions.category24 = n.getStringValue(); },
        "category25": n => { plannerCategoryDescriptions.category25 = n.getStringValue(); },
        "category3": n => { plannerCategoryDescriptions.category3 = n.getStringValue(); },
        "category4": n => { plannerCategoryDescriptions.category4 = n.getStringValue(); },
        "category5": n => { plannerCategoryDescriptions.category5 = n.getStringValue(); },
        "category6": n => { plannerCategoryDescriptions.category6 = n.getStringValue(); },
        "category7": n => { plannerCategoryDescriptions.category7 = n.getStringValue(); },
        "category8": n => { plannerCategoryDescriptions.category8 = n.getStringValue(); },
        "category9": n => { plannerCategoryDescriptions.category9 = n.getStringValue(); },
        "@odata.type": n => { plannerCategoryDescriptions.odataType = n.getStringValue(); },
    }
}
export interface PlannerCategoryDescriptions extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The label associated with Category 1
     */
    category1?: string;
    /**
     * The label associated with Category 10
     */
    category10?: string;
    /**
     * The label associated with Category 11
     */
    category11?: string;
    /**
     * The label associated with Category 12
     */
    category12?: string;
    /**
     * The label associated with Category 13
     */
    category13?: string;
    /**
     * The label associated with Category 14
     */
    category14?: string;
    /**
     * The label associated with Category 15
     */
    category15?: string;
    /**
     * The label associated with Category 16
     */
    category16?: string;
    /**
     * The label associated with Category 17
     */
    category17?: string;
    /**
     * The label associated with Category 18
     */
    category18?: string;
    /**
     * The label associated with Category 19
     */
    category19?: string;
    /**
     * The label associated with Category 2
     */
    category2?: string;
    /**
     * The label associated with Category 20
     */
    category20?: string;
    /**
     * The label associated with Category 21
     */
    category21?: string;
    /**
     * The label associated with Category 22
     */
    category22?: string;
    /**
     * The label associated with Category 23
     */
    category23?: string;
    /**
     * The label associated with Category 24
     */
    category24?: string;
    /**
     * The label associated with Category 25
     */
    category25?: string;
    /**
     * The label associated with Category 3
     */
    category3?: string;
    /**
     * The label associated with Category 4
     */
    category4?: string;
    /**
     * The label associated with Category 5
     */
    category5?: string;
    /**
     * The label associated with Category 6
     */
    category6?: string;
    /**
     * The label associated with Category 7
     */
    category7?: string;
    /**
     * The label associated with Category 8
     */
    category8?: string;
    /**
     * The label associated with Category 9
     */
    category9?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializePlannerCategoryDescriptions(writer: SerializationWriter, plannerCategoryDescriptions: PlannerCategoryDescriptions | undefined = {} as PlannerCategoryDescriptions) : void {
    writer.writeStringValue("category1", plannerCategoryDescriptions.category1);
    writer.writeStringValue("category10", plannerCategoryDescriptions.category10);
    writer.writeStringValue("category11", plannerCategoryDescriptions.category11);
    writer.writeStringValue("category12", plannerCategoryDescriptions.category12);
    writer.writeStringValue("category13", plannerCategoryDescriptions.category13);
    writer.writeStringValue("category14", plannerCategoryDescriptions.category14);
    writer.writeStringValue("category15", plannerCategoryDescriptions.category15);
    writer.writeStringValue("category16", plannerCategoryDescriptions.category16);
    writer.writeStringValue("category17", plannerCategoryDescriptions.category17);
    writer.writeStringValue("category18", plannerCategoryDescriptions.category18);
    writer.writeStringValue("category19", plannerCategoryDescriptions.category19);
    writer.writeStringValue("category2", plannerCategoryDescriptions.category2);
    writer.writeStringValue("category20", plannerCategoryDescriptions.category20);
    writer.writeStringValue("category21", plannerCategoryDescriptions.category21);
    writer.writeStringValue("category22", plannerCategoryDescriptions.category22);
    writer.writeStringValue("category23", plannerCategoryDescriptions.category23);
    writer.writeStringValue("category24", plannerCategoryDescriptions.category24);
    writer.writeStringValue("category25", plannerCategoryDescriptions.category25);
    writer.writeStringValue("category3", plannerCategoryDescriptions.category3);
    writer.writeStringValue("category4", plannerCategoryDescriptions.category4);
    writer.writeStringValue("category5", plannerCategoryDescriptions.category5);
    writer.writeStringValue("category6", plannerCategoryDescriptions.category6);
    writer.writeStringValue("category7", plannerCategoryDescriptions.category7);
    writer.writeStringValue("category8", plannerCategoryDescriptions.category8);
    writer.writeStringValue("category9", plannerCategoryDescriptions.category9);
    writer.writeStringValue("@odata.type", plannerCategoryDescriptions.odataType);
    writer.writeAdditionalData(plannerCategoryDescriptions.additionalData);
}
// tslint:enable
// eslint-enable
