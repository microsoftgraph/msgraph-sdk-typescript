// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BucketAggregationRange extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Defines the lower bound from which to compute the aggregation. This can be a numeric value or a string representation of a date using the YYYY-MM-DDTHH:mm:ss.sssZ format. Required.
     */
    from?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Defines the upper bound up to which to compute the aggregation. This can be a numeric value or a string representation of a date using the YYYY-MM-DDTHH:mm:ss.sssZ format. Required.
     */
    to?: string;
}
export function createBucketAggregationRangeFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBucketAggregationRange;
}
export function deserializeIntoBucketAggregationRange(bucketAggregationRange: BucketAggregationRange | undefined = {} as BucketAggregationRange) : Record<string, (node: ParseNode) => void> {
    return {
        "from": n => { bucketAggregationRange.from = n.getStringValue(); },
        "@odata.type": n => { bucketAggregationRange.odataType = n.getStringValue(); },
        "to": n => { bucketAggregationRange.to = n.getStringValue(); },
    }
}
export function serializeBucketAggregationRange(writer: SerializationWriter, bucketAggregationRange: BucketAggregationRange | undefined = {} as BucketAggregationRange) : void {
    writer.writeStringValue("from", bucketAggregationRange.from);
    writer.writeStringValue("@odata.type", bucketAggregationRange.odataType);
    writer.writeStringValue("to", bucketAggregationRange.to);
    writer.writeAdditionalData(bucketAggregationRange.additionalData);
}
// tslint:enable
// eslint-enable
