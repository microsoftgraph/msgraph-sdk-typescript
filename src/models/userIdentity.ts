import { deserializeIntoIdentity, serializeIdentity, type Identity } from './identity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserIdentity;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoUserIdentity(userIdentity: UserIdentity | undefined = {} as UserIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(userIdentity),
        "ipAddress": n => { userIdentity.ipAddress = n.getStringValue(); },
        "userPrincipalName": n => { userIdentity.userPrincipalName = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeUserIdentity(writer: SerializationWriter, userIdentity: UserIdentity | undefined = {} as UserIdentity) : void {
        serializeIdentity(writer, userIdentity)
        writer.writeStringValue("ipAddress", userIdentity.ipAddress);
        writer.writeStringValue("userPrincipalName", userIdentity.userPrincipalName);
}
export interface UserIdentity extends Identity, Parsable {
    /**
     * Indicates the client IP address used by user performing the activity (audit log only).
     */
    ipAddress?: string;
    /**
     * The userPrincipalName attribute of the user.
     */
    userPrincipalName?: string;
}
