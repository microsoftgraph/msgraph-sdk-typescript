// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDeviceEnrollmentConfiguration, serializeDeviceEnrollmentConfiguration, type DeviceEnrollmentConfiguration } from './deviceEnrollmentConfiguration';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceEnrollmentLimitConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceEnrollmentLimitConfiguration;
}
export function deserializeIntoDeviceEnrollmentLimitConfiguration(deviceEnrollmentLimitConfiguration: DeviceEnrollmentLimitConfiguration | undefined = {} as DeviceEnrollmentLimitConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDeviceEnrollmentConfiguration(deviceEnrollmentLimitConfiguration),
        "limit": n => { deviceEnrollmentLimitConfiguration.limit = n.getNumberValue(); },
    }
}
export interface DeviceEnrollmentLimitConfiguration extends DeviceEnrollmentConfiguration, Parsable {
    /**
     * The maximum number of devices that a user can enroll
     */
    limit?: number;
}
export function serializeDeviceEnrollmentLimitConfiguration(writer: SerializationWriter, deviceEnrollmentLimitConfiguration: DeviceEnrollmentLimitConfiguration | undefined = {} as DeviceEnrollmentLimitConfiguration) : void {
        serializeDeviceEnrollmentConfiguration(writer, deviceEnrollmentLimitConfiguration)
        writer.writeNumberValue("limit", deviceEnrollmentLimitConfiguration.limit);
}
// tslint:enable
// eslint-enable
