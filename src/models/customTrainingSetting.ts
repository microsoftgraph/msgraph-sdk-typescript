// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { TrainingAssignedTo } from './trainingAssignedTo';
import { deserializeIntoTrainingSetting, serializeTrainingSetting, type TrainingSetting } from './trainingSetting';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createCustomTrainingSettingFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCustomTrainingSetting;
}
export interface CustomTrainingSetting extends Parsable, TrainingSetting {
    /**
     * The assignedTo property
     */
    assignedTo?: TrainingAssignedTo[];
    /**
     * The description property
     */
    description?: string;
    /**
     * The displayName property
     */
    displayName?: string;
    /**
     * The durationInMinutes property
     */
    durationInMinutes?: number;
    /**
     * The url property
     */
    url?: string;
}
export function deserializeIntoCustomTrainingSetting(customTrainingSetting: CustomTrainingSetting | undefined = {} as CustomTrainingSetting) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTrainingSetting(customTrainingSetting),
        "assignedTo": n => { customTrainingSetting.assignedTo = n.getCollectionOfEnumValues<TrainingAssignedTo>(TrainingAssignedTo); },
        "description": n => { customTrainingSetting.description = n.getStringValue(); },
        "displayName": n => { customTrainingSetting.displayName = n.getStringValue(); },
        "durationInMinutes": n => { customTrainingSetting.durationInMinutes = n.getNumberValue(); },
        "url": n => { customTrainingSetting.url = n.getStringValue(); },
    }
}
export function serializeCustomTrainingSetting(writer: SerializationWriter, customTrainingSetting: CustomTrainingSetting | undefined = {} as CustomTrainingSetting) : void {
        serializeTrainingSetting(writer, customTrainingSetting)
        if(customTrainingSetting.assignedTo)
        writer.writeEnumValue<TrainingAssignedTo>("assignedTo", ...customTrainingSetting.assignedTo);
        writer.writeStringValue("description", customTrainingSetting.description);
        writer.writeStringValue("displayName", customTrainingSetting.displayName);
        writer.writeNumberValue("durationInMinutes", customTrainingSetting.durationInMinutes);
        writer.writeStringValue("url", customTrainingSetting.url);
}
// tslint:enable
// eslint-enable
