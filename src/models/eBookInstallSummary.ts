// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEBookInstallSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEBookInstallSummary;
}
export function deserializeIntoEBookInstallSummary(eBookInstallSummary: EBookInstallSummary | undefined = {} as EBookInstallSummary) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(eBookInstallSummary),
        "failedDeviceCount": n => { eBookInstallSummary.failedDeviceCount = n.getNumberValue(); },
        "failedUserCount": n => { eBookInstallSummary.failedUserCount = n.getNumberValue(); },
        "installedDeviceCount": n => { eBookInstallSummary.installedDeviceCount = n.getNumberValue(); },
        "installedUserCount": n => { eBookInstallSummary.installedUserCount = n.getNumberValue(); },
        "notInstalledDeviceCount": n => { eBookInstallSummary.notInstalledDeviceCount = n.getNumberValue(); },
        "notInstalledUserCount": n => { eBookInstallSummary.notInstalledUserCount = n.getNumberValue(); },
    }
}
export interface EBookInstallSummary extends Entity, Parsable {
    /**
     * Number of Devices that have failed to install this book.
     */
    failedDeviceCount?: number;
    /**
     * Number of Users that have 1 or more device that failed to install this book.
     */
    failedUserCount?: number;
    /**
     * Number of Devices that have successfully installed this book.
     */
    installedDeviceCount?: number;
    /**
     * Number of Users whose devices have all succeeded to install this book.
     */
    installedUserCount?: number;
    /**
     * Number of Devices that does not have this book installed.
     */
    notInstalledDeviceCount?: number;
    /**
     * Number of Users that did not install this book.
     */
    notInstalledUserCount?: number;
}
export function serializeEBookInstallSummary(writer: SerializationWriter, eBookInstallSummary: EBookInstallSummary | undefined = {} as EBookInstallSummary) : void {
        serializeEntity(writer, eBookInstallSummary)
        writer.writeNumberValue("failedDeviceCount", eBookInstallSummary.failedDeviceCount);
        writer.writeNumberValue("failedUserCount", eBookInstallSummary.failedUserCount);
        writer.writeNumberValue("installedDeviceCount", eBookInstallSummary.installedDeviceCount);
        writer.writeNumberValue("installedUserCount", eBookInstallSummary.installedUserCount);
        writer.writeNumberValue("notInstalledDeviceCount", eBookInstallSummary.notInstalledDeviceCount);
        writer.writeNumberValue("notInstalledUserCount", eBookInstallSummary.notInstalledUserCount);
}
// tslint:enable
// eslint-enable
