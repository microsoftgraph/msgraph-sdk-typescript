// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { OnlineMeetingRole } from './onlineMeetingRole';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMeetingParticipantInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMeetingParticipantInfo;
}
export function deserializeIntoMeetingParticipantInfo(meetingParticipantInfo: MeetingParticipantInfo | undefined = {} as MeetingParticipantInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "identity": n => { meetingParticipantInfo.identity = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "@odata.type": n => { meetingParticipantInfo.odataType = n.getStringValue(); },
        "role": n => { meetingParticipantInfo.role = n.getEnumValue<OnlineMeetingRole>(OnlineMeetingRole); },
        "upn": n => { meetingParticipantInfo.upn = n.getStringValue(); },
    }
}
export interface MeetingParticipantInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Identity information of the participant.
     */
    identity?: IdentitySet;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Specifies the participant's role in the meeting.
     */
    role?: OnlineMeetingRole;
    /**
     * User principal name of the participant.
     */
    upn?: string;
}
export function serializeMeetingParticipantInfo(writer: SerializationWriter, meetingParticipantInfo: MeetingParticipantInfo | undefined = {} as MeetingParticipantInfo) : void {
        writer.writeObjectValue<IdentitySet>("identity", meetingParticipantInfo.identity, serializeIdentitySet);
        writer.writeStringValue("@odata.type", meetingParticipantInfo.odataType);
        writer.writeEnumValue<OnlineMeetingRole>("role", meetingParticipantInfo.role);
        writer.writeStringValue("upn", meetingParticipantInfo.upn);
        writer.writeAdditionalData(meetingParticipantInfo.additionalData);
}
// tslint:enable
// eslint-enable
