// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrintDocumentUploadPropertiesFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrintDocumentUploadProperties;
}
export function deserializeIntoPrintDocumentUploadProperties(printDocumentUploadProperties: PrintDocumentUploadProperties | undefined = {} as PrintDocumentUploadProperties) : Record<string, (node: ParseNode) => void> {
    return {
        "contentType": n => { printDocumentUploadProperties.contentType = n.getStringValue(); },
        "documentName": n => { printDocumentUploadProperties.documentName = n.getStringValue(); },
        "@odata.type": n => { printDocumentUploadProperties.odataType = n.getStringValue(); },
        "size": n => { printDocumentUploadProperties.size = n.getNumberValue(); },
    }
}
export interface PrintDocumentUploadProperties extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The document's content (MIME) type.
     */
    contentType?: string;
    /**
     * The document's name.
     */
    documentName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The document's size in bytes.
     */
    size?: number;
}
export function serializePrintDocumentUploadProperties(writer: SerializationWriter, printDocumentUploadProperties: PrintDocumentUploadProperties | undefined = {} as PrintDocumentUploadProperties) : void {
        writer.writeStringValue("contentType", printDocumentUploadProperties.contentType);
        writer.writeStringValue("documentName", printDocumentUploadProperties.documentName);
        writer.writeStringValue("@odata.type", printDocumentUploadProperties.odataType);
        writer.writeNumberValue("size", printDocumentUploadProperties.size);
        writer.writeAdditionalData(printDocumentUploadProperties.additionalData);
}
// tslint:enable
// eslint-enable
