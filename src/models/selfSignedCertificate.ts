// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createSelfSignedCertificateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSelfSignedCertificate;
}
export function deserializeIntoSelfSignedCertificate(selfSignedCertificate: SelfSignedCertificate | undefined = {} as SelfSignedCertificate) : Record<string, (node: ParseNode) => void> {
    return {
        "customKeyIdentifier": n => { selfSignedCertificate.customKeyIdentifier = n.getStringValue(); },
        "displayName": n => { selfSignedCertificate.displayName = n.getStringValue(); },
        "endDateTime": n => { selfSignedCertificate.endDateTime = n.getDateValue(); },
        "key": n => { selfSignedCertificate.key = n.getStringValue(); },
        "keyId": n => { selfSignedCertificate.keyId = n.getGuidValue(); },
        "@odata.type": n => { selfSignedCertificate.odataType = n.getStringValue(); },
        "startDateTime": n => { selfSignedCertificate.startDateTime = n.getDateValue(); },
        "thumbprint": n => { selfSignedCertificate.thumbprint = n.getStringValue(); },
        "type": n => { selfSignedCertificate.type = n.getStringValue(); },
        "usage": n => { selfSignedCertificate.usage = n.getStringValue(); },
    }
}
export interface SelfSignedCertificate extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The customKeyIdentifier property
     */
    customKeyIdentifier?: string;
    /**
     * The displayName property
     */
    displayName?: string;
    /**
     * The endDateTime property
     */
    endDateTime?: Date;
    /**
     * The key property
     */
    key?: string;
    /**
     * The keyId property
     */
    keyId?: Guid;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The startDateTime property
     */
    startDateTime?: Date;
    /**
     * The thumbprint property
     */
    thumbprint?: string;
    /**
     * The type property
     */
    type?: string;
    /**
     * The usage property
     */
    usage?: string;
}
export function serializeSelfSignedCertificate(writer: SerializationWriter, selfSignedCertificate: SelfSignedCertificate | undefined = {} as SelfSignedCertificate) : void {
        writer.writeStringValue("customKeyIdentifier", selfSignedCertificate.customKeyIdentifier);
        writer.writeStringValue("displayName", selfSignedCertificate.displayName);
        writer.writeDateValue("endDateTime", selfSignedCertificate.endDateTime);
        writer.writeStringValue("key", selfSignedCertificate.key);
        writer.writeGuidValue("keyId", selfSignedCertificate.keyId);
        writer.writeStringValue("@odata.type", selfSignedCertificate.odataType);
        writer.writeDateValue("startDateTime", selfSignedCertificate.startDateTime);
        writer.writeStringValue("thumbprint", selfSignedCertificate.thumbprint);
        writer.writeStringValue("type", selfSignedCertificate.type);
        writer.writeStringValue("usage", selfSignedCertificate.usage);
        writer.writeAdditionalData(selfSignedCertificate.additionalData);
}
// tslint:enable
// eslint-enable
