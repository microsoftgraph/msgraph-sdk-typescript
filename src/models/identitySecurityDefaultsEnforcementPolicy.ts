// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoPolicyBase, serializePolicyBase, type PolicyBase } from './policyBase';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIdentitySecurityDefaultsEnforcementPolicyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIdentitySecurityDefaultsEnforcementPolicy;
}
export function deserializeIntoIdentitySecurityDefaultsEnforcementPolicy(identitySecurityDefaultsEnforcementPolicy: IdentitySecurityDefaultsEnforcementPolicy | undefined = {} as IdentitySecurityDefaultsEnforcementPolicy) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPolicyBase(identitySecurityDefaultsEnforcementPolicy),
        "isEnabled": n => { identitySecurityDefaultsEnforcementPolicy.isEnabled = n.getBooleanValue(); },
    }
}
export interface IdentitySecurityDefaultsEnforcementPolicy extends Parsable, PolicyBase {
    /**
     * If set to true, Microsoft Entra security defaults are enabled for the tenant.
     */
    isEnabled?: boolean;
}
export function serializeIdentitySecurityDefaultsEnforcementPolicy(writer: SerializationWriter, identitySecurityDefaultsEnforcementPolicy: IdentitySecurityDefaultsEnforcementPolicy | undefined = {} as IdentitySecurityDefaultsEnforcementPolicy) : void {
    serializePolicyBase(writer, identitySecurityDefaultsEnforcementPolicy)
    writer.writeBooleanValue("isEnabled", identitySecurityDefaultsEnforcementPolicy.isEnabled);
}
// tslint:enable
// eslint-enable
