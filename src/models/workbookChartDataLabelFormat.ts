// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkbookChartFillFromDiscriminatorValue, serializeWorkbookChartFill, type WorkbookChartFill } from './workbookChartFill';
import { createWorkbookChartFontFromDiscriminatorValue, serializeWorkbookChartFont, type WorkbookChartFont } from './workbookChartFont';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookChartDataLabelFormatFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookChartDataLabelFormat;
}
export function deserializeIntoWorkbookChartDataLabelFormat(workbookChartDataLabelFormat: WorkbookChartDataLabelFormat | undefined = {} as WorkbookChartDataLabelFormat) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookChartDataLabelFormat),
        "fill": n => { workbookChartDataLabelFormat.fill = n.getObjectValue<WorkbookChartFill>(createWorkbookChartFillFromDiscriminatorValue); },
        "font": n => { workbookChartDataLabelFormat.font = n.getObjectValue<WorkbookChartFont>(createWorkbookChartFontFromDiscriminatorValue); },
    }
}
export function serializeWorkbookChartDataLabelFormat(writer: SerializationWriter, workbookChartDataLabelFormat: WorkbookChartDataLabelFormat | undefined = {} as WorkbookChartDataLabelFormat) : void {
    serializeEntity(writer, workbookChartDataLabelFormat)
    writer.writeObjectValue<WorkbookChartFill>("fill", workbookChartDataLabelFormat.fill, serializeWorkbookChartFill);
    writer.writeObjectValue<WorkbookChartFont>("font", workbookChartDataLabelFormat.font, serializeWorkbookChartFont);
}
export interface WorkbookChartDataLabelFormat extends Entity, Parsable {
    /**
     * Represents the fill format of the current chart data label. Read-only.
     */
    fill?: WorkbookChartFill;
    /**
     * Represents the font attributes (font name, font size, color, etc.) for a chart data label. Read-only.
     */
    font?: WorkbookChartFont;
}
// tslint:enable
// eslint-enable
