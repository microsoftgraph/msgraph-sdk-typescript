// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoOmaSetting, serializeOmaSetting, type OmaSetting } from './omaSetting';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOmaSettingStringXmlFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOmaSettingStringXml;
}
export function deserializeIntoOmaSettingStringXml(omaSettingStringXml: OmaSettingStringXml | undefined = {} as OmaSettingStringXml) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoOmaSetting(omaSettingStringXml),
        "fileName": n => { omaSettingStringXml.fileName = n.getStringValue(); },
        "value": n => { omaSettingStringXml.value = n.getStringValue(); },
    }
}
export interface OmaSettingStringXml extends OmaSetting, Parsable {
    /**
     * File name associated with the Value property (.xml).
     */
    fileName?: string;
    /**
     * Value. (UTF8 encoded byte array)
     */
    value?: string;
}
export function serializeOmaSettingStringXml(writer: SerializationWriter, omaSettingStringXml: OmaSettingStringXml | undefined = {} as OmaSettingStringXml) : void {
    serializeOmaSetting(writer, omaSettingStringXml)
    writer.writeStringValue("fileName", omaSettingStringXml.fileName);
    writer.writeStringValue("value", omaSettingStringXml.value);
}
// tslint:enable
// eslint-enable
