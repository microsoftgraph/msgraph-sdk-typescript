// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDirectoryObject, serializeDirectoryObject, type DirectoryObject } from './directoryObject';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createDirectoryObjectPartnerReferenceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDirectoryObjectPartnerReference;
}
export function deserializeIntoDirectoryObjectPartnerReference(directoryObjectPartnerReference: DirectoryObjectPartnerReference | undefined = {} as DirectoryObjectPartnerReference) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObject(directoryObjectPartnerReference),
        "description": n => { directoryObjectPartnerReference.description = n.getStringValue(); },
        "displayName": n => { directoryObjectPartnerReference.displayName = n.getStringValue(); },
        "externalPartnerTenantId": n => { directoryObjectPartnerReference.externalPartnerTenantId = n.getGuidValue(); },
        "objectType": n => { directoryObjectPartnerReference.objectType = n.getStringValue(); },
    }
}
export interface DirectoryObjectPartnerReference extends DirectoryObject, Parsable {
    /**
     * Description of the object returned. Read-only.
     */
    description?: string;
    /**
     * Name of directory object being returned, like group or application. Read-only.
     */
    displayName?: string;
    /**
     * The tenant identifier for the partner tenant. Read-only.
     */
    externalPartnerTenantId?: Guid;
    /**
     * The type of the referenced object in the partner tenant. Read-only.
     */
    objectType?: string;
}
export function serializeDirectoryObjectPartnerReference(writer: SerializationWriter, directoryObjectPartnerReference: DirectoryObjectPartnerReference | undefined = {} as DirectoryObjectPartnerReference) : void {
    serializeDirectoryObject(writer, directoryObjectPartnerReference)
    writer.writeStringValue("description", directoryObjectPartnerReference.description);
    writer.writeStringValue("displayName", directoryObjectPartnerReference.displayName);
    writer.writeGuidValue("externalPartnerTenantId", directoryObjectPartnerReference.externalPartnerTenantId);
    writer.writeStringValue("objectType", directoryObjectPartnerReference.objectType);
}
// tslint:enable
// eslint-enable
