// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { RiskDetail } from './riskDetail';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRiskServicePrincipalActivityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRiskServicePrincipalActivity;
}
export function deserializeIntoRiskServicePrincipalActivity(riskServicePrincipalActivity: RiskServicePrincipalActivity | undefined = {} as RiskServicePrincipalActivity) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { riskServicePrincipalActivity.detail = n.getEnumValue<RiskDetail>(RiskDetail); },
        "@odata.type": n => { riskServicePrincipalActivity.odataType = n.getStringValue(); },
        "riskEventTypes": n => { riskServicePrincipalActivity.riskEventTypes = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface RiskServicePrincipalActivity extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Details of the detected risk. Note: Details for this property are only available for Workload Identities Premium customers. Events in tenants without this license will be returned hidden. The possible values are: none, hidden, adminConfirmedServicePrincipalCompromised, adminDismissedAllRiskForServicePrincipal. Note that you must use the Prefer: include-unknown-enum-members request header to get the following value(s) in this evolvable enum: adminConfirmedServicePrincipalCompromised , adminDismissedAllRiskForServicePrincipal.
     */
    detail?: RiskDetail;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The riskEventTypes property
     */
    riskEventTypes?: string[];
}
export function serializeRiskServicePrincipalActivity(writer: SerializationWriter, riskServicePrincipalActivity: RiskServicePrincipalActivity | undefined = {} as RiskServicePrincipalActivity) : void {
        writer.writeEnumValue<RiskDetail>("detail", riskServicePrincipalActivity.detail);
        writer.writeStringValue("@odata.type", riskServicePrincipalActivity.odataType);
        writer.writeCollectionOfPrimitiveValues<string>("riskEventTypes", riskServicePrincipalActivity.riskEventTypes);
        writer.writeAdditionalData(riskServicePrincipalActivity.additionalData);
}
// tslint:enable
// eslint-enable
