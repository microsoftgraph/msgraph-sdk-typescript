// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from '../entity';
import { createUserFromDiscriminatorValue, serializeUser, type User } from '../user';
import { LifecycleWorkflowProcessingStatus } from './lifecycleWorkflowProcessingStatus';
import { createTaskFromDiscriminatorValue, serializeTask, type Task } from './task';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTaskProcessingResultFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTaskProcessingResult;
}
export function deserializeIntoTaskProcessingResult(taskProcessingResult: TaskProcessingResult | undefined = {} as TaskProcessingResult) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(taskProcessingResult),
        "completedDateTime": n => { taskProcessingResult.completedDateTime = n.getDateValue(); },
        "createdDateTime": n => { taskProcessingResult.createdDateTime = n.getDateValue(); },
        "failureReason": n => { taskProcessingResult.failureReason = n.getStringValue(); },
        "processingStatus": n => { taskProcessingResult.processingStatus = n.getEnumValue<LifecycleWorkflowProcessingStatus>(LifecycleWorkflowProcessingStatus); },
        "startedDateTime": n => { taskProcessingResult.startedDateTime = n.getDateValue(); },
        "subject": n => { taskProcessingResult.subject = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "task": n => { taskProcessingResult.task = n.getObjectValue<Task>(createTaskFromDiscriminatorValue); },
    }
}
export function serializeTaskProcessingResult(writer: SerializationWriter, taskProcessingResult: TaskProcessingResult | undefined = {} as TaskProcessingResult) : void {
    serializeEntity(writer, taskProcessingResult)
    writer.writeDateValue("completedDateTime", taskProcessingResult.completedDateTime);
    writer.writeDateValue("createdDateTime", taskProcessingResult.createdDateTime);
    writer.writeStringValue("failureReason", taskProcessingResult.failureReason);
    writer.writeEnumValue<LifecycleWorkflowProcessingStatus>("processingStatus", taskProcessingResult.processingStatus);
    writer.writeDateValue("startedDateTime", taskProcessingResult.startedDateTime);
    writer.writeObjectValue<User>("subject", taskProcessingResult.subject, serializeUser);
    writer.writeObjectValue<Task>("task", taskProcessingResult.task, serializeTask);
}
export interface TaskProcessingResult extends Entity, Parsable {
    /**
     * The date time when taskProcessingResult execution ended. Value is null if task execution is still in progress.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.
     */
    completedDateTime?: Date;
    /**
     * The date time when the taskProcessingResult was created.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.
     */
    createdDateTime?: Date;
    /**
     * Describes why the taskProcessingResult has failed.
     */
    failureReason?: string;
    /**
     * The processingStatus property
     */
    processingStatus?: LifecycleWorkflowProcessingStatus;
    /**
     * The date time when taskProcessingResult execution started. Value is null if task execution has not yet started.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.
     */
    startedDateTime?: Date;
    /**
     * The subject property
     */
    subject?: User;
    /**
     * The task property
     */
    task?: Task;
}
// tslint:enable
// eslint-enable
