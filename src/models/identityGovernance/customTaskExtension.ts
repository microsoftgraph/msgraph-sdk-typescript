// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoCustomCalloutExtension, serializeCustomCalloutExtension, type CustomCalloutExtension } from '../customCalloutExtension';
import { createCustomExtensionCallbackConfigurationFromDiscriminatorValue, serializeCustomExtensionCallbackConfiguration, type CustomExtensionCallbackConfiguration } from '../customExtensionCallbackConfiguration';
import { createUserFromDiscriminatorValue, serializeUser, type User } from '../user';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createCustomTaskExtensionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCustomTaskExtension;
}
export interface CustomTaskExtension extends CustomCalloutExtension, Parsable {
    /**
     * The callback configuration for a custom task extension.
     */
    callbackConfiguration?: CustomExtensionCallbackConfiguration;
    /**
     * The unique identifier of the Microsoft Entra user that created the custom task extension.Supports $filter(eq, ne) and $expand.
     */
    createdBy?: User;
    /**
     * When the custom task extension was created.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.
     */
    createdDateTime?: Date;
    /**
     * The unique identifier of the Microsoft Entra user that modified the custom task extension last.Supports $filter(eq, ne) and $expand.
     */
    lastModifiedBy?: User;
    /**
     * When the custom extension was last modified.Supports $filter(lt, le, gt, ge, eq, ne) and $orderby.
     */
    lastModifiedDateTime?: Date;
}
export function deserializeIntoCustomTaskExtension(customTaskExtension: CustomTaskExtension | undefined = {} as CustomTaskExtension) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCustomCalloutExtension(customTaskExtension),
        "callbackConfiguration": n => { customTaskExtension.callbackConfiguration = n.getObjectValue<CustomExtensionCallbackConfiguration>(createCustomExtensionCallbackConfigurationFromDiscriminatorValue); },
        "createdBy": n => { customTaskExtension.createdBy = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "createdDateTime": n => { customTaskExtension.createdDateTime = n.getDateValue(); },
        "lastModifiedBy": n => { customTaskExtension.lastModifiedBy = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { customTaskExtension.lastModifiedDateTime = n.getDateValue(); },
    }
}
export function serializeCustomTaskExtension(writer: SerializationWriter, customTaskExtension: CustomTaskExtension | undefined = {} as CustomTaskExtension) : void {
    serializeCustomCalloutExtension(writer, customTaskExtension)
    writer.writeObjectValue<CustomExtensionCallbackConfiguration>("callbackConfiguration", customTaskExtension.callbackConfiguration, serializeCustomExtensionCallbackConfiguration);
    writer.writeObjectValue<User>("createdBy", customTaskExtension.createdBy, serializeUser);
    writer.writeDateValue("createdDateTime", customTaskExtension.createdDateTime);
    writer.writeObjectValue<User>("lastModifiedBy", customTaskExtension.lastModifiedBy, serializeUser);
    writer.writeDateValue("lastModifiedDateTime", customTaskExtension.lastModifiedDateTime);
}
// tslint:enable
// eslint-enable
