// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTaskReportSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTaskReportSummary;
}
export function deserializeIntoTaskReportSummary(taskReportSummary: TaskReportSummary | undefined = {} as TaskReportSummary) : Record<string, (node: ParseNode) => void> {
    return {
        "failedTasks": n => { taskReportSummary.failedTasks = n.getNumberValue(); },
        "@odata.type": n => { taskReportSummary.odataType = n.getStringValue(); },
        "successfulTasks": n => { taskReportSummary.successfulTasks = n.getNumberValue(); },
        "totalTasks": n => { taskReportSummary.totalTasks = n.getNumberValue(); },
        "unprocessedTasks": n => { taskReportSummary.unprocessedTasks = n.getNumberValue(); },
    }
}
export function serializeTaskReportSummary(writer: SerializationWriter, taskReportSummary: TaskReportSummary | undefined = {} as TaskReportSummary) : void {
        writer.writeNumberValue("failedTasks", taskReportSummary.failedTasks);
        writer.writeStringValue("@odata.type", taskReportSummary.odataType);
        writer.writeNumberValue("successfulTasks", taskReportSummary.successfulTasks);
        writer.writeNumberValue("totalTasks", taskReportSummary.totalTasks);
        writer.writeNumberValue("unprocessedTasks", taskReportSummary.unprocessedTasks);
        writer.writeAdditionalData(taskReportSummary.additionalData);
}
export interface TaskReportSummary extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The number of failed tasks in a report.
     */
    failedTasks?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The total number of successful tasks in a report.
     */
    successfulTasks?: number;
    /**
     * The total number of tasks in a report.
     */
    totalTasks?: number;
    /**
     * The number of unprocessed tasks in a report.
     */
    unprocessedTasks?: number;
}
// tslint:enable
// eslint-enable
