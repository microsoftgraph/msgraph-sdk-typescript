// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserSummary;
}
export function deserializeIntoUserSummary(userSummary: UserSummary | undefined = {} as UserSummary) : Record<string, (node: ParseNode) => void> {
    return {
        "failedTasks": n => { userSummary.failedTasks = n.getNumberValue(); },
        "failedUsers": n => { userSummary.failedUsers = n.getNumberValue(); },
        "@odata.type": n => { userSummary.odataType = n.getStringValue(); },
        "successfulUsers": n => { userSummary.successfulUsers = n.getNumberValue(); },
        "totalTasks": n => { userSummary.totalTasks = n.getNumberValue(); },
        "totalUsers": n => { userSummary.totalUsers = n.getNumberValue(); },
    }
}
export function serializeUserSummary(writer: SerializationWriter, userSummary: UserSummary | undefined = {} as UserSummary) : void {
    writer.writeNumberValue("failedTasks", userSummary.failedTasks);
    writer.writeNumberValue("failedUsers", userSummary.failedUsers);
    writer.writeStringValue("@odata.type", userSummary.odataType);
    writer.writeNumberValue("successfulUsers", userSummary.successfulUsers);
    writer.writeNumberValue("totalTasks", userSummary.totalTasks);
    writer.writeNumberValue("totalUsers", userSummary.totalUsers);
    writer.writeAdditionalData(userSummary.additionalData);
}
export interface UserSummary extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The number of failed tasks for users in a user summary.
     */
    failedTasks?: number;
    /**
     * The number of failed users in a user summary.
     */
    failedUsers?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The number of successful users in a user summary.
     */
    successfulUsers?: number;
    /**
     * The total tasks of users in a user summary.
     */
    totalTasks?: number;
    /**
     * The total number of users in a user summary
     */
    totalUsers?: number;
}
// tslint:enable
// eslint-enable
