// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from '../entity';
import { LifecycleTaskCategory } from './lifecycleTaskCategory';
import { createParameterFromDiscriminatorValue, serializeParameter, type Parameter } from './parameter';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTaskDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTaskDefinition;
}
export function deserializeIntoTaskDefinition(taskDefinition: TaskDefinition | undefined = {} as TaskDefinition) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(taskDefinition),
        "category": n => { taskDefinition.category = n.getCollectionOfEnumValues<LifecycleTaskCategory>(LifecycleTaskCategory); },
        "continueOnError": n => { taskDefinition.continueOnError = n.getBooleanValue(); },
        "description": n => { taskDefinition.description = n.getStringValue(); },
        "displayName": n => { taskDefinition.displayName = n.getStringValue(); },
        "parameters": n => { taskDefinition.parameters = n.getCollectionOfObjectValues<Parameter>(createParameterFromDiscriminatorValue); },
        "version": n => { taskDefinition.version = n.getNumberValue(); },
    }
}
export function serializeTaskDefinition(writer: SerializationWriter, taskDefinition: TaskDefinition | undefined = {} as TaskDefinition) : void {
    serializeEntity(writer, taskDefinition)
    writer.writeEnumValue<LifecycleTaskCategory[]>("category", taskDefinition.category);
    writer.writeBooleanValue("continueOnError", taskDefinition.continueOnError);
    writer.writeStringValue("description", taskDefinition.description);
    writer.writeStringValue("displayName", taskDefinition.displayName);
    writer.writeCollectionOfObjectValues<Parameter>("parameters", taskDefinition.parameters, serializeParameter);
    writer.writeNumberValue("version", taskDefinition.version);
}
export interface TaskDefinition extends Entity, Parsable {
    /**
     * The category property
     */
    category?: LifecycleTaskCategory[];
    /**
     * The continueOnError property
     */
    continueOnError?: boolean;
    /**
     * The description of the taskDefinition.
     */
    description?: string;
    /**
     * The display name of the taskDefinition.Supports $filter(eq, ne) and $orderby.
     */
    displayName?: string;
    /**
     * The parameters that must be supplied when creating a workflow task object.Supports $filter(any).
     */
    parameters?: Parameter[];
    /**
     * The version number of the taskDefinition. New records are pushed when we add support for new parameters.Supports $filter(ge, gt, le, lt, eq, ne) and $orderby.
     */
    version?: number;
}
// tslint:enable
// eslint-enable
