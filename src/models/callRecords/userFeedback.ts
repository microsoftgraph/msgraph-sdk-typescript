// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createFeedbackTokenSetFromDiscriminatorValue, serializeFeedbackTokenSet, type FeedbackTokenSet } from './feedbackTokenSet';
import { UserFeedbackRating } from './userFeedbackRating';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserFeedbackFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserFeedback;
}
export function deserializeIntoUserFeedback(userFeedback: UserFeedback | undefined = {} as UserFeedback) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { userFeedback.odataType = n.getStringValue(); },
        "rating": n => { userFeedback.rating = n.getEnumValue<UserFeedbackRating>(UserFeedbackRating); },
        "text": n => { userFeedback.text = n.getStringValue(); },
        "tokens": n => { userFeedback.tokens = n.getObjectValue<FeedbackTokenSet>(createFeedbackTokenSetFromDiscriminatorValue); },
    }
}
export function serializeUserFeedback(writer: SerializationWriter, userFeedback: UserFeedback | undefined = {} as UserFeedback) : void {
        writer.writeStringValue("@odata.type", userFeedback.odataType);
        writer.writeEnumValue<UserFeedbackRating>("rating", userFeedback.rating);
        writer.writeStringValue("text", userFeedback.text);
        writer.writeObjectValue<FeedbackTokenSet>("tokens", userFeedback.tokens, serializeFeedbackTokenSet);
        writer.writeAdditionalData(userFeedback.additionalData);
}
export interface UserFeedback extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The rating property
     */
    rating?: UserFeedbackRating;
    /**
     * The feedback text provided by the user of this endpoint for the session.
     */
    text?: string;
    /**
     * The set of feedback tokens provided by the user of this endpoint for the session. This is a set of Boolean properties. The property names should not be relied upon since they may change depending on what tokens are offered to the user.
     */
    tokens?: FeedbackTokenSet;
}
// tslint:enable
// eslint-enable
