// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoGovernanceInsight, serializeGovernanceInsight, type GovernanceInsight } from './governanceInsight';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserSignInInsightFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserSignInInsight;
}
export function deserializeIntoUserSignInInsight(userSignInInsight: UserSignInInsight | undefined = {} as UserSignInInsight) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoGovernanceInsight(userSignInInsight),
        "lastSignInDateTime": n => { userSignInInsight.lastSignInDateTime = n.getDateValue(); },
    }
}
export function serializeUserSignInInsight(writer: SerializationWriter, userSignInInsight: UserSignInInsight | undefined = {} as UserSignInInsight) : void {
    serializeGovernanceInsight(writer, userSignInInsight)
    writer.writeDateValue("lastSignInDateTime", userSignInInsight.lastSignInDateTime);
}
export interface UserSignInInsight extends GovernanceInsight, Parsable {
    /**
     * Indicates when the user last signed in.
     */
    lastSignInDateTime?: Date;
}
// tslint:enable
// eslint-enable
