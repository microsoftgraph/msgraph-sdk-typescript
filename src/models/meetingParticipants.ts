// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createMeetingParticipantInfoFromDiscriminatorValue, serializeMeetingParticipantInfo, type MeetingParticipantInfo } from './meetingParticipantInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMeetingParticipantsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMeetingParticipants;
}
export function deserializeIntoMeetingParticipants(meetingParticipants: MeetingParticipants | undefined = {} as MeetingParticipants) : Record<string, (node: ParseNode) => void> {
    return {
        "attendees": n => { meetingParticipants.attendees = n.getCollectionOfObjectValues<MeetingParticipantInfo>(createMeetingParticipantInfoFromDiscriminatorValue); },
        "@odata.type": n => { meetingParticipants.odataType = n.getStringValue(); },
        "organizer": n => { meetingParticipants.organizer = n.getObjectValue<MeetingParticipantInfo>(createMeetingParticipantInfoFromDiscriminatorValue); },
    }
}
export interface MeetingParticipants extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The attendees property
     */
    attendees?: MeetingParticipantInfo[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The organizer property
     */
    organizer?: MeetingParticipantInfo;
}
export function serializeMeetingParticipants(writer: SerializationWriter, meetingParticipants: MeetingParticipants | undefined = {} as MeetingParticipants) : void {
        writer.writeCollectionOfObjectValues<MeetingParticipantInfo>("attendees", meetingParticipants.attendees, );
        writer.writeStringValue("@odata.type", meetingParticipants.odataType);
        writer.writeObjectValue<MeetingParticipantInfo>("organizer", meetingParticipants.organizer, );
        writer.writeAdditionalData(meetingParticipants.additionalData);
}
// tslint:enable
// eslint-enable
