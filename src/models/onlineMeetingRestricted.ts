// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { OnlineMeetingContentSharingDisabledReason } from './onlineMeetingContentSharingDisabledReason';
import { OnlineMeetingVideoDisabledReason } from './onlineMeetingVideoDisabledReason';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnlineMeetingRestrictedFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOnlineMeetingRestricted;
}
export function deserializeIntoOnlineMeetingRestricted(onlineMeetingRestricted: OnlineMeetingRestricted | undefined = {} as OnlineMeetingRestricted) : Record<string, (node: ParseNode) => void> {
    return {
        "contentSharingDisabled": n => { onlineMeetingRestricted.contentSharingDisabled = n.getCollectionOfEnumValues<OnlineMeetingContentSharingDisabledReason>(OnlineMeetingContentSharingDisabledReason); },
        "@odata.type": n => { onlineMeetingRestricted.odataType = n.getStringValue(); },
        "videoDisabled": n => { onlineMeetingRestricted.videoDisabled = n.getCollectionOfEnumValues<OnlineMeetingVideoDisabledReason>(OnlineMeetingVideoDisabledReason); },
    }
}
export interface OnlineMeetingRestricted extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Specifies the reason shared content from this participant is disabled. Possible values are: watermarkProtection, unknownFutureValue.
     */
    contentSharingDisabled?: OnlineMeetingContentSharingDisabledReason[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Specifies the reason video from this participant is disabled. Possible values are: watermarkProtection, unknownFutureValue.
     */
    videoDisabled?: OnlineMeetingVideoDisabledReason[];
}
export function serializeOnlineMeetingRestricted(writer: SerializationWriter, onlineMeetingRestricted: OnlineMeetingRestricted | undefined = {} as OnlineMeetingRestricted) : void {
        writer.writeEnumValue<OnlineMeetingContentSharingDisabledReason[]>("contentSharingDisabled", onlineMeetingRestricted.contentSharingDisabled);
        writer.writeStringValue("@odata.type", onlineMeetingRestricted.odataType);
        writer.writeEnumValue<OnlineMeetingVideoDisabledReason[]>("videoDisabled", onlineMeetingRestricted.videoDisabled);
        writer.writeAdditionalData(onlineMeetingRestricted.additionalData);
}
// tslint:enable
// eslint-enable
