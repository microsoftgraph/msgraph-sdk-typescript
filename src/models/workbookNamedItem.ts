// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from './json';
import { createWorkbookWorksheetFromDiscriminatorValue, serializeWorkbookWorksheet, type WorkbookWorksheet } from './workbookWorksheet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookNamedItemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookNamedItem;
}
export function deserializeIntoWorkbookNamedItem(workbookNamedItem: WorkbookNamedItem | undefined = {} as WorkbookNamedItem) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookNamedItem),
        "comment": n => { workbookNamedItem.comment = n.getStringValue(); },
        "name": n => { workbookNamedItem.name = n.getStringValue(); },
        "scope": n => { workbookNamedItem.scope = n.getStringValue(); },
        "type": n => { workbookNamedItem.type = n.getStringValue(); },
        "value": n => { workbookNamedItem.value = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
        "visible": n => { workbookNamedItem.visible = n.getBooleanValue(); },
        "worksheet": n => { workbookNamedItem.worksheet = n.getObjectValue<WorkbookWorksheet>(createWorkbookWorksheetFromDiscriminatorValue); },
    }
}
export function serializeWorkbookNamedItem(writer: SerializationWriter, workbookNamedItem: WorkbookNamedItem | undefined = {} as WorkbookNamedItem) : void {
    serializeEntity(writer, workbookNamedItem)
    writer.writeStringValue("comment", workbookNamedItem.comment);
    writer.writeStringValue("name", workbookNamedItem.name);
    writer.writeStringValue("scope", workbookNamedItem.scope);
    writer.writeStringValue("type", workbookNamedItem.type);
    writer.writeObjectValue<Json>("value", workbookNamedItem.value, serializeJson);
    writer.writeBooleanValue("visible", workbookNamedItem.visible);
    writer.writeObjectValue<WorkbookWorksheet>("worksheet", workbookNamedItem.worksheet, serializeWorkbookWorksheet);
}
export interface WorkbookNamedItem extends Entity, Parsable {
    /**
     * Represents the comment associated with this name.
     */
    comment?: string;
    /**
     * The name of the object. Read-only.
     */
    name?: string;
    /**
     * Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.
     */
    scope?: string;
    /**
     * Indicates what type of reference is associated with the name. The possible values are: String, Integer, Double, Boolean, Range. Read-only.
     */
    type?: string;
    /**
     * Represents the formula that the name is defined to refer to. for example, =Sheet14!$B$2:$H$12, =4.75, etc. Read-only.
     */
    value?: Json;
    /**
     * Specifies whether the object is visible or not.
     */
    visible?: boolean;
    /**
     * Returns the worksheet on which the named item is scoped to. Available only if the item is scoped to the worksheet. Read-only.
     */
    worksheet?: WorkbookWorksheet;
}
// tslint:enable
// eslint-enable
