// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createOnenoteOperationErrorFromDiscriminatorValue, serializeOnenoteOperationError, type OnenoteOperationError } from './onenoteOperationError';
import { deserializeIntoOperation, serializeOperation, type Operation } from './operation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnenoteOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOnenoteOperation;
}
export function deserializeIntoOnenoteOperation(onenoteOperation: OnenoteOperation | undefined = {} as OnenoteOperation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoOperation(onenoteOperation),
        "error": n => { onenoteOperation.errorEscaped = n.getObjectValue<OnenoteOperationError>(createOnenoteOperationErrorFromDiscriminatorValue); },
        "percentComplete": n => { onenoteOperation.percentComplete = n.getStringValue(); },
        "resourceId": n => { onenoteOperation.resourceId = n.getStringValue(); },
        "resourceLocation": n => { onenoteOperation.resourceLocation = n.getStringValue(); },
    }
}
export interface OnenoteOperation extends Operation, Parsable {
    /**
     * The error returned by the operation.
     */
    errorEscaped?: OnenoteOperationError;
    /**
     * The operation percent complete if the operation is still in running status.
     */
    percentComplete?: string;
    /**
     * The resource id.
     */
    resourceId?: string;
    /**
     * The resource URI for the object. For example, the resource URI for a copied page or section.
     */
    resourceLocation?: string;
}
export function serializeOnenoteOperation(writer: SerializationWriter, onenoteOperation: OnenoteOperation | undefined = {} as OnenoteOperation) : void {
        serializeOperation(writer, onenoteOperation)
        writer.writeObjectValue<OnenoteOperationError>("error", onenoteOperation.errorEscaped, serializeOnenoteOperationError);
        writer.writeStringValue("percentComplete", onenoteOperation.percentComplete);
        writer.writeStringValue("resourceId", onenoteOperation.resourceId);
        writer.writeStringValue("resourceLocation", onenoteOperation.resourceLocation);
}
// tslint:enable
// eslint-enable
