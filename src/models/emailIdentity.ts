// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoIdentity, serializeIdentity, type Identity } from './identity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEmailIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEmailIdentity;
}
export function deserializeIntoEmailIdentity(emailIdentity: EmailIdentity | undefined = {} as EmailIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(emailIdentity),
        "email": n => { emailIdentity.email = n.getStringValue(); },
    }
}
export interface EmailIdentity extends Identity, Parsable {
    /**
     * Email address of the user.
     */
    email?: string;
}
export function serializeEmailIdentity(writer: SerializationWriter, emailIdentity: EmailIdentity | undefined = {} as EmailIdentity) : void {
    serializeIdentity(writer, emailIdentity)
    writer.writeStringValue("email", emailIdentity.email);
}
// tslint:enable
// eslint-enable
