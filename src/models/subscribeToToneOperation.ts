import { deserializeIntoCommsOperation, serializeCommsOperation, type CommsOperation } from './commsOperation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createSubscribeToToneOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSubscribeToToneOperation;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoSubscribeToToneOperation(subscribeToToneOperation: SubscribeToToneOperation | undefined = {} as SubscribeToToneOperation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCommsOperation(subscribeToToneOperation),
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeSubscribeToToneOperation(writer: SerializationWriter, subscribeToToneOperation: SubscribeToToneOperation | undefined = {} as SubscribeToToneOperation) : void {
        serializeCommsOperation(writer, subscribeToToneOperation)
}
export interface SubscribeToToneOperation extends CommsOperation, Parsable {
}
