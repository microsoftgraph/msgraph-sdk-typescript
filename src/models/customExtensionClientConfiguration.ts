// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createCustomExtensionClientConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCustomExtensionClientConfiguration;
}
export interface CustomExtensionClientConfiguration extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The max duration in milliseconds that Microsoft Entra ID waits for a response from the external app before it shuts down the connection. The valid range is between 200 and 2000 milliseconds. Default duration is 1000.
     */
    timeoutInMilliseconds?: number;
}
export function deserializeIntoCustomExtensionClientConfiguration(customExtensionClientConfiguration: CustomExtensionClientConfiguration | undefined = {} as CustomExtensionClientConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { customExtensionClientConfiguration.odataType = n.getStringValue(); },
        "timeoutInMilliseconds": n => { customExtensionClientConfiguration.timeoutInMilliseconds = n.getNumberValue(); },
    }
}
export function serializeCustomExtensionClientConfiguration(writer: SerializationWriter, customExtensionClientConfiguration: CustomExtensionClientConfiguration | undefined = {} as CustomExtensionClientConfiguration) : void {
    writer.writeStringValue("@odata.type", customExtensionClientConfiguration.odataType);
    writer.writeNumberValue("timeoutInMilliseconds", customExtensionClientConfiguration.timeoutInMilliseconds);
    writer.writeAdditionalData(customExtensionClientConfiguration.additionalData);
}
// tslint:enable
// eslint-enable
