// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoScheduleChangeRequest, serializeScheduleChangeRequest, type ScheduleChangeRequest } from './scheduleChangeRequest';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTimeOffRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTimeOffRequest;
}
export function deserializeIntoTimeOffRequest(timeOffRequest: TimeOffRequest | undefined = {} as TimeOffRequest) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoScheduleChangeRequest(timeOffRequest),
        "endDateTime": n => { timeOffRequest.endDateTime = n.getDateValue(); },
        "startDateTime": n => { timeOffRequest.startDateTime = n.getDateValue(); },
        "timeOffReasonId": n => { timeOffRequest.timeOffReasonId = n.getStringValue(); },
    }
}
export function serializeTimeOffRequest(writer: SerializationWriter, timeOffRequest: TimeOffRequest | undefined = {} as TimeOffRequest) : void {
    serializeScheduleChangeRequest(writer, timeOffRequest)
    writer.writeDateValue("endDateTime", timeOffRequest.endDateTime);
    writer.writeDateValue("startDateTime", timeOffRequest.startDateTime);
    writer.writeStringValue("timeOffReasonId", timeOffRequest.timeOffReasonId);
}
export interface TimeOffRequest extends Parsable, ScheduleChangeRequest {
    /**
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
     */
    endDateTime?: Date;
    /**
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
     */
    startDateTime?: Date;
    /**
     * The reason for the time off.
     */
    timeOffReasonId?: string;
}
// tslint:enable
// eslint-enable
