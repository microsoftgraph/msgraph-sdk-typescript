// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoSubjectSet, serializeSubjectSet, type SubjectSet } from './subjectSet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSingleServicePrincipalFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSingleServicePrincipal;
}
export function deserializeIntoSingleServicePrincipal(singleServicePrincipal: SingleServicePrincipal | undefined = {} as SingleServicePrincipal) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSubjectSet(singleServicePrincipal),
        "description": n => { singleServicePrincipal.description = n.getStringValue(); },
        "servicePrincipalId": n => { singleServicePrincipal.servicePrincipalId = n.getStringValue(); },
    }
}
export function serializeSingleServicePrincipal(writer: SerializationWriter, singleServicePrincipal: SingleServicePrincipal | undefined = {} as SingleServicePrincipal) : void {
        serializeSubjectSet(writer, singleServicePrincipal)
        writer.writeStringValue("description", singleServicePrincipal.description);
        writer.writeStringValue("servicePrincipalId", singleServicePrincipal.servicePrincipalId);
}
export interface SingleServicePrincipal extends Parsable, SubjectSet {
    /**
     * Description of this service principal.
     */
    description?: string;
    /**
     * ID of the servicePrincipal.
     */
    servicePrincipalId?: string;
}
// tslint:enable
// eslint-enable
