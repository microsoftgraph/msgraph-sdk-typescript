import { type AddIn } from './addIn';
import { type AppManagementPolicy } from './appManagementPolicy';
import { type AppRole } from './appRole';
import { type AppRoleAssignment } from './appRoleAssignment';
import { type ClaimsMappingPolicy } from './claimsMappingPolicy';
import { type CustomSecurityAttributeValue } from './customSecurityAttributeValue';
import { type DelegatedPermissionClassification } from './delegatedPermissionClassification';
import { type DirectoryObject } from './directoryObject';
import { type Endpoint } from './endpoint';
import { type FederatedIdentityCredential } from './federatedIdentityCredential';
import { type HomeRealmDiscoveryPolicy } from './homeRealmDiscoveryPolicy';
import { type InformationalUrl } from './informationalUrl';
import { type KeyCredential } from './keyCredential';
import { type OAuth2PermissionGrant } from './oAuth2PermissionGrant';
import { type PasswordCredential } from './passwordCredential';
import { type PermissionScope } from './permissionScope';
import { type ResourceSpecificPermission } from './resourceSpecificPermission';
import { type SamlSingleSignOnSettings } from './samlSingleSignOnSettings';
import { serializeAddIn } from './serializeAddIn';
import { serializeAppManagementPolicy } from './serializeAppManagementPolicy';
import { serializeAppRole } from './serializeAppRole';
import { serializeAppRoleAssignment } from './serializeAppRoleAssignment';
import { serializeClaimsMappingPolicy } from './serializeClaimsMappingPolicy';
import { serializeCustomSecurityAttributeValue } from './serializeCustomSecurityAttributeValue';
import { serializeDelegatedPermissionClassification } from './serializeDelegatedPermissionClassification';
import { serializeDirectoryObject } from './serializeDirectoryObject';
import { serializeEndpoint } from './serializeEndpoint';
import { serializeFederatedIdentityCredential } from './serializeFederatedIdentityCredential';
import { serializeHomeRealmDiscoveryPolicy } from './serializeHomeRealmDiscoveryPolicy';
import { serializeInformationalUrl } from './serializeInformationalUrl';
import { serializeKeyCredential } from './serializeKeyCredential';
import { serializeOAuth2PermissionGrant } from './serializeOAuth2PermissionGrant';
import { serializePasswordCredential } from './serializePasswordCredential';
import { serializePermissionScope } from './serializePermissionScope';
import { serializeResourceSpecificPermission } from './serializeResourceSpecificPermission';
import { serializeSamlSingleSignOnSettings } from './serializeSamlSingleSignOnSettings';
import { serializeSynchronization } from './serializeSynchronization';
import { serializeTokenIssuancePolicy } from './serializeTokenIssuancePolicy';
import { serializeTokenLifetimePolicy } from './serializeTokenLifetimePolicy';
import { serializeVerifiedPublisher } from './serializeVerifiedPublisher';
import { type ServicePrincipal } from './servicePrincipal';
import { type Synchronization } from './synchronization';
import { type TokenIssuancePolicy } from './tokenIssuancePolicy';
import { type TokenLifetimePolicy } from './tokenLifetimePolicy';
import { type VerifiedPublisher } from './verifiedPublisher';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { Guid } from 'guid-typescript';

export function serializeServicePrincipal(writer: SerializationWriter, servicePrincipal: ServicePrincipal | undefined = {} as ServicePrincipal) : void {
        serializeDirectoryObject(writer, servicePrincipal)
        writer.writeBooleanValue("accountEnabled", servicePrincipal.accountEnabled);
        writer.writeCollectionOfObjectValues<AddIn>("addIns", servicePrincipal.addIns, serializeAddIn);
        writer.writeCollectionOfPrimitiveValues<string>("alternativeNames", servicePrincipal.alternativeNames);
        writer.writeStringValue("appDescription", servicePrincipal.appDescription);
        writer.writeStringValue("appDisplayName", servicePrincipal.appDisplayName);
        writer.writeStringValue("appId", servicePrincipal.appId);
        writer.writeStringValue("applicationTemplateId", servicePrincipal.applicationTemplateId);
        writer.writeCollectionOfObjectValues<AppManagementPolicy>("appManagementPolicies", servicePrincipal.appManagementPolicies, serializeAppManagementPolicy);
        writer.writeGuidValue("appOwnerOrganizationId", servicePrincipal.appOwnerOrganizationId);
        writer.writeCollectionOfObjectValues<AppRoleAssignment>("appRoleAssignedTo", servicePrincipal.appRoleAssignedTo, serializeAppRoleAssignment);
        writer.writeBooleanValue("appRoleAssignmentRequired", servicePrincipal.appRoleAssignmentRequired);
        writer.writeCollectionOfObjectValues<AppRoleAssignment>("appRoleAssignments", servicePrincipal.appRoleAssignments, serializeAppRoleAssignment);
        writer.writeCollectionOfObjectValues<AppRole>("appRoles", servicePrincipal.appRoles, serializeAppRole);
        writer.writeCollectionOfObjectValues<ClaimsMappingPolicy>("claimsMappingPolicies", servicePrincipal.claimsMappingPolicies, serializeClaimsMappingPolicy);
        writer.writeCollectionOfObjectValues<DirectoryObject>("createdObjects", servicePrincipal.createdObjects, serializeDirectoryObject);
        writer.writeObjectValue<CustomSecurityAttributeValue>("customSecurityAttributes", servicePrincipal.customSecurityAttributes, serializeCustomSecurityAttributeValue);
        writer.writeCollectionOfObjectValues<DelegatedPermissionClassification>("delegatedPermissionClassifications", servicePrincipal.delegatedPermissionClassifications, serializeDelegatedPermissionClassification);
        writer.writeStringValue("description", servicePrincipal.description);
        writer.writeStringValue("disabledByMicrosoftStatus", servicePrincipal.disabledByMicrosoftStatus);
        writer.writeStringValue("displayName", servicePrincipal.displayName);
        writer.writeCollectionOfObjectValues<Endpoint>("endpoints", servicePrincipal.endpoints, serializeEndpoint);
        writer.writeCollectionOfObjectValues<FederatedIdentityCredential>("federatedIdentityCredentials", servicePrincipal.federatedIdentityCredentials, serializeFederatedIdentityCredential);
        writer.writeStringValue("homepage", servicePrincipal.homepage);
        writer.writeCollectionOfObjectValues<HomeRealmDiscoveryPolicy>("homeRealmDiscoveryPolicies", servicePrincipal.homeRealmDiscoveryPolicies, serializeHomeRealmDiscoveryPolicy);
        writer.writeObjectValue<InformationalUrl>("info", servicePrincipal.info, serializeInformationalUrl);
        writer.writeCollectionOfObjectValues<KeyCredential>("keyCredentials", servicePrincipal.keyCredentials, serializeKeyCredential);
        writer.writeStringValue("loginUrl", servicePrincipal.loginUrl);
        writer.writeStringValue("logoutUrl", servicePrincipal.logoutUrl);
        writer.writeCollectionOfObjectValues<DirectoryObject>("memberOf", servicePrincipal.memberOf, serializeDirectoryObject);
        writer.writeStringValue("notes", servicePrincipal.notes);
        writer.writeCollectionOfPrimitiveValues<string>("notificationEmailAddresses", servicePrincipal.notificationEmailAddresses);
        writer.writeCollectionOfObjectValues<OAuth2PermissionGrant>("oauth2PermissionGrants", servicePrincipal.oauth2PermissionGrants, serializeOAuth2PermissionGrant);
        writer.writeCollectionOfObjectValues<PermissionScope>("oauth2PermissionScopes", servicePrincipal.oauth2PermissionScopes, serializePermissionScope);
        writer.writeCollectionOfObjectValues<DirectoryObject>("ownedObjects", servicePrincipal.ownedObjects, serializeDirectoryObject);
        writer.writeCollectionOfObjectValues<DirectoryObject>("owners", servicePrincipal.owners, serializeDirectoryObject);
        writer.writeCollectionOfObjectValues<PasswordCredential>("passwordCredentials", servicePrincipal.passwordCredentials, serializePasswordCredential);
        writer.writeStringValue("preferredSingleSignOnMode", servicePrincipal.preferredSingleSignOnMode);
        writer.writeStringValue("preferredTokenSigningKeyThumbprint", servicePrincipal.preferredTokenSigningKeyThumbprint);
        writer.writeCollectionOfPrimitiveValues<string>("replyUrls", servicePrincipal.replyUrls);
        writer.writeCollectionOfObjectValues<ResourceSpecificPermission>("resourceSpecificApplicationPermissions", servicePrincipal.resourceSpecificApplicationPermissions, serializeResourceSpecificPermission);
        writer.writeObjectValue<SamlSingleSignOnSettings>("samlSingleSignOnSettings", servicePrincipal.samlSingleSignOnSettings, serializeSamlSingleSignOnSettings);
        writer.writeCollectionOfPrimitiveValues<string>("servicePrincipalNames", servicePrincipal.servicePrincipalNames);
        writer.writeStringValue("servicePrincipalType", servicePrincipal.servicePrincipalType);
        writer.writeStringValue("signInAudience", servicePrincipal.signInAudience);
        writer.writeObjectValue<Synchronization>("synchronization", servicePrincipal.synchronization, serializeSynchronization);
        writer.writeCollectionOfPrimitiveValues<string>("tags", servicePrincipal.tags);
        writer.writeGuidValue("tokenEncryptionKeyId", servicePrincipal.tokenEncryptionKeyId);
        writer.writeCollectionOfObjectValues<TokenIssuancePolicy>("tokenIssuancePolicies", servicePrincipal.tokenIssuancePolicies, serializeTokenIssuancePolicy);
        writer.writeCollectionOfObjectValues<TokenLifetimePolicy>("tokenLifetimePolicies", servicePrincipal.tokenLifetimePolicies, serializeTokenLifetimePolicy);
        writer.writeCollectionOfObjectValues<DirectoryObject>("transitiveMemberOf", servicePrincipal.transitiveMemberOf, serializeDirectoryObject);
        writer.writeObjectValue<VerifiedPublisher>("verifiedPublisher", servicePrincipal.verifiedPublisher, serializeVerifiedPublisher);
}
