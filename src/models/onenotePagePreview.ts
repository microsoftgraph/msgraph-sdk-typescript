// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createOnenotePagePreviewLinksFromDiscriminatorValue, serializeOnenotePagePreviewLinks, type OnenotePagePreviewLinks } from './onenotePagePreviewLinks';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnenotePagePreviewFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOnenotePagePreview;
}
export function deserializeIntoOnenotePagePreview(onenotePagePreview: OnenotePagePreview | undefined = {} as OnenotePagePreview) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { onenotePagePreview.links = n.getObjectValue<OnenotePagePreviewLinks>(createOnenotePagePreviewLinksFromDiscriminatorValue); },
        "@odata.type": n => { onenotePagePreview.odataType = n.getStringValue(); },
        "previewText": n => { onenotePagePreview.previewText = n.getStringValue(); },
    }
}
export interface OnenotePagePreview extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The links property
     */
    links?: OnenotePagePreviewLinks;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The previewText property
     */
    previewText?: string;
}
export function serializeOnenotePagePreview(writer: SerializationWriter, onenotePagePreview: OnenotePagePreview | undefined = {} as OnenotePagePreview) : void {
        writer.writeObjectValue<OnenotePagePreviewLinks>("links", onenotePagePreview.links, serializeOnenotePagePreviewLinks);
        writer.writeStringValue("@odata.type", onenotePagePreview.odataType);
        writer.writeStringValue("previewText", onenotePagePreview.previewText);
        writer.writeAdditionalData(onenotePagePreview.additionalData);
}
// tslint:enable
// eslint-enable
