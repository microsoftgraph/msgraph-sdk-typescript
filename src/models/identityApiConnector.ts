// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createApiAuthenticationConfigurationBaseFromDiscriminatorValue, serializeApiAuthenticationConfigurationBase, type ApiAuthenticationConfigurationBase } from './apiAuthenticationConfigurationBase';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIdentityApiConnectorFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIdentityApiConnector;
}
export function deserializeIntoIdentityApiConnector(identityApiConnector: IdentityApiConnector | undefined = {} as IdentityApiConnector) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(identityApiConnector),
        "authenticationConfiguration": n => { identityApiConnector.authenticationConfiguration = n.getObjectValue<ApiAuthenticationConfigurationBase>(createApiAuthenticationConfigurationBaseFromDiscriminatorValue); },
        "displayName": n => { identityApiConnector.displayName = n.getStringValue(); },
        "targetUrl": n => { identityApiConnector.targetUrl = n.getStringValue(); },
    }
}
export interface IdentityApiConnector extends Entity, Parsable {
    /**
     * The object which describes the authentication configuration details for calling the API. Basic and PKCS 12 client certificate are supported.
     */
    authenticationConfiguration?: ApiAuthenticationConfigurationBase;
    /**
     * The name of the API connector.
     */
    displayName?: string;
    /**
     * The URL of the API endpoint to call.
     */
    targetUrl?: string;
}
export function serializeIdentityApiConnector(writer: SerializationWriter, identityApiConnector: IdentityApiConnector | undefined = {} as IdentityApiConnector) : void {
        serializeEntity(writer, identityApiConnector)
        writer.writeObjectValue<ApiAuthenticationConfigurationBase>("authenticationConfiguration", identityApiConnector.authenticationConfiguration, serializeApiAuthenticationConfigurationBase);
        writer.writeStringValue("displayName", identityApiConnector.displayName);
        writer.writeStringValue("targetUrl", identityApiConnector.targetUrl);
}
// tslint:enable
// eslint-enable
