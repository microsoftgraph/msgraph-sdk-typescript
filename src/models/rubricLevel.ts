// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createEducationAssignmentGradeTypeFromDiscriminatorValue, serializeEducationAssignmentGradeType, type EducationAssignmentGradeType } from './educationAssignmentGradeType';
import { createEducationItemBodyFromDiscriminatorValue, serializeEducationItemBody, type EducationItemBody } from './educationItemBody';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRubricLevelFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRubricLevel;
}
export function deserializeIntoRubricLevel(rubricLevel: RubricLevel | undefined = {} as RubricLevel) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { rubricLevel.description = n.getObjectValue<EducationItemBody>(createEducationItemBodyFromDiscriminatorValue); },
        "displayName": n => { rubricLevel.displayName = n.getStringValue(); },
        "grading": n => { rubricLevel.grading = n.getObjectValue<EducationAssignmentGradeType>(createEducationAssignmentGradeTypeFromDiscriminatorValue); },
        "levelId": n => { rubricLevel.levelId = n.getStringValue(); },
        "@odata.type": n => { rubricLevel.odataType = n.getStringValue(); },
    }
}
export interface RubricLevel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The description of this rubric level.
     */
    description?: EducationItemBody;
    /**
     * The name of this rubric level.
     */
    displayName?: string;
    /**
     * Null if this is a no-points rubric; educationAssignmentPointsGradeType if it's a points rubric.
     */
    grading?: EducationAssignmentGradeType;
    /**
     * The ID of this resource.
     */
    levelId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeRubricLevel(writer: SerializationWriter, rubricLevel: RubricLevel | undefined = {} as RubricLevel) : void {
        writer.writeObjectValue<EducationItemBody>("description", rubricLevel.description, serializeEducationItemBody);
        writer.writeStringValue("displayName", rubricLevel.displayName);
        writer.writeObjectValue<EducationAssignmentGradeType>("grading", rubricLevel.grading, serializeEducationAssignmentGradeType);
        writer.writeStringValue("levelId", rubricLevel.levelId);
        writer.writeStringValue("@odata.type", rubricLevel.odataType);
        writer.writeAdditionalData(rubricLevel.additionalData);
}
// tslint:enable
// eslint-enable
