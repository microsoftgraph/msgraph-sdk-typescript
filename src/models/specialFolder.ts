// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSpecialFolderFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSpecialFolder;
}
export function deserializeIntoSpecialFolder(specialFolder: SpecialFolder | undefined = {} as SpecialFolder) : Record<string, (node: ParseNode) => void> {
    return {
        "name": n => { specialFolder.name = n.getStringValue(); },
        "@odata.type": n => { specialFolder.odataType = n.getStringValue(); },
    }
}
export function serializeSpecialFolder(writer: SerializationWriter, specialFolder: SpecialFolder | undefined = {} as SpecialFolder) : void {
        writer.writeStringValue("name", specialFolder.name);
        writer.writeStringValue("@odata.type", specialFolder.odataType);
        writer.writeAdditionalData(specialFolder.additionalData);
}
export interface SpecialFolder extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The unique identifier for this item in the /drive/special collection
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
