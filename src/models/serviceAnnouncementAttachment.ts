// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createServiceAnnouncementAttachmentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoServiceAnnouncementAttachment;
}
export function deserializeIntoServiceAnnouncementAttachment(serviceAnnouncementAttachment: ServiceAnnouncementAttachment | undefined = {} as ServiceAnnouncementAttachment) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(serviceAnnouncementAttachment),
        "content": n => { serviceAnnouncementAttachment.content = n.getStringValue(); },
        "contentType": n => { serviceAnnouncementAttachment.contentType = n.getStringValue(); },
        "lastModifiedDateTime": n => { serviceAnnouncementAttachment.lastModifiedDateTime = n.getDateValue(); },
        "name": n => { serviceAnnouncementAttachment.name = n.getStringValue(); },
        "size": n => { serviceAnnouncementAttachment.size = n.getNumberValue(); },
    }
}
export function serializeServiceAnnouncementAttachment(writer: SerializationWriter, serviceAnnouncementAttachment: ServiceAnnouncementAttachment | undefined = {} as ServiceAnnouncementAttachment) : void {
    serializeEntity(writer, serviceAnnouncementAttachment)
    writer.writeStringValue("content", serviceAnnouncementAttachment.content);
    writer.writeStringValue("contentType", serviceAnnouncementAttachment.contentType);
    writer.writeDateValue("lastModifiedDateTime", serviceAnnouncementAttachment.lastModifiedDateTime);
    writer.writeStringValue("name", serviceAnnouncementAttachment.name);
    writer.writeNumberValue("size", serviceAnnouncementAttachment.size);
}
export interface ServiceAnnouncementAttachment extends Entity, Parsable {
    /**
     * The attachment content.
     */
    content?: string;
    /**
     * The contentType property
     */
    contentType?: string;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date;
    /**
     * The name property
     */
    name?: string;
    /**
     * The size property
     */
    size?: number;
}
// tslint:enable
// eslint-enable
