// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceLocalCredentialFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceLocalCredential;
}
export function deserializeIntoDeviceLocalCredential(deviceLocalCredential: DeviceLocalCredential | undefined = {} as DeviceLocalCredential) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceLocalCredential),
        "accountName": n => { deviceLocalCredential.accountName = n.getStringValue(); },
        "accountSid": n => { deviceLocalCredential.accountSid = n.getStringValue(); },
        "backupDateTime": n => { deviceLocalCredential.backupDateTime = n.getDateValue(); },
        "passwordBase64": n => { deviceLocalCredential.passwordBase64 = n.getStringValue(); },
    }
}
export interface DeviceLocalCredential extends Entity, Parsable {
    /**
     * The name of the local admin account for which LAPS is enabled.
     */
    accountName?: string;
    /**
     * The SID of the local admin account for which LAPS is enabled.
     */
    accountSid?: string;
    /**
     * When the local administrator account credential for the device object was backed up to Azure Active Directory.
     */
    backupDateTime?: Date;
    /**
     * The password for the local administrator account that is backed up to Azure Active Directory and returned as a Base64 encoded value.
     */
    passwordBase64?: string;
}
export function serializeDeviceLocalCredential(writer: SerializationWriter, deviceLocalCredential: DeviceLocalCredential | undefined = {} as DeviceLocalCredential) : void {
        serializeEntity(writer, deviceLocalCredential)
        writer.writeStringValue("accountName", deviceLocalCredential.accountName);
        writer.writeStringValue("accountSid", deviceLocalCredential.accountSid);
        writer.writeDateValue("backupDateTime", deviceLocalCredential.backupDateTime);
        writer.writeStringValue("passwordBase64", deviceLocalCredential.passwordBase64);
}
// tslint:enable
// eslint-enable
