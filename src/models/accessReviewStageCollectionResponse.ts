import { createAccessReviewStageFromDiscriminatorValue, serializeAccessReviewStage, type AccessReviewStage } from './accessReviewStage';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessReviewStageCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AccessReviewStage[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAccessReviewStageCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessReviewStageCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAccessReviewStageCollectionResponse(accessReviewStageCollectionResponse: AccessReviewStageCollectionResponse | undefined = {} as AccessReviewStageCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(accessReviewStageCollectionResponse),
        "value": n => { accessReviewStageCollectionResponse.value = n.getCollectionOfObjectValues<AccessReviewStage>(createAccessReviewStageFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAccessReviewStageCollectionResponse(writer: SerializationWriter, accessReviewStageCollectionResponse: AccessReviewStageCollectionResponse | undefined = {} as AccessReviewStageCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, accessReviewStageCollectionResponse)
        writer.writeCollectionOfObjectValues<AccessReviewStage>("value", accessReviewStageCollectionResponse.value, );
}
