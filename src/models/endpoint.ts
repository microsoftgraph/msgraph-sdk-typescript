// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDirectoryObject, serializeDirectoryObject, type DirectoryObject } from './directoryObject';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEndpointFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEndpoint;
}
export function deserializeIntoEndpoint(endpoint: Endpoint | undefined = {} as Endpoint) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObject(endpoint),
        "capability": n => { endpoint.capability = n.getStringValue(); },
        "providerId": n => { endpoint.providerId = n.getStringValue(); },
        "providerName": n => { endpoint.providerName = n.getStringValue(); },
        "providerResourceId": n => { endpoint.providerResourceId = n.getStringValue(); },
        "uri": n => { endpoint.uri = n.getStringValue(); },
    }
}
export interface Endpoint extends DirectoryObject, Parsable {
    /**
     * The capability property
     */
    capability?: string;
    /**
     * The providerId property
     */
    providerId?: string;
    /**
     * The providerName property
     */
    providerName?: string;
    /**
     * The providerResourceId property
     */
    providerResourceId?: string;
    /**
     * The uri property
     */
    uri?: string;
}
export function serializeEndpoint(writer: SerializationWriter, endpoint: Endpoint | undefined = {} as Endpoint) : void {
    serializeDirectoryObject(writer, endpoint)
    writer.writeStringValue("capability", endpoint.capability);
    writer.writeStringValue("providerId", endpoint.providerId);
    writer.writeStringValue("providerName", endpoint.providerName);
    writer.writeStringValue("providerResourceId", endpoint.providerResourceId);
    writer.writeStringValue("uri", endpoint.uri);
}
// tslint:enable
// eslint-enable
