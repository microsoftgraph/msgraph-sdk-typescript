import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createMobileAppIdentifierFromDiscriminatorValue, serializeMobileAppIdentifier, type MobileAppIdentifier } from './mobileAppIdentifier';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createManagedMobileAppFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoManagedMobileApp;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoManagedMobileApp(managedMobileApp: ManagedMobileApp | undefined = {} as ManagedMobileApp) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedMobileApp),
        "mobileAppIdentifier": n => { managedMobileApp.mobileAppIdentifier = n.getObjectValue<MobileAppIdentifier>(createMobileAppIdentifierFromDiscriminatorValue); },
        "version": n => { managedMobileApp.version = n.getStringValue(); },
    }
}
export interface ManagedMobileApp extends Entity, Parsable {
    /**
     * The identifier for an app with it's operating system type.
     */
    mobileAppIdentifier?: MobileAppIdentifier;
    /**
     * Version of the entity.
     */
    version?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeManagedMobileApp(writer: SerializationWriter, managedMobileApp: ManagedMobileApp | undefined = {} as ManagedMobileApp) : void {
        serializeEntity(writer, managedMobileApp)
        writer.writeObjectValue<MobileAppIdentifier>("mobileAppIdentifier", managedMobileApp.mobileAppIdentifier, );
        writer.writeStringValue("version", managedMobileApp.version);
}
