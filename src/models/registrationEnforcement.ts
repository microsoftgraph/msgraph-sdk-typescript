// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAuthenticationMethodsRegistrationCampaignFromDiscriminatorValue, serializeAuthenticationMethodsRegistrationCampaign, type AuthenticationMethodsRegistrationCampaign } from './authenticationMethodsRegistrationCampaign';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRegistrationEnforcementFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRegistrationEnforcement;
}
export function deserializeIntoRegistrationEnforcement(registrationEnforcement: RegistrationEnforcement | undefined = {} as RegistrationEnforcement) : Record<string, (node: ParseNode) => void> {
    return {
        "authenticationMethodsRegistrationCampaign": n => { registrationEnforcement.authenticationMethodsRegistrationCampaign = n.getObjectValue<AuthenticationMethodsRegistrationCampaign>(createAuthenticationMethodsRegistrationCampaignFromDiscriminatorValue); },
        "@odata.type": n => { registrationEnforcement.odataType = n.getStringValue(); },
    }
}
export interface RegistrationEnforcement extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Run campaigns to remind users to set up targeted authentication methods.
     */
    authenticationMethodsRegistrationCampaign?: AuthenticationMethodsRegistrationCampaign;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeRegistrationEnforcement(writer: SerializationWriter, registrationEnforcement: RegistrationEnforcement | undefined = {} as RegistrationEnforcement) : void {
    writer.writeObjectValue<AuthenticationMethodsRegistrationCampaign>("authenticationMethodsRegistrationCampaign", registrationEnforcement.authenticationMethodsRegistrationCampaign, serializeAuthenticationMethodsRegistrationCampaign);
    writer.writeStringValue("@odata.type", registrationEnforcement.odataType);
    writer.writeAdditionalData(registrationEnforcement.additionalData);
}
// tslint:enable
// eslint-enable
