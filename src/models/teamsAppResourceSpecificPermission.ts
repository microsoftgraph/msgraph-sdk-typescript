// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { TeamsAppResourceSpecificPermissionType } from './teamsAppResourceSpecificPermissionType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamsAppResourceSpecificPermissionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamsAppResourceSpecificPermission;
}
export function deserializeIntoTeamsAppResourceSpecificPermission(teamsAppResourceSpecificPermission: TeamsAppResourceSpecificPermission | undefined = {} as TeamsAppResourceSpecificPermission) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { teamsAppResourceSpecificPermission.odataType = n.getStringValue(); },
        "permissionType": n => { teamsAppResourceSpecificPermission.permissionType = n.getEnumValue<TeamsAppResourceSpecificPermissionType>(TeamsAppResourceSpecificPermissionType); },
        "permissionValue": n => { teamsAppResourceSpecificPermission.permissionValue = n.getStringValue(); },
    }
}
export function serializeTeamsAppResourceSpecificPermission(writer: SerializationWriter, teamsAppResourceSpecificPermission: TeamsAppResourceSpecificPermission | undefined = {} as TeamsAppResourceSpecificPermission) : void {
        writer.writeStringValue("@odata.type", teamsAppResourceSpecificPermission.odataType);
        writer.writeEnumValue<TeamsAppResourceSpecificPermissionType>("permissionType", teamsAppResourceSpecificPermission.permissionType);
        writer.writeStringValue("permissionValue", teamsAppResourceSpecificPermission.permissionValue);
        writer.writeAdditionalData(teamsAppResourceSpecificPermission.additionalData);
}
export interface TeamsAppResourceSpecificPermission extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The type of resource-specific permission.
     */
    permissionType?: TeamsAppResourceSpecificPermissionType;
    /**
     * The name of the resource-specific permission.
     */
    permissionValue?: string;
}
// tslint:enable
// eslint-enable
