// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIdleSessionSignOutFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIdleSessionSignOut;
}
export function deserializeIntoIdleSessionSignOut(idleSessionSignOut: IdleSessionSignOut | undefined = {} as IdleSessionSignOut) : Record<string, (node: ParseNode) => void> {
    return {
        "isEnabled": n => { idleSessionSignOut.isEnabled = n.getBooleanValue(); },
        "@odata.type": n => { idleSessionSignOut.odataType = n.getStringValue(); },
        "signOutAfterInSeconds": n => { idleSessionSignOut.signOutAfterInSeconds = n.getNumberValue(); },
        "warnAfterInSeconds": n => { idleSessionSignOut.warnAfterInSeconds = n.getNumberValue(); },
    }
}
export interface IdleSessionSignOut extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Indicates whether the idle session sign-out policy is enabled.
     */
    isEnabled?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Number of seconds of inactivity after which a user is signed out.
     */
    signOutAfterInSeconds?: number;
    /**
     * Number of seconds of inactivity after which a user is notified that they'll be signed out.
     */
    warnAfterInSeconds?: number;
}
export function serializeIdleSessionSignOut(writer: SerializationWriter, idleSessionSignOut: IdleSessionSignOut | undefined = {} as IdleSessionSignOut) : void {
    writer.writeBooleanValue("isEnabled", idleSessionSignOut.isEnabled);
    writer.writeStringValue("@odata.type", idleSessionSignOut.odataType);
    writer.writeNumberValue("signOutAfterInSeconds", idleSessionSignOut.signOutAfterInSeconds);
    writer.writeNumberValue("warnAfterInSeconds", idleSessionSignOut.warnAfterInSeconds);
    writer.writeAdditionalData(idleSessionSignOut.additionalData);
}
// tslint:enable
// eslint-enable
