// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAttributeMappingSourceFromDiscriminatorValue, serializeAttributeMappingSource, type AttributeMappingSource } from './attributeMappingSource';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createStringKeyAttributeMappingSourceValuePairFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoStringKeyAttributeMappingSourceValuePair;
}
export function deserializeIntoStringKeyAttributeMappingSourceValuePair(stringKeyAttributeMappingSourceValuePair: StringKeyAttributeMappingSourceValuePair | undefined = {} as StringKeyAttributeMappingSourceValuePair) : Record<string, (node: ParseNode) => void> {
    return {
        "key": n => { stringKeyAttributeMappingSourceValuePair.key = n.getStringValue(); },
        "@odata.type": n => { stringKeyAttributeMappingSourceValuePair.odataType = n.getStringValue(); },
        "value": n => { stringKeyAttributeMappingSourceValuePair.value = n.getObjectValue<AttributeMappingSource>(createAttributeMappingSourceFromDiscriminatorValue); },
    }
}
export function serializeStringKeyAttributeMappingSourceValuePair(writer: SerializationWriter, stringKeyAttributeMappingSourceValuePair: StringKeyAttributeMappingSourceValuePair | undefined = {} as StringKeyAttributeMappingSourceValuePair) : void {
        writer.writeStringValue("key", stringKeyAttributeMappingSourceValuePair.key);
        writer.writeStringValue("@odata.type", stringKeyAttributeMappingSourceValuePair.odataType);
        writer.writeObjectValue<AttributeMappingSource>("value", stringKeyAttributeMappingSourceValuePair.value, serializeAttributeMappingSource);
        writer.writeAdditionalData(stringKeyAttributeMappingSourceValuePair.additionalData);
}
export interface StringKeyAttributeMappingSourceValuePair extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The name of the parameter.
     */
    key?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The value of the parameter.
     */
    value?: AttributeMappingSource;
}
// tslint:enable
// eslint-enable
