// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createProfileCardAnnotationFromDiscriminatorValue, serializeProfileCardAnnotation, type ProfileCardAnnotation } from './profileCardAnnotation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createProfileCardPropertyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoProfileCardProperty;
}
export function deserializeIntoProfileCardProperty(profileCardProperty: ProfileCardProperty | undefined = {} as ProfileCardProperty) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(profileCardProperty),
        "annotations": n => { profileCardProperty.annotations = n.getCollectionOfObjectValues<ProfileCardAnnotation>(createProfileCardAnnotationFromDiscriminatorValue); },
        "directoryPropertyName": n => { profileCardProperty.directoryPropertyName = n.getStringValue(); },
    }
}
export interface ProfileCardProperty extends Entity, Parsable {
    /**
     * The annotations property
     */
    annotations?: ProfileCardAnnotation[];
    /**
     * The directoryPropertyName property
     */
    directoryPropertyName?: string;
}
export function serializeProfileCardProperty(writer: SerializationWriter, profileCardProperty: ProfileCardProperty | undefined = {} as ProfileCardProperty) : void {
        serializeEntity(writer, profileCardProperty)
        writer.writeCollectionOfObjectValues<ProfileCardAnnotation>("annotations", profileCardProperty.annotations, );
        writer.writeStringValue("directoryPropertyName", profileCardProperty.directoryPropertyName);
}
// tslint:enable
// eslint-enable
