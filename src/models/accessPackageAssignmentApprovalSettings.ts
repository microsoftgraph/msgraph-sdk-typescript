// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessPackageApprovalStageFromDiscriminatorValue, serializeAccessPackageApprovalStage, type AccessPackageApprovalStage } from './accessPackageApprovalStage';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageAssignmentApprovalSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If false, then approval isn't required for new requests in this policy.
     */
    isApprovalRequiredForAdd?: boolean;
    /**
     * If false, then approval isn't required for updates to requests in this policy.
     */
    isApprovalRequiredForUpdate?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * If approval is required, the one, two or three elements of this collection define each of the stages of approval. An empty array is present if no approval is required.
     */
    stages?: AccessPackageApprovalStage[];
}
export function createAccessPackageAssignmentApprovalSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageAssignmentApprovalSettings;
}
export function deserializeIntoAccessPackageAssignmentApprovalSettings(accessPackageAssignmentApprovalSettings: AccessPackageAssignmentApprovalSettings | undefined = {} as AccessPackageAssignmentApprovalSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "isApprovalRequiredForAdd": n => { accessPackageAssignmentApprovalSettings.isApprovalRequiredForAdd = n.getBooleanValue(); },
        "isApprovalRequiredForUpdate": n => { accessPackageAssignmentApprovalSettings.isApprovalRequiredForUpdate = n.getBooleanValue(); },
        "@odata.type": n => { accessPackageAssignmentApprovalSettings.odataType = n.getStringValue(); },
        "stages": n => { accessPackageAssignmentApprovalSettings.stages = n.getCollectionOfObjectValues<AccessPackageApprovalStage>(createAccessPackageApprovalStageFromDiscriminatorValue); },
    }
}
export function serializeAccessPackageAssignmentApprovalSettings(writer: SerializationWriter, accessPackageAssignmentApprovalSettings: AccessPackageAssignmentApprovalSettings | undefined = {} as AccessPackageAssignmentApprovalSettings) : void {
    writer.writeBooleanValue("isApprovalRequiredForAdd", accessPackageAssignmentApprovalSettings.isApprovalRequiredForAdd);
    writer.writeBooleanValue("isApprovalRequiredForUpdate", accessPackageAssignmentApprovalSettings.isApprovalRequiredForUpdate);
    writer.writeStringValue("@odata.type", accessPackageAssignmentApprovalSettings.odataType);
    writer.writeCollectionOfObjectValues<AccessPackageApprovalStage>("stages", accessPackageAssignmentApprovalSettings.stages, serializeAccessPackageApprovalStage);
    writer.writeAdditionalData(accessPackageAssignmentApprovalSettings.additionalData);
}
// tslint:enable
// eslint-enable
