// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceManagementSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceManagementSettings;
}
export function deserializeIntoDeviceManagementSettings(deviceManagementSettings: DeviceManagementSettings | undefined = {} as DeviceManagementSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "deviceComplianceCheckinThresholdDays": n => { deviceManagementSettings.deviceComplianceCheckinThresholdDays = n.getNumberValue(); },
        "isScheduledActionEnabled": n => { deviceManagementSettings.isScheduledActionEnabled = n.getBooleanValue(); },
        "@odata.type": n => { deviceManagementSettings.odataType = n.getStringValue(); },
        "secureByDefault": n => { deviceManagementSettings.secureByDefault = n.getBooleanValue(); },
    }
}
export interface DeviceManagementSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The number of days a device is allowed to go without checking in to remain compliant.
     */
    deviceComplianceCheckinThresholdDays?: number;
    /**
     * Is feature enabled or not for scheduled action for rule.
     */
    isScheduledActionEnabled?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Device should be noncompliant when there is no compliance policy targeted when this is true
     */
    secureByDefault?: boolean;
}
export function serializeDeviceManagementSettings(writer: SerializationWriter, deviceManagementSettings: DeviceManagementSettings | undefined = {} as DeviceManagementSettings) : void {
        writer.writeNumberValue("deviceComplianceCheckinThresholdDays", deviceManagementSettings.deviceComplianceCheckinThresholdDays);
        writer.writeBooleanValue("isScheduledActionEnabled", deviceManagementSettings.isScheduledActionEnabled);
        writer.writeStringValue("@odata.type", deviceManagementSettings.odataType);
        writer.writeBooleanValue("secureByDefault", deviceManagementSettings.secureByDefault);
        writer.writeAdditionalData(deviceManagementSettings.additionalData);
}
// tslint:enable
// eslint-enable
