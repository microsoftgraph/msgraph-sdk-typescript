import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createMalwareFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMalware;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoMalware(malware: Malware | undefined = {} as Malware) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { malware.description = n.getStringValue(); },
        "@odata.type": n => { malware.odataType = n.getStringValue(); },
    }
}
export interface Malware extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Contains the virus details for the malware facet.
     */
    description?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeMalware(writer: SerializationWriter, malware: Malware | undefined = {} as Malware) : void {
        writer.writeStringValue("description", malware.description);
        writer.writeStringValue("@odata.type", malware.odataType);
        writer.writeAdditionalData(malware.additionalData);
}
