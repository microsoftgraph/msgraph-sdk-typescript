// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ControlScore extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Control action category (Identity, Data, Device, Apps, Infrastructure).
     */
    controlCategory?: string;
    /**
     * Control unique name.
     */
    controlName?: string;
    /**
     * Description of the control.
     */
    description?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Tenant achieved score for the control (it varies day by day depending on tenant operations on the control).
     */
    score?: number;
}
export function createControlScoreFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoControlScore;
}
export function deserializeIntoControlScore(controlScore: ControlScore | undefined = {} as ControlScore) : Record<string, (node: ParseNode) => void> {
    return {
        "controlCategory": n => { controlScore.controlCategory = n.getStringValue(); },
        "controlName": n => { controlScore.controlName = n.getStringValue(); },
        "description": n => { controlScore.description = n.getStringValue(); },
        "@odata.type": n => { controlScore.odataType = n.getStringValue(); },
        "score": n => { controlScore.score = n.getNumberValue(); },
    }
}
export function serializeControlScore(writer: SerializationWriter, controlScore: ControlScore | undefined = {} as ControlScore) : void {
    writer.writeStringValue("controlCategory", controlScore.controlCategory);
    writer.writeStringValue("controlName", controlScore.controlName);
    writer.writeStringValue("description", controlScore.description);
    writer.writeStringValue("@odata.type", controlScore.odataType);
    writer.writeNumberValue("score", controlScore.score);
    writer.writeAdditionalData(controlScore.additionalData);
}
// tslint:enable
// eslint-enable
