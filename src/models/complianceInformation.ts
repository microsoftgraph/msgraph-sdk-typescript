// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createCertificationControlFromDiscriminatorValue, serializeCertificationControl, type CertificationControl } from './certificationControl';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ComplianceInformation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Collection of the certification controls associated with the certification.
     */
    certificationControls?: CertificationControl[];
    /**
     * The name of the compliance certification, for example, ISO 27018:2014, GDPR, FedRAMP, and NIST 800-171.
     */
    certificationName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createComplianceInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoComplianceInformation;
}
export function deserializeIntoComplianceInformation(complianceInformation: ComplianceInformation | undefined = {} as ComplianceInformation) : Record<string, (node: ParseNode) => void> {
    return {
        "certificationControls": n => { complianceInformation.certificationControls = n.getCollectionOfObjectValues<CertificationControl>(createCertificationControlFromDiscriminatorValue); },
        "certificationName": n => { complianceInformation.certificationName = n.getStringValue(); },
        "@odata.type": n => { complianceInformation.odataType = n.getStringValue(); },
    }
}
export function serializeComplianceInformation(writer: SerializationWriter, complianceInformation: ComplianceInformation | undefined = {} as ComplianceInformation) : void {
        writer.writeCollectionOfObjectValues<CertificationControl>("certificationControls", complianceInformation.certificationControls, );
        writer.writeStringValue("certificationName", complianceInformation.certificationName);
        writer.writeStringValue("@odata.type", complianceInformation.odataType);
        writer.writeAdditionalData(complianceInformation.additionalData);
}
// tslint:enable
// eslint-enable
