// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createContentTypeInfoFromDiscriminatorValue, serializeContentTypeInfo, type ContentTypeInfo } from './contentTypeInfo';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDocumentSetContentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDocumentSetContent;
}
export function deserializeIntoDocumentSetContent(documentSetContent: DocumentSetContent | undefined = {} as DocumentSetContent) : Record<string, (node: ParseNode) => void> {
    return {
        "contentType": n => { documentSetContent.contentType = n.getObjectValue<ContentTypeInfo>(createContentTypeInfoFromDiscriminatorValue); },
        "fileName": n => { documentSetContent.fileName = n.getStringValue(); },
        "folderName": n => { documentSetContent.folderName = n.getStringValue(); },
        "@odata.type": n => { documentSetContent.odataType = n.getStringValue(); },
    }
}
export interface DocumentSetContent extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Content type information of the file.
     */
    contentType?: ContentTypeInfo;
    /**
     * Name of the file in resource folder that should be added as a default content or a template in the document set.
     */
    fileName?: string;
    /**
     * Folder name in which the file will be placed when a new document set is created in the library.
     */
    folderName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeDocumentSetContent(writer: SerializationWriter, documentSetContent: DocumentSetContent | undefined = {} as DocumentSetContent) : void {
        writer.writeObjectValue<ContentTypeInfo>("contentType", documentSetContent.contentType, );
        writer.writeStringValue("fileName", documentSetContent.fileName);
        writer.writeStringValue("folderName", documentSetContent.folderName);
        writer.writeStringValue("@odata.type", documentSetContent.odataType);
        writer.writeAdditionalData(documentSetContent.additionalData);
}
// tslint:enable
// eslint-enable
