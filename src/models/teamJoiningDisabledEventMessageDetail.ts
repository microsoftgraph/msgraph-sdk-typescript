// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEventMessageDetail, serializeEventMessageDetail, type EventMessageDetail } from './eventMessageDetail';
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamJoiningDisabledEventMessageDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamJoiningDisabledEventMessageDetail;
}
export function deserializeIntoTeamJoiningDisabledEventMessageDetail(teamJoiningDisabledEventMessageDetail: TeamJoiningDisabledEventMessageDetail | undefined = {} as TeamJoiningDisabledEventMessageDetail) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEventMessageDetail(teamJoiningDisabledEventMessageDetail),
        "initiator": n => { teamJoiningDisabledEventMessageDetail.initiator = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "teamId": n => { teamJoiningDisabledEventMessageDetail.teamId = n.getStringValue(); },
    }
}
export function serializeTeamJoiningDisabledEventMessageDetail(writer: SerializationWriter, teamJoiningDisabledEventMessageDetail: TeamJoiningDisabledEventMessageDetail | undefined = {} as TeamJoiningDisabledEventMessageDetail) : void {
    serializeEventMessageDetail(writer, teamJoiningDisabledEventMessageDetail)
    writer.writeObjectValue<IdentitySet>("initiator", teamJoiningDisabledEventMessageDetail.initiator, serializeIdentitySet);
    writer.writeStringValue("teamId", teamJoiningDisabledEventMessageDetail.teamId);
}
export interface TeamJoiningDisabledEventMessageDetail extends EventMessageDetail, Parsable {
    /**
     * Initiator of the event.
     */
    initiator?: IdentitySet;
    /**
     * Unique identifier of the team.
     */
    teamId?: string;
}
// tslint:enable
// eslint-enable
