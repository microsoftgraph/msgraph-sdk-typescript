// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIosMinimumOperatingSystemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosMinimumOperatingSystem;
}
export function deserializeIntoIosMinimumOperatingSystem(iosMinimumOperatingSystem: IosMinimumOperatingSystem | undefined = {} as IosMinimumOperatingSystem) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { iosMinimumOperatingSystem.odataType = n.getStringValue(); },
        "v10_0": n => { iosMinimumOperatingSystem.v10_0 = n.getBooleanValue(); },
        "v11_0": n => { iosMinimumOperatingSystem.v11_0 = n.getBooleanValue(); },
        "v12_0": n => { iosMinimumOperatingSystem.v12_0 = n.getBooleanValue(); },
        "v13_0": n => { iosMinimumOperatingSystem.v13_0 = n.getBooleanValue(); },
        "v14_0": n => { iosMinimumOperatingSystem.v14_0 = n.getBooleanValue(); },
        "v15_0": n => { iosMinimumOperatingSystem.v15_0 = n.getBooleanValue(); },
        "v8_0": n => { iosMinimumOperatingSystem.v8_0 = n.getBooleanValue(); },
        "v9_0": n => { iosMinimumOperatingSystem.v9_0 = n.getBooleanValue(); },
    }
}
export interface IosMinimumOperatingSystem extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * When TRUE, only Version 10.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v10_0?: boolean;
    /**
     * When TRUE, only Version 11.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v11_0?: boolean;
    /**
     * When TRUE, only Version 12.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v12_0?: boolean;
    /**
     * When TRUE, only Version 13.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v13_0?: boolean;
    /**
     * When TRUE, only Version 14.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v14_0?: boolean;
    /**
     * When TRUE, only Version 15.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v15_0?: boolean;
    /**
     * When TRUE, only Version 8.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v8_0?: boolean;
    /**
     * When TRUE, only Version 9.0 or later is supported. Default value is FALSE. Exactly one of the minimum operating system boolean values will be TRUE.
     */
    v9_0?: boolean;
}
export function serializeIosMinimumOperatingSystem(writer: SerializationWriter, iosMinimumOperatingSystem: IosMinimumOperatingSystem | undefined = {} as IosMinimumOperatingSystem) : void {
        writer.writeStringValue("@odata.type", iosMinimumOperatingSystem.odataType);
        writer.writeBooleanValue("v10_0", iosMinimumOperatingSystem.v10_0);
        writer.writeBooleanValue("v11_0", iosMinimumOperatingSystem.v11_0);
        writer.writeBooleanValue("v12_0", iosMinimumOperatingSystem.v12_0);
        writer.writeBooleanValue("v13_0", iosMinimumOperatingSystem.v13_0);
        writer.writeBooleanValue("v14_0", iosMinimumOperatingSystem.v14_0);
        writer.writeBooleanValue("v15_0", iosMinimumOperatingSystem.v15_0);
        writer.writeBooleanValue("v8_0", iosMinimumOperatingSystem.v8_0);
        writer.writeBooleanValue("v9_0", iosMinimumOperatingSystem.v9_0);
        writer.writeAdditionalData(iosMinimumOperatingSystem.additionalData);
}
// tslint:enable
// eslint-enable
