// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { ActivityDomain } from './activityDomain';
import { createTimeSlotFromDiscriminatorValue, serializeTimeSlot, type TimeSlot } from './timeSlot';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTimeConstraintFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTimeConstraint;
}
export function deserializeIntoTimeConstraint(timeConstraint: TimeConstraint | undefined = {} as TimeConstraint) : Record<string, (node: ParseNode) => void> {
    return {
        "activityDomain": n => { timeConstraint.activityDomain = n.getEnumValue<ActivityDomain>(ActivityDomain); },
        "@odata.type": n => { timeConstraint.odataType = n.getStringValue(); },
        "timeSlots": n => { timeConstraint.timeSlots = n.getCollectionOfObjectValues<TimeSlot>(createTimeSlotFromDiscriminatorValue); },
    }
}
export function serializeTimeConstraint(writer: SerializationWriter, timeConstraint: TimeConstraint | undefined = {} as TimeConstraint) : void {
    writer.writeEnumValue<ActivityDomain>("activityDomain", timeConstraint.activityDomain);
    writer.writeStringValue("@odata.type", timeConstraint.odataType);
    writer.writeCollectionOfObjectValues<TimeSlot>("timeSlots", timeConstraint.timeSlots, serializeTimeSlot);
    writer.writeAdditionalData(timeConstraint.additionalData);
}
export interface TimeConstraint extends AdditionalDataHolder, Parsable {
    /**
     * The nature of the activity, optional. The possible values are: work, personal, unrestricted, or unknown.
     */
    activityDomain?: ActivityDomain;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The timeSlots property
     */
    timeSlots?: TimeSlot[];
}
// tslint:enable
// eslint-enable
