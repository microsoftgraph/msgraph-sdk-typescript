// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoTeamworkNotificationRecipient, serializeTeamworkNotificationRecipient, type TeamworkNotificationRecipient } from './teamworkNotificationRecipient';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ChannelMembersNotificationRecipient extends Parsable, TeamworkNotificationRecipient {
    /**
     * The unique identifier for the channel whose members should receive the notification.
     */
    channelId?: string;
    /**
     * The unique identifier for the team under which the channel resides.
     */
    teamId?: string;
}
export function createChannelMembersNotificationRecipientFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoChannelMembersNotificationRecipient;
}
export function deserializeIntoChannelMembersNotificationRecipient(channelMembersNotificationRecipient: ChannelMembersNotificationRecipient | undefined = {} as ChannelMembersNotificationRecipient) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTeamworkNotificationRecipient(channelMembersNotificationRecipient),
        "channelId": n => { channelMembersNotificationRecipient.channelId = n.getStringValue(); },
        "teamId": n => { channelMembersNotificationRecipient.teamId = n.getStringValue(); },
    }
}
export function serializeChannelMembersNotificationRecipient(writer: SerializationWriter, channelMembersNotificationRecipient: ChannelMembersNotificationRecipient | undefined = {} as ChannelMembersNotificationRecipient) : void {
        serializeTeamworkNotificationRecipient(writer, channelMembersNotificationRecipient)
        writer.writeStringValue("channelId", channelMembersNotificationRecipient.channelId);
        writer.writeStringValue("teamId", channelMembersNotificationRecipient.teamId);
}
// tslint:enable
// eslint-enable
