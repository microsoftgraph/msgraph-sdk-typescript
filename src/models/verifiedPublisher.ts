// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createVerifiedPublisherFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoVerifiedPublisher;
}
export function deserializeIntoVerifiedPublisher(verifiedPublisher: VerifiedPublisher | undefined = {} as VerifiedPublisher) : Record<string, (node: ParseNode) => void> {
    return {
        "addedDateTime": n => { verifiedPublisher.addedDateTime = n.getDateValue(); },
        "displayName": n => { verifiedPublisher.displayName = n.getStringValue(); },
        "@odata.type": n => { verifiedPublisher.odataType = n.getStringValue(); },
        "verifiedPublisherId": n => { verifiedPublisher.verifiedPublisherId = n.getStringValue(); },
    }
}
export function serializeVerifiedPublisher(writer: SerializationWriter, verifiedPublisher: VerifiedPublisher | undefined = {} as VerifiedPublisher) : void {
    writer.writeDateValue("addedDateTime", verifiedPublisher.addedDateTime);
    writer.writeStringValue("displayName", verifiedPublisher.displayName);
    writer.writeStringValue("@odata.type", verifiedPublisher.odataType);
    writer.writeStringValue("verifiedPublisherId", verifiedPublisher.verifiedPublisherId);
    writer.writeAdditionalData(verifiedPublisher.additionalData);
}
export interface VerifiedPublisher extends AdditionalDataHolder, Parsable {
    /**
     * The timestamp when the verified publisher was first added or most recently updated.
     */
    addedDateTime?: Date;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The verified publisher name from the app publisher's Partner Center account.
     */
    displayName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The ID of the verified publisher from the app publisher's Partner Center account.
     */
    verifiedPublisherId?: string;
}
// tslint:enable
// eslint-enable
