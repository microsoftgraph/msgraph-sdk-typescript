// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoSubjectSet, serializeSubjectSet, type SubjectSet } from './subjectSet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRequestorManagerFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRequestorManager;
}
export function deserializeIntoRequestorManager(requestorManager: RequestorManager | undefined = {} as RequestorManager) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSubjectSet(requestorManager),
        "managerLevel": n => { requestorManager.managerLevel = n.getNumberValue(); },
    }
}
export interface RequestorManager extends Parsable, SubjectSet {
    /**
     * The hierarchical level of the manager with respect to the requestor. For example, the direct manager of a requestor would have a managerLevel of 1, while the manager of the requestor's manager would have a managerLevel of 2. Default value for managerLevel is 1. Possible values for this property range from 1 to 2.
     */
    managerLevel?: number;
}
export function serializeRequestorManager(writer: SerializationWriter, requestorManager: RequestorManager | undefined = {} as RequestorManager) : void {
        serializeSubjectSet(writer, requestorManager)
        writer.writeNumberValue("managerLevel", requestorManager.managerLevel);
}
// tslint:enable
// eslint-enable
