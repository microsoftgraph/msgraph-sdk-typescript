// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoIdentity, serializeIdentity, type Identity } from './identity';
import { InitiatorType } from './initiatorType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createInitiatorFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoInitiator;
}
export function deserializeIntoInitiator(initiator: Initiator | undefined = {} as Initiator) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(initiator),
        "initiatorType": n => { initiator.initiatorType = n.getEnumValue<InitiatorType>(InitiatorType); },
    }
}
export interface Initiator extends Identity, Parsable {
    /**
     * Type of initiator. Possible values are: user, application, system, unknownFutureValue.
     */
    initiatorType?: InitiatorType;
}
export function serializeInitiator(writer: SerializationWriter, initiator: Initiator | undefined = {} as Initiator) : void {
    serializeIdentity(writer, initiator)
    writer.writeEnumValue<InitiatorType>("initiatorType", initiator.initiatorType);
}
// tslint:enable
// eslint-enable
