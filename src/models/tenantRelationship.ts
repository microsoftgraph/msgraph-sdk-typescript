import { createDelegatedAdminCustomerFromDiscriminatorValue, serializeDelegatedAdminCustomer, type DelegatedAdminCustomer } from './delegatedAdminCustomer';
import { createDelegatedAdminRelationshipFromDiscriminatorValue, serializeDelegatedAdminRelationship, type DelegatedAdminRelationship } from './delegatedAdminRelationship';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTenantRelationshipFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTenantRelationship;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTenantRelationship(tenantRelationship: TenantRelationship | undefined = {} as TenantRelationship) : Record<string, (node: ParseNode) => void> {
    return {
        "delegatedAdminCustomers": n => { tenantRelationship.delegatedAdminCustomers = n.getCollectionOfObjectValues<DelegatedAdminCustomer>(createDelegatedAdminCustomerFromDiscriminatorValue); },
        "delegatedAdminRelationships": n => { tenantRelationship.delegatedAdminRelationships = n.getCollectionOfObjectValues<DelegatedAdminRelationship>(createDelegatedAdminRelationshipFromDiscriminatorValue); },
        "@odata.type": n => { tenantRelationship.odataType = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTenantRelationship(writer: SerializationWriter, tenantRelationship: TenantRelationship | undefined = {} as TenantRelationship) : void {
        writer.writeCollectionOfObjectValues<DelegatedAdminCustomer>("delegatedAdminCustomers", tenantRelationship.delegatedAdminCustomers, );
        writer.writeCollectionOfObjectValues<DelegatedAdminRelationship>("delegatedAdminRelationships", tenantRelationship.delegatedAdminRelationships, );
        writer.writeStringValue("@odata.type", tenantRelationship.odataType);
        writer.writeAdditionalData(tenantRelationship.additionalData);
}
export interface TenantRelationship extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The customer who has a delegated admin relationship with a Microsoft partner.
     */
    delegatedAdminCustomers?: DelegatedAdminCustomer[];
    /**
     * The details of the delegated administrative privileges that a Microsoft partner has in a customer tenant.
     */
    delegatedAdminRelationships?: DelegatedAdminRelationship[];
    /**
     * The OdataType property
     */
    odataType?: string;
}
