// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createJsonFromDiscriminatorValue, serializeJson, type Json } from './json';
import { createWorkbookIconFromDiscriminatorValue, serializeWorkbookIcon, type WorkbookIcon } from './workbookIcon';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookFilterCriteriaFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookFilterCriteria;
}
export function deserializeIntoWorkbookFilterCriteria(workbookFilterCriteria: WorkbookFilterCriteria | undefined = {} as WorkbookFilterCriteria) : Record<string, (node: ParseNode) => void> {
    return {
        "color": n => { workbookFilterCriteria.color = n.getStringValue(); },
        "criterion1": n => { workbookFilterCriteria.criterion1 = n.getStringValue(); },
        "criterion2": n => { workbookFilterCriteria.criterion2 = n.getStringValue(); },
        "dynamicCriteria": n => { workbookFilterCriteria.dynamicCriteria = n.getStringValue(); },
        "filterOn": n => { workbookFilterCriteria.filterOn = n.getStringValue(); },
        "icon": n => { workbookFilterCriteria.icon = n.getObjectValue<WorkbookIcon>(createWorkbookIconFromDiscriminatorValue); },
        "@odata.type": n => { workbookFilterCriteria.odataType = n.getStringValue(); },
        "operator": n => { workbookFilterCriteria.operator = n.getStringValue(); },
        "values": n => { workbookFilterCriteria.values = n.getObjectValue<Json>(createJsonFromDiscriminatorValue); },
    }
}
export function serializeWorkbookFilterCriteria(writer: SerializationWriter, workbookFilterCriteria: WorkbookFilterCriteria | undefined = {} as WorkbookFilterCriteria) : void {
    writer.writeStringValue("color", workbookFilterCriteria.color);
    writer.writeStringValue("criterion1", workbookFilterCriteria.criterion1);
    writer.writeStringValue("criterion2", workbookFilterCriteria.criterion2);
    writer.writeStringValue("dynamicCriteria", workbookFilterCriteria.dynamicCriteria);
    writer.writeStringValue("filterOn", workbookFilterCriteria.filterOn);
    writer.writeObjectValue<WorkbookIcon>("icon", workbookFilterCriteria.icon, serializeWorkbookIcon);
    writer.writeStringValue("@odata.type", workbookFilterCriteria.odataType);
    writer.writeStringValue("operator", workbookFilterCriteria.operator);
    writer.writeObjectValue<Json>("values", workbookFilterCriteria.values, serializeJson);
    writer.writeAdditionalData(workbookFilterCriteria.additionalData);
}
export interface WorkbookFilterCriteria extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The color property
     */
    color?: string;
    /**
     * The criterion1 property
     */
    criterion1?: string;
    /**
     * The criterion2 property
     */
    criterion2?: string;
    /**
     * The dynamicCriteria property
     */
    dynamicCriteria?: string;
    /**
     * The filterOn property
     */
    filterOn?: string;
    /**
     * The icon property
     */
    icon?: WorkbookIcon;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The operator property
     */
    operator?: string;
    /**
     * The values property
     */
    values?: Json;
}
// tslint:enable
// eslint-enable
