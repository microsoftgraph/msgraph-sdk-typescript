// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createCalendarPermissionFromDiscriminatorValue, serializeCalendarPermission, type CalendarPermission } from './calendarPermission';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CalendarPermissionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CalendarPermission[];
}
export function createCalendarPermissionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCalendarPermissionCollectionResponse;
}
export function deserializeIntoCalendarPermissionCollectionResponse(calendarPermissionCollectionResponse: CalendarPermissionCollectionResponse | undefined = {} as CalendarPermissionCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(calendarPermissionCollectionResponse),
        "value": n => { calendarPermissionCollectionResponse.value = n.getCollectionOfObjectValues<CalendarPermission>(createCalendarPermissionFromDiscriminatorValue); },
    }
}
export function serializeCalendarPermissionCollectionResponse(writer: SerializationWriter, calendarPermissionCollectionResponse: CalendarPermissionCollectionResponse | undefined = {} as CalendarPermissionCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, calendarPermissionCollectionResponse)
        writer.writeCollectionOfObjectValues<CalendarPermission>("value", calendarPermissionCollectionResponse.value, serializeCalendarPermission);
}
// tslint:enable
// eslint-enable
