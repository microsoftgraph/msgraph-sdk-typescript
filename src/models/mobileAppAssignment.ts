// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue, serializeDeviceAndAppManagementAssignmentTarget, type DeviceAndAppManagementAssignmentTarget } from './deviceAndAppManagementAssignmentTarget';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { InstallIntent } from './installIntent';
import { createMobileAppAssignmentSettingsFromDiscriminatorValue, serializeMobileAppAssignmentSettings, type MobileAppAssignmentSettings } from './mobileAppAssignmentSettings';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMobileAppAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMobileAppAssignment;
}
export function deserializeIntoMobileAppAssignment(mobileAppAssignment: MobileAppAssignment | undefined = {} as MobileAppAssignment) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(mobileAppAssignment),
        "intent": n => { mobileAppAssignment.intent = n.getEnumValue<InstallIntent>(InstallIntent); },
        "settings": n => { mobileAppAssignment.settings = n.getObjectValue<MobileAppAssignmentSettings>(createMobileAppAssignmentSettingsFromDiscriminatorValue); },
        "target": n => { mobileAppAssignment.target = n.getObjectValue<DeviceAndAppManagementAssignmentTarget>(createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue); },
    }
}
export interface MobileAppAssignment extends Entity, Parsable {
    /**
     * Possible values for the install intent chosen by the admin.
     */
    intent?: InstallIntent;
    /**
     * The settings for target assignment defined by the admin.
     */
    settings?: MobileAppAssignmentSettings;
    /**
     * The target group assignment defined by the admin.
     */
    target?: DeviceAndAppManagementAssignmentTarget;
}
export function serializeMobileAppAssignment(writer: SerializationWriter, mobileAppAssignment: MobileAppAssignment | undefined = {} as MobileAppAssignment) : void {
        serializeEntity(writer, mobileAppAssignment)
        writer.writeEnumValue<InstallIntent>("intent", mobileAppAssignment.intent);
        writer.writeObjectValue<MobileAppAssignmentSettings>("settings", mobileAppAssignment.settings, );
        writer.writeObjectValue<DeviceAndAppManagementAssignmentTarget>("target", mobileAppAssignment.target, );
}
// tslint:enable
// eslint-enable
