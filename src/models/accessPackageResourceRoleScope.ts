// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessPackageResourceRoleFromDiscriminatorValue, serializeAccessPackageResourceRole, type AccessPackageResourceRole } from './accessPackageResourceRole';
import { createAccessPackageResourceScopeFromDiscriminatorValue, serializeAccessPackageResourceScope, type AccessPackageResourceScope } from './accessPackageResourceScope';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageResourceRoleScope extends Entity, Parsable {
    /**
     * The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
     */
    createdDateTime?: Date;
    /**
     * The role property
     */
    role?: AccessPackageResourceRole;
    /**
     * The scope property
     */
    scope?: AccessPackageResourceScope;
}
export function createAccessPackageResourceRoleScopeFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageResourceRoleScope;
}
export function deserializeIntoAccessPackageResourceRoleScope(accessPackageResourceRoleScope: AccessPackageResourceRoleScope | undefined = {} as AccessPackageResourceRoleScope) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(accessPackageResourceRoleScope),
        "createdDateTime": n => { accessPackageResourceRoleScope.createdDateTime = n.getDateValue(); },
        "role": n => { accessPackageResourceRoleScope.role = n.getObjectValue<AccessPackageResourceRole>(createAccessPackageResourceRoleFromDiscriminatorValue); },
        "scope": n => { accessPackageResourceRoleScope.scope = n.getObjectValue<AccessPackageResourceScope>(createAccessPackageResourceScopeFromDiscriminatorValue); },
    }
}
export function serializeAccessPackageResourceRoleScope(writer: SerializationWriter, accessPackageResourceRoleScope: AccessPackageResourceRoleScope | undefined = {} as AccessPackageResourceRoleScope) : void {
        serializeEntity(writer, accessPackageResourceRoleScope)
        writer.writeDateValue("createdDateTime", accessPackageResourceRoleScope.createdDateTime);
        writer.writeObjectValue<AccessPackageResourceRole>("role", accessPackageResourceRoleScope.role, );
        writer.writeObjectValue<AccessPackageResourceScope>("scope", accessPackageResourceRoleScope.scope, );
}
// tslint:enable
// eslint-enable
