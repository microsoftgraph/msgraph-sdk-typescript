// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createLinkedResourceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoLinkedResource;
}
export function deserializeIntoLinkedResource(linkedResource: LinkedResource | undefined = {} as LinkedResource) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(linkedResource),
        "applicationName": n => { linkedResource.applicationName = n.getStringValue(); },
        "displayName": n => { linkedResource.displayName = n.getStringValue(); },
        "externalId": n => { linkedResource.externalId = n.getStringValue(); },
        "webUrl": n => { linkedResource.webUrl = n.getStringValue(); },
    }
}
export interface LinkedResource extends Entity, Parsable {
    /**
     * The app name of the source that sends the linkedResource.
     */
    applicationName?: string;
    /**
     * The title of the linkedResource.
     */
    displayName?: string;
    /**
     * ID of the object that is associated with this task on the third-party/partner system.
     */
    externalId?: string;
    /**
     * Deep link to the linkedResource.
     */
    webUrl?: string;
}
export function serializeLinkedResource(writer: SerializationWriter, linkedResource: LinkedResource | undefined = {} as LinkedResource) : void {
    serializeEntity(writer, linkedResource)
    writer.writeStringValue("applicationName", linkedResource.applicationName);
    writer.writeStringValue("displayName", linkedResource.displayName);
    writer.writeStringValue("externalId", linkedResource.externalId);
    writer.writeStringValue("webUrl", linkedResource.webUrl);
}
// tslint:enable
// eslint-enable
