// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createLocalizedNotificationMessageFromDiscriminatorValue, serializeLocalizedNotificationMessage, type LocalizedNotificationMessage } from './localizedNotificationMessage';
import { NotificationTemplateBrandingOptions } from './notificationTemplateBrandingOptions';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createNotificationMessageTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoNotificationMessageTemplate;
}
export function deserializeIntoNotificationMessageTemplate(notificationMessageTemplate: NotificationMessageTemplate | undefined = {} as NotificationMessageTemplate) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(notificationMessageTemplate),
        "brandingOptions": n => { notificationMessageTemplate.brandingOptions = n.getCollectionOfEnumValues<NotificationTemplateBrandingOptions>(NotificationTemplateBrandingOptions); },
        "defaultLocale": n => { notificationMessageTemplate.defaultLocale = n.getStringValue(); },
        "displayName": n => { notificationMessageTemplate.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { notificationMessageTemplate.lastModifiedDateTime = n.getDateValue(); },
        "localizedNotificationMessages": n => { notificationMessageTemplate.localizedNotificationMessages = n.getCollectionOfObjectValues<LocalizedNotificationMessage>(createLocalizedNotificationMessageFromDiscriminatorValue); },
        "roleScopeTagIds": n => { notificationMessageTemplate.roleScopeTagIds = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface NotificationMessageTemplate extends Entity, Parsable {
    /**
     * Branding Options for the Message Template. Branding is defined in the Intune Admin Console.
     */
    brandingOptions?: NotificationTemplateBrandingOptions[];
    /**
     * The default locale to fallback onto when the requested locale is not available.
     */
    defaultLocale?: string;
    /**
     * Display name for the Notification Message Template.
     */
    displayName?: string;
    /**
     * DateTime the object was last modified.
     */
    lastModifiedDateTime?: Date;
    /**
     * The list of localized messages for this Notification Message Template.
     */
    localizedNotificationMessages?: LocalizedNotificationMessage[];
    /**
     * List of Scope Tags for this Entity instance.
     */
    roleScopeTagIds?: string[];
}
export function serializeNotificationMessageTemplate(writer: SerializationWriter, notificationMessageTemplate: NotificationMessageTemplate | undefined = {} as NotificationMessageTemplate) : void {
        serializeEntity(writer, notificationMessageTemplate)
        writer.writeEnumValue<NotificationTemplateBrandingOptions[]>("brandingOptions", notificationMessageTemplate.brandingOptions);
        writer.writeStringValue("defaultLocale", notificationMessageTemplate.defaultLocale);
        writer.writeStringValue("displayName", notificationMessageTemplate.displayName);
        writer.writeDateValue("lastModifiedDateTime", notificationMessageTemplate.lastModifiedDateTime);
        writer.writeCollectionOfObjectValues<LocalizedNotificationMessage>("localizedNotificationMessages", notificationMessageTemplate.localizedNotificationMessages, );
        writer.writeCollectionOfPrimitiveValues<string>("roleScopeTagIds", notificationMessageTemplate.roleScopeTagIds);
}
// tslint:enable
// eslint-enable
