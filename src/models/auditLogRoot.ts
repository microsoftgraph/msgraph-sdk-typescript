// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDirectoryAuditFromDiscriminatorValue, serializeDirectoryAudit, type DirectoryAudit } from './directoryAudit';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createProvisioningObjectSummaryFromDiscriminatorValue, serializeProvisioningObjectSummary, type ProvisioningObjectSummary } from './provisioningObjectSummary';
import { createSignInFromDiscriminatorValue, serializeSignIn, type SignIn } from './signIn';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AuditLogRoot extends Entity, Parsable {
    /**
     * The directoryAudits property
     */
    directoryAudits?: DirectoryAudit[];
    /**
     * The provisioning property
     */
    provisioning?: ProvisioningObjectSummary[];
    /**
     * The signIns property
     */
    signIns?: SignIn[];
}
export function createAuditLogRootFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAuditLogRoot;
}
export function deserializeIntoAuditLogRoot(auditLogRoot: AuditLogRoot | undefined = {} as AuditLogRoot) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditLogRoot),
        "directoryAudits": n => { auditLogRoot.directoryAudits = n.getCollectionOfObjectValues<DirectoryAudit>(createDirectoryAuditFromDiscriminatorValue); },
        "provisioning": n => { auditLogRoot.provisioning = n.getCollectionOfObjectValues<ProvisioningObjectSummary>(createProvisioningObjectSummaryFromDiscriminatorValue); },
        "signIns": n => { auditLogRoot.signIns = n.getCollectionOfObjectValues<SignIn>(createSignInFromDiscriminatorValue); },
    }
}
export function serializeAuditLogRoot(writer: SerializationWriter, auditLogRoot: AuditLogRoot | undefined = {} as AuditLogRoot) : void {
        serializeEntity(writer, auditLogRoot)
        writer.writeCollectionOfObjectValues<DirectoryAudit>("directoryAudits", auditLogRoot.directoryAudits, serializeDirectoryAudit);
        writer.writeCollectionOfObjectValues<ProvisioningObjectSummary>("provisioning", auditLogRoot.provisioning, serializeProvisioningObjectSummary);
        writer.writeCollectionOfObjectValues<SignIn>("signIns", auditLogRoot.signIns, serializeSignIn);
}
// tslint:enable
// eslint-enable
