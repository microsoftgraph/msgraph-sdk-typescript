// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createUserFlowLanguagePageFromDiscriminatorValue, serializeUserFlowLanguagePage, type UserFlowLanguagePage } from './userFlowLanguagePage';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserFlowLanguageConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserFlowLanguageConfiguration;
}
export function deserializeIntoUserFlowLanguageConfiguration(userFlowLanguageConfiguration: UserFlowLanguageConfiguration | undefined = {} as UserFlowLanguageConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userFlowLanguageConfiguration),
        "defaultPages": n => { userFlowLanguageConfiguration.defaultPages = n.getCollectionOfObjectValues<UserFlowLanguagePage>(createUserFlowLanguagePageFromDiscriminatorValue); },
        "displayName": n => { userFlowLanguageConfiguration.displayName = n.getStringValue(); },
        "isEnabled": n => { userFlowLanguageConfiguration.isEnabled = n.getBooleanValue(); },
        "overridesPages": n => { userFlowLanguageConfiguration.overridesPages = n.getCollectionOfObjectValues<UserFlowLanguagePage>(createUserFlowLanguagePageFromDiscriminatorValue); },
    }
}
export function serializeUserFlowLanguageConfiguration(writer: SerializationWriter, userFlowLanguageConfiguration: UserFlowLanguageConfiguration | undefined = {} as UserFlowLanguageConfiguration) : void {
        serializeEntity(writer, userFlowLanguageConfiguration)
        writer.writeCollectionOfObjectValues<UserFlowLanguagePage>("defaultPages", userFlowLanguageConfiguration.defaultPages, serializeUserFlowLanguagePage);
        writer.writeStringValue("displayName", userFlowLanguageConfiguration.displayName);
        writer.writeBooleanValue("isEnabled", userFlowLanguageConfiguration.isEnabled);
        writer.writeCollectionOfObjectValues<UserFlowLanguagePage>("overridesPages", userFlowLanguageConfiguration.overridesPages, serializeUserFlowLanguagePage);
}
export interface UserFlowLanguageConfiguration extends Entity, Parsable {
    /**
     * Collection of pages with the default content to display in a user flow for a specified language. This collection doesn't allow any kind of modification.
     */
    defaultPages?: UserFlowLanguagePage[];
    /**
     * The language name to display. This property is read-only.
     */
    displayName?: string;
    /**
     * Indicates whether the language is enabled within the user flow.
     */
    isEnabled?: boolean;
    /**
     * Collection of pages with the overrides messages to display in a user flow for a specified language. This collection only allows you to modify the content of the page, any other modification isn't allowed (creation or deletion of pages).
     */
    overridesPages?: UserFlowLanguagePage[];
}
// tslint:enable
// eslint-enable
