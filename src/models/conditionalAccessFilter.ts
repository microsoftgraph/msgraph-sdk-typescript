// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { FilterMode } from './filterMode';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ConditionalAccessFilter extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The mode property
     */
    mode?: FilterMode;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Rule syntax is similar to that used for membership rules for groups in Microsoft Entra ID. For details, see rules with multiple expressions
     */
    rule?: string;
}
export function createConditionalAccessFilterFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoConditionalAccessFilter;
}
export function deserializeIntoConditionalAccessFilter(conditionalAccessFilter: ConditionalAccessFilter | undefined = {} as ConditionalAccessFilter) : Record<string, (node: ParseNode) => void> {
    return {
        "mode": n => { conditionalAccessFilter.mode = n.getEnumValue<FilterMode>(FilterMode); },
        "@odata.type": n => { conditionalAccessFilter.odataType = n.getStringValue(); },
        "rule": n => { conditionalAccessFilter.rule = n.getStringValue(); },
    }
}
export function serializeConditionalAccessFilter(writer: SerializationWriter, conditionalAccessFilter: ConditionalAccessFilter | undefined = {} as ConditionalAccessFilter) : void {
    writer.writeEnumValue<FilterMode>("mode", conditionalAccessFilter.mode);
    writer.writeStringValue("@odata.type", conditionalAccessFilter.odataType);
    writer.writeStringValue("rule", conditionalAccessFilter.rule);
    writer.writeAdditionalData(conditionalAccessFilter.additionalData);
}
// tslint:enable
// eslint-enable
