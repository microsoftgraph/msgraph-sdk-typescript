// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Notebook, type OnenoteEntityHierarchyModel, type OnenoteEntitySchemaObjectModel, type OnenotePage, type OnenoteResource, type OnenoteSection, type SectionGroup } from './index';
import { deserializeIntoNotebook } from './notebook';
import { deserializeIntoOnenoteEntityHierarchyModel } from './onenoteEntityHierarchyModel';
import { deserializeIntoOnenoteEntitySchemaObjectModel } from './onenoteEntitySchemaObjectModel';
import { deserializeIntoOnenotePage } from './onenotePage';
import { deserializeIntoOnenoteResource } from './onenoteResource';
import { deserializeIntoOnenoteSection } from './onenoteSection';
import { deserializeIntoSectionGroup } from './sectionGroup';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnenoteEntityBaseModelFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.notebook":
                    return deserializeIntoNotebook;
                case "#microsoft.graph.onenoteEntityHierarchyModel":
                    return deserializeIntoOnenoteEntityHierarchyModel;
                case "#microsoft.graph.onenoteEntitySchemaObjectModel":
                    return deserializeIntoOnenoteEntitySchemaObjectModel;
                case "#microsoft.graph.onenotePage":
                    return deserializeIntoOnenotePage;
                case "#microsoft.graph.onenoteResource":
                    return deserializeIntoOnenoteResource;
                case "#microsoft.graph.onenoteSection":
                    return deserializeIntoOnenoteSection;
                case "#microsoft.graph.sectionGroup":
                    return deserializeIntoSectionGroup;
            }
        }
    }
    return deserializeIntoOnenoteEntityBaseModel;
}
export function deserializeIntoOnenoteEntityBaseModel(onenoteEntityBaseModel: OnenoteEntityBaseModel | undefined = {} as OnenoteEntityBaseModel) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(onenoteEntityBaseModel),
        "self": n => { onenoteEntityBaseModel.self = n.getStringValue(); },
    }
}
export interface OnenoteEntityBaseModel extends Entity, Parsable {
    /**
     * The endpoint where you can get details about the page. Read-only.
     */
    self?: string;
}
export function serializeOnenoteEntityBaseModel(writer: SerializationWriter, onenoteEntityBaseModel: OnenoteEntityBaseModel | undefined = {} as OnenoteEntityBaseModel) : void {
        serializeEntity(writer, onenoteEntityBaseModel)
        writer.writeStringValue("self", onenoteEntityBaseModel.self);
}
// tslint:enable
// eslint-enable
