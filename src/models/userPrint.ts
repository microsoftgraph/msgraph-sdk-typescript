// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createPrinterShareFromDiscriminatorValue, serializePrinterShare, type PrinterShare } from './printerShare';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserPrintFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserPrint;
}
export function deserializeIntoUserPrint(userPrint: UserPrint | undefined = {} as UserPrint) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { userPrint.odataType = n.getStringValue(); },
        "recentPrinterShares": n => { userPrint.recentPrinterShares = n.getCollectionOfObjectValues<PrinterShare>(createPrinterShareFromDiscriminatorValue); },
    }
}
export function serializeUserPrint(writer: SerializationWriter, userPrint: UserPrint | undefined = {} as UserPrint) : void {
    writer.writeStringValue("@odata.type", userPrint.odataType);
    writer.writeCollectionOfObjectValues<PrinterShare>("recentPrinterShares", userPrint.recentPrinterShares, serializePrinterShare);
    writer.writeAdditionalData(userPrint.additionalData);
}
export interface UserPrint extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The recentPrinterShares property
     */
    recentPrinterShares?: PrinterShare[];
}
// tslint:enable
// eslint-enable
