// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ChecklistItem extends Entity, Parsable {
    /**
     * The date and time when the checklistItem was finished.
     */
    checkedDateTime?: Date;
    /**
     * The date and time when the checklistItem was created.
     */
    createdDateTime?: Date;
    /**
     * Field indicating the title of checklistItem.
     */
    displayName?: string;
    /**
     * State indicating whether the item is checked off or not.
     */
    isChecked?: boolean;
}
export function createChecklistItemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoChecklistItem;
}
export function deserializeIntoChecklistItem(checklistItem: ChecklistItem | undefined = {} as ChecklistItem) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(checklistItem),
        "checkedDateTime": n => { checklistItem.checkedDateTime = n.getDateValue(); },
        "createdDateTime": n => { checklistItem.createdDateTime = n.getDateValue(); },
        "displayName": n => { checklistItem.displayName = n.getStringValue(); },
        "isChecked": n => { checklistItem.isChecked = n.getBooleanValue(); },
    }
}
export function serializeChecklistItem(writer: SerializationWriter, checklistItem: ChecklistItem | undefined = {} as ChecklistItem) : void {
    serializeEntity(writer, checklistItem)
    writer.writeDateValue("checkedDateTime", checklistItem.checkedDateTime);
    writer.writeDateValue("createdDateTime", checklistItem.createdDateTime);
    writer.writeStringValue("displayName", checklistItem.displayName);
    writer.writeBooleanValue("isChecked", checklistItem.isChecked);
}
// tslint:enable
// eslint-enable
