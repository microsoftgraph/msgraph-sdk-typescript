// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoMobileApp, serializeMobileApp, type MobileApp } from './mobileApp';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIosiPadOSWebClipFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosiPadOSWebClip;
}
export function deserializeIntoIosiPadOSWebClip(iosiPadOSWebClip: IosiPadOSWebClip | undefined = {} as IosiPadOSWebClip) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMobileApp(iosiPadOSWebClip),
        "appUrl": n => { iosiPadOSWebClip.appUrl = n.getStringValue(); },
        "useManagedBrowser": n => { iosiPadOSWebClip.useManagedBrowser = n.getBooleanValue(); },
    }
}
export interface IosiPadOSWebClip extends MobileApp, Parsable {
    /**
     * Indicates iOS/iPadOS web clip app URL. Example: 'https://www.contoso.com'
     */
    appUrl?: string;
    /**
     * Whether or not to use managed browser. When TRUE, the app will be required to be opened in Microsoft Edge. When FALSE, the app will not be required to be opened in Microsoft Edge. By default, this property is set to FALSE.
     */
    useManagedBrowser?: boolean;
}
export function serializeIosiPadOSWebClip(writer: SerializationWriter, iosiPadOSWebClip: IosiPadOSWebClip | undefined = {} as IosiPadOSWebClip) : void {
        serializeMobileApp(writer, iosiPadOSWebClip)
        writer.writeStringValue("appUrl", iosiPadOSWebClip.appUrl);
        writer.writeBooleanValue("useManagedBrowser", iosiPadOSWebClip.useManagedBrowser);
}
// tslint:enable
// eslint-enable
