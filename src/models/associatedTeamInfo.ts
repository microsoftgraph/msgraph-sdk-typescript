import { deserializeIntoTeamInfo, serializeTeamInfo, type TeamInfo } from './teamInfo';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AssociatedTeamInfo extends Parsable, TeamInfo {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAssociatedTeamInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAssociatedTeamInfo;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAssociatedTeamInfo(associatedTeamInfo: AssociatedTeamInfo | undefined = {} as AssociatedTeamInfo) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTeamInfo(associatedTeamInfo),
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAssociatedTeamInfo(writer: SerializationWriter, associatedTeamInfo: AssociatedTeamInfo | undefined = {} as AssociatedTeamInfo) : void {
        serializeTeamInfo(writer, associatedTeamInfo)
}
