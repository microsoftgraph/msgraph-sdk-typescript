// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createManagedAppDiagnosticStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoManagedAppDiagnosticStatus;
}
export function deserializeIntoManagedAppDiagnosticStatus(managedAppDiagnosticStatus: ManagedAppDiagnosticStatus | undefined = {} as ManagedAppDiagnosticStatus) : Record<string, (node: ParseNode) => void> {
    return {
        "mitigationInstruction": n => { managedAppDiagnosticStatus.mitigationInstruction = n.getStringValue(); },
        "@odata.type": n => { managedAppDiagnosticStatus.odataType = n.getStringValue(); },
        "state": n => { managedAppDiagnosticStatus.state = n.getStringValue(); },
        "validationName": n => { managedAppDiagnosticStatus.validationName = n.getStringValue(); },
    }
}
export interface ManagedAppDiagnosticStatus extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Instruction on how to mitigate a failed validation
     */
    mitigationInstruction?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The state of the operation
     */
    state?: string;
    /**
     * The validation friendly name
     */
    validationName?: string;
}
export function serializeManagedAppDiagnosticStatus(writer: SerializationWriter, managedAppDiagnosticStatus: ManagedAppDiagnosticStatus | undefined = {} as ManagedAppDiagnosticStatus) : void {
        writer.writeStringValue("mitigationInstruction", managedAppDiagnosticStatus.mitigationInstruction);
        writer.writeStringValue("@odata.type", managedAppDiagnosticStatus.odataType);
        writer.writeStringValue("state", managedAppDiagnosticStatus.state);
        writer.writeStringValue("validationName", managedAppDiagnosticStatus.validationName);
        writer.writeAdditionalData(managedAppDiagnosticStatus.additionalData);
}
// tslint:enable
// eslint-enable
