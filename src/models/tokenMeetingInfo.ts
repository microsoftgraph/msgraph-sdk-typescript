import { deserializeIntoMeetingInfo, serializeMeetingInfo, type MeetingInfo } from './meetingInfo';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTokenMeetingInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTokenMeetingInfo;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTokenMeetingInfo(tokenMeetingInfo: TokenMeetingInfo | undefined = {} as TokenMeetingInfo) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoMeetingInfo(tokenMeetingInfo),
        "token": n => { tokenMeetingInfo.token = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTokenMeetingInfo(writer: SerializationWriter, tokenMeetingInfo: TokenMeetingInfo | undefined = {} as TokenMeetingInfo) : void {
        serializeMeetingInfo(writer, tokenMeetingInfo)
        writer.writeStringValue("token", tokenMeetingInfo.token);
}
export interface TokenMeetingInfo extends MeetingInfo, Parsable {
    /**
     * The token used to join the call.
     */
    token?: string;
}
