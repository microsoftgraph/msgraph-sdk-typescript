// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserSimulationEventInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserSimulationEventInfo;
}
export function deserializeIntoUserSimulationEventInfo(userSimulationEventInfo: UserSimulationEventInfo | undefined = {} as UserSimulationEventInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "browser": n => { userSimulationEventInfo.browser = n.getStringValue(); },
        "eventDateTime": n => { userSimulationEventInfo.eventDateTime = n.getDateValue(); },
        "eventName": n => { userSimulationEventInfo.eventName = n.getStringValue(); },
        "ipAddress": n => { userSimulationEventInfo.ipAddress = n.getStringValue(); },
        "@odata.type": n => { userSimulationEventInfo.odataType = n.getStringValue(); },
        "osPlatformDeviceDetails": n => { userSimulationEventInfo.osPlatformDeviceDetails = n.getStringValue(); },
    }
}
export function serializeUserSimulationEventInfo(writer: SerializationWriter, userSimulationEventInfo: UserSimulationEventInfo | undefined = {} as UserSimulationEventInfo) : void {
    writer.writeStringValue("browser", userSimulationEventInfo.browser);
    writer.writeDateValue("eventDateTime", userSimulationEventInfo.eventDateTime);
    writer.writeStringValue("eventName", userSimulationEventInfo.eventName);
    writer.writeStringValue("ipAddress", userSimulationEventInfo.ipAddress);
    writer.writeStringValue("@odata.type", userSimulationEventInfo.odataType);
    writer.writeStringValue("osPlatformDeviceDetails", userSimulationEventInfo.osPlatformDeviceDetails);
    writer.writeAdditionalData(userSimulationEventInfo.additionalData);
}
export interface UserSimulationEventInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Browser information from where the simulation event was initiated by a user in an attack simulation and training campaign.
     */
    browser?: string;
    /**
     * Date and time of the simulation event by a user in an attack simulation and training campaign.
     */
    eventDateTime?: Date;
    /**
     * Name of the simulation event by a user in an attack simulation and training campaign.
     */
    eventName?: string;
    /**
     * IP address from where the simulation event was initiated by a user in an attack simulation and training campaign.
     */
    ipAddress?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The operating system, platform, and device details from where the simulation event was initiated by a user in an attack simulation and training campaign.
     */
    osPlatformDeviceDetails?: string;
}
// tslint:enable
// eslint-enable
