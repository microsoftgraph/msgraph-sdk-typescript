// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { AppLogUploadState } from './appLogUploadState';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AppLogCollectionRequest extends Entity, Parsable {
    /**
     * Time at which the upload log request reached a completed state if not completed yet NULL will be returned.
     */
    completedDateTime?: Date;
    /**
     * List of log folders.
     */
    customLogFolders?: string[];
    /**
     * Indicates error message if any during the upload process.
     */
    errorMessage?: string;
    /**
     * AppLogUploadStatus
     */
    status?: AppLogUploadState;
}
export function createAppLogCollectionRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAppLogCollectionRequest;
}
export function deserializeIntoAppLogCollectionRequest(appLogCollectionRequest: AppLogCollectionRequest | undefined = {} as AppLogCollectionRequest) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(appLogCollectionRequest),
        "completedDateTime": n => { appLogCollectionRequest.completedDateTime = n.getDateValue(); },
        "customLogFolders": n => { appLogCollectionRequest.customLogFolders = n.getCollectionOfPrimitiveValues<string>(); },
        "errorMessage": n => { appLogCollectionRequest.errorMessage = n.getStringValue(); },
        "status": n => { appLogCollectionRequest.status = n.getEnumValue<AppLogUploadState>(AppLogUploadState); },
    }
}
export function serializeAppLogCollectionRequest(writer: SerializationWriter, appLogCollectionRequest: AppLogCollectionRequest | undefined = {} as AppLogCollectionRequest) : void {
    serializeEntity(writer, appLogCollectionRequest)
    writer.writeDateValue("completedDateTime", appLogCollectionRequest.completedDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("customLogFolders", appLogCollectionRequest.customLogFolders);
    writer.writeStringValue("errorMessage", appLogCollectionRequest.errorMessage);
    writer.writeEnumValue<AppLogUploadState>("status", appLogCollectionRequest.status);
}
// tslint:enable
// eslint-enable
