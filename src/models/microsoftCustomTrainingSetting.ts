// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createMicrosoftTrainingAssignmentMappingFromDiscriminatorValue, serializeMicrosoftTrainingAssignmentMapping, type MicrosoftTrainingAssignmentMapping } from './microsoftTrainingAssignmentMapping';
import { TrainingCompletionDuration } from './trainingCompletionDuration';
import { deserializeIntoTrainingSetting, serializeTrainingSetting, type TrainingSetting } from './trainingSetting';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMicrosoftCustomTrainingSettingFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMicrosoftCustomTrainingSetting;
}
export function deserializeIntoMicrosoftCustomTrainingSetting(microsoftCustomTrainingSetting: MicrosoftCustomTrainingSetting | undefined = {} as MicrosoftCustomTrainingSetting) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTrainingSetting(microsoftCustomTrainingSetting),
        "completionDateTime": n => { microsoftCustomTrainingSetting.completionDateTime = n.getDateValue(); },
        "trainingAssignmentMappings": n => { microsoftCustomTrainingSetting.trainingAssignmentMappings = n.getCollectionOfObjectValues<MicrosoftTrainingAssignmentMapping>(createMicrosoftTrainingAssignmentMappingFromDiscriminatorValue); },
        "trainingCompletionDuration": n => { microsoftCustomTrainingSetting.trainingCompletionDuration = n.getEnumValue<TrainingCompletionDuration>(TrainingCompletionDuration); },
    }
}
export interface MicrosoftCustomTrainingSetting extends Parsable, TrainingSetting {
    /**
     * The completion date and time of the training. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    completionDateTime?: Date;
    /**
     * The mapping details of the associated training.
     */
    trainingAssignmentMappings?: MicrosoftTrainingAssignmentMapping[];
    /**
     * The training completion duration that needs to be provided before scheduling the training. Possible values are: week, fortnite, month, unknownFutureValue.
     */
    trainingCompletionDuration?: TrainingCompletionDuration;
}
export function serializeMicrosoftCustomTrainingSetting(writer: SerializationWriter, microsoftCustomTrainingSetting: MicrosoftCustomTrainingSetting | undefined = {} as MicrosoftCustomTrainingSetting) : void {
    serializeTrainingSetting(writer, microsoftCustomTrainingSetting)
    writer.writeDateValue("completionDateTime", microsoftCustomTrainingSetting.completionDateTime);
    writer.writeCollectionOfObjectValues<MicrosoftTrainingAssignmentMapping>("trainingAssignmentMappings", microsoftCustomTrainingSetting.trainingAssignmentMappings, serializeMicrosoftTrainingAssignmentMapping);
    writer.writeEnumValue<TrainingCompletionDuration>("trainingCompletionDuration", microsoftCustomTrainingSetting.trainingCompletionDuration);
}
// tslint:enable
// eslint-enable
