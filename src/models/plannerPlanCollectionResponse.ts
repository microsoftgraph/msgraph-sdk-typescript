// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createPlannerPlanFromDiscriminatorValue, serializePlannerPlan, type PlannerPlan } from './plannerPlan';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPlannerPlanCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPlannerPlanCollectionResponse;
}
export function deserializeIntoPlannerPlanCollectionResponse(plannerPlanCollectionResponse: PlannerPlanCollectionResponse | undefined = {} as PlannerPlanCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(plannerPlanCollectionResponse),
        "value": n => { plannerPlanCollectionResponse.value = n.getCollectionOfObjectValues<PlannerPlan>(createPlannerPlanFromDiscriminatorValue); },
    }
}
export interface PlannerPlanCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PlannerPlan[];
}
export function serializePlannerPlanCollectionResponse(writer: SerializationWriter, plannerPlanCollectionResponse: PlannerPlanCollectionResponse | undefined = {} as PlannerPlanCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, plannerPlanCollectionResponse)
        writer.writeCollectionOfObjectValues<PlannerPlan>("value", plannerPlanCollectionResponse.value, serializePlannerPlan);
}
// tslint:enable
// eslint-enable
