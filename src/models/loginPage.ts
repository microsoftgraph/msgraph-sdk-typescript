// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createEmailIdentityFromDiscriminatorValue, serializeEmailIdentity, type EmailIdentity } from './emailIdentity';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { SimulationContentSource } from './simulationContentSource';
import { SimulationContentStatus } from './simulationContentStatus';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createLoginPageFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoLoginPage;
}
export function deserializeIntoLoginPage(loginPage: LoginPage | undefined = {} as LoginPage) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(loginPage),
        "content": n => { loginPage.content = n.getStringValue(); },
        "createdBy": n => { loginPage.createdBy = n.getObjectValue<EmailIdentity>(createEmailIdentityFromDiscriminatorValue); },
        "createdDateTime": n => { loginPage.createdDateTime = n.getDateValue(); },
        "description": n => { loginPage.description = n.getStringValue(); },
        "displayName": n => { loginPage.displayName = n.getStringValue(); },
        "language": n => { loginPage.language = n.getStringValue(); },
        "lastModifiedBy": n => { loginPage.lastModifiedBy = n.getObjectValue<EmailIdentity>(createEmailIdentityFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { loginPage.lastModifiedDateTime = n.getDateValue(); },
        "source": n => { loginPage.source = n.getEnumValue<SimulationContentSource>(SimulationContentSource); },
        "status": n => { loginPage.status = n.getEnumValue<SimulationContentStatus>(SimulationContentStatus); },
    }
}
export interface LoginPage extends Entity, Parsable {
    /**
     * The content property
     */
    content?: string;
    /**
     * The createdBy property
     */
    createdBy?: EmailIdentity;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date;
    /**
     * The description property
     */
    description?: string;
    /**
     * The displayName property
     */
    displayName?: string;
    /**
     * The language property
     */
    language?: string;
    /**
     * The lastModifiedBy property
     */
    lastModifiedBy?: EmailIdentity;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date;
    /**
     * The source property
     */
    source?: SimulationContentSource;
    /**
     * The status property
     */
    status?: SimulationContentStatus;
}
export function serializeLoginPage(writer: SerializationWriter, loginPage: LoginPage | undefined = {} as LoginPage) : void {
        serializeEntity(writer, loginPage)
        writer.writeStringValue("content", loginPage.content);
        writer.writeObjectValue<EmailIdentity>("createdBy", loginPage.createdBy, );
        writer.writeDateValue("createdDateTime", loginPage.createdDateTime);
        writer.writeStringValue("description", loginPage.description);
        writer.writeStringValue("displayName", loginPage.displayName);
        writer.writeStringValue("language", loginPage.language);
        writer.writeObjectValue<EmailIdentity>("lastModifiedBy", loginPage.lastModifiedBy, );
        writer.writeDateValue("lastModifiedDateTime", loginPage.lastModifiedDateTime);
        writer.writeEnumValue<SimulationContentSource>("source", loginPage.source);
        writer.writeEnumValue<SimulationContentStatus>("status", loginPage.status);
}
// tslint:enable
// eslint-enable
