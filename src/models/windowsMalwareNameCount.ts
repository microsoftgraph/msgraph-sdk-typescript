// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsMalwareNameCountFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsMalwareNameCount;
}
export function deserializeIntoWindowsMalwareNameCount(windowsMalwareNameCount: WindowsMalwareNameCount | undefined = {} as WindowsMalwareNameCount) : Record<string, (node: ParseNode) => void> {
    return {
        "deviceCount": n => { windowsMalwareNameCount.deviceCount = n.getNumberValue(); },
        "lastUpdateDateTime": n => { windowsMalwareNameCount.lastUpdateDateTime = n.getDateValue(); },
        "malwareIdentifier": n => { windowsMalwareNameCount.malwareIdentifier = n.getStringValue(); },
        "name": n => { windowsMalwareNameCount.name = n.getStringValue(); },
        "@odata.type": n => { windowsMalwareNameCount.odataType = n.getStringValue(); },
    }
}
export function serializeWindowsMalwareNameCount(writer: SerializationWriter, windowsMalwareNameCount: WindowsMalwareNameCount | undefined = {} as WindowsMalwareNameCount) : void {
        writer.writeNumberValue("deviceCount", windowsMalwareNameCount.deviceCount);
        writer.writeDateValue("lastUpdateDateTime", windowsMalwareNameCount.lastUpdateDateTime);
        writer.writeStringValue("malwareIdentifier", windowsMalwareNameCount.malwareIdentifier);
        writer.writeStringValue("name", windowsMalwareNameCount.name);
        writer.writeStringValue("@odata.type", windowsMalwareNameCount.odataType);
        writer.writeAdditionalData(windowsMalwareNameCount.additionalData);
}
export interface WindowsMalwareNameCount extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Count of devices with malware dectected for this malware
     */
    deviceCount?: number;
    /**
     * The Timestamp of the last update for the device count in UTC
     */
    lastUpdateDateTime?: Date;
    /**
     * The unique identifier. This is malware identifier
     */
    malwareIdentifier?: string;
    /**
     * Malware name
     */
    name?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
