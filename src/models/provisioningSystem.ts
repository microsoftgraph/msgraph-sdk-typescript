import { createDetailsInfoFromDiscriminatorValue, serializeDetailsInfo, type DetailsInfo } from './detailsInfo';
import { deserializeIntoIdentity, serializeIdentity, type Identity } from './identity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createProvisioningSystemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoProvisioningSystem;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoProvisioningSystem(provisioningSystem: ProvisioningSystem | undefined = {} as ProvisioningSystem) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(provisioningSystem),
        "details": n => { provisioningSystem.details = n.getObjectValue<DetailsInfo>(createDetailsInfoFromDiscriminatorValue); },
    }
}
export interface ProvisioningSystem extends Identity, Parsable {
    /**
     * Details of the system.
     */
    details?: DetailsInfo;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeProvisioningSystem(writer: SerializationWriter, provisioningSystem: ProvisioningSystem | undefined = {} as ProvisioningSystem) : void {
        serializeIdentity(writer, provisioningSystem)
        writer.writeObjectValue<DetailsInfo>("details", provisioningSystem.details, );
}
