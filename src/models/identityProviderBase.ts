// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAppleManagedIdentityProvider } from './appleManagedIdentityProvider';
import { deserializeIntoBuiltInIdentityProvider } from './builtInIdentityProvider';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type AppleManagedIdentityProvider, type BuiltInIdentityProvider, type InternalDomainFederation, type SamlOrWsFedExternalDomainFederation, type SamlOrWsFedProvider, type SocialIdentityProvider } from './index';
import { deserializeIntoInternalDomainFederation } from './internalDomainFederation';
import { deserializeIntoSamlOrWsFedExternalDomainFederation } from './samlOrWsFedExternalDomainFederation';
import { deserializeIntoSamlOrWsFedProvider } from './samlOrWsFedProvider';
import { deserializeIntoSocialIdentityProvider } from './socialIdentityProvider';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIdentityProviderBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.appleManagedIdentityProvider":
                    return deserializeIntoAppleManagedIdentityProvider;
                case "#microsoft.graph.builtInIdentityProvider":
                    return deserializeIntoBuiltInIdentityProvider;
                case "#microsoft.graph.internalDomainFederation":
                    return deserializeIntoInternalDomainFederation;
                case "#microsoft.graph.samlOrWsFedExternalDomainFederation":
                    return deserializeIntoSamlOrWsFedExternalDomainFederation;
                case "#microsoft.graph.samlOrWsFedProvider":
                    return deserializeIntoSamlOrWsFedProvider;
                case "#microsoft.graph.socialIdentityProvider":
                    return deserializeIntoSocialIdentityProvider;
            }
        }
    }
    return deserializeIntoIdentityProviderBase;
}
export function deserializeIntoIdentityProviderBase(identityProviderBase: IdentityProviderBase | undefined = {} as IdentityProviderBase) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(identityProviderBase),
        "displayName": n => { identityProviderBase.displayName = n.getStringValue(); },
    }
}
export interface IdentityProviderBase extends Entity, Parsable {
    /**
     * The display name of the identity provider.
     */
    displayName?: string;
}
export function serializeIdentityProviderBase(writer: SerializationWriter, identityProviderBase: IdentityProviderBase | undefined = {} as IdentityProviderBase) : void {
    serializeEntity(writer, identityProviderBase)
    writer.writeStringValue("displayName", identityProviderBase.displayName);
}
// tslint:enable
// eslint-enable
