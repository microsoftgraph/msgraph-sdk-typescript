// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTenantInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTenantInformation;
}
export function deserializeIntoTenantInformation(tenantInformation: TenantInformation | undefined = {} as TenantInformation) : Record<string, (node: ParseNode) => void> {
    return {
        "defaultDomainName": n => { tenantInformation.defaultDomainName = n.getStringValue(); },
        "displayName": n => { tenantInformation.displayName = n.getStringValue(); },
        "federationBrandName": n => { tenantInformation.federationBrandName = n.getStringValue(); },
        "@odata.type": n => { tenantInformation.odataType = n.getStringValue(); },
        "tenantId": n => { tenantInformation.tenantId = n.getStringValue(); },
    }
}
export function serializeTenantInformation(writer: SerializationWriter, tenantInformation: TenantInformation | undefined = {} as TenantInformation) : void {
    writer.writeStringValue("defaultDomainName", tenantInformation.defaultDomainName);
    writer.writeStringValue("displayName", tenantInformation.displayName);
    writer.writeStringValue("federationBrandName", tenantInformation.federationBrandName);
    writer.writeStringValue("@odata.type", tenantInformation.odataType);
    writer.writeStringValue("tenantId", tenantInformation.tenantId);
    writer.writeAdditionalData(tenantInformation.additionalData);
}
export interface TenantInformation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Primary domain name of a Microsoft Entra tenant.
     */
    defaultDomainName?: string;
    /**
     * Display name of a Microsoft Entra tenant.
     */
    displayName?: string;
    /**
     * Name shown to users that sign in to a Microsoft Entra tenant.
     */
    federationBrandName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Unique identifier of a Microsoft Entra tenant.
     */
    tenantId?: string;
}
// tslint:enable
// eslint-enable
