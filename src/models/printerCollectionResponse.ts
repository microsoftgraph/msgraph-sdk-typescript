import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createPrinterFromDiscriminatorValue, serializePrinter, type Printer } from './printer';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createPrinterCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrinterCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoPrinterCollectionResponse(printerCollectionResponse: PrinterCollectionResponse | undefined = {} as PrinterCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(printerCollectionResponse),
        "value": n => { printerCollectionResponse.value = n.getCollectionOfObjectValues<Printer>(createPrinterFromDiscriminatorValue); },
    }
}
export interface PrinterCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Printer[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializePrinterCollectionResponse(writer: SerializationWriter, printerCollectionResponse: PrinterCollectionResponse | undefined = {} as PrinterCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, printerCollectionResponse)
        writer.writeCollectionOfObjectValues<Printer>("value", printerCollectionResponse.value, );
}
