// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessPackageFromDiscriminatorValue, serializeAccessPackage, type AccessPackage } from './accessPackage';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessPackageCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AccessPackage[];
}
export function createAccessPackageCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessPackageCollectionResponse;
}
export function deserializeIntoAccessPackageCollectionResponse(accessPackageCollectionResponse: AccessPackageCollectionResponse | undefined = {} as AccessPackageCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(accessPackageCollectionResponse),
        "value": n => { accessPackageCollectionResponse.value = n.getCollectionOfObjectValues<AccessPackage>(createAccessPackageFromDiscriminatorValue); },
    }
}
export function serializeAccessPackageCollectionResponse(writer: SerializationWriter, accessPackageCollectionResponse: AccessPackageCollectionResponse | undefined = {} as AccessPackageCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, accessPackageCollectionResponse)
        writer.writeCollectionOfObjectValues<AccessPackage>("value", accessPackageCollectionResponse.value, );
}
// tslint:enable
// eslint-enable
