// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAuthenticationMethodsRootFromDiscriminatorValue, serializeAuthenticationMethodsRoot, type AuthenticationMethodsRoot } from './authenticationMethodsRoot';
import { createPrintUsageByPrinterFromDiscriminatorValue, serializePrintUsageByPrinter, type PrintUsageByPrinter } from './printUsageByPrinter';
import { createPrintUsageByUserFromDiscriminatorValue, serializePrintUsageByUser, type PrintUsageByUser } from './printUsageByUser';
import { createSecurityReportsRootFromDiscriminatorValue, serializeSecurityReportsRoot, type SecurityReportsRoot } from './securityReportsRoot';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createReportRootFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoReportRoot;
}
export function deserializeIntoReportRoot(reportRoot: ReportRoot | undefined = {} as ReportRoot) : Record<string, (node: ParseNode) => void> {
    return {
        "authenticationMethods": n => { reportRoot.authenticationMethods = n.getObjectValue<AuthenticationMethodsRoot>(createAuthenticationMethodsRootFromDiscriminatorValue); },
        "dailyPrintUsageByPrinter": n => { reportRoot.dailyPrintUsageByPrinter = n.getCollectionOfObjectValues<PrintUsageByPrinter>(createPrintUsageByPrinterFromDiscriminatorValue); },
        "dailyPrintUsageByUser": n => { reportRoot.dailyPrintUsageByUser = n.getCollectionOfObjectValues<PrintUsageByUser>(createPrintUsageByUserFromDiscriminatorValue); },
        "monthlyPrintUsageByPrinter": n => { reportRoot.monthlyPrintUsageByPrinter = n.getCollectionOfObjectValues<PrintUsageByPrinter>(createPrintUsageByPrinterFromDiscriminatorValue); },
        "monthlyPrintUsageByUser": n => { reportRoot.monthlyPrintUsageByUser = n.getCollectionOfObjectValues<PrintUsageByUser>(createPrintUsageByUserFromDiscriminatorValue); },
        "@odata.type": n => { reportRoot.odataType = n.getStringValue(); },
        "security": n => { reportRoot.security = n.getObjectValue<SecurityReportsRoot>(createSecurityReportsRootFromDiscriminatorValue); },
    }
}
export interface ReportRoot extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Container for navigation properties for Microsoft Entra authentication methods resources.
     */
    authenticationMethods?: AuthenticationMethodsRoot;
    /**
     * Retrieve a list of daily print usage summaries, grouped by printer.
     */
    dailyPrintUsageByPrinter?: PrintUsageByPrinter[];
    /**
     * Retrieve a list of daily print usage summaries, grouped by user.
     */
    dailyPrintUsageByUser?: PrintUsageByUser[];
    /**
     * Retrieve a list of monthly print usage summaries, grouped by printer.
     */
    monthlyPrintUsageByPrinter?: PrintUsageByPrinter[];
    /**
     * Retrieve a list of monthly print usage summaries, grouped by user.
     */
    monthlyPrintUsageByUser?: PrintUsageByUser[];
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Represents an abstract type that contains resources for attack simulation and training reports.
     */
    security?: SecurityReportsRoot;
}
export function serializeReportRoot(writer: SerializationWriter, reportRoot: ReportRoot | undefined = {} as ReportRoot) : void {
        writer.writeObjectValue<AuthenticationMethodsRoot>("authenticationMethods", reportRoot.authenticationMethods, );
        writer.writeCollectionOfObjectValues<PrintUsageByPrinter>("dailyPrintUsageByPrinter", reportRoot.dailyPrintUsageByPrinter, );
        writer.writeCollectionOfObjectValues<PrintUsageByUser>("dailyPrintUsageByUser", reportRoot.dailyPrintUsageByUser, );
        writer.writeCollectionOfObjectValues<PrintUsageByPrinter>("monthlyPrintUsageByPrinter", reportRoot.monthlyPrintUsageByPrinter, );
        writer.writeCollectionOfObjectValues<PrintUsageByUser>("monthlyPrintUsageByUser", reportRoot.monthlyPrintUsageByUser, );
        writer.writeStringValue("@odata.type", reportRoot.odataType);
        writer.writeObjectValue<SecurityReportsRoot>("security", reportRoot.security, );
        writer.writeAdditionalData(reportRoot.additionalData);
}
// tslint:enable
// eslint-enable
