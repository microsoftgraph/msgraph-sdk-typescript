// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { MailDestinationRoutingReason } from './mailDestinationRoutingReason';
import { deserializeIntoThreatAssessmentRequest, serializeThreatAssessmentRequest, type ThreatAssessmentRequest } from './threatAssessmentRequest';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMailAssessmentRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMailAssessmentRequest;
}
export function deserializeIntoMailAssessmentRequest(mailAssessmentRequest: MailAssessmentRequest | undefined = {} as MailAssessmentRequest) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoThreatAssessmentRequest(mailAssessmentRequest),
        "destinationRoutingReason": n => { mailAssessmentRequest.destinationRoutingReason = n.getEnumValue<MailDestinationRoutingReason>(MailDestinationRoutingReason); },
        "messageUri": n => { mailAssessmentRequest.messageUri = n.getStringValue(); },
        "recipientEmail": n => { mailAssessmentRequest.recipientEmail = n.getStringValue(); },
    }
}
export interface MailAssessmentRequest extends Parsable, ThreatAssessmentRequest {
    /**
     * The reason for mail routed to its destination. Possible values are: none, mailFlowRule, safeSender, blockedSender, advancedSpamFiltering, domainAllowList, domainBlockList, notInAddressBook, firstTimeSender, autoPurgeToInbox, autoPurgeToJunk, autoPurgeToDeleted, outbound, notJunk, junk.
     */
    destinationRoutingReason?: MailDestinationRoutingReason;
    /**
     * The resource URI of the mail message for assessment.
     */
    messageUri?: string;
    /**
     * The mail recipient whose policies are used to assess the mail.
     */
    recipientEmail?: string;
}
export function serializeMailAssessmentRequest(writer: SerializationWriter, mailAssessmentRequest: MailAssessmentRequest | undefined = {} as MailAssessmentRequest) : void {
    serializeThreatAssessmentRequest(writer, mailAssessmentRequest)
    writer.writeEnumValue<MailDestinationRoutingReason>("destinationRoutingReason", mailAssessmentRequest.destinationRoutingReason);
    writer.writeStringValue("messageUri", mailAssessmentRequest.messageUri);
    writer.writeStringValue("recipientEmail", mailAssessmentRequest.recipientEmail);
}
// tslint:enable
// eslint-enable
