import { deserializeIntoTeamworkNotificationRecipient, serializeTeamworkNotificationRecipient, type TeamworkNotificationRecipient } from './teamworkNotificationRecipient';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTeamMembersNotificationRecipientFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamMembersNotificationRecipient;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTeamMembersNotificationRecipient(teamMembersNotificationRecipient: TeamMembersNotificationRecipient | undefined = {} as TeamMembersNotificationRecipient) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTeamworkNotificationRecipient(teamMembersNotificationRecipient),
        "teamId": n => { teamMembersNotificationRecipient.teamId = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTeamMembersNotificationRecipient(writer: SerializationWriter, teamMembersNotificationRecipient: TeamMembersNotificationRecipient | undefined = {} as TeamMembersNotificationRecipient) : void {
        serializeTeamworkNotificationRecipient(writer, teamMembersNotificationRecipient)
        writer.writeStringValue("teamId", teamMembersNotificationRecipient.teamId);
}
export interface TeamMembersNotificationRecipient extends Parsable, TeamworkNotificationRecipient {
    /**
     * The unique identifier for the team whose members should receive the notification.
     */
    teamId?: string;
}
