// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createApprovalStageFromDiscriminatorValue, serializeApprovalStage, type ApprovalStage } from './approvalStage';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Approval extends Entity, Parsable {
    /**
     * A collection of stages in the approval decision.
     */
    stages?: ApprovalStage[];
}
export function createApprovalFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoApproval;
}
export function deserializeIntoApproval(approval: Approval | undefined = {} as Approval) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(approval),
        "stages": n => { approval.stages = n.getCollectionOfObjectValues<ApprovalStage>(createApprovalStageFromDiscriminatorValue); },
    }
}
export function serializeApproval(writer: SerializationWriter, approval: Approval | undefined = {} as Approval) : void {
    serializeEntity(writer, approval)
    writer.writeCollectionOfObjectValues<ApprovalStage>("stages", approval.stages, serializeApprovalStage);
}
// tslint:enable
// eslint-enable
