// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseEndUserNotification, serializeBaseEndUserNotification, type BaseEndUserNotification } from './baseEndUserNotification';
import { TargettedUserType } from './targettedUserType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSimulationNotificationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSimulationNotification;
}
export function deserializeIntoSimulationNotification(simulationNotification: SimulationNotification | undefined = {} as SimulationNotification) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseEndUserNotification(simulationNotification),
        "targettedUserType": n => { simulationNotification.targettedUserType = n.getEnumValue<TargettedUserType>(TargettedUserType); },
    }
}
export function serializeSimulationNotification(writer: SerializationWriter, simulationNotification: SimulationNotification | undefined = {} as SimulationNotification) : void {
        serializeBaseEndUserNotification(writer, simulationNotification)
        writer.writeEnumValue<TargettedUserType>("targettedUserType", simulationNotification.targettedUserType);
}
export interface SimulationNotification extends BaseEndUserNotification, Parsable {
    /**
     * Target user type. Possible values are: unknown, clicked, compromised, allUsers, unknownFutureValue.
     */
    targettedUserType?: TargettedUserType;
}
// tslint:enable
// eslint-enable
