import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AppIdentity extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Refers to the Unique GUID representing Application Id in the Azure Active Directory.
     */
    appId?: string;
    /**
     * Refers to the application name displayed in the Microsoft Entra admin center.
     */
    displayName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Refers to the Unique GUID indicating Service Principal Id in Azure Active Directory for the corresponding App.
     */
    servicePrincipalId?: string;
    /**
     * Refers to the Service Principal Name is the Application name in the tenant.
     */
    servicePrincipalName?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAppIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAppIdentity;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAppIdentity(appIdentity: AppIdentity | undefined = {} as AppIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        "appId": n => { appIdentity.appId = n.getStringValue(); },
        "displayName": n => { appIdentity.displayName = n.getStringValue(); },
        "@odata.type": n => { appIdentity.odataType = n.getStringValue(); },
        "servicePrincipalId": n => { appIdentity.servicePrincipalId = n.getStringValue(); },
        "servicePrincipalName": n => { appIdentity.servicePrincipalName = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAppIdentity(writer: SerializationWriter, appIdentity: AppIdentity | undefined = {} as AppIdentity) : void {
        writer.writeStringValue("appId", appIdentity.appId);
        writer.writeStringValue("displayName", appIdentity.displayName);
        writer.writeStringValue("@odata.type", appIdentity.odataType);
        writer.writeStringValue("servicePrincipalId", appIdentity.servicePrincipalId);
        writer.writeStringValue("servicePrincipalName", appIdentity.servicePrincipalName);
        writer.writeAdditionalData(appIdentity.additionalData);
}
