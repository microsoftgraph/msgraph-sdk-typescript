// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createBookingWorkTimeSlotFromDiscriminatorValue, serializeBookingWorkTimeSlot, type BookingWorkTimeSlot } from './bookingWorkTimeSlot';
import { DayOfWeek } from './dayOfWeek';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingWorkHours extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The day property
     */
    day?: DayOfWeek;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * A list of start/end times during a day.
     */
    timeSlots?: BookingWorkTimeSlot[];
}
export function createBookingWorkHoursFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBookingWorkHours;
}
export function deserializeIntoBookingWorkHours(bookingWorkHours: BookingWorkHours | undefined = {} as BookingWorkHours) : Record<string, (node: ParseNode) => void> {
    return {
        "day": n => { bookingWorkHours.day = n.getEnumValue<DayOfWeek>(DayOfWeek); },
        "@odata.type": n => { bookingWorkHours.odataType = n.getStringValue(); },
        "timeSlots": n => { bookingWorkHours.timeSlots = n.getCollectionOfObjectValues<BookingWorkTimeSlot>(createBookingWorkTimeSlotFromDiscriminatorValue); },
    }
}
export function serializeBookingWorkHours(writer: SerializationWriter, bookingWorkHours: BookingWorkHours | undefined = {} as BookingWorkHours) : void {
        writer.writeEnumValue<DayOfWeek>("day", bookingWorkHours.day);
        writer.writeStringValue("@odata.type", bookingWorkHours.odataType);
        writer.writeCollectionOfObjectValues<BookingWorkTimeSlot>("timeSlots", bookingWorkHours.timeSlots, );
        writer.writeAdditionalData(bookingWorkHours.additionalData);
}
// tslint:enable
// eslint-enable
