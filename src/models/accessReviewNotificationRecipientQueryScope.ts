// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAccessReviewNotificationRecipientScope, serializeAccessReviewNotificationRecipientScope, type AccessReviewNotificationRecipientScope } from './accessReviewNotificationRecipientScope';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessReviewNotificationRecipientQueryScope extends AccessReviewNotificationRecipientScope, Parsable {
    /**
     * Represents the query for who the recipients are. For example, /groups/{group id}/members for group members and /users/{user id} for a specific user.
     */
    query?: string;
    /**
     * In the scenario where reviewers need to be specified dynamically, indicates the relative source of the query. This property is only required if a relative query (that is, ./manager) is specified.
     */
    queryRoot?: string;
    /**
     * Indicates the type of query. Allowed value is MicrosoftGraph.
     */
    queryType?: string;
}
export function createAccessReviewNotificationRecipientQueryScopeFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessReviewNotificationRecipientQueryScope;
}
export function deserializeIntoAccessReviewNotificationRecipientQueryScope(accessReviewNotificationRecipientQueryScope: AccessReviewNotificationRecipientQueryScope | undefined = {} as AccessReviewNotificationRecipientQueryScope) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAccessReviewNotificationRecipientScope(accessReviewNotificationRecipientQueryScope),
        "query": n => { accessReviewNotificationRecipientQueryScope.query = n.getStringValue(); },
        "queryRoot": n => { accessReviewNotificationRecipientQueryScope.queryRoot = n.getStringValue(); },
        "queryType": n => { accessReviewNotificationRecipientQueryScope.queryType = n.getStringValue(); },
    }
}
export function serializeAccessReviewNotificationRecipientQueryScope(writer: SerializationWriter, accessReviewNotificationRecipientQueryScope: AccessReviewNotificationRecipientQueryScope | undefined = {} as AccessReviewNotificationRecipientQueryScope) : void {
    serializeAccessReviewNotificationRecipientScope(writer, accessReviewNotificationRecipientQueryScope)
    writer.writeStringValue("query", accessReviewNotificationRecipientQueryScope.query);
    writer.writeStringValue("queryRoot", accessReviewNotificationRecipientQueryScope.queryRoot);
    writer.writeStringValue("queryType", accessReviewNotificationRecipientQueryScope.queryType);
}
// tslint:enable
// eslint-enable
