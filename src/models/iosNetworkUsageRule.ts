// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAppListItemFromDiscriminatorValue, serializeAppListItem, type AppListItem } from './appListItem';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIosNetworkUsageRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosNetworkUsageRule;
}
export function deserializeIntoIosNetworkUsageRule(iosNetworkUsageRule: IosNetworkUsageRule | undefined = {} as IosNetworkUsageRule) : Record<string, (node: ParseNode) => void> {
    return {
        "cellularDataBlocked": n => { iosNetworkUsageRule.cellularDataBlocked = n.getBooleanValue(); },
        "cellularDataBlockWhenRoaming": n => { iosNetworkUsageRule.cellularDataBlockWhenRoaming = n.getBooleanValue(); },
        "managedApps": n => { iosNetworkUsageRule.managedApps = n.getCollectionOfObjectValues<AppListItem>(createAppListItemFromDiscriminatorValue); },
        "@odata.type": n => { iosNetworkUsageRule.odataType = n.getStringValue(); },
    }
}
export interface IosNetworkUsageRule extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If set to true, corresponding managed apps will not be allowed to use cellular data at any time.
     */
    cellularDataBlocked?: boolean;
    /**
     * If set to true, corresponding managed apps will not be allowed to use cellular data when roaming.
     */
    cellularDataBlockWhenRoaming?: boolean;
    /**
     * Information about the managed apps that this rule is going to apply to. This collection can contain a maximum of 500 elements.
     */
    managedApps?: AppListItem[];
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeIosNetworkUsageRule(writer: SerializationWriter, iosNetworkUsageRule: IosNetworkUsageRule | undefined = {} as IosNetworkUsageRule) : void {
        writer.writeBooleanValue("cellularDataBlocked", iosNetworkUsageRule.cellularDataBlocked);
        writer.writeBooleanValue("cellularDataBlockWhenRoaming", iosNetworkUsageRule.cellularDataBlockWhenRoaming);
        writer.writeCollectionOfObjectValues<AppListItem>("managedApps", iosNetworkUsageRule.managedApps, );
        writer.writeStringValue("@odata.type", iosNetworkUsageRule.odataType);
        writer.writeAdditionalData(iosNetworkUsageRule.additionalData);
}
// tslint:enable
// eslint-enable
