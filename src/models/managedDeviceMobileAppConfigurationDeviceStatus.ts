// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { ComplianceStatus } from './complianceStatus';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createManagedDeviceMobileAppConfigurationDeviceStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoManagedDeviceMobileAppConfigurationDeviceStatus;
}
export function deserializeIntoManagedDeviceMobileAppConfigurationDeviceStatus(managedDeviceMobileAppConfigurationDeviceStatus: ManagedDeviceMobileAppConfigurationDeviceStatus | undefined = {} as ManagedDeviceMobileAppConfigurationDeviceStatus) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedDeviceMobileAppConfigurationDeviceStatus),
        "complianceGracePeriodExpirationDateTime": n => { managedDeviceMobileAppConfigurationDeviceStatus.complianceGracePeriodExpirationDateTime = n.getDateValue(); },
        "deviceDisplayName": n => { managedDeviceMobileAppConfigurationDeviceStatus.deviceDisplayName = n.getStringValue(); },
        "deviceModel": n => { managedDeviceMobileAppConfigurationDeviceStatus.deviceModel = n.getStringValue(); },
        "lastReportedDateTime": n => { managedDeviceMobileAppConfigurationDeviceStatus.lastReportedDateTime = n.getDateValue(); },
        "status": n => { managedDeviceMobileAppConfigurationDeviceStatus.status = n.getEnumValue<ComplianceStatus>(ComplianceStatus); },
        "userName": n => { managedDeviceMobileAppConfigurationDeviceStatus.userName = n.getStringValue(); },
        "userPrincipalName": n => { managedDeviceMobileAppConfigurationDeviceStatus.userPrincipalName = n.getStringValue(); },
    }
}
export interface ManagedDeviceMobileAppConfigurationDeviceStatus extends Entity, Parsable {
    /**
     * The DateTime when device compliance grace period expires
     */
    complianceGracePeriodExpirationDateTime?: Date;
    /**
     * Device name of the DevicePolicyStatus.
     */
    deviceDisplayName?: string;
    /**
     * The device model that is being reported
     */
    deviceModel?: string;
    /**
     * Last modified date time of the policy report.
     */
    lastReportedDateTime?: Date;
    /**
     * The status property
     */
    status?: ComplianceStatus;
    /**
     * The User Name that is being reported
     */
    userName?: string;
    /**
     * UserPrincipalName.
     */
    userPrincipalName?: string;
}
export function serializeManagedDeviceMobileAppConfigurationDeviceStatus(writer: SerializationWriter, managedDeviceMobileAppConfigurationDeviceStatus: ManagedDeviceMobileAppConfigurationDeviceStatus | undefined = {} as ManagedDeviceMobileAppConfigurationDeviceStatus) : void {
    serializeEntity(writer, managedDeviceMobileAppConfigurationDeviceStatus)
    writer.writeDateValue("complianceGracePeriodExpirationDateTime", managedDeviceMobileAppConfigurationDeviceStatus.complianceGracePeriodExpirationDateTime);
    writer.writeStringValue("deviceDisplayName", managedDeviceMobileAppConfigurationDeviceStatus.deviceDisplayName);
    writer.writeStringValue("deviceModel", managedDeviceMobileAppConfigurationDeviceStatus.deviceModel);
    writer.writeDateValue("lastReportedDateTime", managedDeviceMobileAppConfigurationDeviceStatus.lastReportedDateTime);
    writer.writeEnumValue<ComplianceStatus>("status", managedDeviceMobileAppConfigurationDeviceStatus.status);
    writer.writeStringValue("userName", managedDeviceMobileAppConfigurationDeviceStatus.userName);
    writer.writeStringValue("userPrincipalName", managedDeviceMobileAppConfigurationDeviceStatus.userPrincipalName);
}
// tslint:enable
// eslint-enable
