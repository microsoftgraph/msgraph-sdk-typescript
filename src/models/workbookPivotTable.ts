import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkbookWorksheetFromDiscriminatorValue, serializeWorkbookWorksheet, type WorkbookWorksheet } from './workbookWorksheet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createWorkbookPivotTableFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookPivotTable;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoWorkbookPivotTable(workbookPivotTable: WorkbookPivotTable | undefined = {} as WorkbookPivotTable) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookPivotTable),
        "name": n => { workbookPivotTable.name = n.getStringValue(); },
        "worksheet": n => { workbookPivotTable.worksheet = n.getObjectValue<WorkbookWorksheet>(createWorkbookWorksheetFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeWorkbookPivotTable(writer: SerializationWriter, workbookPivotTable: WorkbookPivotTable | undefined = {} as WorkbookPivotTable) : void {
        serializeEntity(writer, workbookPivotTable)
        writer.writeStringValue("name", workbookPivotTable.name);
        writer.writeObjectValue<WorkbookWorksheet>("worksheet", workbookPivotTable.worksheet, );
}
export interface WorkbookPivotTable extends Entity, Parsable {
    /**
     * Name of the PivotTable.
     */
    name?: string;
    /**
     * The worksheet containing the current PivotTable. Read-only.
     */
    worksheet?: WorkbookWorksheet;
}
