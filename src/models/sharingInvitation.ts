// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSharingInvitationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSharingInvitation;
}
export function deserializeIntoSharingInvitation(sharingInvitation: SharingInvitation | undefined = {} as SharingInvitation) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { sharingInvitation.email = n.getStringValue(); },
        "invitedBy": n => { sharingInvitation.invitedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "@odata.type": n => { sharingInvitation.odataType = n.getStringValue(); },
        "redeemedBy": n => { sharingInvitation.redeemedBy = n.getStringValue(); },
        "signInRequired": n => { sharingInvitation.signInRequired = n.getBooleanValue(); },
    }
}
export function serializeSharingInvitation(writer: SerializationWriter, sharingInvitation: SharingInvitation | undefined = {} as SharingInvitation) : void {
    writer.writeStringValue("email", sharingInvitation.email);
    writer.writeObjectValue<IdentitySet>("invitedBy", sharingInvitation.invitedBy, serializeIdentitySet);
    writer.writeStringValue("@odata.type", sharingInvitation.odataType);
    writer.writeStringValue("redeemedBy", sharingInvitation.redeemedBy);
    writer.writeBooleanValue("signInRequired", sharingInvitation.signInRequired);
    writer.writeAdditionalData(sharingInvitation.additionalData);
}
export interface SharingInvitation extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The email address provided for the recipient of the sharing invitation. Read-only.
     */
    email?: string;
    /**
     * Provides information about who sent the invitation that created this permission, if that information is available. Read-only.
     */
    invitedBy?: IdentitySet;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The redeemedBy property
     */
    redeemedBy?: string;
    /**
     * If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.
     */
    signInRequired?: boolean;
}
// tslint:enable
// eslint-enable
