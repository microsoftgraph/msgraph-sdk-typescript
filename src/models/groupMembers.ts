import { deserializeIntoSubjectSet, serializeSubjectSet, type SubjectSet } from './subjectSet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createGroupMembersFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGroupMembers;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoGroupMembers(groupMembers: GroupMembers | undefined = {} as GroupMembers) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSubjectSet(groupMembers),
        "description": n => { groupMembers.description = n.getStringValue(); },
        "groupId": n => { groupMembers.groupId = n.getStringValue(); },
    }
}
export interface GroupMembers extends Parsable, SubjectSet {
    /**
     * The name of the group in Azure AD. Read only.
     */
    description?: string;
    /**
     * The ID of the group in Azure AD.
     */
    groupId?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeGroupMembers(writer: SerializationWriter, groupMembers: GroupMembers | undefined = {} as GroupMembers) : void {
        serializeSubjectSet(writer, groupMembers)
        writer.writeStringValue("description", groupMembers.description);
        writer.writeStringValue("groupId", groupMembers.groupId);
}
