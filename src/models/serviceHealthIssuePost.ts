// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createItemBodyFromDiscriminatorValue, serializeItemBody, type ItemBody } from './itemBody';
import { PostType } from './postType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createServiceHealthIssuePostFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoServiceHealthIssuePost;
}
export function deserializeIntoServiceHealthIssuePost(serviceHealthIssuePost: ServiceHealthIssuePost | undefined = {} as ServiceHealthIssuePost) : Record<string, (node: ParseNode) => void> {
    return {
        "createdDateTime": n => { serviceHealthIssuePost.createdDateTime = n.getDateValue(); },
        "description": n => { serviceHealthIssuePost.description = n.getObjectValue<ItemBody>(createItemBodyFromDiscriminatorValue); },
        "@odata.type": n => { serviceHealthIssuePost.odataType = n.getStringValue(); },
        "postType": n => { serviceHealthIssuePost.postType = n.getEnumValue<PostType>(PostType); },
    }
}
export function serializeServiceHealthIssuePost(writer: SerializationWriter, serviceHealthIssuePost: ServiceHealthIssuePost | undefined = {} as ServiceHealthIssuePost) : void {
        writer.writeDateValue("createdDateTime", serviceHealthIssuePost.createdDateTime);
        writer.writeObjectValue<ItemBody>("description", serviceHealthIssuePost.description, serializeItemBody);
        writer.writeStringValue("@odata.type", serviceHealthIssuePost.odataType);
        writer.writeEnumValue<PostType>("postType", serviceHealthIssuePost.postType);
        writer.writeAdditionalData(serviceHealthIssuePost.additionalData);
}
export interface ServiceHealthIssuePost extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The published time of the post.
     */
    createdDateTime?: Date;
    /**
     * The content of the service issue post. The supported value for the contentType property is html.
     */
    description?: ItemBody;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The post type of the service issue historical post. Possible values are: regular, quick, strategic, unknownFutureValue.
     */
    postType?: PostType;
}
// tslint:enable
// eslint-enable
