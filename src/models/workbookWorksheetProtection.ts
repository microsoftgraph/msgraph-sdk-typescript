// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkbookWorksheetProtectionOptionsFromDiscriminatorValue, serializeWorkbookWorksheetProtectionOptions, type WorkbookWorksheetProtectionOptions } from './workbookWorksheetProtectionOptions';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookWorksheetProtectionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookWorksheetProtection;
}
export function deserializeIntoWorkbookWorksheetProtection(workbookWorksheetProtection: WorkbookWorksheetProtection | undefined = {} as WorkbookWorksheetProtection) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookWorksheetProtection),
        "options": n => { workbookWorksheetProtection.options = n.getObjectValue<WorkbookWorksheetProtectionOptions>(createWorkbookWorksheetProtectionOptionsFromDiscriminatorValue); },
        "protected": n => { workbookWorksheetProtection.protected = n.getBooleanValue(); },
    }
}
export function serializeWorkbookWorksheetProtection(writer: SerializationWriter, workbookWorksheetProtection: WorkbookWorksheetProtection | undefined = {} as WorkbookWorksheetProtection) : void {
    serializeEntity(writer, workbookWorksheetProtection)
    writer.writeObjectValue<WorkbookWorksheetProtectionOptions>("options", workbookWorksheetProtection.options, serializeWorkbookWorksheetProtectionOptions);
    writer.writeBooleanValue("protected", workbookWorksheetProtection.protected);
}
export interface WorkbookWorksheetProtection extends Entity, Parsable {
    /**
     * Sheet protection options. Read-only.
     */
    options?: WorkbookWorksheetProtectionOptions;
    /**
     * Indicates if the worksheet is protected.  Read-only.
     */
    protected?: boolean;
}
// tslint:enable
// eslint-enable
