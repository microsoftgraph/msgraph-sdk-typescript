// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createTeamsAppFromDiscriminatorValue, serializeTeamsApp, type TeamsApp } from './teamsApp';
import { createTeamsTabConfigurationFromDiscriminatorValue, serializeTeamsTabConfiguration, type TeamsTabConfiguration } from './teamsTabConfiguration';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamsTabFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamsTab;
}
export function deserializeIntoTeamsTab(teamsTab: TeamsTab | undefined = {} as TeamsTab) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsTab),
        "configuration": n => { teamsTab.configuration = n.getObjectValue<TeamsTabConfiguration>(createTeamsTabConfigurationFromDiscriminatorValue); },
        "displayName": n => { teamsTab.displayName = n.getStringValue(); },
        "teamsApp": n => { teamsTab.teamsApp = n.getObjectValue<TeamsApp>(createTeamsAppFromDiscriminatorValue); },
        "webUrl": n => { teamsTab.webUrl = n.getStringValue(); },
    }
}
export function serializeTeamsTab(writer: SerializationWriter, teamsTab: TeamsTab | undefined = {} as TeamsTab) : void {
    serializeEntity(writer, teamsTab)
    writer.writeObjectValue<TeamsTabConfiguration>("configuration", teamsTab.configuration, serializeTeamsTabConfiguration);
    writer.writeStringValue("displayName", teamsTab.displayName);
    writer.writeObjectValue<TeamsApp>("teamsApp", teamsTab.teamsApp, serializeTeamsApp);
    writer.writeStringValue("webUrl", teamsTab.webUrl);
}
export interface TeamsTab extends Entity, Parsable {
    /**
     * Container for custom settings applied to a tab. The tab is considered configured only once this property is set.
     */
    configuration?: TeamsTabConfiguration;
    /**
     * Name of the tab.
     */
    displayName?: string;
    /**
     * The application that is linked to the tab. This can't be changed after tab creation.
     */
    teamsApp?: TeamsApp;
    /**
     * Deep link URL of the tab instance. Read only.
     */
    webUrl?: string;
}
// tslint:enable
// eslint-enable
