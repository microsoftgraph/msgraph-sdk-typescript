import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type PrivilegedAccessGroupAssignmentScheduleInstance, type PrivilegedAccessGroupEligibilityScheduleInstance } from './index';
import { deserializeIntoPrivilegedAccessGroupAssignmentScheduleInstance } from './privilegedAccessGroupAssignmentScheduleInstance';
import { deserializeIntoPrivilegedAccessGroupEligibilityScheduleInstance } from './privilegedAccessGroupEligibilityScheduleInstance';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createPrivilegedAccessScheduleInstanceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.privilegedAccessGroupAssignmentScheduleInstance":
                    return deserializeIntoPrivilegedAccessGroupAssignmentScheduleInstance;
                case "#microsoft.graph.privilegedAccessGroupEligibilityScheduleInstance":
                    return deserializeIntoPrivilegedAccessGroupEligibilityScheduleInstance;
            }
        }
    }
    return deserializeIntoPrivilegedAccessScheduleInstance;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoPrivilegedAccessScheduleInstance(privilegedAccessScheduleInstance: PrivilegedAccessScheduleInstance | undefined = {} as PrivilegedAccessScheduleInstance) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(privilegedAccessScheduleInstance),
        "endDateTime": n => { privilegedAccessScheduleInstance.endDateTime = n.getDateValue(); },
        "startDateTime": n => { privilegedAccessScheduleInstance.startDateTime = n.getDateValue(); },
    }
}
export interface PrivilegedAccessScheduleInstance extends Entity, Parsable {
    /**
     * The endDateTime property
     */
    endDateTime?: Date;
    /**
     * The startDateTime property
     */
    startDateTime?: Date;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializePrivilegedAccessScheduleInstance(writer: SerializationWriter, privilegedAccessScheduleInstance: PrivilegedAccessScheduleInstance | undefined = {} as PrivilegedAccessScheduleInstance) : void {
        serializeEntity(writer, privilegedAccessScheduleInstance)
        writer.writeDateValue("endDateTime", privilegedAccessScheduleInstance.endDateTime);
        writer.writeDateValue("startDateTime", privilegedAccessScheduleInstance.startDateTime);
}
