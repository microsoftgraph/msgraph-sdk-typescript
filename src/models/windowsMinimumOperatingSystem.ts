// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsMinimumOperatingSystemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsMinimumOperatingSystem;
}
export function deserializeIntoWindowsMinimumOperatingSystem(windowsMinimumOperatingSystem: WindowsMinimumOperatingSystem | undefined = {} as WindowsMinimumOperatingSystem) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { windowsMinimumOperatingSystem.odataType = n.getStringValue(); },
        "v10_0": n => { windowsMinimumOperatingSystem.v10_0 = n.getBooleanValue(); },
        "v8_0": n => { windowsMinimumOperatingSystem.v8_0 = n.getBooleanValue(); },
        "v8_1": n => { windowsMinimumOperatingSystem.v8_1 = n.getBooleanValue(); },
    }
}
export function serializeWindowsMinimumOperatingSystem(writer: SerializationWriter, windowsMinimumOperatingSystem: WindowsMinimumOperatingSystem | undefined = {} as WindowsMinimumOperatingSystem) : void {
        writer.writeStringValue("@odata.type", windowsMinimumOperatingSystem.odataType);
        writer.writeBooleanValue("v10_0", windowsMinimumOperatingSystem.v10_0);
        writer.writeBooleanValue("v8_0", windowsMinimumOperatingSystem.v8_0);
        writer.writeBooleanValue("v8_1", windowsMinimumOperatingSystem.v8_1);
        writer.writeAdditionalData(windowsMinimumOperatingSystem.additionalData);
}
export interface WindowsMinimumOperatingSystem extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Windows version 10.0 or later.
     */
    v10_0?: boolean;
    /**
     * Windows version 8.0 or later.
     */
    v8_0?: boolean;
    /**
     * Windows version 8.1 or later.
     */
    v8_1?: boolean;
}
// tslint:enable
// eslint-enable
