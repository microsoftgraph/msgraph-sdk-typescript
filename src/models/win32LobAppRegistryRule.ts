// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { Win32LobAppRegistryRuleOperationType } from './win32LobAppRegistryRuleOperationType';
import { deserializeIntoWin32LobAppRule, serializeWin32LobAppRule, type Win32LobAppRule } from './win32LobAppRule';
import { Win32LobAppRuleOperator } from './win32LobAppRuleOperator';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWin32LobAppRegistryRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWin32LobAppRegistryRule;
}
export function deserializeIntoWin32LobAppRegistryRule(win32LobAppRegistryRule: Win32LobAppRegistryRule | undefined = {} as Win32LobAppRegistryRule) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWin32LobAppRule(win32LobAppRegistryRule),
        "check32BitOn64System": n => { win32LobAppRegistryRule.check32BitOn64System = n.getBooleanValue(); },
        "comparisonValue": n => { win32LobAppRegistryRule.comparisonValue = n.getStringValue(); },
        "keyPath": n => { win32LobAppRegistryRule.keyPath = n.getStringValue(); },
        "operationType": n => { win32LobAppRegistryRule.operationType = n.getEnumValue<Win32LobAppRegistryRuleOperationType>(Win32LobAppRegistryRuleOperationType); },
        "operator": n => { win32LobAppRegistryRule.operator = n.getEnumValue<Win32LobAppRuleOperator>(Win32LobAppRuleOperator); },
        "valueName": n => { win32LobAppRegistryRule.valueName = n.getStringValue(); },
    }
}
export function serializeWin32LobAppRegistryRule(writer: SerializationWriter, win32LobAppRegistryRule: Win32LobAppRegistryRule | undefined = {} as Win32LobAppRegistryRule) : void {
        serializeWin32LobAppRule(writer, win32LobAppRegistryRule)
        writer.writeBooleanValue("check32BitOn64System", win32LobAppRegistryRule.check32BitOn64System);
        writer.writeStringValue("comparisonValue", win32LobAppRegistryRule.comparisonValue);
        writer.writeStringValue("keyPath", win32LobAppRegistryRule.keyPath);
        writer.writeEnumValue<Win32LobAppRegistryRuleOperationType>("operationType", win32LobAppRegistryRule.operationType);
        writer.writeEnumValue<Win32LobAppRuleOperator>("operator", win32LobAppRegistryRule.operator);
        writer.writeStringValue("valueName", win32LobAppRegistryRule.valueName);
}
export interface Win32LobAppRegistryRule extends Parsable, Win32LobAppRule {
    /**
     * A value indicating whether to search the 32-bit registry on 64-bit systems.
     */
    check32BitOn64System?: boolean;
    /**
     * The registry comparison value.
     */
    comparisonValue?: string;
    /**
     * The full path of the registry entry containing the value to detect.
     */
    keyPath?: string;
    /**
     * Contains all supported registry data detection type.
     */
    operationType?: Win32LobAppRegistryRuleOperationType;
    /**
     * Contains properties for detection operator.
     */
    operator?: Win32LobAppRuleOperator;
    /**
     * The name of the registry value to detect.
     */
    valueName?: string;
}
// tslint:enable
// eslint-enable
