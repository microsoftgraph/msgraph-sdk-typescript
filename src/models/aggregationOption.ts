// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createBucketAggregationDefinitionFromDiscriminatorValue, serializeBucketAggregationDefinition, type BucketAggregationDefinition } from './bucketAggregationDefinition';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AggregationOption extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The bucketDefinition property
     */
    bucketDefinition?: BucketAggregationDefinition;
    /**
     * Computes aggregation on the field while the field exists in current entity type. Required.
     */
    field?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The number of searchBucket resources to be returned. This isn't required when the range is provided manually in the search request. Optional.
     */
    size?: number;
}
export function createAggregationOptionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAggregationOption;
}
export function deserializeIntoAggregationOption(aggregationOption: AggregationOption | undefined = {} as AggregationOption) : Record<string, (node: ParseNode) => void> {
    return {
        "bucketDefinition": n => { aggregationOption.bucketDefinition = n.getObjectValue<BucketAggregationDefinition>(createBucketAggregationDefinitionFromDiscriminatorValue); },
        "field": n => { aggregationOption.field = n.getStringValue(); },
        "@odata.type": n => { aggregationOption.odataType = n.getStringValue(); },
        "size": n => { aggregationOption.size = n.getNumberValue(); },
    }
}
export function serializeAggregationOption(writer: SerializationWriter, aggregationOption: AggregationOption | undefined = {} as AggregationOption) : void {
    writer.writeObjectValue<BucketAggregationDefinition>("bucketDefinition", aggregationOption.bucketDefinition, serializeBucketAggregationDefinition);
    writer.writeStringValue("field", aggregationOption.field);
    writer.writeStringValue("@odata.type", aggregationOption.odataType);
    writer.writeNumberValue("size", aggregationOption.size);
    writer.writeAdditionalData(aggregationOption.additionalData);
}
// tslint:enable
// eslint-enable
