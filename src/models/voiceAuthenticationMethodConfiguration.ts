// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAuthenticationMethodConfiguration, serializeAuthenticationMethodConfiguration, type AuthenticationMethodConfiguration } from './authenticationMethodConfiguration';
import { createAuthenticationMethodTargetFromDiscriminatorValue, serializeAuthenticationMethodTarget, type AuthenticationMethodTarget } from './authenticationMethodTarget';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createVoiceAuthenticationMethodConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoVoiceAuthenticationMethodConfiguration;
}
export function deserializeIntoVoiceAuthenticationMethodConfiguration(voiceAuthenticationMethodConfiguration: VoiceAuthenticationMethodConfiguration | undefined = {} as VoiceAuthenticationMethodConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuthenticationMethodConfiguration(voiceAuthenticationMethodConfiguration),
        "includeTargets": n => { voiceAuthenticationMethodConfiguration.includeTargets = n.getCollectionOfObjectValues<AuthenticationMethodTarget>(createAuthenticationMethodTargetFromDiscriminatorValue); },
        "isOfficePhoneAllowed": n => { voiceAuthenticationMethodConfiguration.isOfficePhoneAllowed = n.getBooleanValue(); },
    }
}
export function serializeVoiceAuthenticationMethodConfiguration(writer: SerializationWriter, voiceAuthenticationMethodConfiguration: VoiceAuthenticationMethodConfiguration | undefined = {} as VoiceAuthenticationMethodConfiguration) : void {
        serializeAuthenticationMethodConfiguration(writer, voiceAuthenticationMethodConfiguration)
        writer.writeCollectionOfObjectValues<AuthenticationMethodTarget>("includeTargets", voiceAuthenticationMethodConfiguration.includeTargets, );
        writer.writeBooleanValue("isOfficePhoneAllowed", voiceAuthenticationMethodConfiguration.isOfficePhoneAllowed);
}
export interface VoiceAuthenticationMethodConfiguration extends AuthenticationMethodConfiguration, Parsable {
    /**
     * A collection of groups that are enabled to use the authentication method. Expanded by default.
     */
    includeTargets?: AuthenticationMethodTarget[];
    /**
     * true if users can register office phones, otherwise, false.
     */
    isOfficePhoneAllowed?: boolean;
}
// tslint:enable
// eslint-enable
