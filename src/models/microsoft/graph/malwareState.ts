import {Parsable, ParseNode, SerializationWriter} from '@microsoft/kiota-abstractions';

export class MalwareState implements Parsable {
    /** Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.  */
    private _additionalData: Map<string, unknown>;
    /** Provider-generated malware category (for example, trojan, ransomware, etc.).  */
    private _category?: string | undefined;
    /** Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).  */
    private _family?: string | undefined;
    /** Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).  */
    private _name?: string | undefined;
    /** Provider-determined severity of this malware.  */
    private _severity?: string | undefined;
    /** Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.  */
    private _wasRunning?: boolean | undefined;
    /**
     * Instantiates a new malwareState and sets the default values.
     */
    public constructor() {
        this._additionalData = new Map<string, unknown>();
    };
    /**
     * Gets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @returns a Map<string, unknown>
     */
    public get additionalData() {
        return this._additionalData;
    };
    /**
     * Gets the category property value. Provider-generated malware category (for example, trojan, ransomware, etc.).
     * @returns a string
     */
    public get category() {
        return this._category;
    };
    /**
     * Gets the family property value. Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
     * @returns a string
     */
    public get family() {
        return this._family;
    };
    /**
     * Gets the name property value. Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
     * @returns a string
     */
    public get name() {
        return this._name;
    };
    /**
     * Gets the severity property value. Provider-determined severity of this malware.
     * @returns a string
     */
    public get severity() {
        return this._severity;
    };
    /**
     * Gets the wasRunning property value. Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
     * @returns a boolean
     */
    public get wasRunning() {
        return this._wasRunning;
    };
    /**
     * The deserialization information for the current model
     * @returns a Map<string, (item: T, node: ParseNode) => void>
     */
    public getFieldDeserializers<T>() : Map<string, (item: T, node: ParseNode) => void> {
        return new Map<string, (item: T, node: ParseNode) => void>([
            ["category", (o, n) => { (o as unknown as MalwareState).category = n.getStringValue(); }],
            ["family", (o, n) => { (o as unknown as MalwareState).family = n.getStringValue(); }],
            ["name", (o, n) => { (o as unknown as MalwareState).name = n.getStringValue(); }],
            ["severity", (o, n) => { (o as unknown as MalwareState).severity = n.getStringValue(); }],
            ["wasRunning", (o, n) => { (o as unknown as MalwareState).wasRunning = n.getBooleanValue(); }],
        ]);
    };
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     */
    public serialize(writer: SerializationWriter) : void {
        if(!writer) throw new Error("writer cannot be undefined");
        writer.writeStringValue("category", this.category);
        writer.writeStringValue("family", this.family);
        writer.writeStringValue("name", this.name);
        writer.writeStringValue("severity", this.severity);
        writer.writeBooleanValue("wasRunning", this.wasRunning);
        writer.writeAdditionalData(this.additionalData);
    };
    /**
     * Sets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @param value Value to set for the AdditionalData property.
     */
    public set additionalData(value: Map<string, unknown>) {
        this._additionalData = value;
    };
    /**
     * Sets the category property value. Provider-generated malware category (for example, trojan, ransomware, etc.).
     * @param value Value to set for the category property.
     */
    public set category(value: string | undefined) {
        this._category = value;
    };
    /**
     * Sets the family property value. Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
     * @param value Value to set for the family property.
     */
    public set family(value: string | undefined) {
        this._family = value;
    };
    /**
     * Sets the name property value. Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
     * @param value Value to set for the name property.
     */
    public set name(value: string | undefined) {
        this._name = value;
    };
    /**
     * Sets the severity property value. Provider-determined severity of this malware.
     * @param value Value to set for the severity property.
     */
    public set severity(value: string | undefined) {
        this._severity = value;
    };
    /**
     * Sets the wasRunning property value. Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
     * @param value Value to set for the wasRunning property.
     */
    public set wasRunning(value: boolean | undefined) {
        this._wasRunning = value;
    };
}
