// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createUserExperienceAnalyticsAutopilotDevicesSummaryFromDiscriminatorValue, serializeUserExperienceAnalyticsAutopilotDevicesSummary, type UserExperienceAnalyticsAutopilotDevicesSummary } from './userExperienceAnalyticsAutopilotDevicesSummary';
import { createUserExperienceAnalyticsCloudIdentityDevicesSummaryFromDiscriminatorValue, serializeUserExperienceAnalyticsCloudIdentityDevicesSummary, type UserExperienceAnalyticsCloudIdentityDevicesSummary } from './userExperienceAnalyticsCloudIdentityDevicesSummary';
import { createUserExperienceAnalyticsCloudManagementDevicesSummaryFromDiscriminatorValue, serializeUserExperienceAnalyticsCloudManagementDevicesSummary, type UserExperienceAnalyticsCloudManagementDevicesSummary } from './userExperienceAnalyticsCloudManagementDevicesSummary';
import { createUserExperienceAnalyticsWindows10DevicesSummaryFromDiscriminatorValue, serializeUserExperienceAnalyticsWindows10DevicesSummary, type UserExperienceAnalyticsWindows10DevicesSummary } from './userExperienceAnalyticsWindows10DevicesSummary';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsWorkFromAnywhereDevicesSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsWorkFromAnywhereDevicesSummary;
}
export function deserializeIntoUserExperienceAnalyticsWorkFromAnywhereDevicesSummary(userExperienceAnalyticsWorkFromAnywhereDevicesSummary: UserExperienceAnalyticsWorkFromAnywhereDevicesSummary | undefined = {} as UserExperienceAnalyticsWorkFromAnywhereDevicesSummary) : Record<string, (node: ParseNode) => void> {
    return {
        "autopilotDevicesSummary": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.autopilotDevicesSummary = n.getObjectValue<UserExperienceAnalyticsAutopilotDevicesSummary>(createUserExperienceAnalyticsAutopilotDevicesSummaryFromDiscriminatorValue); },
        "cloudIdentityDevicesSummary": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.cloudIdentityDevicesSummary = n.getObjectValue<UserExperienceAnalyticsCloudIdentityDevicesSummary>(createUserExperienceAnalyticsCloudIdentityDevicesSummaryFromDiscriminatorValue); },
        "cloudManagementDevicesSummary": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.cloudManagementDevicesSummary = n.getObjectValue<UserExperienceAnalyticsCloudManagementDevicesSummary>(createUserExperienceAnalyticsCloudManagementDevicesSummaryFromDiscriminatorValue); },
        "coManagedDevices": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.coManagedDevices = n.getNumberValue(); },
        "devicesNotAutopilotRegistered": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.devicesNotAutopilotRegistered = n.getNumberValue(); },
        "devicesWithoutAutopilotProfileAssigned": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.devicesWithoutAutopilotProfileAssigned = n.getNumberValue(); },
        "devicesWithoutCloudIdentity": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.devicesWithoutCloudIdentity = n.getNumberValue(); },
        "intuneDevices": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.intuneDevices = n.getNumberValue(); },
        "@odata.type": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.odataType = n.getStringValue(); },
        "tenantAttachDevices": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.tenantAttachDevices = n.getNumberValue(); },
        "totalDevices": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.totalDevices = n.getNumberValue(); },
        "unsupportedOSversionDevices": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.unsupportedOSversionDevices = n.getNumberValue(); },
        "windows10Devices": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.windows10Devices = n.getNumberValue(); },
        "windows10DevicesSummary": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.windows10DevicesSummary = n.getObjectValue<UserExperienceAnalyticsWindows10DevicesSummary>(createUserExperienceAnalyticsWindows10DevicesSummaryFromDiscriminatorValue); },
        "windows10DevicesWithoutTenantAttach": n => { userExperienceAnalyticsWorkFromAnywhereDevicesSummary.windows10DevicesWithoutTenantAttach = n.getNumberValue(); },
    }
}
export function serializeUserExperienceAnalyticsWorkFromAnywhereDevicesSummary(writer: SerializationWriter, userExperienceAnalyticsWorkFromAnywhereDevicesSummary: UserExperienceAnalyticsWorkFromAnywhereDevicesSummary | undefined = {} as UserExperienceAnalyticsWorkFromAnywhereDevicesSummary) : void {
        writer.writeObjectValue<UserExperienceAnalyticsAutopilotDevicesSummary>("autopilotDevicesSummary", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.autopilotDevicesSummary, serializeUserExperienceAnalyticsAutopilotDevicesSummary);
        writer.writeObjectValue<UserExperienceAnalyticsCloudIdentityDevicesSummary>("cloudIdentityDevicesSummary", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.cloudIdentityDevicesSummary, serializeUserExperienceAnalyticsCloudIdentityDevicesSummary);
        writer.writeObjectValue<UserExperienceAnalyticsCloudManagementDevicesSummary>("cloudManagementDevicesSummary", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.cloudManagementDevicesSummary, serializeUserExperienceAnalyticsCloudManagementDevicesSummary);
        writer.writeNumberValue("coManagedDevices", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.coManagedDevices);
        writer.writeNumberValue("devicesNotAutopilotRegistered", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.devicesNotAutopilotRegistered);
        writer.writeNumberValue("devicesWithoutAutopilotProfileAssigned", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.devicesWithoutAutopilotProfileAssigned);
        writer.writeNumberValue("devicesWithoutCloudIdentity", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.devicesWithoutCloudIdentity);
        writer.writeNumberValue("intuneDevices", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.intuneDevices);
        writer.writeStringValue("@odata.type", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.odataType);
        writer.writeNumberValue("tenantAttachDevices", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.tenantAttachDevices);
        writer.writeNumberValue("totalDevices", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.totalDevices);
        writer.writeNumberValue("unsupportedOSversionDevices", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.unsupportedOSversionDevices);
        writer.writeNumberValue("windows10Devices", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.windows10Devices);
        writer.writeObjectValue<UserExperienceAnalyticsWindows10DevicesSummary>("windows10DevicesSummary", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.windows10DevicesSummary, serializeUserExperienceAnalyticsWindows10DevicesSummary);
        writer.writeNumberValue("windows10DevicesWithoutTenantAttach", userExperienceAnalyticsWorkFromAnywhereDevicesSummary.windows10DevicesWithoutTenantAttach);
        writer.writeAdditionalData(userExperienceAnalyticsWorkFromAnywhereDevicesSummary.additionalData);
}
export interface UserExperienceAnalyticsWorkFromAnywhereDevicesSummary extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The user experience analytics work from anywhere Autopilot devices summary. Read-only.
     */
    autopilotDevicesSummary?: UserExperienceAnalyticsAutopilotDevicesSummary;
    /**
     * The user experience analytics work from anywhere Cloud Identity devices summary. Read-only.
     */
    cloudIdentityDevicesSummary?: UserExperienceAnalyticsCloudIdentityDevicesSummary;
    /**
     * The user experience analytics work from anywhere Cloud management devices summary. Read-only.
     */
    cloudManagementDevicesSummary?: UserExperienceAnalyticsCloudManagementDevicesSummary;
    /**
     * Total number of co-managed devices. Read-only. Valid values -2147483648 to 2147483647
     */
    coManagedDevices?: number;
    /**
     * The count of intune devices that are not autopilot registerd. Read-only. Valid values -2147483648 to 2147483647
     */
    devicesNotAutopilotRegistered?: number;
    /**
     * The count of intune devices not autopilot profile assigned. Read-only. Valid values -2147483648 to 2147483647
     */
    devicesWithoutAutopilotProfileAssigned?: number;
    /**
     * The count of devices that are not cloud identity. Read-only. Valid values -2147483648 to 2147483647
     */
    devicesWithoutCloudIdentity?: number;
    /**
     * The count of intune devices that are not autopilot registerd. Read-only. Valid values -2147483648 to 2147483647
     */
    intuneDevices?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Total count of tenant attach devices. Read-only. Valid values -2147483648 to 2147483647
     */
    tenantAttachDevices?: number;
    /**
     * The total count of devices. Read-only. Valid values -2147483648 to 2147483647
     */
    totalDevices?: number;
    /**
     * The count of Windows 10 devices that have unsupported OS versions. Read-only. Valid values -2147483648 to 2147483647
     */
    unsupportedOSversionDevices?: number;
    /**
     * The count of windows 10 devices. Read-only. Valid values -2147483648 to 2147483647
     */
    windows10Devices?: number;
    /**
     * The user experience analytics work from anywhere Windows 10 devices summary. Read-only.
     */
    windows10DevicesSummary?: UserExperienceAnalyticsWindows10DevicesSummary;
    /**
     * The count of windows 10 devices that are Intune and co-managed. Read-only. Valid values -2147483648 to 2147483647
     */
    windows10DevicesWithoutTenantAttach?: number;
}
// tslint:enable
// eslint-enable
