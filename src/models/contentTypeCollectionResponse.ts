// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createContentTypeFromDiscriminatorValue, serializeContentType, type ContentType } from './contentType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ContentTypeCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ContentType[];
}
export function createContentTypeCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoContentTypeCollectionResponse;
}
export function deserializeIntoContentTypeCollectionResponse(contentTypeCollectionResponse: ContentTypeCollectionResponse | undefined = {} as ContentTypeCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(contentTypeCollectionResponse),
        "value": n => { contentTypeCollectionResponse.value = n.getCollectionOfObjectValues<ContentType>(createContentTypeFromDiscriminatorValue); },
    }
}
export function serializeContentTypeCollectionResponse(writer: SerializationWriter, contentTypeCollectionResponse: ContentTypeCollectionResponse | undefined = {} as ContentTypeCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, contentTypeCollectionResponse)
    writer.writeCollectionOfObjectValues<ContentType>("value", contentTypeCollectionResponse.value, serializeContentType);
}
// tslint:enable
// eslint-enable
