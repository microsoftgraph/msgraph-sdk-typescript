// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { IncludedUserRoles } from './includedUserRoles';
import { IncludedUserTypes } from './includedUserTypes';
import { createUserRegistrationMethodCountFromDiscriminatorValue, serializeUserRegistrationMethodCount, type UserRegistrationMethodCount } from './userRegistrationMethodCount';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserRegistrationMethodSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserRegistrationMethodSummary;
}
export function deserializeIntoUserRegistrationMethodSummary(userRegistrationMethodSummary: UserRegistrationMethodSummary | undefined = {} as UserRegistrationMethodSummary) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { userRegistrationMethodSummary.odataType = n.getStringValue(); },
        "totalUserCount": n => { userRegistrationMethodSummary.totalUserCount = n.getNumberValue(); },
        "userRegistrationMethodCounts": n => { userRegistrationMethodSummary.userRegistrationMethodCounts = n.getCollectionOfObjectValues<UserRegistrationMethodCount>(createUserRegistrationMethodCountFromDiscriminatorValue); },
        "userRoles": n => { userRegistrationMethodSummary.userRoles = n.getEnumValue<IncludedUserRoles>(IncludedUserRoles); },
        "userTypes": n => { userRegistrationMethodSummary.userTypes = n.getEnumValue<IncludedUserTypes>(IncludedUserTypes); },
    }
}
export function serializeUserRegistrationMethodSummary(writer: SerializationWriter, userRegistrationMethodSummary: UserRegistrationMethodSummary | undefined = {} as UserRegistrationMethodSummary) : void {
        writer.writeStringValue("@odata.type", userRegistrationMethodSummary.odataType);
        writer.writeNumberValue("totalUserCount", userRegistrationMethodSummary.totalUserCount);
        writer.writeCollectionOfObjectValues<UserRegistrationMethodCount>("userRegistrationMethodCounts", userRegistrationMethodSummary.userRegistrationMethodCounts, serializeUserRegistrationMethodCount);
        writer.writeEnumValue<IncludedUserRoles>("userRoles", userRegistrationMethodSummary.userRoles);
        writer.writeEnumValue<IncludedUserTypes>("userTypes", userRegistrationMethodSummary.userTypes);
        writer.writeAdditionalData(userRegistrationMethodSummary.additionalData);
}
export interface UserRegistrationMethodSummary extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Total number of users in the tenant.
     */
    totalUserCount?: number;
    /**
     * Number of users registered for each authentication method.
     */
    userRegistrationMethodCounts?: UserRegistrationMethodCount[];
    /**
     * The role type of the user. Possible values are: all, privilegedAdmin, admin, user, unknownFutureValue.
     */
    userRoles?: IncludedUserRoles;
    /**
     * User type. Possible values are: all, member, guest, unknownFutureValue.
     */
    userTypes?: IncludedUserTypes;
}
// tslint:enable
// eslint-enable
