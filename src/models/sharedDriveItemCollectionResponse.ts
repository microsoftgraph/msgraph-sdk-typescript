// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createSharedDriveItemFromDiscriminatorValue, serializeSharedDriveItem, type SharedDriveItem } from './sharedDriveItem';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSharedDriveItemCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSharedDriveItemCollectionResponse;
}
export function deserializeIntoSharedDriveItemCollectionResponse(sharedDriveItemCollectionResponse: SharedDriveItemCollectionResponse | undefined = {} as SharedDriveItemCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sharedDriveItemCollectionResponse),
        "value": n => { sharedDriveItemCollectionResponse.value = n.getCollectionOfObjectValues<SharedDriveItem>(createSharedDriveItemFromDiscriminatorValue); },
    }
}
export function serializeSharedDriveItemCollectionResponse(writer: SerializationWriter, sharedDriveItemCollectionResponse: SharedDriveItemCollectionResponse | undefined = {} as SharedDriveItemCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, sharedDriveItemCollectionResponse)
        writer.writeCollectionOfObjectValues<SharedDriveItem>("value", sharedDriveItemCollectionResponse.value, serializeSharedDriveItem);
}
export interface SharedDriveItemCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SharedDriveItem[];
}
// tslint:enable
// eslint-enable
