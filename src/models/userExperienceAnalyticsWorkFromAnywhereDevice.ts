// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { OperatingSystemUpgradeEligibility } from './operatingSystemUpgradeEligibility';
import { UserExperienceAnalyticsHealthState } from './userExperienceAnalyticsHealthState';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsWorkFromAnywhereDeviceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsWorkFromAnywhereDevice;
}
export function deserializeIntoUserExperienceAnalyticsWorkFromAnywhereDevice(userExperienceAnalyticsWorkFromAnywhereDevice: UserExperienceAnalyticsWorkFromAnywhereDevice | undefined = {} as UserExperienceAnalyticsWorkFromAnywhereDevice) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userExperienceAnalyticsWorkFromAnywhereDevice),
        "autoPilotProfileAssigned": n => { userExperienceAnalyticsWorkFromAnywhereDevice.autoPilotProfileAssigned = n.getBooleanValue(); },
        "autoPilotRegistered": n => { userExperienceAnalyticsWorkFromAnywhereDevice.autoPilotRegistered = n.getBooleanValue(); },
        "azureAdDeviceId": n => { userExperienceAnalyticsWorkFromAnywhereDevice.azureAdDeviceId = n.getStringValue(); },
        "azureAdJoinType": n => { userExperienceAnalyticsWorkFromAnywhereDevice.azureAdJoinType = n.getStringValue(); },
        "azureAdRegistered": n => { userExperienceAnalyticsWorkFromAnywhereDevice.azureAdRegistered = n.getBooleanValue(); },
        "cloudIdentityScore": n => { userExperienceAnalyticsWorkFromAnywhereDevice.cloudIdentityScore = n.getNumberValue(); },
        "cloudManagementScore": n => { userExperienceAnalyticsWorkFromAnywhereDevice.cloudManagementScore = n.getNumberValue(); },
        "cloudProvisioningScore": n => { userExperienceAnalyticsWorkFromAnywhereDevice.cloudProvisioningScore = n.getNumberValue(); },
        "compliancePolicySetToIntune": n => { userExperienceAnalyticsWorkFromAnywhereDevice.compliancePolicySetToIntune = n.getBooleanValue(); },
        "deviceId": n => { userExperienceAnalyticsWorkFromAnywhereDevice.deviceId = n.getStringValue(); },
        "deviceName": n => { userExperienceAnalyticsWorkFromAnywhereDevice.deviceName = n.getStringValue(); },
        "healthStatus": n => { userExperienceAnalyticsWorkFromAnywhereDevice.healthStatus = n.getEnumValue<UserExperienceAnalyticsHealthState>(UserExperienceAnalyticsHealthState); },
        "isCloudManagedGatewayEnabled": n => { userExperienceAnalyticsWorkFromAnywhereDevice.isCloudManagedGatewayEnabled = n.getBooleanValue(); },
        "managedBy": n => { userExperienceAnalyticsWorkFromAnywhereDevice.managedBy = n.getStringValue(); },
        "manufacturer": n => { userExperienceAnalyticsWorkFromAnywhereDevice.manufacturer = n.getStringValue(); },
        "model": n => { userExperienceAnalyticsWorkFromAnywhereDevice.model = n.getStringValue(); },
        "osCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.osCheckFailed = n.getBooleanValue(); },
        "osDescription": n => { userExperienceAnalyticsWorkFromAnywhereDevice.osDescription = n.getStringValue(); },
        "osVersion": n => { userExperienceAnalyticsWorkFromAnywhereDevice.osVersion = n.getStringValue(); },
        "otherWorkloadsSetToIntune": n => { userExperienceAnalyticsWorkFromAnywhereDevice.otherWorkloadsSetToIntune = n.getBooleanValue(); },
        "ownership": n => { userExperienceAnalyticsWorkFromAnywhereDevice.ownership = n.getStringValue(); },
        "processor64BitCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.processor64BitCheckFailed = n.getBooleanValue(); },
        "processorCoreCountCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.processorCoreCountCheckFailed = n.getBooleanValue(); },
        "processorFamilyCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.processorFamilyCheckFailed = n.getBooleanValue(); },
        "processorSpeedCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.processorSpeedCheckFailed = n.getBooleanValue(); },
        "ramCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.ramCheckFailed = n.getBooleanValue(); },
        "secureBootCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.secureBootCheckFailed = n.getBooleanValue(); },
        "serialNumber": n => { userExperienceAnalyticsWorkFromAnywhereDevice.serialNumber = n.getStringValue(); },
        "storageCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.storageCheckFailed = n.getBooleanValue(); },
        "tenantAttached": n => { userExperienceAnalyticsWorkFromAnywhereDevice.tenantAttached = n.getBooleanValue(); },
        "tpmCheckFailed": n => { userExperienceAnalyticsWorkFromAnywhereDevice.tpmCheckFailed = n.getBooleanValue(); },
        "upgradeEligibility": n => { userExperienceAnalyticsWorkFromAnywhereDevice.upgradeEligibility = n.getEnumValue<OperatingSystemUpgradeEligibility>(OperatingSystemUpgradeEligibility); },
        "windowsScore": n => { userExperienceAnalyticsWorkFromAnywhereDevice.windowsScore = n.getNumberValue(); },
        "workFromAnywhereScore": n => { userExperienceAnalyticsWorkFromAnywhereDevice.workFromAnywhereScore = n.getNumberValue(); },
    }
}
export function serializeUserExperienceAnalyticsWorkFromAnywhereDevice(writer: SerializationWriter, userExperienceAnalyticsWorkFromAnywhereDevice: UserExperienceAnalyticsWorkFromAnywhereDevice | undefined = {} as UserExperienceAnalyticsWorkFromAnywhereDevice) : void {
    serializeEntity(writer, userExperienceAnalyticsWorkFromAnywhereDevice)
    writer.writeBooleanValue("autoPilotProfileAssigned", userExperienceAnalyticsWorkFromAnywhereDevice.autoPilotProfileAssigned);
    writer.writeBooleanValue("autoPilotRegistered", userExperienceAnalyticsWorkFromAnywhereDevice.autoPilotRegistered);
    writer.writeStringValue("azureAdDeviceId", userExperienceAnalyticsWorkFromAnywhereDevice.azureAdDeviceId);
    writer.writeStringValue("azureAdJoinType", userExperienceAnalyticsWorkFromAnywhereDevice.azureAdJoinType);
    writer.writeBooleanValue("azureAdRegistered", userExperienceAnalyticsWorkFromAnywhereDevice.azureAdRegistered);
    writer.writeNumberValue("cloudIdentityScore", userExperienceAnalyticsWorkFromAnywhereDevice.cloudIdentityScore);
    writer.writeNumberValue("cloudManagementScore", userExperienceAnalyticsWorkFromAnywhereDevice.cloudManagementScore);
    writer.writeNumberValue("cloudProvisioningScore", userExperienceAnalyticsWorkFromAnywhereDevice.cloudProvisioningScore);
    writer.writeBooleanValue("compliancePolicySetToIntune", userExperienceAnalyticsWorkFromAnywhereDevice.compliancePolicySetToIntune);
    writer.writeStringValue("deviceId", userExperienceAnalyticsWorkFromAnywhereDevice.deviceId);
    writer.writeStringValue("deviceName", userExperienceAnalyticsWorkFromAnywhereDevice.deviceName);
    writer.writeEnumValue<UserExperienceAnalyticsHealthState>("healthStatus", userExperienceAnalyticsWorkFromAnywhereDevice.healthStatus);
    writer.writeBooleanValue("isCloudManagedGatewayEnabled", userExperienceAnalyticsWorkFromAnywhereDevice.isCloudManagedGatewayEnabled);
    writer.writeStringValue("managedBy", userExperienceAnalyticsWorkFromAnywhereDevice.managedBy);
    writer.writeStringValue("manufacturer", userExperienceAnalyticsWorkFromAnywhereDevice.manufacturer);
    writer.writeStringValue("model", userExperienceAnalyticsWorkFromAnywhereDevice.model);
    writer.writeBooleanValue("osCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.osCheckFailed);
    writer.writeStringValue("osDescription", userExperienceAnalyticsWorkFromAnywhereDevice.osDescription);
    writer.writeStringValue("osVersion", userExperienceAnalyticsWorkFromAnywhereDevice.osVersion);
    writer.writeBooleanValue("otherWorkloadsSetToIntune", userExperienceAnalyticsWorkFromAnywhereDevice.otherWorkloadsSetToIntune);
    writer.writeStringValue("ownership", userExperienceAnalyticsWorkFromAnywhereDevice.ownership);
    writer.writeBooleanValue("processor64BitCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.processor64BitCheckFailed);
    writer.writeBooleanValue("processorCoreCountCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.processorCoreCountCheckFailed);
    writer.writeBooleanValue("processorFamilyCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.processorFamilyCheckFailed);
    writer.writeBooleanValue("processorSpeedCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.processorSpeedCheckFailed);
    writer.writeBooleanValue("ramCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.ramCheckFailed);
    writer.writeBooleanValue("secureBootCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.secureBootCheckFailed);
    writer.writeStringValue("serialNumber", userExperienceAnalyticsWorkFromAnywhereDevice.serialNumber);
    writer.writeBooleanValue("storageCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.storageCheckFailed);
    writer.writeBooleanValue("tenantAttached", userExperienceAnalyticsWorkFromAnywhereDevice.tenantAttached);
    writer.writeBooleanValue("tpmCheckFailed", userExperienceAnalyticsWorkFromAnywhereDevice.tpmCheckFailed);
    writer.writeEnumValue<OperatingSystemUpgradeEligibility>("upgradeEligibility", userExperienceAnalyticsWorkFromAnywhereDevice.upgradeEligibility);
    writer.writeNumberValue("windowsScore", userExperienceAnalyticsWorkFromAnywhereDevice.windowsScore);
    writer.writeNumberValue("workFromAnywhereScore", userExperienceAnalyticsWorkFromAnywhereDevice.workFromAnywhereScore);
}
export interface UserExperienceAnalyticsWorkFromAnywhereDevice extends Entity, Parsable {
    /**
     * When TRUE, indicates the intune device's autopilot profile is assigned. When FALSE, indicates it's not Assigned. Supports: $select, $OrderBy. Read-only.
     */
    autoPilotProfileAssigned?: boolean;
    /**
     * When TRUE, indicates the intune device's autopilot is registered. When FALSE, indicates it's not registered. Supports: $select, $OrderBy. Read-only.
     */
    autoPilotRegistered?: boolean;
    /**
     * The Azure Active Directory (Azure AD) device Id. Supports: $select, $OrderBy. Read-only.
     */
    azureAdDeviceId?: string;
    /**
     * The work from anywhere device's Azure Active Directory (Azure AD) join type. Supports: $select, $OrderBy. Read-only.
     */
    azureAdJoinType?: string;
    /**
     * When TRUE, indicates the device's Azure Active Directory (Azure AD) is registered. When False, indicates it's not registered. Supports: $select, $OrderBy. Read-only.
     */
    azureAdRegistered?: boolean;
    /**
     * Indicates per device cloud identity score. Valid values 0 to 100. Value -1 means associated score is unavailable. Supports: $select, $OrderBy. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    cloudIdentityScore?: number;
    /**
     * Indicates per device cloud management score. Valid values 0 to 100. Value -1 means associated score is unavailable. Supports: $select, $OrderBy. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    cloudManagementScore?: number;
    /**
     * Indicates per device cloud provisioning score. Valid values 0 to 100. Value -1 means associated score is unavailable. Supports: $select, $OrderBy. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    cloudProvisioningScore?: number;
    /**
     * When TRUE, indicates the device's compliance policy is set to intune. When FALSE, indicates it's not set to intune. Supports: $select, $OrderBy. Read-only.
     */
    compliancePolicySetToIntune?: boolean;
    /**
     * The Intune device id of the device. Supports: $select, $OrderBy. Read-only.
     */
    deviceId?: string;
    /**
     * The name of the device. Supports: $select, $OrderBy. Read-only.
     */
    deviceName?: string;
    /**
     * The healthStatus property
     */
    healthStatus?: UserExperienceAnalyticsHealthState;
    /**
     * When TRUE, indicates the device's Cloud Management Gateway for Configuration Manager is enabled. When FALSE, indicates it's not enabled. Supports: $select, $OrderBy. Read-only.
     */
    isCloudManagedGatewayEnabled?: boolean;
    /**
     * The management agent of the device. Supports: $select, $OrderBy. Read-only.
     */
    managedBy?: string;
    /**
     * The manufacturer name of the device. Supports: $select, $OrderBy. Read-only.
     */
    manufacturer?: string;
    /**
     * The model name of the device. Supports: $select, $OrderBy. Read-only.
     */
    model?: string;
    /**
     * When TRUE, indicates OS check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    osCheckFailed?: boolean;
    /**
     * The OS description of the device. Supports: $select, $OrderBy. Read-only.
     */
    osDescription?: string;
    /**
     * The OS version of the device. Supports: $select, $OrderBy. Read-only.
     */
    osVersion?: string;
    /**
     * When TRUE, indicates the device's other workloads is set to intune. When FALSE, indicates it's not set to intune. Supports: $select, $OrderBy. Read-only.
     */
    otherWorkloadsSetToIntune?: boolean;
    /**
     * Ownership of the device. Supports: $select, $OrderBy. Read-only.
     */
    ownership?: string;
    /**
     * When TRUE, indicates processor hardware 64-bit architecture check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    processor64BitCheckFailed?: boolean;
    /**
     * When TRUE, indicates processor hardware core count check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    processorCoreCountCheckFailed?: boolean;
    /**
     * When TRUE, indicates processor hardware family check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    processorFamilyCheckFailed?: boolean;
    /**
     * When TRUE, indicates processor hardware speed check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    processorSpeedCheckFailed?: boolean;
    /**
     * When TRUE, indicates RAM hardware check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    ramCheckFailed?: boolean;
    /**
     * When TRUE, indicates secure boot hardware check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    secureBootCheckFailed?: boolean;
    /**
     * The serial number of the device. Supports: $select, $OrderBy. Read-only.
     */
    serialNumber?: string;
    /**
     * When TRUE, indicates storage hardware check failed for device to upgrade to the latest version of windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    storageCheckFailed?: boolean;
    /**
     * When TRUE, indicates the device is Tenant Attached. When FALSE, indicates it's not Tenant Attached. Supports: $select, $OrderBy. Read-only.
     */
    tenantAttached?: boolean;
    /**
     * When TRUE, indicates Trusted Platform Module (TPM) hardware check failed for device to the latest version of upgrade to windows. When FALSE, indicates the check succeeded. Supports: $select, $OrderBy. Read-only.
     */
    tpmCheckFailed?: boolean;
    /**
     * Work From Anywhere windows device upgrade eligibility status.
     */
    upgradeEligibility?: OperatingSystemUpgradeEligibility;
    /**
     * Indicates per device windows score. Valid values 0 to 100. Value -1 means associated score is unavailable. Supports: $select, $OrderBy. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    windowsScore?: number;
    /**
     * Indicates work from anywhere per device overall score. Valid values 0 to 100. Value -1 means associated score is unavailable. Supports: $select, $OrderBy. Read-only. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
     */
    workFromAnywhereScore?: number;
}
// tslint:enable
// eslint-enable
