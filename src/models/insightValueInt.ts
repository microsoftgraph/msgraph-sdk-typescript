// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoUserExperienceAnalyticsInsightValue, serializeUserExperienceAnalyticsInsightValue, type UserExperienceAnalyticsInsightValue } from './userExperienceAnalyticsInsightValue';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createInsightValueIntFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoInsightValueInt;
}
export function deserializeIntoInsightValueInt(insightValueInt: InsightValueInt | undefined = {} as InsightValueInt) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoUserExperienceAnalyticsInsightValue(insightValueInt),
        "value": n => { insightValueInt.value = n.getNumberValue(); },
    }
}
export interface InsightValueInt extends Parsable, UserExperienceAnalyticsInsightValue {
    /**
     * The int value of the user experience analytics insight.
     */
    value?: number;
}
export function serializeInsightValueInt(writer: SerializationWriter, insightValueInt: InsightValueInt | undefined = {} as InsightValueInt) : void {
        serializeUserExperienceAnalyticsInsightValue(writer, insightValueInt)
        writer.writeNumberValue("value", insightValueInt.value);
}
// tslint:enable
// eslint-enable
