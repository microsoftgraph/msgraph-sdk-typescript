// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createStringKeyObjectValuePairFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoStringKeyObjectValuePair;
}
export function deserializeIntoStringKeyObjectValuePair(stringKeyObjectValuePair: StringKeyObjectValuePair | undefined = {} as StringKeyObjectValuePair) : Record<string, (node: ParseNode) => void> {
    return {
        "key": n => { stringKeyObjectValuePair.key = n.getStringValue(); },
        "@odata.type": n => { stringKeyObjectValuePair.odataType = n.getStringValue(); },
    }
}
export function serializeStringKeyObjectValuePair(writer: SerializationWriter, stringKeyObjectValuePair: StringKeyObjectValuePair | undefined = {} as StringKeyObjectValuePair) : void {
        writer.writeStringValue("key", stringKeyObjectValuePair.key);
        writer.writeStringValue("@odata.type", stringKeyObjectValuePair.odataType);
        writer.writeAdditionalData(stringKeyObjectValuePair.additionalData);
}
export interface StringKeyObjectValuePair extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Key.
     */
    key?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
