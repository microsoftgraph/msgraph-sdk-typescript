// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createUserConsentRequestFromDiscriminatorValue, serializeUserConsentRequest, type UserConsentRequest } from './userConsentRequest';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserConsentRequestCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserConsentRequestCollectionResponse;
}
export function deserializeIntoUserConsentRequestCollectionResponse(userConsentRequestCollectionResponse: UserConsentRequestCollectionResponse | undefined = {} as UserConsentRequestCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(userConsentRequestCollectionResponse),
        "value": n => { userConsentRequestCollectionResponse.value = n.getCollectionOfObjectValues<UserConsentRequest>(createUserConsentRequestFromDiscriminatorValue); },
    }
}
export function serializeUserConsentRequestCollectionResponse(writer: SerializationWriter, userConsentRequestCollectionResponse: UserConsentRequestCollectionResponse | undefined = {} as UserConsentRequestCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, userConsentRequestCollectionResponse)
    writer.writeCollectionOfObjectValues<UserConsentRequest>("value", userConsentRequestCollectionResponse.value, serializeUserConsentRequest);
}
export interface UserConsentRequestCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UserConsentRequest[];
}
// tslint:enable
// eslint-enable
