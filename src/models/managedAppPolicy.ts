// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAndroidManagedAppProtection } from './androidManagedAppProtection';
import { deserializeIntoDefaultManagedAppProtection } from './defaultManagedAppProtection';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type AndroidManagedAppProtection, type DefaultManagedAppProtection, type IosManagedAppProtection, type ManagedAppConfiguration, type ManagedAppProtection, type MdmWindowsInformationProtectionPolicy, type TargetedManagedAppConfiguration, type TargetedManagedAppProtection, type WindowsInformationProtection, type WindowsInformationProtectionPolicy } from './index';
import { deserializeIntoIosManagedAppProtection } from './iosManagedAppProtection';
import { deserializeIntoManagedAppConfiguration } from './managedAppConfiguration';
import { deserializeIntoManagedAppProtection } from './managedAppProtection';
import { deserializeIntoMdmWindowsInformationProtectionPolicy } from './mdmWindowsInformationProtectionPolicy';
import { deserializeIntoTargetedManagedAppConfiguration } from './targetedManagedAppConfiguration';
import { deserializeIntoTargetedManagedAppProtection } from './targetedManagedAppProtection';
import { deserializeIntoWindowsInformationProtection } from './windowsInformationProtection';
import { deserializeIntoWindowsInformationProtectionPolicy } from './windowsInformationProtectionPolicy';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createManagedAppPolicyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.androidManagedAppProtection":
                    return deserializeIntoAndroidManagedAppProtection;
                case "#microsoft.graph.defaultManagedAppProtection":
                    return deserializeIntoDefaultManagedAppProtection;
                case "#microsoft.graph.iosManagedAppProtection":
                    return deserializeIntoIosManagedAppProtection;
                case "#microsoft.graph.managedAppConfiguration":
                    return deserializeIntoManagedAppConfiguration;
                case "#microsoft.graph.managedAppProtection":
                    return deserializeIntoManagedAppProtection;
                case "#microsoft.graph.mdmWindowsInformationProtectionPolicy":
                    return deserializeIntoMdmWindowsInformationProtectionPolicy;
                case "#microsoft.graph.targetedManagedAppConfiguration":
                    return deserializeIntoTargetedManagedAppConfiguration;
                case "#microsoft.graph.targetedManagedAppProtection":
                    return deserializeIntoTargetedManagedAppProtection;
                case "#microsoft.graph.windowsInformationProtection":
                    return deserializeIntoWindowsInformationProtection;
                case "#microsoft.graph.windowsInformationProtectionPolicy":
                    return deserializeIntoWindowsInformationProtectionPolicy;
            }
        }
    }
    return deserializeIntoManagedAppPolicy;
}
export function deserializeIntoManagedAppPolicy(managedAppPolicy: ManagedAppPolicy | undefined = {} as ManagedAppPolicy) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedAppPolicy),
        "createdDateTime": n => { managedAppPolicy.createdDateTime = n.getDateValue(); },
        "description": n => { managedAppPolicy.description = n.getStringValue(); },
        "displayName": n => { managedAppPolicy.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { managedAppPolicy.lastModifiedDateTime = n.getDateValue(); },
        "version": n => { managedAppPolicy.version = n.getStringValue(); },
    }
}
export interface ManagedAppPolicy extends Entity, Parsable {
    /**
     * The date and time the policy was created.
     */
    createdDateTime?: Date;
    /**
     * The policy's description.
     */
    description?: string;
    /**
     * Policy display name.
     */
    displayName?: string;
    /**
     * Last time the policy was modified.
     */
    lastModifiedDateTime?: Date;
    /**
     * Version of the entity.
     */
    version?: string;
}
export function serializeManagedAppPolicy(writer: SerializationWriter, managedAppPolicy: ManagedAppPolicy | undefined = {} as ManagedAppPolicy) : void {
    serializeEntity(writer, managedAppPolicy)
    writer.writeDateValue("createdDateTime", managedAppPolicy.createdDateTime);
    writer.writeStringValue("description", managedAppPolicy.description);
    writer.writeStringValue("displayName", managedAppPolicy.displayName);
    writer.writeDateValue("lastModifiedDateTime", managedAppPolicy.lastModifiedDateTime);
    writer.writeStringValue("version", managedAppPolicy.version);
}
// tslint:enable
// eslint-enable
