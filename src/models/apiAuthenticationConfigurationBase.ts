// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBasicAuthentication } from './basicAuthentication';
import { deserializeIntoClientCertificateAuthentication } from './clientCertificateAuthentication';
import { type BasicAuthentication, type ClientCertificateAuthentication, type Pkcs12Certificate } from './index';
import { deserializeIntoPkcs12Certificate } from './pkcs12Certificate';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApiAuthenticationConfigurationBase extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createApiAuthenticationConfigurationBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.basicAuthentication":
                    return deserializeIntoBasicAuthentication;
                case "#microsoft.graph.clientCertificateAuthentication":
                    return deserializeIntoClientCertificateAuthentication;
                case "#microsoft.graph.pkcs12Certificate":
                    return deserializeIntoPkcs12Certificate;
            }
        }
    }
    return deserializeIntoApiAuthenticationConfigurationBase;
}
export function deserializeIntoApiAuthenticationConfigurationBase(apiAuthenticationConfigurationBase: ApiAuthenticationConfigurationBase | undefined = {} as ApiAuthenticationConfigurationBase) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { apiAuthenticationConfigurationBase.odataType = n.getStringValue(); },
    }
}
export function serializeApiAuthenticationConfigurationBase(writer: SerializationWriter, apiAuthenticationConfigurationBase: ApiAuthenticationConfigurationBase | undefined = {} as ApiAuthenticationConfigurationBase) : void {
    writer.writeStringValue("@odata.type", apiAuthenticationConfigurationBase.odataType);
    writer.writeAdditionalData(apiAuthenticationConfigurationBase.additionalData);
}
// tslint:enable
// eslint-enable
