// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { ObjectMappingMetadata } from './objectMappingMetadata';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createObjectMappingMetadataEntryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoObjectMappingMetadataEntry;
}
export function deserializeIntoObjectMappingMetadataEntry(objectMappingMetadataEntry: ObjectMappingMetadataEntry | undefined = {} as ObjectMappingMetadataEntry) : Record<string, (node: ParseNode) => void> {
    return {
        "key": n => { objectMappingMetadataEntry.key = n.getEnumValue<ObjectMappingMetadata>(ObjectMappingMetadata); },
        "@odata.type": n => { objectMappingMetadataEntry.odataType = n.getStringValue(); },
        "value": n => { objectMappingMetadataEntry.value = n.getStringValue(); },
    }
}
export interface ObjectMappingMetadataEntry extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Possible values are: EscrowBehavior, DisableMonitoringForChanges, OriginalJoiningProperty, Disposition, IsCustomerDefined, ExcludeFromReporting, Unsynchronized.
     */
    key?: ObjectMappingMetadata;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Value of the metadata property.
     */
    value?: string;
}
export function serializeObjectMappingMetadataEntry(writer: SerializationWriter, objectMappingMetadataEntry: ObjectMappingMetadataEntry | undefined = {} as ObjectMappingMetadataEntry) : void {
    writer.writeEnumValue<ObjectMappingMetadata>("key", objectMappingMetadataEntry.key);
    writer.writeStringValue("@odata.type", objectMappingMetadataEntry.odataType);
    writer.writeStringValue("value", objectMappingMetadataEntry.value);
    writer.writeAdditionalData(objectMappingMetadataEntry.additionalData);
}
// tslint:enable
// eslint-enable
