import { deserializeIntoIdentitySet, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ChatMessageFromIdentitySet extends IdentitySet, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createChatMessageFromIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoChatMessageFromIdentitySet;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoChatMessageFromIdentitySet(chatMessageFromIdentitySet: ChatMessageFromIdentitySet | undefined = {} as ChatMessageFromIdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(chatMessageFromIdentitySet),
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeChatMessageFromIdentitySet(writer: SerializationWriter, chatMessageFromIdentitySet: ChatMessageFromIdentitySet | undefined = {} as ChatMessageFromIdentitySet) : void {
        serializeIdentitySet(writer, chatMessageFromIdentitySet)
}
