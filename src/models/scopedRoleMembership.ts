// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createIdentityFromDiscriminatorValue, serializeIdentity, type Identity } from './identity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createScopedRoleMembershipFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoScopedRoleMembership;
}
export function deserializeIntoScopedRoleMembership(scopedRoleMembership: ScopedRoleMembership | undefined = {} as ScopedRoleMembership) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(scopedRoleMembership),
        "administrativeUnitId": n => { scopedRoleMembership.administrativeUnitId = n.getStringValue(); },
        "roleId": n => { scopedRoleMembership.roleId = n.getStringValue(); },
        "roleMemberInfo": n => { scopedRoleMembership.roleMemberInfo = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
export interface ScopedRoleMembership extends Entity, Parsable {
    /**
     * Unique identifier for the administrative unit that the directory role is scoped to
     */
    administrativeUnitId?: string;
    /**
     * Unique identifier for the directory role that the member is in.
     */
    roleId?: string;
    /**
     * The roleMemberInfo property
     */
    roleMemberInfo?: Identity;
}
export function serializeScopedRoleMembership(writer: SerializationWriter, scopedRoleMembership: ScopedRoleMembership | undefined = {} as ScopedRoleMembership) : void {
        serializeEntity(writer, scopedRoleMembership)
        writer.writeStringValue("administrativeUnitId", scopedRoleMembership.administrativeUnitId);
        writer.writeStringValue("roleId", scopedRoleMembership.roleId);
        writer.writeObjectValue<Identity>("roleMemberInfo", scopedRoleMembership.roleMemberInfo, serializeIdentity);
}
// tslint:enable
// eslint-enable
