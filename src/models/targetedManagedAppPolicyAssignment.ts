// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue, serializeDeviceAndAppManagementAssignmentTarget, type DeviceAndAppManagementAssignmentTarget } from './deviceAndAppManagementAssignmentTarget';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTargetedManagedAppPolicyAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTargetedManagedAppPolicyAssignment;
}
export function deserializeIntoTargetedManagedAppPolicyAssignment(targetedManagedAppPolicyAssignment: TargetedManagedAppPolicyAssignment | undefined = {} as TargetedManagedAppPolicyAssignment) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(targetedManagedAppPolicyAssignment),
        "target": n => { targetedManagedAppPolicyAssignment.target = n.getObjectValue<DeviceAndAppManagementAssignmentTarget>(createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue); },
    }
}
export function serializeTargetedManagedAppPolicyAssignment(writer: SerializationWriter, targetedManagedAppPolicyAssignment: TargetedManagedAppPolicyAssignment | undefined = {} as TargetedManagedAppPolicyAssignment) : void {
    serializeEntity(writer, targetedManagedAppPolicyAssignment)
    writer.writeObjectValue<DeviceAndAppManagementAssignmentTarget>("target", targetedManagedAppPolicyAssignment.target, serializeDeviceAndAppManagementAssignmentTarget);
}
export interface TargetedManagedAppPolicyAssignment extends Entity, Parsable {
    /**
     * Identifier for deployment to a group or app
     */
    target?: DeviceAndAppManagementAssignmentTarget;
}
// tslint:enable
// eslint-enable
