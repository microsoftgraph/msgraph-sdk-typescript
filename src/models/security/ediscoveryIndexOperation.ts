import { deserializeIntoCaseOperation, serializeCaseOperation, type CaseOperation } from './caseOperation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createEdiscoveryIndexOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEdiscoveryIndexOperation;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoEdiscoveryIndexOperation(ediscoveryIndexOperation: EdiscoveryIndexOperation | undefined = {} as EdiscoveryIndexOperation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryIndexOperation),
    }
}
export interface EdiscoveryIndexOperation extends CaseOperation, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeEdiscoveryIndexOperation(writer: SerializationWriter, ediscoveryIndexOperation: EdiscoveryIndexOperation | undefined = {} as EdiscoveryIndexOperation) : void {
        serializeCaseOperation(writer, ediscoveryIndexOperation)
}
