// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createHostSslCertificatePortFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoHostSslCertificatePort;
}
export function deserializeIntoHostSslCertificatePort(hostSslCertificatePort: HostSslCertificatePort | undefined = {} as HostSslCertificatePort) : Record<string, (node: ParseNode) => void> {
    return {
        "firstSeenDateTime": n => { hostSslCertificatePort.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostSslCertificatePort.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { hostSslCertificatePort.odataType = n.getStringValue(); },
        "port": n => { hostSslCertificatePort.port = n.getNumberValue(); },
    }
}
export interface HostSslCertificatePort extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The first date and time when this port was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date;
    /**
     * The most recent date and time when this port was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The port number.
     */
    port?: number;
}
export function serializeHostSslCertificatePort(writer: SerializationWriter, hostSslCertificatePort: HostSslCertificatePort | undefined = {} as HostSslCertificatePort) : void {
    writer.writeDateValue("firstSeenDateTime", hostSslCertificatePort.firstSeenDateTime);
    writer.writeDateValue("lastSeenDateTime", hostSslCertificatePort.lastSeenDateTime);
    writer.writeStringValue("@odata.type", hostSslCertificatePort.odataType);
    writer.writeNumberValue("port", hostSslCertificatePort.port);
    writer.writeAdditionalData(hostSslCertificatePort.additionalData);
}
// tslint:enable
// eslint-enable
