// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAlertEvidenceFromDiscriminatorValue, deserializeIntoAlertEvidence, serializeAlertEvidence, type AlertEvidence } from './alertEvidence';
import { KubernetesPlatform } from './kubernetesPlatform';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createKubernetesClusterEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoKubernetesClusterEvidence;
}
export function deserializeIntoKubernetesClusterEvidence(kubernetesClusterEvidence: KubernetesClusterEvidence | undefined = {} as KubernetesClusterEvidence) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesClusterEvidence),
        "cloudResource": n => { kubernetesClusterEvidence.cloudResource = n.getObjectValue<AlertEvidence>(createAlertEvidenceFromDiscriminatorValue); },
        "distribution": n => { kubernetesClusterEvidence.distribution = n.getStringValue(); },
        "name": n => { kubernetesClusterEvidence.name = n.getStringValue(); },
        "platform": n => { kubernetesClusterEvidence.platform = n.getEnumValue<KubernetesPlatform>(KubernetesPlatform); },
        "version": n => { kubernetesClusterEvidence.version = n.getStringValue(); },
    }
}
export interface KubernetesClusterEvidence extends AlertEvidence, Parsable {
    /**
     * The cloud identifier of the cluster. Can be either an amazonResourceEvidence, azureResourceEvidence, or googleCloudResourceEvidence object.
     */
    cloudResource?: AlertEvidence;
    /**
     * The distribution type of the cluster.
     */
    distribution?: string;
    /**
     * The cluster name.
     */
    name?: string;
    /**
     * The platform the cluster runs on. Possible values are: unknown, aks, eks, gke, arc, unknownFutureValue.
     */
    platform?: KubernetesPlatform;
    /**
     * The kubernetes version of the cluster.
     */
    version?: string;
}
export function serializeKubernetesClusterEvidence(writer: SerializationWriter, kubernetesClusterEvidence: KubernetesClusterEvidence | undefined = {} as KubernetesClusterEvidence) : void {
        serializeAlertEvidence(writer, kubernetesClusterEvidence)
        writer.writeObjectValue<AlertEvidence>("cloudResource", kubernetesClusterEvidence.cloudResource, serializeAlertEvidence);
        writer.writeStringValue("distribution", kubernetesClusterEvidence.distribution);
        writer.writeStringValue("name", kubernetesClusterEvidence.name);
        writer.writeEnumValue<KubernetesPlatform>("platform", kubernetesClusterEvidence.platform);
        writer.writeStringValue("version", kubernetesClusterEvidence.version);
}
// tslint:enable
// eslint-enable
