// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAlertEvidence, serializeAlertEvidence, type AlertEvidence } from './alertEvidence';
import { createContainerImageEvidenceFromDiscriminatorValue, serializeContainerImageEvidence, type ContainerImageEvidence } from './containerImageEvidence';
import { createKubernetesPodEvidenceFromDiscriminatorValue, serializeKubernetesPodEvidence, type KubernetesPodEvidence } from './kubernetesPodEvidence';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ContainerEvidence extends AlertEvidence, Parsable {
    /**
     * The list of arguments.
     */
    args?: string[];
    /**
     * The list of commands.
     */
    command?: string[];
    /**
     * The container ID.
     */
    containerId?: string;
    /**
     * The image used to run the container.
     */
    image?: ContainerImageEvidence;
    /**
     * The privileged status.
     */
    isPrivileged?: boolean;
    /**
     * The container name.
     */
    name?: string;
    /**
     * The pod this container belongs to.
     */
    pod?: KubernetesPodEvidence;
}
export function createContainerEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoContainerEvidence;
}
export function deserializeIntoContainerEvidence(containerEvidence: ContainerEvidence | undefined = {} as ContainerEvidence) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(containerEvidence),
        "args": n => { containerEvidence.args = n.getCollectionOfPrimitiveValues<string>(); },
        "command": n => { containerEvidence.command = n.getCollectionOfPrimitiveValues<string>(); },
        "containerId": n => { containerEvidence.containerId = n.getStringValue(); },
        "image": n => { containerEvidence.image = n.getObjectValue<ContainerImageEvidence>(createContainerImageEvidenceFromDiscriminatorValue); },
        "isPrivileged": n => { containerEvidence.isPrivileged = n.getBooleanValue(); },
        "name": n => { containerEvidence.name = n.getStringValue(); },
        "pod": n => { containerEvidence.pod = n.getObjectValue<KubernetesPodEvidence>(createKubernetesPodEvidenceFromDiscriminatorValue); },
    }
}
export function serializeContainerEvidence(writer: SerializationWriter, containerEvidence: ContainerEvidence | undefined = {} as ContainerEvidence) : void {
        serializeAlertEvidence(writer, containerEvidence)
        writer.writeCollectionOfPrimitiveValues<string>("args", containerEvidence.args);
        writer.writeCollectionOfPrimitiveValues<string>("command", containerEvidence.command);
        writer.writeStringValue("containerId", containerEvidence.containerId);
        writer.writeObjectValue<ContainerImageEvidence>("image", containerEvidence.image, serializeContainerImageEvidence);
        writer.writeBooleanValue("isPrivileged", containerEvidence.isPrivileged);
        writer.writeStringValue("name", containerEvidence.name);
        writer.writeObjectValue<KubernetesPodEvidence>("pod", containerEvidence.pod, serializeKubernetesPodEvidence);
}
// tslint:enable
// eslint-enable
