// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from '../entity';
import { createHostFromDiscriminatorValue, serializeHost, type Host } from './host';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSubdomainFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSubdomain;
}
export function deserializeIntoSubdomain(subdomain: Subdomain | undefined = {} as Subdomain) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(subdomain),
        "firstSeenDateTime": n => { subdomain.firstSeenDateTime = n.getDateValue(); },
        "host": n => { subdomain.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
    }
}
export function serializeSubdomain(writer: SerializationWriter, subdomain: Subdomain | undefined = {} as Subdomain) : void {
        serializeEntity(writer, subdomain)
        writer.writeDateValue("firstSeenDateTime", subdomain.firstSeenDateTime);
        writer.writeObjectValue<Host>("host", subdomain.host, );
}
export interface Subdomain extends Entity, Parsable {
    /**
     * The date and time when Microsoft Defender Threat Intelligence first observed the subdomain. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date;
    /**
     * The host property
     */
    host?: Host;
}
// tslint:enable
// eslint-enable
