// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from '../entity';
import { createArticleFromDiscriminatorValue, serializeArticle, type Article } from './article';
import { createArticleIndicatorFromDiscriminatorValue, serializeArticleIndicator, type ArticleIndicator } from './articleIndicator';
import { createHostFromDiscriminatorValue, serializeHost, type Host } from './host';
import { createHostComponentFromDiscriminatorValue, serializeHostComponent, type HostComponent } from './hostComponent';
import { createHostCookieFromDiscriminatorValue, serializeHostCookie, type HostCookie } from './hostCookie';
import { createHostPairFromDiscriminatorValue, serializeHostPair, type HostPair } from './hostPair';
import { createHostSslCertificateFromDiscriminatorValue, serializeHostSslCertificate, type HostSslCertificate } from './hostSslCertificate';
import { createHostTrackerFromDiscriminatorValue, serializeHostTracker, type HostTracker } from './hostTracker';
import { createIntelligenceProfileFromDiscriminatorValue, serializeIntelligenceProfile, type IntelligenceProfile } from './intelligenceProfile';
import { createIntelligenceProfileIndicatorFromDiscriminatorValue, serializeIntelligenceProfileIndicator, type IntelligenceProfileIndicator } from './intelligenceProfileIndicator';
import { createPassiveDnsRecordFromDiscriminatorValue, serializePassiveDnsRecord, type PassiveDnsRecord } from './passiveDnsRecord';
import { createSslCertificateFromDiscriminatorValue, serializeSslCertificate, type SslCertificate } from './sslCertificate';
import { createSubdomainFromDiscriminatorValue, serializeSubdomain, type Subdomain } from './subdomain';
import { createVulnerabilityFromDiscriminatorValue, serializeVulnerability, type Vulnerability } from './vulnerability';
import { createWhoisHistoryRecordFromDiscriminatorValue, serializeWhoisHistoryRecord, type WhoisHistoryRecord } from './whoisHistoryRecord';
import { createWhoisRecordFromDiscriminatorValue, serializeWhoisRecord, type WhoisRecord } from './whoisRecord';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createThreatIntelligenceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoThreatIntelligence;
}
export function deserializeIntoThreatIntelligence(threatIntelligence: ThreatIntelligence | undefined = {} as ThreatIntelligence) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(threatIntelligence),
        "articleIndicators": n => { threatIntelligence.articleIndicators = n.getCollectionOfObjectValues<ArticleIndicator>(createArticleIndicatorFromDiscriminatorValue); },
        "articles": n => { threatIntelligence.articles = n.getCollectionOfObjectValues<Article>(createArticleFromDiscriminatorValue); },
        "hostComponents": n => { threatIntelligence.hostComponents = n.getCollectionOfObjectValues<HostComponent>(createHostComponentFromDiscriminatorValue); },
        "hostCookies": n => { threatIntelligence.hostCookies = n.getCollectionOfObjectValues<HostCookie>(createHostCookieFromDiscriminatorValue); },
        "hostPairs": n => { threatIntelligence.hostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "hosts": n => { threatIntelligence.hosts = n.getCollectionOfObjectValues<Host>(createHostFromDiscriminatorValue); },
        "hostSslCertificates": n => { threatIntelligence.hostSslCertificates = n.getCollectionOfObjectValues<HostSslCertificate>(createHostSslCertificateFromDiscriminatorValue); },
        "hostTrackers": n => { threatIntelligence.hostTrackers = n.getCollectionOfObjectValues<HostTracker>(createHostTrackerFromDiscriminatorValue); },
        "intelligenceProfileIndicators": n => { threatIntelligence.intelligenceProfileIndicators = n.getCollectionOfObjectValues<IntelligenceProfileIndicator>(createIntelligenceProfileIndicatorFromDiscriminatorValue); },
        "intelProfiles": n => { threatIntelligence.intelProfiles = n.getCollectionOfObjectValues<IntelligenceProfile>(createIntelligenceProfileFromDiscriminatorValue); },
        "passiveDnsRecords": n => { threatIntelligence.passiveDnsRecords = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
        "sslCertificates": n => { threatIntelligence.sslCertificates = n.getCollectionOfObjectValues<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
        "subdomains": n => { threatIntelligence.subdomains = n.getCollectionOfObjectValues<Subdomain>(createSubdomainFromDiscriminatorValue); },
        "vulnerabilities": n => { threatIntelligence.vulnerabilities = n.getCollectionOfObjectValues<Vulnerability>(createVulnerabilityFromDiscriminatorValue); },
        "whoisHistoryRecords": n => { threatIntelligence.whoisHistoryRecords = n.getCollectionOfObjectValues<WhoisHistoryRecord>(createWhoisHistoryRecordFromDiscriminatorValue); },
        "whoisRecords": n => { threatIntelligence.whoisRecords = n.getCollectionOfObjectValues<WhoisRecord>(createWhoisRecordFromDiscriminatorValue); },
    }
}
export function serializeThreatIntelligence(writer: SerializationWriter, threatIntelligence: ThreatIntelligence | undefined = {} as ThreatIntelligence) : void {
        serializeEntity(writer, threatIntelligence)
        writer.writeCollectionOfObjectValues<ArticleIndicator>("articleIndicators", threatIntelligence.articleIndicators, );
        writer.writeCollectionOfObjectValues<Article>("articles", threatIntelligence.articles, );
        writer.writeCollectionOfObjectValues<HostComponent>("hostComponents", threatIntelligence.hostComponents, );
        writer.writeCollectionOfObjectValues<HostCookie>("hostCookies", threatIntelligence.hostCookies, );
        writer.writeCollectionOfObjectValues<HostPair>("hostPairs", threatIntelligence.hostPairs, );
        writer.writeCollectionOfObjectValues<Host>("hosts", threatIntelligence.hosts, );
        writer.writeCollectionOfObjectValues<HostSslCertificate>("hostSslCertificates", threatIntelligence.hostSslCertificates, );
        writer.writeCollectionOfObjectValues<HostTracker>("hostTrackers", threatIntelligence.hostTrackers, );
        writer.writeCollectionOfObjectValues<IntelligenceProfileIndicator>("intelligenceProfileIndicators", threatIntelligence.intelligenceProfileIndicators, );
        writer.writeCollectionOfObjectValues<IntelligenceProfile>("intelProfiles", threatIntelligence.intelProfiles, );
        writer.writeCollectionOfObjectValues<PassiveDnsRecord>("passiveDnsRecords", threatIntelligence.passiveDnsRecords, );
        writer.writeCollectionOfObjectValues<SslCertificate>("sslCertificates", threatIntelligence.sslCertificates, );
        writer.writeCollectionOfObjectValues<Subdomain>("subdomains", threatIntelligence.subdomains, );
        writer.writeCollectionOfObjectValues<Vulnerability>("vulnerabilities", threatIntelligence.vulnerabilities, );
        writer.writeCollectionOfObjectValues<WhoisHistoryRecord>("whoisHistoryRecords", threatIntelligence.whoisHistoryRecords, );
        writer.writeCollectionOfObjectValues<WhoisRecord>("whoisRecords", threatIntelligence.whoisRecords, );
}
export interface ThreatIntelligence extends Entity, Parsable {
    /**
     * Refers to indicators of threat or compromise highlighted in an article.Note: List retrieval is not yet supported.
     */
    articleIndicators?: ArticleIndicator[];
    /**
     * A list of article objects.
     */
    articles?: Article[];
    /**
     * Retrieve details about hostComponent objects.Note: List retrieval is not yet supported.
     */
    hostComponents?: HostComponent[];
    /**
     * Retrieve details about hostCookie objects.Note: List retrieval is not yet supported.
     */
    hostCookies?: HostCookie[];
    /**
     * Retrieve details about hostTracker objects.Note: List retrieval is not yet supported.
     */
    hostPairs?: HostPair[];
    /**
     * Refers to host objects that Microsoft Threat Intelligence has observed.Note: List retrieval is not yet supported.
     */
    hosts?: Host[];
    /**
     * Retrieve details about hostSslCertificate objects.Note: List retrieval is not yet supported.
     */
    hostSslCertificates?: HostSslCertificate[];
    /**
     * Retrieve details about hostTracker objects.Note: List retrieval is not yet supported.
     */
    hostTrackers?: HostTracker[];
    /**
     * The intelligenceProfileIndicators property
     */
    intelligenceProfileIndicators?: IntelligenceProfileIndicator[];
    /**
     * A list of intelligenceProfile objects.
     */
    intelProfiles?: IntelligenceProfile[];
    /**
     * Retrieve details about passiveDnsRecord objects.Note: List retrieval is not yet supported.
     */
    passiveDnsRecords?: PassiveDnsRecord[];
    /**
     * Retrieve details about sslCertificate objects.Note: List retrieval is not yet supported.
     */
    sslCertificates?: SslCertificate[];
    /**
     * Retrieve details about the subdomain.Note: List retrieval is not yet supported.
     */
    subdomains?: Subdomain[];
    /**
     * Retrieve details about vulnerabilities.Note: List retrieval is not yet supported.
     */
    vulnerabilities?: Vulnerability[];
    /**
     * Retrieve details about whoisHistoryRecord objects.Note: List retrieval is not yet supported.
     */
    whoisHistoryRecords?: WhoisHistoryRecord[];
    /**
     * A list of whoisRecord objects.
     */
    whoisRecords?: WhoisRecord[];
}
// tslint:enable
// eslint-enable
