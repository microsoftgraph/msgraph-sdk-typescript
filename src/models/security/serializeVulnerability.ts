import { serializeEntity } from '../serializeEntity';
import { type Article } from './article';
import { type CvssSummary } from './cvssSummary';
import { type FormattedContent } from './formattedContent';
import { type Hyperlink } from './hyperlink';
import { serializeArticle } from './serializeArticle';
import { serializeCvssSummary } from './serializeCvssSummary';
import { serializeFormattedContent } from './serializeFormattedContent';
import { serializeHyperlink } from './serializeHyperlink';
import { serializeVulnerabilityComponent } from './serializeVulnerabilityComponent';
import { type Vulnerability } from './vulnerability';
import { type VulnerabilityComponent } from './vulnerabilityComponent';
import { VulnerabilitySeverity } from './vulnerabilitySeverity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function serializeVulnerability(writer: SerializationWriter, vulnerability: Vulnerability | undefined = {} as Vulnerability) : void {
        serializeEntity(writer, vulnerability)
        writer.writeBooleanValue("activeExploitsObserved", vulnerability.activeExploitsObserved);
        writer.writeCollectionOfObjectValues<Article>("articles", vulnerability.articles, serializeArticle);
        writer.writeCollectionOfPrimitiveValues<string>("commonWeaknessEnumerationIds", vulnerability.commonWeaknessEnumerationIds);
        writer.writeCollectionOfObjectValues<VulnerabilityComponent>("components", vulnerability.components, serializeVulnerabilityComponent);
        writer.writeDateValue("createdDateTime", vulnerability.createdDateTime);
        writer.writeObjectValue<CvssSummary>("cvss2Summary", vulnerability.cvss2Summary, serializeCvssSummary);
        writer.writeObjectValue<CvssSummary>("cvss3Summary", vulnerability.cvss3Summary, serializeCvssSummary);
        writer.writeObjectValue<FormattedContent>("description", vulnerability.description, serializeFormattedContent);
        writer.writeCollectionOfObjectValues<Hyperlink>("exploits", vulnerability.exploits, serializeHyperlink);
        writer.writeBooleanValue("exploitsAvailable", vulnerability.exploitsAvailable);
        writer.writeBooleanValue("hasChatter", vulnerability.hasChatter);
        writer.writeDateValue("lastModifiedDateTime", vulnerability.lastModifiedDateTime);
        writer.writeNumberValue("priorityScore", vulnerability.priorityScore);
        writer.writeDateValue("publishedDateTime", vulnerability.publishedDateTime);
        writer.writeCollectionOfObjectValues<Hyperlink>("references", vulnerability.references, serializeHyperlink);
        writer.writeObjectValue<FormattedContent>("remediation", vulnerability.remediation, serializeFormattedContent);
        writer.writeEnumValue<VulnerabilitySeverity>("severity", vulnerability.severity);
}
