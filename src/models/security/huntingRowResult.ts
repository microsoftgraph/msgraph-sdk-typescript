import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createHuntingRowResultFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoHuntingRowResult;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoHuntingRowResult(huntingRowResult: HuntingRowResult | undefined = {} as HuntingRowResult) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { huntingRowResult.odataType = n.getStringValue(); },
    }
}
export interface HuntingRowResult extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeHuntingRowResult(writer: SerializationWriter, huntingRowResult: HuntingRowResult | undefined = {} as HuntingRowResult) : void {
        writer.writeStringValue("@odata.type", huntingRowResult.odataType);
        writer.writeAdditionalData(huntingRowResult.additionalData);
}
