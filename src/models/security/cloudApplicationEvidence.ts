// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAlertEvidence, serializeAlertEvidence, type AlertEvidence } from './alertEvidence';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CloudApplicationEvidence extends AlertEvidence, Parsable {
    /**
     * Unique identifier of the application.
     */
    appId?: number;
    /**
     * Name of the application.
     */
    displayName?: string;
    /**
     * Identifier of the instance of the Software as a Service (SaaS) application.
     */
    instanceId?: number;
    /**
     * Name of the instance of the SaaS application.
     */
    instanceName?: string;
    /**
     * The identifier of the SaaS application.
     */
    saasAppId?: number;
}
export function createCloudApplicationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCloudApplicationEvidence;
}
export function deserializeIntoCloudApplicationEvidence(cloudApplicationEvidence: CloudApplicationEvidence | undefined = {} as CloudApplicationEvidence) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(cloudApplicationEvidence),
        "appId": n => { cloudApplicationEvidence.appId = n.getNumberValue(); },
        "displayName": n => { cloudApplicationEvidence.displayName = n.getStringValue(); },
        "instanceId": n => { cloudApplicationEvidence.instanceId = n.getNumberValue(); },
        "instanceName": n => { cloudApplicationEvidence.instanceName = n.getStringValue(); },
        "saasAppId": n => { cloudApplicationEvidence.saasAppId = n.getNumberValue(); },
    }
}
export function serializeCloudApplicationEvidence(writer: SerializationWriter, cloudApplicationEvidence: CloudApplicationEvidence | undefined = {} as CloudApplicationEvidence) : void {
        serializeAlertEvidence(writer, cloudApplicationEvidence)
        writer.writeNumberValue("appId", cloudApplicationEvidence.appId);
        writer.writeStringValue("displayName", cloudApplicationEvidence.displayName);
        writer.writeNumberValue("instanceId", cloudApplicationEvidence.instanceId);
        writer.writeStringValue("instanceName", cloudApplicationEvidence.instanceName);
        writer.writeNumberValue("saasAppId", cloudApplicationEvidence.saasAppId);
}
// tslint:enable
// eslint-enable
