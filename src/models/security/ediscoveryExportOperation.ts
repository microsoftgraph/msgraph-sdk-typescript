// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoCaseOperation, serializeCaseOperation, type CaseOperation } from './caseOperation';
import { createEdiscoveryReviewSetFromDiscriminatorValue, serializeEdiscoveryReviewSet, type EdiscoveryReviewSet } from './ediscoveryReviewSet';
import { createEdiscoveryReviewSetQueryFromDiscriminatorValue, serializeEdiscoveryReviewSetQuery, type EdiscoveryReviewSetQuery } from './ediscoveryReviewSetQuery';
import { createExportFileMetadataFromDiscriminatorValue, serializeExportFileMetadata, type ExportFileMetadata } from './exportFileMetadata';
import { ExportFileStructure } from './exportFileStructure';
import { ExportOptions } from './exportOptions';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEdiscoveryExportOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEdiscoveryExportOperation;
}
export function deserializeIntoEdiscoveryExportOperation(ediscoveryExportOperation: EdiscoveryExportOperation | undefined = {} as EdiscoveryExportOperation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryExportOperation),
        "description": n => { ediscoveryExportOperation.description = n.getStringValue(); },
        "exportFileMetadata": n => { ediscoveryExportOperation.exportFileMetadata = n.getCollectionOfObjectValues<ExportFileMetadata>(createExportFileMetadataFromDiscriminatorValue); },
        "exportOptions": n => { ediscoveryExportOperation.exportOptions = n.getCollectionOfEnumValues<ExportOptions>(ExportOptions); },
        "exportStructure": n => { ediscoveryExportOperation.exportStructure = n.getEnumValue<ExportFileStructure>(ExportFileStructure); },
        "outputName": n => { ediscoveryExportOperation.outputName = n.getStringValue(); },
        "reviewSet": n => { ediscoveryExportOperation.reviewSet = n.getObjectValue<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
        "reviewSetQuery": n => { ediscoveryExportOperation.reviewSetQuery = n.getObjectValue<EdiscoveryReviewSetQuery>(createEdiscoveryReviewSetQueryFromDiscriminatorValue); },
    }
}
export interface EdiscoveryExportOperation extends CaseOperation, Parsable {
    /**
     * The description provided for the export.
     */
    description?: string;
    /**
     * The exportFileMetadata property
     */
    exportFileMetadata?: ExportFileMetadata[];
    /**
     * The options provided for the export. For more information, see reviewSet: export. Possible values are: originalFiles, text, pdfReplacement,  tags.
     */
    exportOptions?: ExportOptions[];
    /**
     * The options that specify the structure of the export. For more information, see reviewSet: export. Possible values are: none, directory, pst.
     */
    exportStructure?: ExportFileStructure;
    /**
     * The name provided for the export.
     */
    outputName?: string;
    /**
     * Review set from where documents are exported.
     */
    reviewSet?: EdiscoveryReviewSet;
    /**
     * The review set query that is used to filter the documents for export.
     */
    reviewSetQuery?: EdiscoveryReviewSetQuery;
}
export function serializeEdiscoveryExportOperation(writer: SerializationWriter, ediscoveryExportOperation: EdiscoveryExportOperation | undefined = {} as EdiscoveryExportOperation) : void {
        serializeCaseOperation(writer, ediscoveryExportOperation)
        writer.writeStringValue("description", ediscoveryExportOperation.description);
        writer.writeCollectionOfObjectValues<ExportFileMetadata>("exportFileMetadata", ediscoveryExportOperation.exportFileMetadata, serializeExportFileMetadata);
        writer.writeEnumValue<ExportOptions[]>("exportOptions", ediscoveryExportOperation.exportOptions);
        writer.writeEnumValue<ExportFileStructure>("exportStructure", ediscoveryExportOperation.exportStructure);
        writer.writeStringValue("outputName", ediscoveryExportOperation.outputName);
        writer.writeObjectValue<EdiscoveryReviewSet>("reviewSet", ediscoveryExportOperation.reviewSet, serializeEdiscoveryReviewSet);
        writer.writeObjectValue<EdiscoveryReviewSetQuery>("reviewSetQuery", ediscoveryExportOperation.reviewSetQuery, serializeEdiscoveryReviewSetQuery);
}
// tslint:enable
// eslint-enable
