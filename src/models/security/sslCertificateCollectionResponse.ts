// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../baseCollectionPaginationCountResponse';
import { createSslCertificateFromDiscriminatorValue, serializeSslCertificate, type SslCertificate } from './sslCertificate';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSslCertificateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSslCertificateCollectionResponse;
}
export function deserializeIntoSslCertificateCollectionResponse(sslCertificateCollectionResponse: SslCertificateCollectionResponse | undefined = {} as SslCertificateCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sslCertificateCollectionResponse),
        "value": n => { sslCertificateCollectionResponse.value = n.getCollectionOfObjectValues<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
    }
}
export function serializeSslCertificateCollectionResponse(writer: SerializationWriter, sslCertificateCollectionResponse: SslCertificateCollectionResponse | undefined = {} as SslCertificateCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, sslCertificateCollectionResponse)
    writer.writeCollectionOfObjectValues<SslCertificate>("value", sslCertificateCollectionResponse.value, serializeSslCertificate);
}
export interface SslCertificateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SslCertificate[];
}
// tslint:enable
// eslint-enable
