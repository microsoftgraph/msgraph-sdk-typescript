import { deserializeIntoCaseOperation, serializeCaseOperation, type CaseOperation } from './caseOperation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createEdiscoveryTagOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoEdiscoveryTagOperation;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoEdiscoveryTagOperation(ediscoveryTagOperation: EdiscoveryTagOperation | undefined = {} as EdiscoveryTagOperation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryTagOperation),
    }
}
export interface EdiscoveryTagOperation extends CaseOperation, Parsable {
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeEdiscoveryTagOperation(writer: SerializationWriter, ediscoveryTagOperation: EdiscoveryTagOperation | undefined = {} as EdiscoveryTagOperation) : void {
        serializeCaseOperation(writer, ediscoveryTagOperation)
}
