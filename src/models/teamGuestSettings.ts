import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTeamGuestSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamGuestSettings;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTeamGuestSettings(teamGuestSettings: TeamGuestSettings | undefined = {} as TeamGuestSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "allowCreateUpdateChannels": n => { teamGuestSettings.allowCreateUpdateChannels = n.getBooleanValue(); },
        "allowDeleteChannels": n => { teamGuestSettings.allowDeleteChannels = n.getBooleanValue(); },
        "@odata.type": n => { teamGuestSettings.odataType = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTeamGuestSettings(writer: SerializationWriter, teamGuestSettings: TeamGuestSettings | undefined = {} as TeamGuestSettings) : void {
        writer.writeBooleanValue("allowCreateUpdateChannels", teamGuestSettings.allowCreateUpdateChannels);
        writer.writeBooleanValue("allowDeleteChannels", teamGuestSettings.allowDeleteChannels);
        writer.writeStringValue("@odata.type", teamGuestSettings.odataType);
        writer.writeAdditionalData(teamGuestSettings.additionalData);
}
export interface TeamGuestSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * If set to true, guests can add and update channels.
     */
    allowCreateUpdateChannels?: boolean;
    /**
     * If set to true, guests can delete channels.
     */
    allowDeleteChannels?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
}
