// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createCallFromDiscriminatorValue, serializeCall, type Call } from './call';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CallCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Call[];
}
export function createCallCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCallCollectionResponse;
}
export function deserializeIntoCallCollectionResponse(callCollectionResponse: CallCollectionResponse | undefined = {} as CallCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(callCollectionResponse),
        "value": n => { callCollectionResponse.value = n.getCollectionOfObjectValues<Call>(createCallFromDiscriminatorValue); },
    }
}
export function serializeCallCollectionResponse(writer: SerializationWriter, callCollectionResponse: CallCollectionResponse | undefined = {} as CallCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, callCollectionResponse)
        writer.writeCollectionOfObjectValues<Call>("value", callCollectionResponse.value, );
}
// tslint:enable
// eslint-enable
