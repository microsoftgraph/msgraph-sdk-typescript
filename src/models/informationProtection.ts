// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createBitlockerFromDiscriminatorValue, serializeBitlocker, type Bitlocker } from './bitlocker';
import { createThreatAssessmentRequestFromDiscriminatorValue, serializeThreatAssessmentRequest, type ThreatAssessmentRequest } from './threatAssessmentRequest';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createInformationProtectionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoInformationProtection;
}
export function deserializeIntoInformationProtection(informationProtection: InformationProtection | undefined = {} as InformationProtection) : Record<string, (node: ParseNode) => void> {
    return {
        "bitlocker": n => { informationProtection.bitlocker = n.getObjectValue<Bitlocker>(createBitlockerFromDiscriminatorValue); },
        "@odata.type": n => { informationProtection.odataType = n.getStringValue(); },
        "threatAssessmentRequests": n => { informationProtection.threatAssessmentRequests = n.getCollectionOfObjectValues<ThreatAssessmentRequest>(createThreatAssessmentRequestFromDiscriminatorValue); },
    }
}
export interface InformationProtection extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The bitlocker property
     */
    bitlocker?: Bitlocker;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The threatAssessmentRequests property
     */
    threatAssessmentRequests?: ThreatAssessmentRequest[];
}
export function serializeInformationProtection(writer: SerializationWriter, informationProtection: InformationProtection | undefined = {} as InformationProtection) : void {
        writer.writeObjectValue<Bitlocker>("bitlocker", informationProtection.bitlocker, serializeBitlocker);
        writer.writeStringValue("@odata.type", informationProtection.odataType);
        writer.writeCollectionOfObjectValues<ThreatAssessmentRequest>("threatAssessmentRequests", informationProtection.threatAssessmentRequests, serializeThreatAssessmentRequest);
        writer.writeAdditionalData(informationProtection.additionalData);
}
// tslint:enable
// eslint-enable
