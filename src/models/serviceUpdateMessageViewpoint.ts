// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createServiceUpdateMessageViewpointFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoServiceUpdateMessageViewpoint;
}
export function deserializeIntoServiceUpdateMessageViewpoint(serviceUpdateMessageViewpoint: ServiceUpdateMessageViewpoint | undefined = {} as ServiceUpdateMessageViewpoint) : Record<string, (node: ParseNode) => void> {
    return {
        "isArchived": n => { serviceUpdateMessageViewpoint.isArchived = n.getBooleanValue(); },
        "isFavorited": n => { serviceUpdateMessageViewpoint.isFavorited = n.getBooleanValue(); },
        "isRead": n => { serviceUpdateMessageViewpoint.isRead = n.getBooleanValue(); },
        "@odata.type": n => { serviceUpdateMessageViewpoint.odataType = n.getStringValue(); },
    }
}
export function serializeServiceUpdateMessageViewpoint(writer: SerializationWriter, serviceUpdateMessageViewpoint: ServiceUpdateMessageViewpoint | undefined = {} as ServiceUpdateMessageViewpoint) : void {
        writer.writeBooleanValue("isArchived", serviceUpdateMessageViewpoint.isArchived);
        writer.writeBooleanValue("isFavorited", serviceUpdateMessageViewpoint.isFavorited);
        writer.writeBooleanValue("isRead", serviceUpdateMessageViewpoint.isRead);
        writer.writeStringValue("@odata.type", serviceUpdateMessageViewpoint.odataType);
        writer.writeAdditionalData(serviceUpdateMessageViewpoint.additionalData);
}
export interface ServiceUpdateMessageViewpoint extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Indicates whether the user archived the message.
     */
    isArchived?: boolean;
    /**
     * Indicates whether the user marked the message as favorite.
     */
    isFavorited?: boolean;
    /**
     * Indicates whether the user read the message.
     */
    isRead?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
}
// tslint:enable
// eslint-enable
