// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createUserExperienceAnalyticsInsightFromDiscriminatorValue, serializeUserExperienceAnalyticsInsight, type UserExperienceAnalyticsInsight } from './userExperienceAnalyticsInsight';
import { createUserExperienceAnalyticsMetricFromDiscriminatorValue, serializeUserExperienceAnalyticsMetric, type UserExperienceAnalyticsMetric } from './userExperienceAnalyticsMetric';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserExperienceAnalyticsCategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserExperienceAnalyticsCategory;
}
export function deserializeIntoUserExperienceAnalyticsCategory(userExperienceAnalyticsCategory: UserExperienceAnalyticsCategory | undefined = {} as UserExperienceAnalyticsCategory) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(userExperienceAnalyticsCategory),
        "insights": n => { userExperienceAnalyticsCategory.insights = n.getCollectionOfObjectValues<UserExperienceAnalyticsInsight>(createUserExperienceAnalyticsInsightFromDiscriminatorValue); },
        "metricValues": n => { userExperienceAnalyticsCategory.metricValues = n.getCollectionOfObjectValues<UserExperienceAnalyticsMetric>(createUserExperienceAnalyticsMetricFromDiscriminatorValue); },
    }
}
export function serializeUserExperienceAnalyticsCategory(writer: SerializationWriter, userExperienceAnalyticsCategory: UserExperienceAnalyticsCategory | undefined = {} as UserExperienceAnalyticsCategory) : void {
        serializeEntity(writer, userExperienceAnalyticsCategory)
        writer.writeCollectionOfObjectValues<UserExperienceAnalyticsInsight>("insights", userExperienceAnalyticsCategory.insights, serializeUserExperienceAnalyticsInsight);
        writer.writeCollectionOfObjectValues<UserExperienceAnalyticsMetric>("metricValues", userExperienceAnalyticsCategory.metricValues, serializeUserExperienceAnalyticsMetric);
}
export interface UserExperienceAnalyticsCategory extends Entity, Parsable {
    /**
     * The insights for the category. Read-only.
     */
    insights?: UserExperienceAnalyticsInsight[];
    /**
     * The metric values for the user experience analytics category. Read-only.
     */
    metricValues?: UserExperienceAnalyticsMetric[];
}
// tslint:enable
// eslint-enable
