import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createDriveFromDiscriminatorValue, serializeDrive, type Drive } from './drive';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createDriveCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDriveCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoDriveCollectionResponse(driveCollectionResponse: DriveCollectionResponse | undefined = {} as DriveCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(driveCollectionResponse),
        "value": n => { driveCollectionResponse.value = n.getCollectionOfObjectValues<Drive>(createDriveFromDiscriminatorValue); },
    }
}
export interface DriveCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Drive[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeDriveCollectionResponse(writer: SerializationWriter, driveCollectionResponse: DriveCollectionResponse | undefined = {} as DriveCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, driveCollectionResponse)
        writer.writeCollectionOfObjectValues<Drive>("value", driveCollectionResponse.value, );
}
