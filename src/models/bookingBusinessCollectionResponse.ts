// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createBookingBusinessFromDiscriminatorValue, serializeBookingBusiness, type BookingBusiness } from './bookingBusiness';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingBusinessCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: BookingBusiness[];
}
export function createBookingBusinessCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBookingBusinessCollectionResponse;
}
export function deserializeIntoBookingBusinessCollectionResponse(bookingBusinessCollectionResponse: BookingBusinessCollectionResponse | undefined = {} as BookingBusinessCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(bookingBusinessCollectionResponse),
        "value": n => { bookingBusinessCollectionResponse.value = n.getCollectionOfObjectValues<BookingBusiness>(createBookingBusinessFromDiscriminatorValue); },
    }
}
export function serializeBookingBusinessCollectionResponse(writer: SerializationWriter, bookingBusinessCollectionResponse: BookingBusinessCollectionResponse | undefined = {} as BookingBusinessCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, bookingBusinessCollectionResponse)
    writer.writeCollectionOfObjectValues<BookingBusiness>("value", bookingBusinessCollectionResponse.value, serializeBookingBusiness);
}
// tslint:enable
// eslint-enable
