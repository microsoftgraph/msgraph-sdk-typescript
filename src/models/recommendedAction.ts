// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRecommendedActionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRecommendedAction;
}
export function deserializeIntoRecommendedAction(recommendedAction: RecommendedAction | undefined = {} as RecommendedAction) : Record<string, (node: ParseNode) => void> {
    return {
        "actionWebUrl": n => { recommendedAction.actionWebUrl = n.getStringValue(); },
        "@odata.type": n => { recommendedAction.odataType = n.getStringValue(); },
        "potentialScoreImpact": n => { recommendedAction.potentialScoreImpact = n.getNumberValue(); },
        "title": n => { recommendedAction.title = n.getStringValue(); },
    }
}
export interface RecommendedAction extends AdditionalDataHolder, Parsable {
    /**
     * Web URL to the recommended action.
     */
    actionWebUrl?: string;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Potential improvement in the tenant security score from the recommended action.
     */
    potentialScoreImpact?: number;
    /**
     * Title of the recommended action.
     */
    title?: string;
}
export function serializeRecommendedAction(writer: SerializationWriter, recommendedAction: RecommendedAction | undefined = {} as RecommendedAction) : void {
        writer.writeStringValue("actionWebUrl", recommendedAction.actionWebUrl);
        writer.writeStringValue("@odata.type", recommendedAction.odataType);
        writer.writeNumberValue("potentialScoreImpact", recommendedAction.potentialScoreImpact);
        writer.writeStringValue("title", recommendedAction.title);
        writer.writeAdditionalData(recommendedAction.additionalData);
}
// tslint:enable
// eslint-enable
