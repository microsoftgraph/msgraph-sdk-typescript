// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkflowFromDiscriminatorValue, serializeWorkflow, type Workflow } from './identityGovernance/workflow';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeletedItemContainerFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeletedItemContainer;
}
export interface DeletedItemContainer extends Entity, Parsable {
    /**
     * Deleted workflows that end up in the deletedItemsContainer.
     */
    workflows?: Workflow[];
}
export function deserializeIntoDeletedItemContainer(deletedItemContainer: DeletedItemContainer | undefined = {} as DeletedItemContainer) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deletedItemContainer),
        "workflows": n => { deletedItemContainer.workflows = n.getCollectionOfObjectValues<Workflow>(createWorkflowFromDiscriminatorValue); },
    }
}
export function serializeDeletedItemContainer(writer: SerializationWriter, deletedItemContainer: DeletedItemContainer | undefined = {} as DeletedItemContainer) : void {
        serializeEntity(writer, deletedItemContainer)
        writer.writeCollectionOfObjectValues<Workflow>("workflows", deletedItemContainer.workflows, );
}
// tslint:enable
// eslint-enable
