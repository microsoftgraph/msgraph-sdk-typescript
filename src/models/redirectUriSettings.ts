// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRedirectUriSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRedirectUriSettings;
}
export function deserializeIntoRedirectUriSettings(redirectUriSettings: RedirectUriSettings | undefined = {} as RedirectUriSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "index": n => { redirectUriSettings.index = n.getNumberValue(); },
        "@odata.type": n => { redirectUriSettings.odataType = n.getStringValue(); },
        "uri": n => { redirectUriSettings.uri = n.getStringValue(); },
    }
}
export interface RedirectUriSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The index property
     */
    index?: number;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The uri property
     */
    uri?: string;
}
export function serializeRedirectUriSettings(writer: SerializationWriter, redirectUriSettings: RedirectUriSettings | undefined = {} as RedirectUriSettings) : void {
    writer.writeNumberValue("index", redirectUriSettings.index);
    writer.writeStringValue("@odata.type", redirectUriSettings.odataType);
    writer.writeStringValue("uri", redirectUriSettings.uri);
    writer.writeAdditionalData(redirectUriSettings.additionalData);
}
// tslint:enable
// eslint-enable
