// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { VolumeType } from './volumeType';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BitlockerRecoveryKey extends Entity, Parsable {
    /**
     * The date and time when the key was originally backed up to Microsoft Entra ID. Not nullable.
     */
    createdDateTime?: Date;
    /**
     * Identifier of the device the BitLocker key is originally backed up from. Supports $filter (eq).
     */
    deviceId?: string;
    /**
     * The BitLocker recovery key. Returned only on $select. Not nullable.
     */
    key?: string;
    /**
     * Indicates the type of volume the BitLocker key is associated with. The possible values are: 1 (for operatingSystemVolume), 2 (for fixedDataVolume), 3 (for removableDataVolume), and 4 (for unknownFutureValue).
     */
    volumeType?: VolumeType;
}
export function createBitlockerRecoveryKeyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBitlockerRecoveryKey;
}
export function deserializeIntoBitlockerRecoveryKey(bitlockerRecoveryKey: BitlockerRecoveryKey | undefined = {} as BitlockerRecoveryKey) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(bitlockerRecoveryKey),
        "createdDateTime": n => { bitlockerRecoveryKey.createdDateTime = n.getDateValue(); },
        "deviceId": n => { bitlockerRecoveryKey.deviceId = n.getStringValue(); },
        "key": n => { bitlockerRecoveryKey.key = n.getStringValue(); },
        "volumeType": n => { bitlockerRecoveryKey.volumeType = n.getEnumValue<VolumeType>(VolumeType); },
    }
}
export function serializeBitlockerRecoveryKey(writer: SerializationWriter, bitlockerRecoveryKey: BitlockerRecoveryKey | undefined = {} as BitlockerRecoveryKey) : void {
    serializeEntity(writer, bitlockerRecoveryKey)
    writer.writeDateValue("createdDateTime", bitlockerRecoveryKey.createdDateTime);
    writer.writeStringValue("deviceId", bitlockerRecoveryKey.deviceId);
    writer.writeStringValue("key", bitlockerRecoveryKey.key);
    writer.writeEnumValue<VolumeType>("volumeType", bitlockerRecoveryKey.volumeType);
}
// tslint:enable
// eslint-enable
