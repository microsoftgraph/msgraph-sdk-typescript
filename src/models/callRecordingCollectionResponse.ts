// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createCallRecordingFromDiscriminatorValue, serializeCallRecording, type CallRecording } from './callRecording';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CallRecordingCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CallRecording[];
}
export function createCallRecordingCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCallRecordingCollectionResponse;
}
export function deserializeIntoCallRecordingCollectionResponse(callRecordingCollectionResponse: CallRecordingCollectionResponse | undefined = {} as CallRecordingCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(callRecordingCollectionResponse),
        "value": n => { callRecordingCollectionResponse.value = n.getCollectionOfObjectValues<CallRecording>(createCallRecordingFromDiscriminatorValue); },
    }
}
export function serializeCallRecordingCollectionResponse(writer: SerializationWriter, callRecordingCollectionResponse: CallRecordingCollectionResponse | undefined = {} as CallRecordingCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, callRecordingCollectionResponse)
    writer.writeCollectionOfObjectValues<CallRecording>("value", callRecordingCollectionResponse.value, serializeCallRecording);
}
// tslint:enable
// eslint-enable
