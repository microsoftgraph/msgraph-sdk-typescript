import { createAllowedValueFromDiscriminatorValue, serializeAllowedValue, type AllowedValue } from './allowedValue';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AllowedValueCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AllowedValue[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAllowedValueCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAllowedValueCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAllowedValueCollectionResponse(allowedValueCollectionResponse: AllowedValueCollectionResponse | undefined = {} as AllowedValueCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(allowedValueCollectionResponse),
        "value": n => { allowedValueCollectionResponse.value = n.getCollectionOfObjectValues<AllowedValue>(createAllowedValueFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAllowedValueCollectionResponse(writer: SerializationWriter, allowedValueCollectionResponse: AllowedValueCollectionResponse | undefined = {} as AllowedValueCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, allowedValueCollectionResponse)
        writer.writeCollectionOfObjectValues<AllowedValue>("value", allowedValueCollectionResponse.value, );
}
