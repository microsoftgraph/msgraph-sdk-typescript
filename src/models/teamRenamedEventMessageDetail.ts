// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEventMessageDetail, serializeEventMessageDetail, type EventMessageDetail } from './eventMessageDetail';
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamRenamedEventMessageDetailFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamRenamedEventMessageDetail;
}
export function deserializeIntoTeamRenamedEventMessageDetail(teamRenamedEventMessageDetail: TeamRenamedEventMessageDetail | undefined = {} as TeamRenamedEventMessageDetail) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEventMessageDetail(teamRenamedEventMessageDetail),
        "initiator": n => { teamRenamedEventMessageDetail.initiator = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "teamDisplayName": n => { teamRenamedEventMessageDetail.teamDisplayName = n.getStringValue(); },
        "teamId": n => { teamRenamedEventMessageDetail.teamId = n.getStringValue(); },
    }
}
export function serializeTeamRenamedEventMessageDetail(writer: SerializationWriter, teamRenamedEventMessageDetail: TeamRenamedEventMessageDetail | undefined = {} as TeamRenamedEventMessageDetail) : void {
    serializeEventMessageDetail(writer, teamRenamedEventMessageDetail)
    writer.writeObjectValue<IdentitySet>("initiator", teamRenamedEventMessageDetail.initiator, serializeIdentitySet);
    writer.writeStringValue("teamDisplayName", teamRenamedEventMessageDetail.teamDisplayName);
    writer.writeStringValue("teamId", teamRenamedEventMessageDetail.teamId);
}
export interface TeamRenamedEventMessageDetail extends EventMessageDetail, Parsable {
    /**
     * Initiator of the event.
     */
    initiator?: IdentitySet;
    /**
     * The updated name of the team.
     */
    teamDisplayName?: string;
    /**
     * Unique identifier of the team.
     */
    teamId?: string;
}
// tslint:enable
// eslint-enable
