// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrintSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrintSettings;
}
export function deserializeIntoPrintSettings(printSettings: PrintSettings | undefined = {} as PrintSettings) : Record<string, (node: ParseNode) => void> {
    return {
        "documentConversionEnabled": n => { printSettings.documentConversionEnabled = n.getBooleanValue(); },
        "@odata.type": n => { printSettings.odataType = n.getStringValue(); },
    }
}
export interface PrintSettings extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Specifies whether document conversion is enabled for the tenant. If document conversion is enabled, Universal Print service will automatically convert documents into a format compatible with the printer (xps to pdf) when needed.
     */
    documentConversionEnabled?: boolean;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializePrintSettings(writer: SerializationWriter, printSettings: PrintSettings | undefined = {} as PrintSettings) : void {
    writer.writeBooleanValue("documentConversionEnabled", printSettings.documentConversionEnabled);
    writer.writeStringValue("@odata.type", printSettings.odataType);
    writer.writeAdditionalData(printSettings.additionalData);
}
// tslint:enable
// eslint-enable
