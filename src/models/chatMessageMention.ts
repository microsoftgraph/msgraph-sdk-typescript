// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createChatMessageMentionedIdentitySetFromDiscriminatorValue, serializeChatMessageMentionedIdentitySet, type ChatMessageMentionedIdentitySet } from './chatMessageMentionedIdentitySet';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ChatMessageMention extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id='{index}'> tag in the message body.
     */
    id?: number;
    /**
     * The entity (user, application, team, or channel) that was @mentioned.
     */
    mentioned?: ChatMessageMentionedIdentitySet;
    /**
     * String used to represent the mention. For example, a user's display name, a team name.
     */
    mentionText?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createChatMessageMentionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoChatMessageMention;
}
export function deserializeIntoChatMessageMention(chatMessageMention: ChatMessageMention | undefined = {} as ChatMessageMention) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { chatMessageMention.id = n.getNumberValue(); },
        "mentioned": n => { chatMessageMention.mentioned = n.getObjectValue<ChatMessageMentionedIdentitySet>(createChatMessageMentionedIdentitySetFromDiscriminatorValue); },
        "mentionText": n => { chatMessageMention.mentionText = n.getStringValue(); },
        "@odata.type": n => { chatMessageMention.odataType = n.getStringValue(); },
    }
}
export function serializeChatMessageMention(writer: SerializationWriter, chatMessageMention: ChatMessageMention | undefined = {} as ChatMessageMention) : void {
        writer.writeNumberValue("id", chatMessageMention.id);
        writer.writeObjectValue<ChatMessageMentionedIdentitySet>("mentioned", chatMessageMention.mentioned, );
        writer.writeStringValue("mentionText", chatMessageMention.mentionText);
        writer.writeStringValue("@odata.type", chatMessageMention.odataType);
        writer.writeAdditionalData(chatMessageMention.additionalData);
}
// tslint:enable
// eslint-enable
