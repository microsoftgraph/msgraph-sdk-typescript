// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoTeamworkNotificationRecipient, serializeTeamworkNotificationRecipient, type TeamworkNotificationRecipient } from './teamworkNotificationRecipient';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AadUserNotificationRecipient extends Parsable, TeamworkNotificationRecipient {
    /**
     * Microsoft Entra user identifier. Use the List users method to get this ID.
     */
    userId?: string;
}
export function createAadUserNotificationRecipientFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAadUserNotificationRecipient;
}
export function deserializeIntoAadUserNotificationRecipient(aadUserNotificationRecipient: AadUserNotificationRecipient | undefined = {} as AadUserNotificationRecipient) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTeamworkNotificationRecipient(aadUserNotificationRecipient),
        "userId": n => { aadUserNotificationRecipient.userId = n.getStringValue(); },
    }
}
export function serializeAadUserNotificationRecipient(writer: SerializationWriter, aadUserNotificationRecipient: AadUserNotificationRecipient | undefined = {} as AadUserNotificationRecipient) : void {
    serializeTeamworkNotificationRecipient(writer, aadUserNotificationRecipient)
    writer.writeStringValue("userId", aadUserNotificationRecipient.userId);
}
// tslint:enable
// eslint-enable
