import { deserializeIntoTeamworkNotificationRecipient, serializeTeamworkNotificationRecipient, type TeamworkNotificationRecipient } from './teamworkNotificationRecipient';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ChatMembersNotificationRecipient extends Parsable, TeamworkNotificationRecipient {
    /**
     * The unique identifier for the chat whose members should receive the notifications.
     */
    chatId?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createChatMembersNotificationRecipientFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoChatMembersNotificationRecipient;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoChatMembersNotificationRecipient(chatMembersNotificationRecipient: ChatMembersNotificationRecipient | undefined = {} as ChatMembersNotificationRecipient) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTeamworkNotificationRecipient(chatMembersNotificationRecipient),
        "chatId": n => { chatMembersNotificationRecipient.chatId = n.getStringValue(); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeChatMembersNotificationRecipient(writer: SerializationWriter, chatMembersNotificationRecipient: ChatMembersNotificationRecipient | undefined = {} as ChatMembersNotificationRecipient) : void {
        serializeTeamworkNotificationRecipient(writer, chatMembersNotificationRecipient)
        writer.writeStringValue("chatId", chatMembersNotificationRecipient.chatId);
}
