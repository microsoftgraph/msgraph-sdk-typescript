import { createMalwareStateForWindowsDeviceFromDiscriminatorValue } from './createMalwareStateForWindowsDeviceFromDiscriminatorValue';
import { deserializeIntoEntity } from './deserializeIntoEntity';
import { type MalwareStateForWindowsDevice } from './malwareStateForWindowsDevice';
import { serializeMalwareStateForWindowsDevice } from './serializeMalwareStateForWindowsDevice';
import { WindowsMalwareCategory } from './windowsMalwareCategory';
import { type WindowsMalwareInformation } from './windowsMalwareInformation';
import { WindowsMalwareSeverity } from './windowsMalwareSeverity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function deserializeIntoWindowsMalwareInformation(windowsMalwareInformation: WindowsMalwareInformation | undefined = {} as WindowsMalwareInformation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(windowsMalwareInformation),
        "additionalInformationUrl": n => { windowsMalwareInformation.additionalInformationUrl = n.getStringValue(); },
        "category": n => { windowsMalwareInformation.category = n.getEnumValue<WindowsMalwareCategory>(WindowsMalwareCategory); },
        "deviceMalwareStates": n => { windowsMalwareInformation.deviceMalwareStates = n.getCollectionOfObjectValues<MalwareStateForWindowsDevice>(createMalwareStateForWindowsDeviceFromDiscriminatorValue); },
        "displayName": n => { windowsMalwareInformation.displayName = n.getStringValue(); },
        "lastDetectionDateTime": n => { windowsMalwareInformation.lastDetectionDateTime = n.getDateValue(); },
        "severity": n => { windowsMalwareInformation.severity = n.getEnumValue<WindowsMalwareSeverity>(WindowsMalwareSeverity); },
    }
}
