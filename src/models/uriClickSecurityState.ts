// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUriClickSecurityStateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUriClickSecurityState;
}
export function deserializeIntoUriClickSecurityState(uriClickSecurityState: UriClickSecurityState | undefined = {} as UriClickSecurityState) : Record<string, (node: ParseNode) => void> {
    return {
        "clickAction": n => { uriClickSecurityState.clickAction = n.getStringValue(); },
        "clickDateTime": n => { uriClickSecurityState.clickDateTime = n.getDateValue(); },
        "id": n => { uriClickSecurityState.id = n.getStringValue(); },
        "@odata.type": n => { uriClickSecurityState.odataType = n.getStringValue(); },
        "sourceId": n => { uriClickSecurityState.sourceId = n.getStringValue(); },
        "uriDomain": n => { uriClickSecurityState.uriDomain = n.getStringValue(); },
        "verdict": n => { uriClickSecurityState.verdict = n.getStringValue(); },
    }
}
export function serializeUriClickSecurityState(writer: SerializationWriter, uriClickSecurityState: UriClickSecurityState | undefined = {} as UriClickSecurityState) : void {
    writer.writeStringValue("clickAction", uriClickSecurityState.clickAction);
    writer.writeDateValue("clickDateTime", uriClickSecurityState.clickDateTime);
    writer.writeStringValue("id", uriClickSecurityState.id);
    writer.writeStringValue("@odata.type", uriClickSecurityState.odataType);
    writer.writeStringValue("sourceId", uriClickSecurityState.sourceId);
    writer.writeStringValue("uriDomain", uriClickSecurityState.uriDomain);
    writer.writeStringValue("verdict", uriClickSecurityState.verdict);
    writer.writeAdditionalData(uriClickSecurityState.additionalData);
}
export interface UriClickSecurityState extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The clickAction property
     */
    clickAction?: string;
    /**
     * The clickDateTime property
     */
    clickDateTime?: Date;
    /**
     * The id property
     */
    id?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The sourceId property
     */
    sourceId?: string;
    /**
     * The uriDomain property
     */
    uriDomain?: string;
    /**
     * The verdict property
     */
    verdict?: string;
}
// tslint:enable
// eslint-enable
