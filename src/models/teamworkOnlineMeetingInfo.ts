// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createTeamworkUserIdentityFromDiscriminatorValue, serializeTeamworkUserIdentity, type TeamworkUserIdentity } from './teamworkUserIdentity';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamworkOnlineMeetingInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamworkOnlineMeetingInfo;
}
export function deserializeIntoTeamworkOnlineMeetingInfo(teamworkOnlineMeetingInfo: TeamworkOnlineMeetingInfo | undefined = {} as TeamworkOnlineMeetingInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "calendarEventId": n => { teamworkOnlineMeetingInfo.calendarEventId = n.getStringValue(); },
        "joinWebUrl": n => { teamworkOnlineMeetingInfo.joinWebUrl = n.getStringValue(); },
        "@odata.type": n => { teamworkOnlineMeetingInfo.odataType = n.getStringValue(); },
        "organizer": n => { teamworkOnlineMeetingInfo.organizer = n.getObjectValue<TeamworkUserIdentity>(createTeamworkUserIdentityFromDiscriminatorValue); },
    }
}
export function serializeTeamworkOnlineMeetingInfo(writer: SerializationWriter, teamworkOnlineMeetingInfo: TeamworkOnlineMeetingInfo | undefined = {} as TeamworkOnlineMeetingInfo) : void {
    writer.writeStringValue("calendarEventId", teamworkOnlineMeetingInfo.calendarEventId);
    writer.writeStringValue("joinWebUrl", teamworkOnlineMeetingInfo.joinWebUrl);
    writer.writeStringValue("@odata.type", teamworkOnlineMeetingInfo.odataType);
    writer.writeObjectValue<TeamworkUserIdentity>("organizer", teamworkOnlineMeetingInfo.organizer, serializeTeamworkUserIdentity);
    writer.writeAdditionalData(teamworkOnlineMeetingInfo.additionalData);
}
export interface TeamworkOnlineMeetingInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The identifier of the calendar event associated with the meeting.
     */
    calendarEventId?: string;
    /**
     * The URL that users click to join or uniquely identify the meeting.
     */
    joinWebUrl?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The organizer of the meeting.
     */
    organizer?: TeamworkUserIdentity;
}
// tslint:enable
// eslint-enable
