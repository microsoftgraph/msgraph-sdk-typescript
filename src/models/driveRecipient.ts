// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDriveRecipientFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDriveRecipient;
}
export function deserializeIntoDriveRecipient(driveRecipient: DriveRecipient | undefined = {} as DriveRecipient) : Record<string, (node: ParseNode) => void> {
    return {
        "alias": n => { driveRecipient.alias = n.getStringValue(); },
        "email": n => { driveRecipient.email = n.getStringValue(); },
        "objectId": n => { driveRecipient.objectId = n.getStringValue(); },
        "@odata.type": n => { driveRecipient.odataType = n.getStringValue(); },
    }
}
export interface DriveRecipient extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The alias of the domain object, for cases where an email address is unavailable (e.g. security groups).
     */
    alias?: string;
    /**
     * The email address for the recipient, if the recipient has an associated email address.
     */
    email?: string;
    /**
     * The unique identifier for the recipient in the directory.
     */
    objectId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeDriveRecipient(writer: SerializationWriter, driveRecipient: DriveRecipient | undefined = {} as DriveRecipient) : void {
        writer.writeStringValue("alias", driveRecipient.alias);
        writer.writeStringValue("email", driveRecipient.email);
        writer.writeStringValue("objectId", driveRecipient.objectId);
        writer.writeStringValue("@odata.type", driveRecipient.odataType);
        writer.writeAdditionalData(driveRecipient.additionalData);
}
// tslint:enable
// eslint-enable
