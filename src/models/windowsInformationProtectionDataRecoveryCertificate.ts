// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsInformationProtectionDataRecoveryCertificateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsInformationProtectionDataRecoveryCertificate;
}
export function deserializeIntoWindowsInformationProtectionDataRecoveryCertificate(windowsInformationProtectionDataRecoveryCertificate: WindowsInformationProtectionDataRecoveryCertificate | undefined = {} as WindowsInformationProtectionDataRecoveryCertificate) : Record<string, (node: ParseNode) => void> {
    return {
        "certificate": n => { windowsInformationProtectionDataRecoveryCertificate.certificate = n.getStringValue(); },
        "description": n => { windowsInformationProtectionDataRecoveryCertificate.description = n.getStringValue(); },
        "expirationDateTime": n => { windowsInformationProtectionDataRecoveryCertificate.expirationDateTime = n.getDateValue(); },
        "@odata.type": n => { windowsInformationProtectionDataRecoveryCertificate.odataType = n.getStringValue(); },
        "subjectName": n => { windowsInformationProtectionDataRecoveryCertificate.subjectName = n.getStringValue(); },
    }
}
export function serializeWindowsInformationProtectionDataRecoveryCertificate(writer: SerializationWriter, windowsInformationProtectionDataRecoveryCertificate: WindowsInformationProtectionDataRecoveryCertificate | undefined = {} as WindowsInformationProtectionDataRecoveryCertificate) : void {
    writer.writeStringValue("certificate", windowsInformationProtectionDataRecoveryCertificate.certificate);
    writer.writeStringValue("description", windowsInformationProtectionDataRecoveryCertificate.description);
    writer.writeDateValue("expirationDateTime", windowsInformationProtectionDataRecoveryCertificate.expirationDateTime);
    writer.writeStringValue("@odata.type", windowsInformationProtectionDataRecoveryCertificate.odataType);
    writer.writeStringValue("subjectName", windowsInformationProtectionDataRecoveryCertificate.subjectName);
    writer.writeAdditionalData(windowsInformationProtectionDataRecoveryCertificate.additionalData);
}
export interface WindowsInformationProtectionDataRecoveryCertificate extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Data recovery Certificate
     */
    certificate?: string;
    /**
     * Data recovery Certificate description
     */
    description?: string;
    /**
     * Data recovery Certificate expiration datetime
     */
    expirationDateTime?: Date;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Data recovery Certificate subject name
     */
    subjectName?: string;
}
// tslint:enable
// eslint-enable
