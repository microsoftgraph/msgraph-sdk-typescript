// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoIdentitySource, serializeIdentitySource, type IdentitySource } from './identitySource';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AzureActiveDirectoryTenant extends IdentitySource, Parsable {
    /**
     * The name of the Microsoft Entra tenant. Read only.
     */
    displayName?: string;
    /**
     * The ID of the Microsoft Entra tenant. Read only.
     */
    tenantId?: string;
}
export function createAzureActiveDirectoryTenantFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAzureActiveDirectoryTenant;
}
export function deserializeIntoAzureActiveDirectoryTenant(azureActiveDirectoryTenant: AzureActiveDirectoryTenant | undefined = {} as AzureActiveDirectoryTenant) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySource(azureActiveDirectoryTenant),
        "displayName": n => { azureActiveDirectoryTenant.displayName = n.getStringValue(); },
        "tenantId": n => { azureActiveDirectoryTenant.tenantId = n.getStringValue(); },
    }
}
export function serializeAzureActiveDirectoryTenant(writer: SerializationWriter, azureActiveDirectoryTenant: AzureActiveDirectoryTenant | undefined = {} as AzureActiveDirectoryTenant) : void {
    serializeIdentitySource(writer, azureActiveDirectoryTenant)
    writer.writeStringValue("displayName", azureActiveDirectoryTenant.displayName);
    writer.writeStringValue("tenantId", azureActiveDirectoryTenant.tenantId);
}
// tslint:enable
// eslint-enable
