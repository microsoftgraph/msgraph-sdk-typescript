// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BaseDeltaFunctionResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataDeltaLink property
     */
    odataDeltaLink?: string;
    /**
     * The OdataNextLink property
     */
    odataNextLink?: string;
}
export function createBaseDeltaFunctionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBaseDeltaFunctionResponse;
}
export function deserializeIntoBaseDeltaFunctionResponse(baseDeltaFunctionResponse: BaseDeltaFunctionResponse | undefined = {} as BaseDeltaFunctionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.deltaLink": n => { baseDeltaFunctionResponse.odataDeltaLink = n.getStringValue(); },
        "@odata.nextLink": n => { baseDeltaFunctionResponse.odataNextLink = n.getStringValue(); },
    }
}
export function serializeBaseDeltaFunctionResponse(writer: SerializationWriter, baseDeltaFunctionResponse: BaseDeltaFunctionResponse | undefined = {} as BaseDeltaFunctionResponse) : void {
        writer.writeStringValue("@odata.deltaLink", baseDeltaFunctionResponse.odataDeltaLink);
        writer.writeStringValue("@odata.nextLink", baseDeltaFunctionResponse.odataNextLink);
        writer.writeAdditionalData(baseDeltaFunctionResponse.additionalData);
}
// tslint:enable
// eslint-enable
