// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { DayOfWeek } from './dayOfWeek';
import { deserializeIntoDeviceConfiguration, serializeDeviceConfiguration, type DeviceConfiguration } from './deviceConfiguration';
import { type Parsable, type ParseNode, type SerializationWriter, type TimeOnly } from '@microsoft/kiota-abstractions';

export function createIosUpdateConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosUpdateConfiguration;
}
export function deserializeIntoIosUpdateConfiguration(iosUpdateConfiguration: IosUpdateConfiguration | undefined = {} as IosUpdateConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDeviceConfiguration(iosUpdateConfiguration),
        "activeHoursEnd": n => { iosUpdateConfiguration.activeHoursEnd = n.getTimeOnlyValue(); },
        "activeHoursStart": n => { iosUpdateConfiguration.activeHoursStart = n.getTimeOnlyValue(); },
        "scheduledInstallDays": n => { iosUpdateConfiguration.scheduledInstallDays = n.getCollectionOfEnumValues<DayOfWeek>(DayOfWeek); },
        "utcTimeOffsetInMinutes": n => { iosUpdateConfiguration.utcTimeOffsetInMinutes = n.getNumberValue(); },
    }
}
export interface IosUpdateConfiguration extends DeviceConfiguration, Parsable {
    /**
     * Active Hours End (active hours mean the time window when updates install should not happen)
     */
    activeHoursEnd?: TimeOnly;
    /**
     * Active Hours Start (active hours mean the time window when updates install should not happen)
     */
    activeHoursStart?: TimeOnly;
    /**
     * Days in week for which active hours are configured. This collection can contain a maximum of 7 elements.
     */
    scheduledInstallDays?: DayOfWeek[];
    /**
     * UTC Time Offset indicated in minutes
     */
    utcTimeOffsetInMinutes?: number;
}
export function serializeIosUpdateConfiguration(writer: SerializationWriter, iosUpdateConfiguration: IosUpdateConfiguration | undefined = {} as IosUpdateConfiguration) : void {
        serializeDeviceConfiguration(writer, iosUpdateConfiguration)
        writer.writeTimeOnlyValue("activeHoursEnd", iosUpdateConfiguration.activeHoursEnd);
        writer.writeTimeOnlyValue("activeHoursStart", iosUpdateConfiguration.activeHoursStart);
        if(iosUpdateConfiguration.scheduledInstallDays)
        writer.writeEnumValue<DayOfWeek>("scheduledInstallDays", ...iosUpdateConfiguration.scheduledInstallDays);
        writer.writeNumberValue("utcTimeOffsetInMinutes", iosUpdateConfiguration.utcTimeOffsetInMinutes);
}
// tslint:enable
// eslint-enable
