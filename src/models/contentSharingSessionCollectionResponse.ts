import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createContentSharingSessionFromDiscriminatorValue, serializeContentSharingSession, type ContentSharingSession } from './contentSharingSession';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ContentSharingSessionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ContentSharingSession[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createContentSharingSessionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoContentSharingSessionCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoContentSharingSessionCollectionResponse(contentSharingSessionCollectionResponse: ContentSharingSessionCollectionResponse | undefined = {} as ContentSharingSessionCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(contentSharingSessionCollectionResponse),
        "value": n => { contentSharingSessionCollectionResponse.value = n.getCollectionOfObjectValues<ContentSharingSession>(createContentSharingSessionFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeContentSharingSessionCollectionResponse(writer: SerializationWriter, contentSharingSessionCollectionResponse: ContentSharingSessionCollectionResponse | undefined = {} as ContentSharingSessionCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, contentSharingSessionCollectionResponse)
        writer.writeCollectionOfObjectValues<ContentSharingSession>("value", contentSharingSessionCollectionResponse.value, );
}
