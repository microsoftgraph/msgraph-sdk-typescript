import { createDateTimeTimeZoneFromDiscriminatorValue, serializeDateTimeTimeZone, type DateTimeTimeZone } from './dateTimeTimeZone';
import { createItemBodyFromDiscriminatorValue, serializeItemBody, type ItemBody } from './itemBody';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createPresenceStatusMessageFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPresenceStatusMessage;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoPresenceStatusMessage(presenceStatusMessage: PresenceStatusMessage | undefined = {} as PresenceStatusMessage) : Record<string, (node: ParseNode) => void> {
    return {
        "expiryDateTime": n => { presenceStatusMessage.expiryDateTime = n.getObjectValue<DateTimeTimeZone>(createDateTimeTimeZoneFromDiscriminatorValue); },
        "message": n => { presenceStatusMessage.message = n.getObjectValue<ItemBody>(createItemBodyFromDiscriminatorValue); },
        "@odata.type": n => { presenceStatusMessage.odataType = n.getStringValue(); },
        "publishedDateTime": n => { presenceStatusMessage.publishedDateTime = n.getDateValue(); },
    }
}
export interface PresenceStatusMessage extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Time in which the status message expires.If not provided, the status message does not expire.expiryDateTime.dateTime should not include time zone.expiryDateTime is not available when you request the presence of another user.
     */
    expiryDateTime?: DateTimeTimeZone;
    /**
     * Status message item. The only supported format currently is message.contentType = 'text'.
     */
    message?: ItemBody;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Time in which the status message was published.Read-only.publishedDateTime is not available when you request the presence of another user.
     */
    publishedDateTime?: Date;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializePresenceStatusMessage(writer: SerializationWriter, presenceStatusMessage: PresenceStatusMessage | undefined = {} as PresenceStatusMessage) : void {
        writer.writeObjectValue<DateTimeTimeZone>("expiryDateTime", presenceStatusMessage.expiryDateTime, );
        writer.writeObjectValue<ItemBody>("message", presenceStatusMessage.message, );
        writer.writeStringValue("@odata.type", presenceStatusMessage.odataType);
        writer.writeDateValue("publishedDateTime", presenceStatusMessage.publishedDateTime);
        writer.writeAdditionalData(presenceStatusMessage.additionalData);
}
