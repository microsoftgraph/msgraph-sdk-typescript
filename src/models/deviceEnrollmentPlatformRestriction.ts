// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDeviceEnrollmentPlatformRestrictionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceEnrollmentPlatformRestriction;
}
export function deserializeIntoDeviceEnrollmentPlatformRestriction(deviceEnrollmentPlatformRestriction: DeviceEnrollmentPlatformRestriction | undefined = {} as DeviceEnrollmentPlatformRestriction) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { deviceEnrollmentPlatformRestriction.odataType = n.getStringValue(); },
        "osMaximumVersion": n => { deviceEnrollmentPlatformRestriction.osMaximumVersion = n.getStringValue(); },
        "osMinimumVersion": n => { deviceEnrollmentPlatformRestriction.osMinimumVersion = n.getStringValue(); },
        "personalDeviceEnrollmentBlocked": n => { deviceEnrollmentPlatformRestriction.personalDeviceEnrollmentBlocked = n.getBooleanValue(); },
        "platformBlocked": n => { deviceEnrollmentPlatformRestriction.platformBlocked = n.getBooleanValue(); },
    }
}
export interface DeviceEnrollmentPlatformRestriction extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Max OS version supported
     */
    osMaximumVersion?: string;
    /**
     * Min OS version supported
     */
    osMinimumVersion?: string;
    /**
     * Block personally owned devices from enrolling
     */
    personalDeviceEnrollmentBlocked?: boolean;
    /**
     * Block the platform from enrolling
     */
    platformBlocked?: boolean;
}
export function serializeDeviceEnrollmentPlatformRestriction(writer: SerializationWriter, deviceEnrollmentPlatformRestriction: DeviceEnrollmentPlatformRestriction | undefined = {} as DeviceEnrollmentPlatformRestriction) : void {
    writer.writeStringValue("@odata.type", deviceEnrollmentPlatformRestriction.odataType);
    writer.writeStringValue("osMaximumVersion", deviceEnrollmentPlatformRestriction.osMaximumVersion);
    writer.writeStringValue("osMinimumVersion", deviceEnrollmentPlatformRestriction.osMinimumVersion);
    writer.writeBooleanValue("personalDeviceEnrollmentBlocked", deviceEnrollmentPlatformRestriction.personalDeviceEnrollmentBlocked);
    writer.writeBooleanValue("platformBlocked", deviceEnrollmentPlatformRestriction.platformBlocked);
    writer.writeAdditionalData(deviceEnrollmentPlatformRestriction.additionalData);
}
// tslint:enable
// eslint-enable
