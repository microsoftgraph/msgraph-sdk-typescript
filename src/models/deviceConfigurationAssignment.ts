import { createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue, serializeDeviceAndAppManagementAssignmentTarget, type DeviceAndAppManagementAssignmentTarget } from './deviceAndAppManagementAssignmentTarget';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createDeviceConfigurationAssignmentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDeviceConfigurationAssignment;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoDeviceConfigurationAssignment(deviceConfigurationAssignment: DeviceConfigurationAssignment | undefined = {} as DeviceConfigurationAssignment) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(deviceConfigurationAssignment),
        "target": n => { deviceConfigurationAssignment.target = n.getObjectValue<DeviceAndAppManagementAssignmentTarget>(createDeviceAndAppManagementAssignmentTargetFromDiscriminatorValue); },
    }
}
export interface DeviceConfigurationAssignment extends Entity, Parsable {
    /**
     * The assignment target for the device configuration.
     */
    target?: DeviceAndAppManagementAssignmentTarget;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeDeviceConfigurationAssignment(writer: SerializationWriter, deviceConfigurationAssignment: DeviceConfigurationAssignment | undefined = {} as DeviceConfigurationAssignment) : void {
        serializeEntity(writer, deviceConfigurationAssignment)
        writer.writeObjectValue<DeviceAndAppManagementAssignmentTarget>("target", deviceConfigurationAssignment.target, );
}
