// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createInvitationFromDiscriminatorValue, serializeInvitation, type Invitation } from './invitation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createInvitationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoInvitationCollectionResponse;
}
export function deserializeIntoInvitationCollectionResponse(invitationCollectionResponse: InvitationCollectionResponse | undefined = {} as InvitationCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(invitationCollectionResponse),
        "value": n => { invitationCollectionResponse.value = n.getCollectionOfObjectValues<Invitation>(createInvitationFromDiscriminatorValue); },
    }
}
export interface InvitationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Invitation[];
}
export function serializeInvitationCollectionResponse(writer: SerializationWriter, invitationCollectionResponse: InvitationCollectionResponse | undefined = {} as InvitationCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, invitationCollectionResponse)
    writer.writeCollectionOfObjectValues<Invitation>("value", invitationCollectionResponse.value, serializeInvitation);
}
// tslint:enable
// eslint-enable
