// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createMalwareStateForWindowsDeviceFromDiscriminatorValue, serializeMalwareStateForWindowsDevice, type MalwareStateForWindowsDevice } from './malwareStateForWindowsDevice';
import { WindowsMalwareCategory } from './windowsMalwareCategory';
import { WindowsMalwareSeverity } from './windowsMalwareSeverity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsMalwareInformationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsMalwareInformation;
}
export function deserializeIntoWindowsMalwareInformation(windowsMalwareInformation: WindowsMalwareInformation | undefined = {} as WindowsMalwareInformation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(windowsMalwareInformation),
        "additionalInformationUrl": n => { windowsMalwareInformation.additionalInformationUrl = n.getStringValue(); },
        "category": n => { windowsMalwareInformation.category = n.getEnumValue<WindowsMalwareCategory>(WindowsMalwareCategory); },
        "deviceMalwareStates": n => { windowsMalwareInformation.deviceMalwareStates = n.getCollectionOfObjectValues<MalwareStateForWindowsDevice>(createMalwareStateForWindowsDeviceFromDiscriminatorValue); },
        "displayName": n => { windowsMalwareInformation.displayName = n.getStringValue(); },
        "lastDetectionDateTime": n => { windowsMalwareInformation.lastDetectionDateTime = n.getDateValue(); },
        "severity": n => { windowsMalwareInformation.severity = n.getEnumValue<WindowsMalwareSeverity>(WindowsMalwareSeverity); },
    }
}
export function serializeWindowsMalwareInformation(writer: SerializationWriter, windowsMalwareInformation: WindowsMalwareInformation | undefined = {} as WindowsMalwareInformation) : void {
        serializeEntity(writer, windowsMalwareInformation)
        writer.writeStringValue("additionalInformationUrl", windowsMalwareInformation.additionalInformationUrl);
        writer.writeEnumValue<WindowsMalwareCategory>("category", windowsMalwareInformation.category);
        writer.writeCollectionOfObjectValues<MalwareStateForWindowsDevice>("deviceMalwareStates", windowsMalwareInformation.deviceMalwareStates, serializeMalwareStateForWindowsDevice);
        writer.writeStringValue("displayName", windowsMalwareInformation.displayName);
        writer.writeDateValue("lastDetectionDateTime", windowsMalwareInformation.lastDetectionDateTime);
        writer.writeEnumValue<WindowsMalwareSeverity>("severity", windowsMalwareInformation.severity);
}
export interface WindowsMalwareInformation extends Entity, Parsable {
    /**
     * Indicates an informational URL to learn more about the malware
     */
    additionalInformationUrl?: string;
    /**
     * Category of the malware. Possible values are: invalid, adware, spyware, passwordStealer, trojanDownloader, worm, backdoor, remoteAccessTrojan, trojan, emailFlooder, keylogger, dialer, monitoringSoftware, browserModifier, cookie, browserPlugin, aolExploit, nuker, securityDisabler, jokeProgram, hostileActiveXControl, softwareBundler, stealthNotifier, settingsModifier, toolBar, remoteControlSoftware, trojanFtp, potentialUnwantedSoftware, icqExploit, trojanTelnet, exploit, filesharingProgram, malwareCreationTool, remoteControlSoftware, tool, trojanDenialOfService, trojanDropper, trojanMassMailer, trojanMonitoringSoftware, trojanProxyServer, virus, known, unknown, spp, behavior, vulnerability, policy, enterpriseUnwantedSoftware, ransom, hipsRule. default value is invalid. Possible values are: invalid, adware, spyware, passwordStealer, trojanDownloader, worm, backdoor, remoteAccessTrojan, trojan, emailFlooder, keylogger, dialer, monitoringSoftware, browserModifier, cookie, browserPlugin, aolExploit, nuker, securityDisabler, jokeProgram, hostileActiveXControl, softwareBundler, stealthNotifier, settingsModifier, toolBar, remoteControlSoftware, trojanFtp, potentialUnwantedSoftware, icqExploit, trojanTelnet, exploit, filesharingProgram, malwareCreationTool, remoteControlSoftware, tool, trojanDenialOfService, trojanDropper, trojanMassMailer, trojanMonitoringSoftware, trojanProxyServer, virus, known, unknown, spp, behavior, vulnerability, policy, enterpriseUnwantedSoftware, ransom, hipsRule.
     */
    category?: WindowsMalwareCategory;
    /**
     * List of devices affected by current malware with the malware state on each device
     */
    deviceMalwareStates?: MalwareStateForWindowsDevice[];
    /**
     * Indicates the name of the malware
     */
    displayName?: string;
    /**
     * Indicates the last time the malware was detected in UTC
     */
    lastDetectionDateTime?: Date;
    /**
     * Severity of the malware. Possible values are: unknown, low, moderate, high, severe. default is unknown. Possible values are: unknown, low, moderate, high, severe.
     */
    severity?: WindowsMalwareSeverity;
}
// tslint:enable
// eslint-enable
