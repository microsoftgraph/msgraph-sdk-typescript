// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createDataSubjectFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoDataSubject;
}
export interface DataSubject extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Email of the data subject.
     */
    email?: string;
    /**
     * First name of the data subject.
     */
    firstName?: string;
    /**
     * Last Name of the data subject.
     */
    lastName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The country/region of residency. The residency information is uesed only for internal reporting but not for the content search.
     */
    residency?: string;
}
export function deserializeIntoDataSubject(dataSubject: DataSubject | undefined = {} as DataSubject) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { dataSubject.email = n.getStringValue(); },
        "firstName": n => { dataSubject.firstName = n.getStringValue(); },
        "lastName": n => { dataSubject.lastName = n.getStringValue(); },
        "@odata.type": n => { dataSubject.odataType = n.getStringValue(); },
        "residency": n => { dataSubject.residency = n.getStringValue(); },
    }
}
export function serializeDataSubject(writer: SerializationWriter, dataSubject: DataSubject | undefined = {} as DataSubject) : void {
    writer.writeStringValue("email", dataSubject.email);
    writer.writeStringValue("firstName", dataSubject.firstName);
    writer.writeStringValue("lastName", dataSubject.lastName);
    writer.writeStringValue("@odata.type", dataSubject.odataType);
    writer.writeStringValue("residency", dataSubject.residency);
    writer.writeAdditionalData(dataSubject.additionalData);
}
// tslint:enable
// eslint-enable
