import { createAttributeMappingFunctionSchemaFromDiscriminatorValue, serializeAttributeMappingFunctionSchema, type AttributeMappingFunctionSchema } from './attributeMappingFunctionSchema';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AttributeMappingFunctionSchemaCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AttributeMappingFunctionSchema[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createAttributeMappingFunctionSchemaCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAttributeMappingFunctionSchemaCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoAttributeMappingFunctionSchemaCollectionResponse(attributeMappingFunctionSchemaCollectionResponse: AttributeMappingFunctionSchemaCollectionResponse | undefined = {} as AttributeMappingFunctionSchemaCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(attributeMappingFunctionSchemaCollectionResponse),
        "value": n => { attributeMappingFunctionSchemaCollectionResponse.value = n.getCollectionOfObjectValues<AttributeMappingFunctionSchema>(createAttributeMappingFunctionSchemaFromDiscriminatorValue); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeAttributeMappingFunctionSchemaCollectionResponse(writer: SerializationWriter, attributeMappingFunctionSchemaCollectionResponse: AttributeMappingFunctionSchemaCollectionResponse | undefined = {} as AttributeMappingFunctionSchemaCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, attributeMappingFunctionSchemaCollectionResponse)
        writer.writeCollectionOfObjectValues<AttributeMappingFunctionSchema>("value", attributeMappingFunctionSchemaCollectionResponse.value, );
}
