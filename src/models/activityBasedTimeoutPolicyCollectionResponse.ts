// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createActivityBasedTimeoutPolicyFromDiscriminatorValue, serializeActivityBasedTimeoutPolicy, type ActivityBasedTimeoutPolicy } from './activityBasedTimeoutPolicy';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ActivityBasedTimeoutPolicyCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ActivityBasedTimeoutPolicy[];
}
export function createActivityBasedTimeoutPolicyCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoActivityBasedTimeoutPolicyCollectionResponse;
}
export function deserializeIntoActivityBasedTimeoutPolicyCollectionResponse(activityBasedTimeoutPolicyCollectionResponse: ActivityBasedTimeoutPolicyCollectionResponse | undefined = {} as ActivityBasedTimeoutPolicyCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(activityBasedTimeoutPolicyCollectionResponse),
        "value": n => { activityBasedTimeoutPolicyCollectionResponse.value = n.getCollectionOfObjectValues<ActivityBasedTimeoutPolicy>(createActivityBasedTimeoutPolicyFromDiscriminatorValue); },
    }
}
export function serializeActivityBasedTimeoutPolicyCollectionResponse(writer: SerializationWriter, activityBasedTimeoutPolicyCollectionResponse: ActivityBasedTimeoutPolicyCollectionResponse | undefined = {} as ActivityBasedTimeoutPolicyCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, activityBasedTimeoutPolicyCollectionResponse)
        writer.writeCollectionOfObjectValues<ActivityBasedTimeoutPolicy>("value", activityBasedTimeoutPolicyCollectionResponse.value, serializeActivityBasedTimeoutPolicy);
}
// tslint:enable
// eslint-enable
