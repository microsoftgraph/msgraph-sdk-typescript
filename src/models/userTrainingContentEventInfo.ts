// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserTrainingContentEventInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserTrainingContentEventInfo;
}
export function deserializeIntoUserTrainingContentEventInfo(userTrainingContentEventInfo: UserTrainingContentEventInfo | undefined = {} as UserTrainingContentEventInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "browser": n => { userTrainingContentEventInfo.browser = n.getStringValue(); },
        "contentDateTime": n => { userTrainingContentEventInfo.contentDateTime = n.getDateValue(); },
        "ipAddress": n => { userTrainingContentEventInfo.ipAddress = n.getStringValue(); },
        "@odata.type": n => { userTrainingContentEventInfo.odataType = n.getStringValue(); },
        "osPlatformDeviceDetails": n => { userTrainingContentEventInfo.osPlatformDeviceDetails = n.getStringValue(); },
        "potentialScoreImpact": n => { userTrainingContentEventInfo.potentialScoreImpact = n.getNumberValue(); },
    }
}
export function serializeUserTrainingContentEventInfo(writer: SerializationWriter, userTrainingContentEventInfo: UserTrainingContentEventInfo | undefined = {} as UserTrainingContentEventInfo) : void {
        writer.writeStringValue("browser", userTrainingContentEventInfo.browser);
        writer.writeDateValue("contentDateTime", userTrainingContentEventInfo.contentDateTime);
        writer.writeStringValue("ipAddress", userTrainingContentEventInfo.ipAddress);
        writer.writeStringValue("@odata.type", userTrainingContentEventInfo.odataType);
        writer.writeStringValue("osPlatformDeviceDetails", userTrainingContentEventInfo.osPlatformDeviceDetails);
        writer.writeNumberValue("potentialScoreImpact", userTrainingContentEventInfo.potentialScoreImpact);
        writer.writeAdditionalData(userTrainingContentEventInfo.additionalData);
}
export interface UserTrainingContentEventInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Browser of the user from where the training event was generated.
     */
    browser?: string;
    /**
     * Date and time of the training content playback by the user.
     */
    contentDateTime?: Date;
    /**
     * IP address of the user for the training event.
     */
    ipAddress?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The operating system, platform, and device details of the user for the training event.
     */
    osPlatformDeviceDetails?: string;
    /**
     * Potential improvement in the tenant security posture after completion of the training by the user.
     */
    potentialScoreImpact?: number;
}
// tslint:enable
// eslint-enable
