// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { RiskDetail } from './riskDetail';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRiskUserActivityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRiskUserActivity;
}
export function deserializeIntoRiskUserActivity(riskUserActivity: RiskUserActivity | undefined = {} as RiskUserActivity) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { riskUserActivity.detail = n.getEnumValue<RiskDetail>(RiskDetail); },
        "@odata.type": n => { riskUserActivity.odataType = n.getStringValue(); },
        "riskEventTypes": n => { riskUserActivity.riskEventTypes = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface RiskUserActivity extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Details of the detected risk. Possible values are: none, adminGeneratedTemporaryPassword, userPerformedSecuredPasswordChange, userPerformedSecuredPasswordReset, adminConfirmedSigninSafe, aiConfirmedSigninSafe, userPassedMFADrivenByRiskBasedPolicy, adminDismissedAllRiskForUser, adminConfirmedSigninCompromised, hidden, adminConfirmedUserCompromised, unknownFutureValue.
     */
    detail?: RiskDetail;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The type of risk event detected.
     */
    riskEventTypes?: string[];
}
export function serializeRiskUserActivity(writer: SerializationWriter, riskUserActivity: RiskUserActivity | undefined = {} as RiskUserActivity) : void {
    writer.writeEnumValue<RiskDetail>("detail", riskUserActivity.detail);
    writer.writeStringValue("@odata.type", riskUserActivity.odataType);
    writer.writeCollectionOfPrimitiveValues<string>("riskEventTypes", riskUserActivity.riskEventTypes);
    writer.writeAdditionalData(riskUserActivity.additionalData);
}
// tslint:enable
// eslint-enable
