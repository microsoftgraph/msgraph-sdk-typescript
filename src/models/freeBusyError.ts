// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFreeBusyErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFreeBusyError;
}
export function deserializeIntoFreeBusyError(freeBusyError: FreeBusyError | undefined = {} as FreeBusyError) : Record<string, (node: ParseNode) => void> {
    return {
        "message": n => { freeBusyError.message = n.getStringValue(); },
        "@odata.type": n => { freeBusyError.odataType = n.getStringValue(); },
        "responseCode": n => { freeBusyError.responseCode = n.getStringValue(); },
    }
}
export interface FreeBusyError extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Describes the error.
     */
    message?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The response code from querying for the availability of the user, distribution list, or resource.
     */
    responseCode?: string;
}
export function serializeFreeBusyError(writer: SerializationWriter, freeBusyError: FreeBusyError | undefined = {} as FreeBusyError) : void {
        writer.writeStringValue("message", freeBusyError.message);
        writer.writeStringValue("@odata.type", freeBusyError.odataType);
        writer.writeStringValue("responseCode", freeBusyError.responseCode);
        writer.writeAdditionalData(freeBusyError.additionalData);
}
// tslint:enable
// eslint-enable
