// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkbookSortFieldFromDiscriminatorValue, serializeWorkbookSortField, type WorkbookSortField } from './workbookSortField';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookTableSortFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookTableSort;
}
export function deserializeIntoWorkbookTableSort(workbookTableSort: WorkbookTableSort | undefined = {} as WorkbookTableSort) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookTableSort),
        "fields": n => { workbookTableSort.fields = n.getCollectionOfObjectValues<WorkbookSortField>(createWorkbookSortFieldFromDiscriminatorValue); },
        "matchCase": n => { workbookTableSort.matchCase = n.getBooleanValue(); },
        "method": n => { workbookTableSort.method = n.getStringValue(); },
    }
}
export function serializeWorkbookTableSort(writer: SerializationWriter, workbookTableSort: WorkbookTableSort | undefined = {} as WorkbookTableSort) : void {
        serializeEntity(writer, workbookTableSort)
        writer.writeCollectionOfObjectValues<WorkbookSortField>("fields", workbookTableSort.fields, serializeWorkbookSortField);
        writer.writeBooleanValue("matchCase", workbookTableSort.matchCase);
        writer.writeStringValue("method", workbookTableSort.method);
}
export interface WorkbookTableSort extends Entity, Parsable {
    /**
     * Represents the current conditions used to last sort the table. Read-only.
     */
    fields?: WorkbookSortField[];
    /**
     * Represents whether the casing impacted the last sort of the table. Read-only.
     */
    matchCase?: boolean;
    /**
     * Represents Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only.
     */
    method?: string;
}
// tslint:enable
// eslint-enable
