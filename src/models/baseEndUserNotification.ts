// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createEndUserNotificationFromDiscriminatorValue, serializeEndUserNotification, type EndUserNotification } from './endUserNotification';
import { type PositiveReinforcementNotification, type SimulationNotification, type TrainingReminderNotification } from './index';
import { deserializeIntoPositiveReinforcementNotification } from './positiveReinforcementNotification';
import { deserializeIntoSimulationNotification } from './simulationNotification';
import { deserializeIntoTrainingReminderNotification } from './trainingReminderNotification';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BaseEndUserNotification extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The default language for the end user notification.
     */
    defaultLanguage?: string;
    /**
     * The endUserNotification property
     */
    endUserNotification?: EndUserNotification;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createBaseEndUserNotificationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.positiveReinforcementNotification":
                    return deserializeIntoPositiveReinforcementNotification;
                case "#microsoft.graph.simulationNotification":
                    return deserializeIntoSimulationNotification;
                case "#microsoft.graph.trainingReminderNotification":
                    return deserializeIntoTrainingReminderNotification;
            }
        }
    }
    return deserializeIntoBaseEndUserNotification;
}
export function deserializeIntoBaseEndUserNotification(baseEndUserNotification: BaseEndUserNotification | undefined = {} as BaseEndUserNotification) : Record<string, (node: ParseNode) => void> {
    return {
        "defaultLanguage": n => { baseEndUserNotification.defaultLanguage = n.getStringValue(); },
        "endUserNotification": n => { baseEndUserNotification.endUserNotification = n.getObjectValue<EndUserNotification>(createEndUserNotificationFromDiscriminatorValue); },
        "@odata.type": n => { baseEndUserNotification.odataType = n.getStringValue(); },
    }
}
export function serializeBaseEndUserNotification(writer: SerializationWriter, baseEndUserNotification: BaseEndUserNotification | undefined = {} as BaseEndUserNotification) : void {
    writer.writeStringValue("defaultLanguage", baseEndUserNotification.defaultLanguage);
    writer.writeObjectValue<EndUserNotification>("endUserNotification", baseEndUserNotification.endUserNotification, serializeEndUserNotification);
    writer.writeStringValue("@odata.type", baseEndUserNotification.odataType);
    writer.writeAdditionalData(baseEndUserNotification.additionalData);
}
// tslint:enable
// eslint-enable
