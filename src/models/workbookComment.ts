// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createWorkbookCommentReplyFromDiscriminatorValue, serializeWorkbookCommentReply, type WorkbookCommentReply } from './workbookCommentReply';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWorkbookCommentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWorkbookComment;
}
export function deserializeIntoWorkbookComment(workbookComment: WorkbookComment | undefined = {} as WorkbookComment) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(workbookComment),
        "content": n => { workbookComment.content = n.getStringValue(); },
        "contentType": n => { workbookComment.contentType = n.getStringValue(); },
        "replies": n => { workbookComment.replies = n.getCollectionOfObjectValues<WorkbookCommentReply>(createWorkbookCommentReplyFromDiscriminatorValue); },
    }
}
export function serializeWorkbookComment(writer: SerializationWriter, workbookComment: WorkbookComment | undefined = {} as WorkbookComment) : void {
    serializeEntity(writer, workbookComment)
    writer.writeStringValue("content", workbookComment.content);
    writer.writeStringValue("contentType", workbookComment.contentType);
    writer.writeCollectionOfObjectValues<WorkbookCommentReply>("replies", workbookComment.replies, serializeWorkbookCommentReply);
}
export interface WorkbookComment extends Entity, Parsable {
    /**
     * The content of comment.
     */
    content?: string;
    /**
     * Indicates the type for the comment.
     */
    contentType?: string;
    /**
     * The replies property
     */
    replies?: WorkbookCommentReply[];
}
// tslint:enable
// eslint-enable
