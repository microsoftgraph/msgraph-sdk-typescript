// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAttackSimulationOperationFromDiscriminatorValue, serializeAttackSimulationOperation, type AttackSimulationOperation } from './attackSimulationOperation';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AttackSimulationOperationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AttackSimulationOperation[];
}
export function createAttackSimulationOperationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAttackSimulationOperationCollectionResponse;
}
export function deserializeIntoAttackSimulationOperationCollectionResponse(attackSimulationOperationCollectionResponse: AttackSimulationOperationCollectionResponse | undefined = {} as AttackSimulationOperationCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(attackSimulationOperationCollectionResponse),
        "value": n => { attackSimulationOperationCollectionResponse.value = n.getCollectionOfObjectValues<AttackSimulationOperation>(createAttackSimulationOperationFromDiscriminatorValue); },
    }
}
export function serializeAttackSimulationOperationCollectionResponse(writer: SerializationWriter, attackSimulationOperationCollectionResponse: AttackSimulationOperationCollectionResponse | undefined = {} as AttackSimulationOperationCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, attackSimulationOperationCollectionResponse)
        writer.writeCollectionOfObjectValues<AttackSimulationOperation>("value", attackSimulationOperationCollectionResponse.value, serializeAttackSimulationOperation);
}
// tslint:enable
// eslint-enable
