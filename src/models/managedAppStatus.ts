// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type ManagedAppStatusRaw } from './index';
import { deserializeIntoManagedAppStatusRaw } from './managedAppStatusRaw';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createManagedAppStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.managedAppStatusRaw":
                    return deserializeIntoManagedAppStatusRaw;
            }
        }
    }
    return deserializeIntoManagedAppStatus;
}
export function deserializeIntoManagedAppStatus(managedAppStatus: ManagedAppStatus | undefined = {} as ManagedAppStatus) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(managedAppStatus),
        "displayName": n => { managedAppStatus.displayName = n.getStringValue(); },
        "version": n => { managedAppStatus.version = n.getStringValue(); },
    }
}
export interface ManagedAppStatus extends Entity, Parsable {
    /**
     * Friendly name of the status report.
     */
    displayName?: string;
    /**
     * Version of the entity.
     */
    version?: string;
}
export function serializeManagedAppStatus(writer: SerializationWriter, managedAppStatus: ManagedAppStatus | undefined = {} as ManagedAppStatus) : void {
        serializeEntity(writer, managedAppStatus)
        writer.writeStringValue("displayName", managedAppStatus.displayName);
        writer.writeStringValue("version", managedAppStatus.version);
}
// tslint:enable
// eslint-enable
