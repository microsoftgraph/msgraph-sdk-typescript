// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type Notebook, type OnenoteEntityHierarchyModel, type OnenotePage, type OnenoteSection, type SectionGroup } from './index';
import { deserializeIntoNotebook } from './notebook';
import { deserializeIntoOnenoteEntityBaseModel, serializeOnenoteEntityBaseModel, type OnenoteEntityBaseModel } from './onenoteEntityBaseModel';
import { deserializeIntoOnenoteEntityHierarchyModel } from './onenoteEntityHierarchyModel';
import { deserializeIntoOnenotePage } from './onenotePage';
import { deserializeIntoOnenoteSection } from './onenoteSection';
import { deserializeIntoSectionGroup } from './sectionGroup';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnenoteEntitySchemaObjectModelFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.notebook":
                    return deserializeIntoNotebook;
                case "#microsoft.graph.onenoteEntityHierarchyModel":
                    return deserializeIntoOnenoteEntityHierarchyModel;
                case "#microsoft.graph.onenotePage":
                    return deserializeIntoOnenotePage;
                case "#microsoft.graph.onenoteSection":
                    return deserializeIntoOnenoteSection;
                case "#microsoft.graph.sectionGroup":
                    return deserializeIntoSectionGroup;
            }
        }
    }
    return deserializeIntoOnenoteEntitySchemaObjectModel;
}
export function deserializeIntoOnenoteEntitySchemaObjectModel(onenoteEntitySchemaObjectModel: OnenoteEntitySchemaObjectModel | undefined = {} as OnenoteEntitySchemaObjectModel) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoOnenoteEntityBaseModel(onenoteEntitySchemaObjectModel),
        "createdDateTime": n => { onenoteEntitySchemaObjectModel.createdDateTime = n.getDateValue(); },
    }
}
export interface OnenoteEntitySchemaObjectModel extends OnenoteEntityBaseModel, Parsable {
    /**
     * The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
     */
    createdDateTime?: Date;
}
export function serializeOnenoteEntitySchemaObjectModel(writer: SerializationWriter, onenoteEntitySchemaObjectModel: OnenoteEntitySchemaObjectModel | undefined = {} as OnenoteEntitySchemaObjectModel) : void {
        serializeOnenoteEntityBaseModel(writer, onenoteEntitySchemaObjectModel)
        writer.writeDateValue("createdDateTime", onenoteEntitySchemaObjectModel.createdDateTime);
}
// tslint:enable
// eslint-enable
