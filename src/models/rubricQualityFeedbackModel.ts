// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createEducationItemBodyFromDiscriminatorValue, serializeEducationItemBody, type EducationItemBody } from './educationItemBody';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRubricQualityFeedbackModelFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRubricQualityFeedbackModel;
}
export function deserializeIntoRubricQualityFeedbackModel(rubricQualityFeedbackModel: RubricQualityFeedbackModel | undefined = {} as RubricQualityFeedbackModel) : Record<string, (node: ParseNode) => void> {
    return {
        "feedback": n => { rubricQualityFeedbackModel.feedback = n.getObjectValue<EducationItemBody>(createEducationItemBodyFromDiscriminatorValue); },
        "@odata.type": n => { rubricQualityFeedbackModel.odataType = n.getStringValue(); },
        "qualityId": n => { rubricQualityFeedbackModel.qualityId = n.getStringValue(); },
    }
}
export interface RubricQualityFeedbackModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Specific feedback for one quality of this rubric.
     */
    feedback?: EducationItemBody;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The ID of the rubricQuality that this feedback is related to.
     */
    qualityId?: string;
}
export function serializeRubricQualityFeedbackModel(writer: SerializationWriter, rubricQualityFeedbackModel: RubricQualityFeedbackModel | undefined = {} as RubricQualityFeedbackModel) : void {
    writer.writeObjectValue<EducationItemBody>("feedback", rubricQualityFeedbackModel.feedback, serializeEducationItemBody);
    writer.writeStringValue("@odata.type", rubricQualityFeedbackModel.odataType);
    writer.writeStringValue("qualityId", rubricQualityFeedbackModel.qualityId);
    writer.writeAdditionalData(rubricQualityFeedbackModel.additionalData);
}
// tslint:enable
// eslint-enable
