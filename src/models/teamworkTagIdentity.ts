import { deserializeIntoIdentity, serializeIdentity, type Identity } from './identity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createTeamworkTagIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTeamworkTagIdentity;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoTeamworkTagIdentity(teamworkTagIdentity: TeamworkTagIdentity | undefined = {} as TeamworkTagIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkTagIdentity),
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeTeamworkTagIdentity(writer: SerializationWriter, teamworkTagIdentity: TeamworkTagIdentity | undefined = {} as TeamworkTagIdentity) : void {
        serializeIdentity(writer, teamworkTagIdentity)
}
export interface TeamworkTagIdentity extends Identity, Parsable {
}
