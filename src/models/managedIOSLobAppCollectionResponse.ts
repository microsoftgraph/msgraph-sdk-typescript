import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createManagedIOSLobAppFromDiscriminatorValue, serializeManagedIOSLobApp, type ManagedIOSLobApp } from './managedIOSLobApp';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createManagedIOSLobAppCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoManagedIOSLobAppCollectionResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoManagedIOSLobAppCollectionResponse(managedIOSLobAppCollectionResponse: ManagedIOSLobAppCollectionResponse | undefined = {} as ManagedIOSLobAppCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(managedIOSLobAppCollectionResponse),
        "value": n => { managedIOSLobAppCollectionResponse.value = n.getCollectionOfObjectValues<ManagedIOSLobApp>(createManagedIOSLobAppFromDiscriminatorValue); },
    }
}
export interface ManagedIOSLobAppCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ManagedIOSLobApp[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeManagedIOSLobAppCollectionResponse(writer: SerializationWriter, managedIOSLobAppCollectionResponse: ManagedIOSLobAppCollectionResponse | undefined = {} as ManagedIOSLobAppCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, managedIOSLobAppCollectionResponse)
        writer.writeCollectionOfObjectValues<ManagedIOSLobApp>("value", managedIOSLobAppCollectionResponse.value, );
}
