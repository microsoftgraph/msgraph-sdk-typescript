// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createUsedInsightFromDiscriminatorValue, serializeUsedInsight, type UsedInsight } from './usedInsight';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUsedInsightCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUsedInsightCollectionResponse;
}
export function deserializeIntoUsedInsightCollectionResponse(usedInsightCollectionResponse: UsedInsightCollectionResponse | undefined = {} as UsedInsightCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(usedInsightCollectionResponse),
        "value": n => { usedInsightCollectionResponse.value = n.getCollectionOfObjectValues<UsedInsight>(createUsedInsightFromDiscriminatorValue); },
    }
}
export function serializeUsedInsightCollectionResponse(writer: SerializationWriter, usedInsightCollectionResponse: UsedInsightCollectionResponse | undefined = {} as UsedInsightCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, usedInsightCollectionResponse)
    writer.writeCollectionOfObjectValues<UsedInsight>("value", usedInsightCollectionResponse.value, serializeUsedInsight);
}
export interface UsedInsightCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UsedInsight[];
}
// tslint:enable
// eslint-enable
