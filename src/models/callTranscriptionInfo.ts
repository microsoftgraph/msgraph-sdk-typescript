// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { CallTranscriptionState } from './callTranscriptionState';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CallTranscriptionInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The state modified time in UTC.
     */
    lastModifiedDateTime?: Date;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The state property
     */
    state?: CallTranscriptionState;
}
export function createCallTranscriptionInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCallTranscriptionInfo;
}
export function deserializeIntoCallTranscriptionInfo(callTranscriptionInfo: CallTranscriptionInfo | undefined = {} as CallTranscriptionInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "lastModifiedDateTime": n => { callTranscriptionInfo.lastModifiedDateTime = n.getDateValue(); },
        "@odata.type": n => { callTranscriptionInfo.odataType = n.getStringValue(); },
        "state": n => { callTranscriptionInfo.state = n.getEnumValue<CallTranscriptionState>(CallTranscriptionState); },
    }
}
export function serializeCallTranscriptionInfo(writer: SerializationWriter, callTranscriptionInfo: CallTranscriptionInfo | undefined = {} as CallTranscriptionInfo) : void {
    writer.writeDateValue("lastModifiedDateTime", callTranscriptionInfo.lastModifiedDateTime);
    writer.writeStringValue("@odata.type", callTranscriptionInfo.odataType);
    writer.writeEnumValue<CallTranscriptionState>("state", callTranscriptionInfo.state);
    writer.writeAdditionalData(callTranscriptionInfo.additionalData);
}
// tslint:enable
// eslint-enable
