// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDisableAndDeleteUserApplyAction } from './disableAndDeleteUserApplyAction';
import { type DisableAndDeleteUserApplyAction, type RemoveAccessApplyAction } from './index';
import { deserializeIntoRemoveAccessApplyAction } from './removeAccessApplyAction';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessReviewApplyAction extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createAccessReviewApplyActionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.disableAndDeleteUserApplyAction":
                    return deserializeIntoDisableAndDeleteUserApplyAction;
                case "#microsoft.graph.removeAccessApplyAction":
                    return deserializeIntoRemoveAccessApplyAction;
            }
        }
    }
    return deserializeIntoAccessReviewApplyAction;
}
export function deserializeIntoAccessReviewApplyAction(accessReviewApplyAction: AccessReviewApplyAction | undefined = {} as AccessReviewApplyAction) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { accessReviewApplyAction.odataType = n.getStringValue(); },
    }
}
export function serializeAccessReviewApplyAction(writer: SerializationWriter, accessReviewApplyAction: AccessReviewApplyAction | undefined = {} as AccessReviewApplyAction) : void {
    writer.writeStringValue("@odata.type", accessReviewApplyAction.odataType);
    writer.writeAdditionalData(accessReviewApplyAction.additionalData);
}
// tslint:enable
// eslint-enable
