import { deserializeIntoScheduleChangeRequest, serializeScheduleChangeRequest, type ScheduleChangeRequest } from './scheduleChangeRequest';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createOpenShiftChangeRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOpenShiftChangeRequest;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoOpenShiftChangeRequest(openShiftChangeRequest: OpenShiftChangeRequest | undefined = {} as OpenShiftChangeRequest) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoScheduleChangeRequest(openShiftChangeRequest),
        "openShiftId": n => { openShiftChangeRequest.openShiftId = n.getStringValue(); },
    }
}
export interface OpenShiftChangeRequest extends Parsable, ScheduleChangeRequest {
    /**
     * ID for the open shift.
     */
    openShiftId?: string;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeOpenShiftChangeRequest(writer: SerializationWriter, openShiftChangeRequest: OpenShiftChangeRequest | undefined = {} as OpenShiftChangeRequest) : void {
        serializeScheduleChangeRequest(writer, openShiftChangeRequest)
        writer.writeStringValue("openShiftId", openShiftChangeRequest.openShiftId);
}
