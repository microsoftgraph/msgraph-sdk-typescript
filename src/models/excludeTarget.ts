import { AuthenticationMethodTargetType } from './authenticationMethodTargetType';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createExcludeTargetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoExcludeTarget;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoExcludeTarget(excludeTarget: ExcludeTarget | undefined = {} as ExcludeTarget) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { excludeTarget.id = n.getStringValue(); },
        "@odata.type": n => { excludeTarget.odataType = n.getStringValue(); },
        "targetType": n => { excludeTarget.targetType = n.getEnumValue<AuthenticationMethodTargetType>(AuthenticationMethodTargetType); },
    }
}
export interface ExcludeTarget extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The object identifier of an Azure Active Directory user or group.
     */
    id?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The targetType property
     */
    targetType?: AuthenticationMethodTargetType;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeExcludeTarget(writer: SerializationWriter, excludeTarget: ExcludeTarget | undefined = {} as ExcludeTarget) : void {
        writer.writeStringValue("id", excludeTarget.id);
        writer.writeStringValue("@odata.type", excludeTarget.odataType);
        writer.writeEnumValue<AuthenticationMethodTargetType>("targetType", excludeTarget.targetType);
        writer.writeAdditionalData(excludeTarget.additionalData);
}
