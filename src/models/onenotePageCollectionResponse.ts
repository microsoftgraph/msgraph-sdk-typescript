// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createOnenotePageFromDiscriminatorValue, serializeOnenotePage, type OnenotePage } from './onenotePage';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnenotePageCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOnenotePageCollectionResponse;
}
export function deserializeIntoOnenotePageCollectionResponse(onenotePageCollectionResponse: OnenotePageCollectionResponse | undefined = {} as OnenotePageCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(onenotePageCollectionResponse),
        "value": n => { onenotePageCollectionResponse.value = n.getCollectionOfObjectValues<OnenotePage>(createOnenotePageFromDiscriminatorValue); },
    }
}
export interface OnenotePageCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: OnenotePage[];
}
export function serializeOnenotePageCollectionResponse(writer: SerializationWriter, onenotePageCollectionResponse: OnenotePageCollectionResponse | undefined = {} as OnenotePageCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, onenotePageCollectionResponse)
        writer.writeCollectionOfObjectValues<OnenotePage>("value", onenotePageCollectionResponse.value, serializeOnenotePage);
}
// tslint:enable
// eslint-enable
