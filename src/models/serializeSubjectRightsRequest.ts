import { type AuthoredNote } from './authoredNote';
import { type DataSubject } from './dataSubject';
import { DataSubjectType } from './dataSubjectType';
import { type Identity } from './identity';
import { type IdentitySet } from './identitySet';
import { serializeAuthoredNote } from './serializeAuthoredNote';
import { serializeDataSubject } from './serializeDataSubject';
import { serializeEntity } from './serializeEntity';
import { serializeIdentity } from './serializeIdentity';
import { serializeIdentitySet } from './serializeIdentitySet';
import { serializeSubjectRightsRequestDetail } from './serializeSubjectRightsRequestDetail';
import { serializeSubjectRightsRequestHistory } from './serializeSubjectRightsRequestHistory';
import { serializeSubjectRightsRequestMailboxLocation } from './serializeSubjectRightsRequestMailboxLocation';
import { serializeSubjectRightsRequestSiteLocation } from './serializeSubjectRightsRequestSiteLocation';
import { serializeSubjectRightsRequestStageDetail } from './serializeSubjectRightsRequestStageDetail';
import { serializeTeam } from './serializeTeam';
import { serializeUser } from './serializeUser';
import { type SubjectRightsRequest } from './subjectRightsRequest';
import { type SubjectRightsRequestDetail } from './subjectRightsRequestDetail';
import { type SubjectRightsRequestHistory } from './subjectRightsRequestHistory';
import { type SubjectRightsRequestMailboxLocation } from './subjectRightsRequestMailboxLocation';
import { type SubjectRightsRequestSiteLocation } from './subjectRightsRequestSiteLocation';
import { type SubjectRightsRequestStageDetail } from './subjectRightsRequestStageDetail';
import { SubjectRightsRequestStatus } from './subjectRightsRequestStatus';
import { SubjectRightsRequestType } from './subjectRightsRequestType';
import { type Team } from './team';
import { type User } from './user';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function serializeSubjectRightsRequest(writer: SerializationWriter, subjectRightsRequest: SubjectRightsRequest | undefined = {} as SubjectRightsRequest) : void {
        serializeEntity(writer, subjectRightsRequest)
        writer.writeCollectionOfObjectValues<User>("approvers", subjectRightsRequest.approvers, serializeUser);
        writer.writeObjectValue<Identity>("assignedTo", subjectRightsRequest.assignedTo, serializeIdentity);
        writer.writeDateValue("closedDateTime", subjectRightsRequest.closedDateTime);
        writer.writeCollectionOfObjectValues<User>("collaborators", subjectRightsRequest.collaborators, serializeUser);
        writer.writeStringValue("contentQuery", subjectRightsRequest.contentQuery);
        writer.writeObjectValue<IdentitySet>("createdBy", subjectRightsRequest.createdBy, serializeIdentitySet);
        writer.writeDateValue("createdDateTime", subjectRightsRequest.createdDateTime);
        writer.writeObjectValue<DataSubject>("dataSubject", subjectRightsRequest.dataSubject, serializeDataSubject);
        writer.writeEnumValue<DataSubjectType>("dataSubjectType", subjectRightsRequest.dataSubjectType);
        writer.writeStringValue("description", subjectRightsRequest.description);
        writer.writeStringValue("displayName", subjectRightsRequest.displayName);
        writer.writeStringValue("externalId", subjectRightsRequest.externalId);
        writer.writeCollectionOfObjectValues<SubjectRightsRequestHistory>("history", subjectRightsRequest.history, serializeSubjectRightsRequestHistory);
        writer.writeBooleanValue("includeAllVersions", subjectRightsRequest.includeAllVersions);
        writer.writeBooleanValue("includeAuthoredContent", subjectRightsRequest.includeAuthoredContent);
        writer.writeObjectValue<SubjectRightsRequestDetail>("insight", subjectRightsRequest.insight, serializeSubjectRightsRequestDetail);
        writer.writeDateValue("internalDueDateTime", subjectRightsRequest.internalDueDateTime);
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", subjectRightsRequest.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", subjectRightsRequest.lastModifiedDateTime);
        writer.writeObjectValue<SubjectRightsRequestMailboxLocation>("mailboxlocations", subjectRightsRequest.mailboxlocations, serializeSubjectRightsRequestMailboxLocation);
        writer.writeCollectionOfObjectValues<AuthoredNote>("notes", subjectRightsRequest.notes, serializeAuthoredNote);
        writer.writeBooleanValue("pauseAfterEstimate", subjectRightsRequest.pauseAfterEstimate);
        writer.writeCollectionOfPrimitiveValues<string>("regulations", subjectRightsRequest.regulations);
        writer.writeObjectValue<SubjectRightsRequestSiteLocation>("sitelocations", subjectRightsRequest.sitelocations, serializeSubjectRightsRequestSiteLocation);
        writer.writeCollectionOfObjectValues<SubjectRightsRequestStageDetail>("stages", subjectRightsRequest.stages, serializeSubjectRightsRequestStageDetail);
        writer.writeEnumValue<SubjectRightsRequestStatus>("status", subjectRightsRequest.status);
        writer.writeObjectValue<Team>("team", subjectRightsRequest.team, serializeTeam);
        writer.writeEnumValue<SubjectRightsRequestType>("type", subjectRightsRequest.type);
}
