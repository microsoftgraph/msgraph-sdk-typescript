// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createOnPremisesExtensionAttributesFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoOnPremisesExtensionAttributes;
}
export function deserializeIntoOnPremisesExtensionAttributes(onPremisesExtensionAttributes: OnPremisesExtensionAttributes | undefined = {} as OnPremisesExtensionAttributes) : Record<string, (node: ParseNode) => void> {
    return {
        "extensionAttribute1": n => { onPremisesExtensionAttributes.extensionAttribute1 = n.getStringValue(); },
        "extensionAttribute10": n => { onPremisesExtensionAttributes.extensionAttribute10 = n.getStringValue(); },
        "extensionAttribute11": n => { onPremisesExtensionAttributes.extensionAttribute11 = n.getStringValue(); },
        "extensionAttribute12": n => { onPremisesExtensionAttributes.extensionAttribute12 = n.getStringValue(); },
        "extensionAttribute13": n => { onPremisesExtensionAttributes.extensionAttribute13 = n.getStringValue(); },
        "extensionAttribute14": n => { onPremisesExtensionAttributes.extensionAttribute14 = n.getStringValue(); },
        "extensionAttribute15": n => { onPremisesExtensionAttributes.extensionAttribute15 = n.getStringValue(); },
        "extensionAttribute2": n => { onPremisesExtensionAttributes.extensionAttribute2 = n.getStringValue(); },
        "extensionAttribute3": n => { onPremisesExtensionAttributes.extensionAttribute3 = n.getStringValue(); },
        "extensionAttribute4": n => { onPremisesExtensionAttributes.extensionAttribute4 = n.getStringValue(); },
        "extensionAttribute5": n => { onPremisesExtensionAttributes.extensionAttribute5 = n.getStringValue(); },
        "extensionAttribute6": n => { onPremisesExtensionAttributes.extensionAttribute6 = n.getStringValue(); },
        "extensionAttribute7": n => { onPremisesExtensionAttributes.extensionAttribute7 = n.getStringValue(); },
        "extensionAttribute8": n => { onPremisesExtensionAttributes.extensionAttribute8 = n.getStringValue(); },
        "extensionAttribute9": n => { onPremisesExtensionAttributes.extensionAttribute9 = n.getStringValue(); },
        "@odata.type": n => { onPremisesExtensionAttributes.odataType = n.getStringValue(); },
    }
}
export interface OnPremisesExtensionAttributes extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * First customizable extension attribute.
     */
    extensionAttribute1?: string;
    /**
     * Tenth customizable extension attribute.
     */
    extensionAttribute10?: string;
    /**
     * Eleventh customizable extension attribute.
     */
    extensionAttribute11?: string;
    /**
     * Twelfth customizable extension attribute.
     */
    extensionAttribute12?: string;
    /**
     * Thirteenth customizable extension attribute.
     */
    extensionAttribute13?: string;
    /**
     * Fourteenth customizable extension attribute.
     */
    extensionAttribute14?: string;
    /**
     * Fifteenth customizable extension attribute.
     */
    extensionAttribute15?: string;
    /**
     * Second customizable extension attribute.
     */
    extensionAttribute2?: string;
    /**
     * Third customizable extension attribute.
     */
    extensionAttribute3?: string;
    /**
     * Fourth customizable extension attribute.
     */
    extensionAttribute4?: string;
    /**
     * Fifth customizable extension attribute.
     */
    extensionAttribute5?: string;
    /**
     * Sixth customizable extension attribute.
     */
    extensionAttribute6?: string;
    /**
     * Seventh customizable extension attribute.
     */
    extensionAttribute7?: string;
    /**
     * Eighth customizable extension attribute.
     */
    extensionAttribute8?: string;
    /**
     * Ninth customizable extension attribute.
     */
    extensionAttribute9?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function serializeOnPremisesExtensionAttributes(writer: SerializationWriter, onPremisesExtensionAttributes: OnPremisesExtensionAttributes | undefined = {} as OnPremisesExtensionAttributes) : void {
    writer.writeStringValue("extensionAttribute1", onPremisesExtensionAttributes.extensionAttribute1);
    writer.writeStringValue("extensionAttribute10", onPremisesExtensionAttributes.extensionAttribute10);
    writer.writeStringValue("extensionAttribute11", onPremisesExtensionAttributes.extensionAttribute11);
    writer.writeStringValue("extensionAttribute12", onPremisesExtensionAttributes.extensionAttribute12);
    writer.writeStringValue("extensionAttribute13", onPremisesExtensionAttributes.extensionAttribute13);
    writer.writeStringValue("extensionAttribute14", onPremisesExtensionAttributes.extensionAttribute14);
    writer.writeStringValue("extensionAttribute15", onPremisesExtensionAttributes.extensionAttribute15);
    writer.writeStringValue("extensionAttribute2", onPremisesExtensionAttributes.extensionAttribute2);
    writer.writeStringValue("extensionAttribute3", onPremisesExtensionAttributes.extensionAttribute3);
    writer.writeStringValue("extensionAttribute4", onPremisesExtensionAttributes.extensionAttribute4);
    writer.writeStringValue("extensionAttribute5", onPremisesExtensionAttributes.extensionAttribute5);
    writer.writeStringValue("extensionAttribute6", onPremisesExtensionAttributes.extensionAttribute6);
    writer.writeStringValue("extensionAttribute7", onPremisesExtensionAttributes.extensionAttribute7);
    writer.writeStringValue("extensionAttribute8", onPremisesExtensionAttributes.extensionAttribute8);
    writer.writeStringValue("extensionAttribute9", onPremisesExtensionAttributes.extensionAttribute9);
    writer.writeStringValue("@odata.type", onPremisesExtensionAttributes.odataType);
    writer.writeAdditionalData(onPremisesExtensionAttributes.additionalData);
}
// tslint:enable
// eslint-enable
