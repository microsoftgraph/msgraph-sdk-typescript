// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createApprovalFromDiscriminatorValue, serializeApproval, type Approval } from './approval';
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ApprovalCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Approval[];
}
export function createApprovalCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoApprovalCollectionResponse;
}
export function deserializeIntoApprovalCollectionResponse(approvalCollectionResponse: ApprovalCollectionResponse | undefined = {} as ApprovalCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(approvalCollectionResponse),
        "value": n => { approvalCollectionResponse.value = n.getCollectionOfObjectValues<Approval>(createApprovalFromDiscriminatorValue); },
    }
}
export function serializeApprovalCollectionResponse(writer: SerializationWriter, approvalCollectionResponse: ApprovalCollectionResponse | undefined = {} as ApprovalCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, approvalCollectionResponse)
        writer.writeCollectionOfObjectValues<Approval>("value", approvalCollectionResponse.value, serializeApproval);
}
// tslint:enable
// eslint-enable
