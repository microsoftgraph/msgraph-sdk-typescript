// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEducationFeedbackOutcome } from './educationFeedbackOutcome';
import { deserializeIntoEducationFeedbackResourceOutcome } from './educationFeedbackResourceOutcome';
import { deserializeIntoEducationPointsOutcome } from './educationPointsOutcome';
import { deserializeIntoEducationRubricOutcome } from './educationRubricOutcome';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createIdentitySetFromDiscriminatorValue, serializeIdentitySet, type IdentitySet } from './identitySet';
import { type EducationFeedbackOutcome, type EducationFeedbackResourceOutcome, type EducationPointsOutcome, type EducationRubricOutcome } from './index';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createEducationOutcomeFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.educationFeedbackOutcome":
                    return deserializeIntoEducationFeedbackOutcome;
                case "#microsoft.graph.educationFeedbackResourceOutcome":
                    return deserializeIntoEducationFeedbackResourceOutcome;
                case "#microsoft.graph.educationPointsOutcome":
                    return deserializeIntoEducationPointsOutcome;
                case "#microsoft.graph.educationRubricOutcome":
                    return deserializeIntoEducationRubricOutcome;
            }
        }
    }
    return deserializeIntoEducationOutcome;
}
export function deserializeIntoEducationOutcome(educationOutcome: EducationOutcome | undefined = {} as EducationOutcome) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(educationOutcome),
        "lastModifiedBy": n => { educationOutcome.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { educationOutcome.lastModifiedDateTime = n.getDateValue(); },
    }
}
export interface EducationOutcome extends Entity, Parsable {
    /**
     * The individual who updated the resource.
     */
    lastModifiedBy?: IdentitySet;
    /**
     * The moment in time when the resource was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2021 is 2021-01-01T00:00:00Z.
     */
    lastModifiedDateTime?: Date;
}
export function serializeEducationOutcome(writer: SerializationWriter, educationOutcome: EducationOutcome | undefined = {} as EducationOutcome) : void {
        serializeEntity(writer, educationOutcome)
        writer.writeObjectValue<IdentitySet>("lastModifiedBy", educationOutcome.lastModifiedBy, serializeIdentitySet);
        writer.writeDateValue("lastModifiedDateTime", educationOutcome.lastModifiedDateTime);
}
// tslint:enable
// eslint-enable
