// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDirectoryObject, serializeDirectoryObject, type DirectoryObject } from './directoryObject';
import { createSettingTemplateValueFromDiscriminatorValue, serializeSettingTemplateValue, type SettingTemplateValue } from './settingTemplateValue';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createGroupSettingTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGroupSettingTemplate;
}
export function deserializeIntoGroupSettingTemplate(groupSettingTemplate: GroupSettingTemplate | undefined = {} as GroupSettingTemplate) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObject(groupSettingTemplate),
        "description": n => { groupSettingTemplate.description = n.getStringValue(); },
        "displayName": n => { groupSettingTemplate.displayName = n.getStringValue(); },
        "values": n => { groupSettingTemplate.values = n.getCollectionOfObjectValues<SettingTemplateValue>(createSettingTemplateValueFromDiscriminatorValue); },
    }
}
export interface GroupSettingTemplate extends DirectoryObject, Parsable {
    /**
     * Description of the template.
     */
    description?: string;
    /**
     * Display name of the template. The template named Group.Unified can be used to configure tenant-wide Microsoft 365 group settings, while the template named Group.Unified.Guest can be used to configure group-specific settings.
     */
    displayName?: string;
    /**
     * Collection of settingTemplateValues that list the set of available settings, defaults and types that make up this template.
     */
    values?: SettingTemplateValue[];
}
export function serializeGroupSettingTemplate(writer: SerializationWriter, groupSettingTemplate: GroupSettingTemplate | undefined = {} as GroupSettingTemplate) : void {
        serializeDirectoryObject(writer, groupSettingTemplate)
        writer.writeStringValue("description", groupSettingTemplate.description);
        writer.writeStringValue("displayName", groupSettingTemplate.displayName);
        writer.writeCollectionOfObjectValues<SettingTemplateValue>("values", groupSettingTemplate.values, serializeSettingTemplateValue);
}
// tslint:enable
// eslint-enable
