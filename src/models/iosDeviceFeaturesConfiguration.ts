// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAppleDeviceFeaturesConfigurationBase, serializeAppleDeviceFeaturesConfigurationBase, type AppleDeviceFeaturesConfigurationBase } from './appleDeviceFeaturesConfigurationBase';
import { createIosHomeScreenItemFromDiscriminatorValue, serializeIosHomeScreenItem, type IosHomeScreenItem } from './iosHomeScreenItem';
import { createIosHomeScreenPageFromDiscriminatorValue, serializeIosHomeScreenPage, type IosHomeScreenPage } from './iosHomeScreenPage';
import { createIosNotificationSettingsFromDiscriminatorValue, serializeIosNotificationSettings, type IosNotificationSettings } from './iosNotificationSettings';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createIosDeviceFeaturesConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoIosDeviceFeaturesConfiguration;
}
export function deserializeIntoIosDeviceFeaturesConfiguration(iosDeviceFeaturesConfiguration: IosDeviceFeaturesConfiguration | undefined = {} as IosDeviceFeaturesConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAppleDeviceFeaturesConfigurationBase(iosDeviceFeaturesConfiguration),
        "assetTagTemplate": n => { iosDeviceFeaturesConfiguration.assetTagTemplate = n.getStringValue(); },
        "homeScreenDockIcons": n => { iosDeviceFeaturesConfiguration.homeScreenDockIcons = n.getCollectionOfObjectValues<IosHomeScreenItem>(createIosHomeScreenItemFromDiscriminatorValue); },
        "homeScreenPages": n => { iosDeviceFeaturesConfiguration.homeScreenPages = n.getCollectionOfObjectValues<IosHomeScreenPage>(createIosHomeScreenPageFromDiscriminatorValue); },
        "lockScreenFootnote": n => { iosDeviceFeaturesConfiguration.lockScreenFootnote = n.getStringValue(); },
        "notificationSettings": n => { iosDeviceFeaturesConfiguration.notificationSettings = n.getCollectionOfObjectValues<IosNotificationSettings>(createIosNotificationSettingsFromDiscriminatorValue); },
    }
}
export interface IosDeviceFeaturesConfiguration extends AppleDeviceFeaturesConfigurationBase, Parsable {
    /**
     * Asset tag information for the device, displayed on the login window and lock screen.
     */
    assetTagTemplate?: string;
    /**
     * A list of app and folders to appear on the Home Screen Dock. This collection can contain a maximum of 500 elements.
     */
    homeScreenDockIcons?: IosHomeScreenItem[];
    /**
     * A list of pages on the Home Screen. This collection can contain a maximum of 500 elements.
     */
    homeScreenPages?: IosHomeScreenPage[];
    /**
     * A footnote displayed on the login window and lock screen. Available in iOS 9.3.1 and later.
     */
    lockScreenFootnote?: string;
    /**
     * Notification settings for each bundle id. Applicable to devices in supervised mode only (iOS 9.3 and later). This collection can contain a maximum of 500 elements.
     */
    notificationSettings?: IosNotificationSettings[];
}
export function serializeIosDeviceFeaturesConfiguration(writer: SerializationWriter, iosDeviceFeaturesConfiguration: IosDeviceFeaturesConfiguration | undefined = {} as IosDeviceFeaturesConfiguration) : void {
    serializeAppleDeviceFeaturesConfigurationBase(writer, iosDeviceFeaturesConfiguration)
    writer.writeStringValue("assetTagTemplate", iosDeviceFeaturesConfiguration.assetTagTemplate);
    writer.writeCollectionOfObjectValues<IosHomeScreenItem>("homeScreenDockIcons", iosDeviceFeaturesConfiguration.homeScreenDockIcons, serializeIosHomeScreenItem);
    writer.writeCollectionOfObjectValues<IosHomeScreenPage>("homeScreenPages", iosDeviceFeaturesConfiguration.homeScreenPages, serializeIosHomeScreenPage);
    writer.writeStringValue("lockScreenFootnote", iosDeviceFeaturesConfiguration.lockScreenFootnote);
    writer.writeCollectionOfObjectValues<IosNotificationSettings>("notificationSettings", iosDeviceFeaturesConfiguration.notificationSettings, serializeIosNotificationSettings);
}
// tslint:enable
// eslint-enable
