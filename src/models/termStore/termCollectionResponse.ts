// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../baseCollectionPaginationCountResponse';
import { createTermFromDiscriminatorValue, serializeTerm, type Term } from './term';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTermCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTermCollectionResponse;
}
export function deserializeIntoTermCollectionResponse(termCollectionResponse: TermCollectionResponse | undefined = {} as TermCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(termCollectionResponse),
        "value": n => { termCollectionResponse.value = n.getCollectionOfObjectValues<Term>(createTermFromDiscriminatorValue); },
    }
}
export function serializeTermCollectionResponse(writer: SerializationWriter, termCollectionResponse: TermCollectionResponse | undefined = {} as TermCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, termCollectionResponse)
    writer.writeCollectionOfObjectValues<Term>("value", termCollectionResponse.value, serializeTerm);
}
export interface TermCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Term[];
}
// tslint:enable
// eslint-enable
