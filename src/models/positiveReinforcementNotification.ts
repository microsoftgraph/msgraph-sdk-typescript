// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseEndUserNotification, serializeBaseEndUserNotification, type BaseEndUserNotification } from './baseEndUserNotification';
import { NotificationDeliveryPreference } from './notificationDeliveryPreference';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPositiveReinforcementNotificationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPositiveReinforcementNotification;
}
export function deserializeIntoPositiveReinforcementNotification(positiveReinforcementNotification: PositiveReinforcementNotification | undefined = {} as PositiveReinforcementNotification) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseEndUserNotification(positiveReinforcementNotification),
        "deliveryPreference": n => { positiveReinforcementNotification.deliveryPreference = n.getEnumValue<NotificationDeliveryPreference>(NotificationDeliveryPreference); },
    }
}
export interface PositiveReinforcementNotification extends BaseEndUserNotification, Parsable {
    /**
     * Delivery preference. Possible values are: unknown, deliverImmedietly, deliverAfterCampaignEnd, unknownFutureValue.
     */
    deliveryPreference?: NotificationDeliveryPreference;
}
export function serializePositiveReinforcementNotification(writer: SerializationWriter, positiveReinforcementNotification: PositiveReinforcementNotification | undefined = {} as PositiveReinforcementNotification) : void {
    serializeBaseEndUserNotification(writer, positiveReinforcementNotification)
    writer.writeEnumValue<NotificationDeliveryPreference>("deliveryPreference", positiveReinforcementNotification.deliveryPreference);
}
// tslint:enable
// eslint-enable
