// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoChangeTrackedEntity, serializeChangeTrackedEntity, type ChangeTrackedEntity } from './changeTrackedEntity';
import { createShiftAvailabilityFromDiscriminatorValue, serializeShiftAvailability, type ShiftAvailability } from './shiftAvailability';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createShiftPreferencesFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoShiftPreferences;
}
export function deserializeIntoShiftPreferences(shiftPreferences: ShiftPreferences | undefined = {} as ShiftPreferences) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoChangeTrackedEntity(shiftPreferences),
        "availability": n => { shiftPreferences.availability = n.getCollectionOfObjectValues<ShiftAvailability>(createShiftAvailabilityFromDiscriminatorValue); },
    }
}
export function serializeShiftPreferences(writer: SerializationWriter, shiftPreferences: ShiftPreferences | undefined = {} as ShiftPreferences) : void {
        serializeChangeTrackedEntity(writer, shiftPreferences)
        writer.writeCollectionOfObjectValues<ShiftAvailability>("availability", shiftPreferences.availability, );
}
export interface ShiftPreferences extends ChangeTrackedEntity, Parsable {
    /**
     * Availability of the user to be scheduled for work and its recurrence pattern.
     */
    availability?: ShiftAvailability[];
}
// tslint:enable
// eslint-enable
