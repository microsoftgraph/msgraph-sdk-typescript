// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoSubjectRightsRequestMailboxLocation, serializeSubjectRightsRequestMailboxLocation, type SubjectRightsRequestMailboxLocation } from './subjectRightsRequestMailboxLocation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSubjectRightsRequestEnumeratedMailboxLocationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSubjectRightsRequestEnumeratedMailboxLocation;
}
export function deserializeIntoSubjectRightsRequestEnumeratedMailboxLocation(subjectRightsRequestEnumeratedMailboxLocation: SubjectRightsRequestEnumeratedMailboxLocation | undefined = {} as SubjectRightsRequestEnumeratedMailboxLocation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSubjectRightsRequestMailboxLocation(subjectRightsRequestEnumeratedMailboxLocation),
        "userPrincipalNames": n => { subjectRightsRequestEnumeratedMailboxLocation.userPrincipalNames = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export function serializeSubjectRightsRequestEnumeratedMailboxLocation(writer: SerializationWriter, subjectRightsRequestEnumeratedMailboxLocation: SubjectRightsRequestEnumeratedMailboxLocation | undefined = {} as SubjectRightsRequestEnumeratedMailboxLocation) : void {
        serializeSubjectRightsRequestMailboxLocation(writer, subjectRightsRequestEnumeratedMailboxLocation)
        writer.writeCollectionOfPrimitiveValues<string>("userPrincipalNames", subjectRightsRequestEnumeratedMailboxLocation.userPrincipalNames);
}
export interface SubjectRightsRequestEnumeratedMailboxLocation extends Parsable, SubjectRightsRequestMailboxLocation {
    /**
     * Collection of mailboxes that should be included in the search. Includes the user principal name (UPN) of each mailbox, for example, Monica.Thompson@contoso.com.
     */
    userPrincipalNames?: string[];
}
// tslint:enable
// eslint-enable
