// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type UserScopeTeamsAppInstallation } from './index';
import { createTeamsAppFromDiscriminatorValue, serializeTeamsApp, type TeamsApp } from './teamsApp';
import { createTeamsAppDefinitionFromDiscriminatorValue, serializeTeamsAppDefinition, type TeamsAppDefinition } from './teamsAppDefinition';
import { createTeamsAppPermissionSetFromDiscriminatorValue, serializeTeamsAppPermissionSet, type TeamsAppPermissionSet } from './teamsAppPermissionSet';
import { deserializeIntoUserScopeTeamsAppInstallation } from './userScopeTeamsAppInstallation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTeamsAppInstallationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.userScopeTeamsAppInstallation":
                    return deserializeIntoUserScopeTeamsAppInstallation;
            }
        }
    }
    return deserializeIntoTeamsAppInstallation;
}
export function deserializeIntoTeamsAppInstallation(teamsAppInstallation: TeamsAppInstallation | undefined = {} as TeamsAppInstallation) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsAppInstallation),
        "consentedPermissionSet": n => { teamsAppInstallation.consentedPermissionSet = n.getObjectValue<TeamsAppPermissionSet>(createTeamsAppPermissionSetFromDiscriminatorValue); },
        "teamsApp": n => { teamsAppInstallation.teamsApp = n.getObjectValue<TeamsApp>(createTeamsAppFromDiscriminatorValue); },
        "teamsAppDefinition": n => { teamsAppInstallation.teamsAppDefinition = n.getObjectValue<TeamsAppDefinition>(createTeamsAppDefinitionFromDiscriminatorValue); },
    }
}
export function serializeTeamsAppInstallation(writer: SerializationWriter, teamsAppInstallation: TeamsAppInstallation | undefined = {} as TeamsAppInstallation) : void {
        serializeEntity(writer, teamsAppInstallation)
        writer.writeObjectValue<TeamsAppPermissionSet>("consentedPermissionSet", teamsAppInstallation.consentedPermissionSet, serializeTeamsAppPermissionSet);
        writer.writeObjectValue<TeamsApp>("teamsApp", teamsAppInstallation.teamsApp, serializeTeamsApp);
        writer.writeObjectValue<TeamsAppDefinition>("teamsAppDefinition", teamsAppInstallation.teamsAppDefinition, serializeTeamsAppDefinition);
}
export interface TeamsAppInstallation extends Entity, Parsable {
    /**
     * The set of resource-specific permissions consented to while installing or upgrading the teamsApp.
     */
    consentedPermissionSet?: TeamsAppPermissionSet;
    /**
     * The app that is installed.
     */
    teamsApp?: TeamsApp;
    /**
     * The details of this version of the app.
     */
    teamsAppDefinition?: TeamsAppDefinition;
}
// tslint:enable
// eslint-enable
