// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDirectoryObjectFromDiscriminatorValue, serializeDirectoryObject, type DirectoryObject } from './directoryObject';
import { deserializeIntoGovernanceInsight, serializeGovernanceInsight, type GovernanceInsight } from './governanceInsight';
import { OutlierContainerType } from './outlierContainerType';
import { OutlierMemberType } from './outlierMemberType';
import { createUserFromDiscriminatorValue, serializeUser, type User } from './user';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createMembershipOutlierInsightFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoMembershipOutlierInsight;
}
export function deserializeIntoMembershipOutlierInsight(membershipOutlierInsight: MembershipOutlierInsight | undefined = {} as MembershipOutlierInsight) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoGovernanceInsight(membershipOutlierInsight),
        "container": n => { membershipOutlierInsight.container = n.getObjectValue<DirectoryObject>(createDirectoryObjectFromDiscriminatorValue); },
        "containerId": n => { membershipOutlierInsight.containerId = n.getStringValue(); },
        "lastModifiedBy": n => { membershipOutlierInsight.lastModifiedBy = n.getObjectValue<User>(createUserFromDiscriminatorValue); },
        "member": n => { membershipOutlierInsight.member = n.getObjectValue<DirectoryObject>(createDirectoryObjectFromDiscriminatorValue); },
        "memberId": n => { membershipOutlierInsight.memberId = n.getStringValue(); },
        "outlierContainerType": n => { membershipOutlierInsight.outlierContainerType = n.getEnumValue<OutlierContainerType>(OutlierContainerType); },
        "outlierMemberType": n => { membershipOutlierInsight.outlierMemberType = n.getEnumValue<OutlierMemberType>(OutlierMemberType); },
    }
}
export interface MembershipOutlierInsight extends GovernanceInsight, Parsable {
    /**
     * Navigation link to the container directory object. For example, to a group.
     */
    container?: DirectoryObject;
    /**
     * Indicates the identifier of the container, for example, a group ID.
     */
    containerId?: string;
    /**
     * Navigation link to a member object who modified the record. For example, to a user.
     */
    lastModifiedBy?: User;
    /**
     * Navigation link to a member object. For example, to a user.
     */
    member?: DirectoryObject;
    /**
     * Indicates the identifier of the user.
     */
    memberId?: string;
    /**
     * The outlierContainerType property
     */
    outlierContainerType?: OutlierContainerType;
    /**
     * The outlierMemberType property
     */
    outlierMemberType?: OutlierMemberType;
}
export function serializeMembershipOutlierInsight(writer: SerializationWriter, membershipOutlierInsight: MembershipOutlierInsight | undefined = {} as MembershipOutlierInsight) : void {
    serializeGovernanceInsight(writer, membershipOutlierInsight)
    writer.writeObjectValue<DirectoryObject>("container", membershipOutlierInsight.container, serializeDirectoryObject);
    writer.writeStringValue("containerId", membershipOutlierInsight.containerId);
    writer.writeObjectValue<User>("lastModifiedBy", membershipOutlierInsight.lastModifiedBy, serializeUser);
    writer.writeObjectValue<DirectoryObject>("member", membershipOutlierInsight.member, serializeDirectoryObject);
    writer.writeStringValue("memberId", membershipOutlierInsight.memberId);
    writer.writeEnumValue<OutlierContainerType>("outlierContainerType", membershipOutlierInsight.outlierContainerType);
    writer.writeEnumValue<OutlierMemberType>("outlierMemberType", membershipOutlierInsight.outlierMemberType);
}
// tslint:enable
// eslint-enable
