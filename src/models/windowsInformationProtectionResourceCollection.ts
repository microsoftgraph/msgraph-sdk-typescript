// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createWindowsInformationProtectionResourceCollectionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWindowsInformationProtectionResourceCollection;
}
export function deserializeIntoWindowsInformationProtectionResourceCollection(windowsInformationProtectionResourceCollection: WindowsInformationProtectionResourceCollection | undefined = {} as WindowsInformationProtectionResourceCollection) : Record<string, (node: ParseNode) => void> {
    return {
        "displayName": n => { windowsInformationProtectionResourceCollection.displayName = n.getStringValue(); },
        "@odata.type": n => { windowsInformationProtectionResourceCollection.odataType = n.getStringValue(); },
        "resources": n => { windowsInformationProtectionResourceCollection.resources = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export function serializeWindowsInformationProtectionResourceCollection(writer: SerializationWriter, windowsInformationProtectionResourceCollection: WindowsInformationProtectionResourceCollection | undefined = {} as WindowsInformationProtectionResourceCollection) : void {
        writer.writeStringValue("displayName", windowsInformationProtectionResourceCollection.displayName);
        writer.writeStringValue("@odata.type", windowsInformationProtectionResourceCollection.odataType);
        writer.writeCollectionOfPrimitiveValues<string>("resources", windowsInformationProtectionResourceCollection.resources);
        writer.writeAdditionalData(windowsInformationProtectionResourceCollection.additionalData);
}
export interface WindowsInformationProtectionResourceCollection extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Display name
     */
    displayName?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Collection of resources
     */
    resources?: string[];
}
// tslint:enable
// eslint-enable
