// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createExtensionFromDiscriminatorValue, serializeExtension, type Extension } from './extension';
import { createTodoTaskFromDiscriminatorValue, serializeTodoTask, type TodoTask } from './todoTask';
import { WellknownListName } from './wellknownListName';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createTodoTaskListFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoTodoTaskList;
}
export function deserializeIntoTodoTaskList(todoTaskList: TodoTaskList | undefined = {} as TodoTaskList) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(todoTaskList),
        "displayName": n => { todoTaskList.displayName = n.getStringValue(); },
        "extensions": n => { todoTaskList.extensions = n.getCollectionOfObjectValues<Extension>(createExtensionFromDiscriminatorValue); },
        "isOwner": n => { todoTaskList.isOwner = n.getBooleanValue(); },
        "isShared": n => { todoTaskList.isShared = n.getBooleanValue(); },
        "tasks": n => { todoTaskList.tasks = n.getCollectionOfObjectValues<TodoTask>(createTodoTaskFromDiscriminatorValue); },
        "wellknownListName": n => { todoTaskList.wellknownListName = n.getEnumValue<WellknownListName>(WellknownListName); },
    }
}
export function serializeTodoTaskList(writer: SerializationWriter, todoTaskList: TodoTaskList | undefined = {} as TodoTaskList) : void {
        serializeEntity(writer, todoTaskList)
        writer.writeStringValue("displayName", todoTaskList.displayName);
        writer.writeCollectionOfObjectValues<Extension>("extensions", todoTaskList.extensions, );
        writer.writeBooleanValue("isOwner", todoTaskList.isOwner);
        writer.writeBooleanValue("isShared", todoTaskList.isShared);
        writer.writeCollectionOfObjectValues<TodoTask>("tasks", todoTaskList.tasks, );
        writer.writeEnumValue<WellknownListName>("wellknownListName", todoTaskList.wellknownListName);
}
export interface TodoTaskList extends Entity, Parsable {
    /**
     * The name of the task list.
     */
    displayName?: string;
    /**
     * The collection of open extensions defined for the task list. Nullable.
     */
    extensions?: Extension[];
    /**
     * True if the user is owner of the given task list.
     */
    isOwner?: boolean;
    /**
     * True if the task list is shared with other users
     */
    isShared?: boolean;
    /**
     * The tasks in this task list. Read-only. Nullable.
     */
    tasks?: TodoTask[];
    /**
     * The wellknownListName property
     */
    wellknownListName?: WellknownListName;
}
// tslint:enable
// eslint-enable
