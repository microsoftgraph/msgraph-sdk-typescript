// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoApiAuthenticationConfigurationBase, serializeApiAuthenticationConfigurationBase, type ApiAuthenticationConfigurationBase } from './apiAuthenticationConfigurationBase';
import { createPkcs12CertificateInformationFromDiscriminatorValue, serializePkcs12CertificateInformation, type Pkcs12CertificateInformation } from './pkcs12CertificateInformation';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ClientCertificateAuthentication extends ApiAuthenticationConfigurationBase, Parsable {
    /**
     * The list of certificates uploaded for this API connector.
     */
    certificateList?: Pkcs12CertificateInformation[];
}
export function createClientCertificateAuthenticationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoClientCertificateAuthentication;
}
export function deserializeIntoClientCertificateAuthentication(clientCertificateAuthentication: ClientCertificateAuthentication | undefined = {} as ClientCertificateAuthentication) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoApiAuthenticationConfigurationBase(clientCertificateAuthentication),
        "certificateList": n => { clientCertificateAuthentication.certificateList = n.getCollectionOfObjectValues<Pkcs12CertificateInformation>(createPkcs12CertificateInformationFromDiscriminatorValue); },
    }
}
export function serializeClientCertificateAuthentication(writer: SerializationWriter, clientCertificateAuthentication: ClientCertificateAuthentication | undefined = {} as ClientCertificateAuthentication) : void {
        serializeApiAuthenticationConfigurationBase(writer, clientCertificateAuthentication)
        writer.writeCollectionOfObjectValues<Pkcs12CertificateInformation>("certificateList", clientCertificateAuthentication.certificateList, );
}
// tslint:enable
// eslint-enable
