import { CloudAppSecuritySessionControlType } from './cloudAppSecuritySessionControlType';
import { deserializeIntoConditionalAccessSessionControl, serializeConditionalAccessSessionControl, type ConditionalAccessSessionControl } from './conditionalAccessSessionControl';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CloudAppSecuritySessionControl extends ConditionalAccessSessionControl, Parsable {
    /**
     * Possible values are: mcasConfigured, monitorOnly, blockDownloads, unknownFutureValue. For more information, see Deploy Conditional Access App Control for featured apps.
     */
    cloudAppSecurityType?: CloudAppSecuritySessionControlType;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createCloudAppSecuritySessionControlFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCloudAppSecuritySessionControl;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoCloudAppSecuritySessionControl(cloudAppSecuritySessionControl: CloudAppSecuritySessionControl | undefined = {} as CloudAppSecuritySessionControl) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoConditionalAccessSessionControl(cloudAppSecuritySessionControl),
        "cloudAppSecurityType": n => { cloudAppSecuritySessionControl.cloudAppSecurityType = n.getEnumValue<CloudAppSecuritySessionControlType>(CloudAppSecuritySessionControlType); },
    }
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeCloudAppSecuritySessionControl(writer: SerializationWriter, cloudAppSecuritySessionControl: CloudAppSecuritySessionControl | undefined = {} as CloudAppSecuritySessionControl) : void {
        serializeConditionalAccessSessionControl(writer, cloudAppSecuritySessionControl)
        writer.writeEnumValue<CloudAppSecuritySessionControlType>("cloudAppSecurityType", cloudAppSecuritySessionControl.cloudAppSecurityType);
}
