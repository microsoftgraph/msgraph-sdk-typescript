// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createBookingServiceFromDiscriminatorValue, serializeBookingService, type BookingService } from './bookingService';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingServiceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: BookingService[];
}
export function createBookingServiceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoBookingServiceCollectionResponse;
}
export function deserializeIntoBookingServiceCollectionResponse(bookingServiceCollectionResponse: BookingServiceCollectionResponse | undefined = {} as BookingServiceCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(bookingServiceCollectionResponse),
        "value": n => { bookingServiceCollectionResponse.value = n.getCollectionOfObjectValues<BookingService>(createBookingServiceFromDiscriminatorValue); },
    }
}
export function serializeBookingServiceCollectionResponse(writer: SerializationWriter, bookingServiceCollectionResponse: BookingServiceCollectionResponse | undefined = {} as BookingServiceCollectionResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, bookingServiceCollectionResponse)
        writer.writeCollectionOfObjectValues<BookingService>("value", bookingServiceCollectionResponse.value, serializeBookingService);
}
// tslint:enable
// eslint-enable
