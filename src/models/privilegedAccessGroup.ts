// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createApprovalFromDiscriminatorValue, serializeApproval, type Approval } from './approval';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createPrivilegedAccessGroupAssignmentScheduleFromDiscriminatorValue, serializePrivilegedAccessGroupAssignmentSchedule, type PrivilegedAccessGroupAssignmentSchedule } from './privilegedAccessGroupAssignmentSchedule';
import { createPrivilegedAccessGroupAssignmentScheduleInstanceFromDiscriminatorValue, serializePrivilegedAccessGroupAssignmentScheduleInstance, type PrivilegedAccessGroupAssignmentScheduleInstance } from './privilegedAccessGroupAssignmentScheduleInstance';
import { createPrivilegedAccessGroupAssignmentScheduleRequestFromDiscriminatorValue, serializePrivilegedAccessGroupAssignmentScheduleRequest, type PrivilegedAccessGroupAssignmentScheduleRequest } from './privilegedAccessGroupAssignmentScheduleRequest';
import { createPrivilegedAccessGroupEligibilityScheduleFromDiscriminatorValue, serializePrivilegedAccessGroupEligibilitySchedule, type PrivilegedAccessGroupEligibilitySchedule } from './privilegedAccessGroupEligibilitySchedule';
import { createPrivilegedAccessGroupEligibilityScheduleInstanceFromDiscriminatorValue, serializePrivilegedAccessGroupEligibilityScheduleInstance, type PrivilegedAccessGroupEligibilityScheduleInstance } from './privilegedAccessGroupEligibilityScheduleInstance';
import { createPrivilegedAccessGroupEligibilityScheduleRequestFromDiscriminatorValue, serializePrivilegedAccessGroupEligibilityScheduleRequest, type PrivilegedAccessGroupEligibilityScheduleRequest } from './privilegedAccessGroupEligibilityScheduleRequest';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPrivilegedAccessGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPrivilegedAccessGroup;
}
export function deserializeIntoPrivilegedAccessGroup(privilegedAccessGroup: PrivilegedAccessGroup | undefined = {} as PrivilegedAccessGroup) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(privilegedAccessGroup),
        "assignmentApprovals": n => { privilegedAccessGroup.assignmentApprovals = n.getCollectionOfObjectValues<Approval>(createApprovalFromDiscriminatorValue); },
        "assignmentScheduleInstances": n => { privilegedAccessGroup.assignmentScheduleInstances = n.getCollectionOfObjectValues<PrivilegedAccessGroupAssignmentScheduleInstance>(createPrivilegedAccessGroupAssignmentScheduleInstanceFromDiscriminatorValue); },
        "assignmentScheduleRequests": n => { privilegedAccessGroup.assignmentScheduleRequests = n.getCollectionOfObjectValues<PrivilegedAccessGroupAssignmentScheduleRequest>(createPrivilegedAccessGroupAssignmentScheduleRequestFromDiscriminatorValue); },
        "assignmentSchedules": n => { privilegedAccessGroup.assignmentSchedules = n.getCollectionOfObjectValues<PrivilegedAccessGroupAssignmentSchedule>(createPrivilegedAccessGroupAssignmentScheduleFromDiscriminatorValue); },
        "eligibilityScheduleInstances": n => { privilegedAccessGroup.eligibilityScheduleInstances = n.getCollectionOfObjectValues<PrivilegedAccessGroupEligibilityScheduleInstance>(createPrivilegedAccessGroupEligibilityScheduleInstanceFromDiscriminatorValue); },
        "eligibilityScheduleRequests": n => { privilegedAccessGroup.eligibilityScheduleRequests = n.getCollectionOfObjectValues<PrivilegedAccessGroupEligibilityScheduleRequest>(createPrivilegedAccessGroupEligibilityScheduleRequestFromDiscriminatorValue); },
        "eligibilitySchedules": n => { privilegedAccessGroup.eligibilitySchedules = n.getCollectionOfObjectValues<PrivilegedAccessGroupEligibilitySchedule>(createPrivilegedAccessGroupEligibilityScheduleFromDiscriminatorValue); },
    }
}
export interface PrivilegedAccessGroup extends Entity, Parsable {
    /**
     * The assignmentApprovals property
     */
    assignmentApprovals?: Approval[];
    /**
     * The instances of assignment schedules to activate a just-in-time access.
     */
    assignmentScheduleInstances?: PrivilegedAccessGroupAssignmentScheduleInstance[];
    /**
     * The schedule requests for operations to create, update, delete, extend, and renew an assignment.
     */
    assignmentScheduleRequests?: PrivilegedAccessGroupAssignmentScheduleRequest[];
    /**
     * The assignment schedules to activate a just-in-time access.
     */
    assignmentSchedules?: PrivilegedAccessGroupAssignmentSchedule[];
    /**
     * The instances of eligibility schedules to activate a just-in-time access.
     */
    eligibilityScheduleInstances?: PrivilegedAccessGroupEligibilityScheduleInstance[];
    /**
     * The schedule requests for operations to create, update, delete, extend, and renew an eligibility.
     */
    eligibilityScheduleRequests?: PrivilegedAccessGroupEligibilityScheduleRequest[];
    /**
     * The eligibility schedules to activate a just-in-time access.
     */
    eligibilitySchedules?: PrivilegedAccessGroupEligibilitySchedule[];
}
export function serializePrivilegedAccessGroup(writer: SerializationWriter, privilegedAccessGroup: PrivilegedAccessGroup | undefined = {} as PrivilegedAccessGroup) : void {
        serializeEntity(writer, privilegedAccessGroup)
        writer.writeCollectionOfObjectValues<Approval>("assignmentApprovals", privilegedAccessGroup.assignmentApprovals, serializeApproval);
        writer.writeCollectionOfObjectValues<PrivilegedAccessGroupAssignmentScheduleInstance>("assignmentScheduleInstances", privilegedAccessGroup.assignmentScheduleInstances, serializePrivilegedAccessGroupAssignmentScheduleInstance);
        writer.writeCollectionOfObjectValues<PrivilegedAccessGroupAssignmentScheduleRequest>("assignmentScheduleRequests", privilegedAccessGroup.assignmentScheduleRequests, serializePrivilegedAccessGroupAssignmentScheduleRequest);
        writer.writeCollectionOfObjectValues<PrivilegedAccessGroupAssignmentSchedule>("assignmentSchedules", privilegedAccessGroup.assignmentSchedules, serializePrivilegedAccessGroupAssignmentSchedule);
        writer.writeCollectionOfObjectValues<PrivilegedAccessGroupEligibilityScheduleInstance>("eligibilityScheduleInstances", privilegedAccessGroup.eligibilityScheduleInstances, serializePrivilegedAccessGroupEligibilityScheduleInstance);
        writer.writeCollectionOfObjectValues<PrivilegedAccessGroupEligibilityScheduleRequest>("eligibilityScheduleRequests", privilegedAccessGroup.eligibilityScheduleRequests, serializePrivilegedAccessGroupEligibilityScheduleRequest);
        writer.writeCollectionOfObjectValues<PrivilegedAccessGroupEligibilitySchedule>("eligibilitySchedules", privilegedAccessGroup.eligibilitySchedules, serializePrivilegedAccessGroupEligibilitySchedule);
}
// tslint:enable
// eslint-enable
