// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createRubricQualitySelectedColumnModelFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoRubricQualitySelectedColumnModel;
}
export function deserializeIntoRubricQualitySelectedColumnModel(rubricQualitySelectedColumnModel: RubricQualitySelectedColumnModel | undefined = {} as RubricQualitySelectedColumnModel) : Record<string, (node: ParseNode) => void> {
    return {
        "columnId": n => { rubricQualitySelectedColumnModel.columnId = n.getStringValue(); },
        "@odata.type": n => { rubricQualitySelectedColumnModel.odataType = n.getStringValue(); },
        "qualityId": n => { rubricQualitySelectedColumnModel.qualityId = n.getStringValue(); },
    }
}
export interface RubricQualitySelectedColumnModel extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * ID of the selected level for this quality.
     */
    columnId?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * ID of the associated quality.
     */
    qualityId?: string;
}
export function serializeRubricQualitySelectedColumnModel(writer: SerializationWriter, rubricQualitySelectedColumnModel: RubricQualitySelectedColumnModel | undefined = {} as RubricQualitySelectedColumnModel) : void {
        writer.writeStringValue("columnId", rubricQualitySelectedColumnModel.columnId);
        writer.writeStringValue("@odata.type", rubricQualitySelectedColumnModel.odataType);
        writer.writeStringValue("qualityId", rubricQualitySelectedColumnModel.qualityId);
        writer.writeAdditionalData(rubricQualitySelectedColumnModel.additionalData);
}
// tslint:enable
// eslint-enable
