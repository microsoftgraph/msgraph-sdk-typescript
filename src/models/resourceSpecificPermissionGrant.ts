// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoDirectoryObject, serializeDirectoryObject, type DirectoryObject } from './directoryObject';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createResourceSpecificPermissionGrantFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoResourceSpecificPermissionGrant;
}
export function deserializeIntoResourceSpecificPermissionGrant(resourceSpecificPermissionGrant: ResourceSpecificPermissionGrant | undefined = {} as ResourceSpecificPermissionGrant) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDirectoryObject(resourceSpecificPermissionGrant),
        "clientAppId": n => { resourceSpecificPermissionGrant.clientAppId = n.getStringValue(); },
        "clientId": n => { resourceSpecificPermissionGrant.clientId = n.getStringValue(); },
        "permission": n => { resourceSpecificPermissionGrant.permission = n.getStringValue(); },
        "permissionType": n => { resourceSpecificPermissionGrant.permissionType = n.getStringValue(); },
        "resourceAppId": n => { resourceSpecificPermissionGrant.resourceAppId = n.getStringValue(); },
    }
}
export interface ResourceSpecificPermissionGrant extends DirectoryObject, Parsable {
    /**
     * ID of the service principal of the Microsoft Entra app that has been granted access. Read-only.
     */
    clientAppId?: string;
    /**
     * ID of the Microsoft Entra app that has been granted access. Read-only.
     */
    clientId?: string;
    /**
     * The name of the resource-specific permission. Read-only.
     */
    permission?: string;
    /**
     * The type of permission. Possible values are: Application, Delegated. Read-only.
     */
    permissionType?: string;
    /**
     * ID of the Microsoft Entra app that is hosting the resource. Read-only.
     */
    resourceAppId?: string;
}
export function serializeResourceSpecificPermissionGrant(writer: SerializationWriter, resourceSpecificPermissionGrant: ResourceSpecificPermissionGrant | undefined = {} as ResourceSpecificPermissionGrant) : void {
        serializeDirectoryObject(writer, resourceSpecificPermissionGrant)
        writer.writeStringValue("clientAppId", resourceSpecificPermissionGrant.clientAppId);
        writer.writeStringValue("clientId", resourceSpecificPermissionGrant.clientId);
        writer.writeStringValue("permission", resourceSpecificPermissionGrant.permission);
        writer.writeStringValue("permissionType", resourceSpecificPermissionGrant.permissionType);
        writer.writeStringValue("resourceAppId", resourceSpecificPermissionGrant.resourceAppId);
}
// tslint:enable
// eslint-enable
