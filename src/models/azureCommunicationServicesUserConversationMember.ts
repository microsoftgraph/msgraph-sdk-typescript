// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoConversationMember, serializeConversationMember, type ConversationMember } from './conversationMember';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AzureCommunicationServicesUserConversationMember extends ConversationMember, Parsable {
    /**
     * Azure Communication Services ID of the user.
     */
    azureCommunicationServicesId?: string;
}
export function createAzureCommunicationServicesUserConversationMemberFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAzureCommunicationServicesUserConversationMember;
}
export function deserializeIntoAzureCommunicationServicesUserConversationMember(azureCommunicationServicesUserConversationMember: AzureCommunicationServicesUserConversationMember | undefined = {} as AzureCommunicationServicesUserConversationMember) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoConversationMember(azureCommunicationServicesUserConversationMember),
        "azureCommunicationServicesId": n => { azureCommunicationServicesUserConversationMember.azureCommunicationServicesId = n.getStringValue(); },
    }
}
export function serializeAzureCommunicationServicesUserConversationMember(writer: SerializationWriter, azureCommunicationServicesUserConversationMember: AzureCommunicationServicesUserConversationMember | undefined = {} as AzureCommunicationServicesUserConversationMember) : void {
        serializeConversationMember(writer, azureCommunicationServicesUserConversationMember)
        writer.writeStringValue("azureCommunicationServicesId", azureCommunicationServicesUserConversationMember.azureCommunicationServicesId);
}
// tslint:enable
// eslint-enable
