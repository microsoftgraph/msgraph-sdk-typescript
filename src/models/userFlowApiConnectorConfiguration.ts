// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createIdentityApiConnectorFromDiscriminatorValue, serializeIdentityApiConnector, type IdentityApiConnector } from './identityApiConnector';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createUserFlowApiConnectorConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUserFlowApiConnectorConfiguration;
}
export function deserializeIntoUserFlowApiConnectorConfiguration(userFlowApiConnectorConfiguration: UserFlowApiConnectorConfiguration | undefined = {} as UserFlowApiConnectorConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { userFlowApiConnectorConfiguration.odataType = n.getStringValue(); },
        "postAttributeCollection": n => { userFlowApiConnectorConfiguration.postAttributeCollection = n.getObjectValue<IdentityApiConnector>(createIdentityApiConnectorFromDiscriminatorValue); },
        "postFederationSignup": n => { userFlowApiConnectorConfiguration.postFederationSignup = n.getObjectValue<IdentityApiConnector>(createIdentityApiConnectorFromDiscriminatorValue); },
    }
}
export function serializeUserFlowApiConnectorConfiguration(writer: SerializationWriter, userFlowApiConnectorConfiguration: UserFlowApiConnectorConfiguration | undefined = {} as UserFlowApiConnectorConfiguration) : void {
    writer.writeStringValue("@odata.type", userFlowApiConnectorConfiguration.odataType);
    writer.writeObjectValue<IdentityApiConnector>("postAttributeCollection", userFlowApiConnectorConfiguration.postAttributeCollection, serializeIdentityApiConnector);
    writer.writeObjectValue<IdentityApiConnector>("postFederationSignup", userFlowApiConnectorConfiguration.postFederationSignup, serializeIdentityApiConnector);
    writer.writeAdditionalData(userFlowApiConnectorConfiguration.additionalData);
}
export interface UserFlowApiConnectorConfiguration extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The postAttributeCollection property
     */
    postAttributeCollection?: IdentityApiConnector;
    /**
     * The postFederationSignup property
     */
    postFederationSignup?: IdentityApiConnector;
}
// tslint:enable
// eslint-enable
