// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createAccessReviewNotificationRecipientScopeFromDiscriminatorValue, serializeAccessReviewNotificationRecipientScope, type AccessReviewNotificationRecipientScope } from './accessReviewNotificationRecipientScope';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AccessReviewNotificationRecipientItem extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Determines the recipient of the notification email.
     */
    notificationRecipientScope?: AccessReviewNotificationRecipientScope;
    /**
     * Indicates the type of access review email to be sent. Supported template type is CompletedAdditionalRecipients, which sends review completion notifications to the recipients.
     */
    notificationTemplateType?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export function createAccessReviewNotificationRecipientItemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAccessReviewNotificationRecipientItem;
}
export function deserializeIntoAccessReviewNotificationRecipientItem(accessReviewNotificationRecipientItem: AccessReviewNotificationRecipientItem | undefined = {} as AccessReviewNotificationRecipientItem) : Record<string, (node: ParseNode) => void> {
    return {
        "notificationRecipientScope": n => { accessReviewNotificationRecipientItem.notificationRecipientScope = n.getObjectValue<AccessReviewNotificationRecipientScope>(createAccessReviewNotificationRecipientScopeFromDiscriminatorValue); },
        "notificationTemplateType": n => { accessReviewNotificationRecipientItem.notificationTemplateType = n.getStringValue(); },
        "@odata.type": n => { accessReviewNotificationRecipientItem.odataType = n.getStringValue(); },
    }
}
export function serializeAccessReviewNotificationRecipientItem(writer: SerializationWriter, accessReviewNotificationRecipientItem: AccessReviewNotificationRecipientItem | undefined = {} as AccessReviewNotificationRecipientItem) : void {
        writer.writeObjectValue<AccessReviewNotificationRecipientScope>("notificationRecipientScope", accessReviewNotificationRecipientItem.notificationRecipientScope, serializeAccessReviewNotificationRecipientScope);
        writer.writeStringValue("notificationTemplateType", accessReviewNotificationRecipientItem.notificationTemplateType);
        writer.writeStringValue("@odata.type", accessReviewNotificationRecipientItem.odataType);
        writer.writeAdditionalData(accessReviewNotificationRecipientItem.additionalData);
}
// tslint:enable
// eslint-enable
