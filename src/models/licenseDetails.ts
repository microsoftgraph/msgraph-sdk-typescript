// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { createServicePlanInfoFromDiscriminatorValue, serializeServicePlanInfo, type ServicePlanInfo } from './servicePlanInfo';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createLicenseDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoLicenseDetails;
}
export function deserializeIntoLicenseDetails(licenseDetails: LicenseDetails | undefined = {} as LicenseDetails) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(licenseDetails),
        "servicePlans": n => { licenseDetails.servicePlans = n.getCollectionOfObjectValues<ServicePlanInfo>(createServicePlanInfoFromDiscriminatorValue); },
        "skuId": n => { licenseDetails.skuId = n.getGuidValue(); },
        "skuPartNumber": n => { licenseDetails.skuPartNumber = n.getStringValue(); },
    }
}
export interface LicenseDetails extends Entity, Parsable {
    /**
     * Information about the service plans assigned with the license. Read-only, Not nullable
     */
    servicePlans?: ServicePlanInfo[];
    /**
     * Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only
     */
    skuId?: Guid;
    /**
     * Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only
     */
    skuPartNumber?: string;
}
export function serializeLicenseDetails(writer: SerializationWriter, licenseDetails: LicenseDetails | undefined = {} as LicenseDetails) : void {
        serializeEntity(writer, licenseDetails)
        writer.writeCollectionOfObjectValues<ServicePlanInfo>("servicePlans", licenseDetails.servicePlans, serializeServicePlanInfo);
        writer.writeGuidValue("skuId", licenseDetails.skuId);
        writer.writeStringValue("skuPartNumber", licenseDetails.skuPartNumber);
}
// tslint:enable
// eslint-enable
