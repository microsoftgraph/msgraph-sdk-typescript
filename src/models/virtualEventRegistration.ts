// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { VirtualEventAttendeeRegistrationStatus } from './virtualEventAttendeeRegistrationStatus';
import { createVirtualEventRegistrationQuestionAnswerFromDiscriminatorValue, serializeVirtualEventRegistrationQuestionAnswer, type VirtualEventRegistrationQuestionAnswer } from './virtualEventRegistrationQuestionAnswer';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createVirtualEventRegistrationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoVirtualEventRegistration;
}
export function deserializeIntoVirtualEventRegistration(virtualEventRegistration: VirtualEventRegistration | undefined = {} as VirtualEventRegistration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(virtualEventRegistration),
        "cancelationDateTime": n => { virtualEventRegistration.cancelationDateTime = n.getDateValue(); },
        "email": n => { virtualEventRegistration.email = n.getStringValue(); },
        "firstName": n => { virtualEventRegistration.firstName = n.getStringValue(); },
        "lastName": n => { virtualEventRegistration.lastName = n.getStringValue(); },
        "registrationDateTime": n => { virtualEventRegistration.registrationDateTime = n.getDateValue(); },
        "registrationQuestionAnswers": n => { virtualEventRegistration.registrationQuestionAnswers = n.getCollectionOfObjectValues<VirtualEventRegistrationQuestionAnswer>(createVirtualEventRegistrationQuestionAnswerFromDiscriminatorValue); },
        "status": n => { virtualEventRegistration.status = n.getEnumValue<VirtualEventAttendeeRegistrationStatus>(VirtualEventAttendeeRegistrationStatus); },
        "userId": n => { virtualEventRegistration.userId = n.getStringValue(); },
    }
}
export function serializeVirtualEventRegistration(writer: SerializationWriter, virtualEventRegistration: VirtualEventRegistration | undefined = {} as VirtualEventRegistration) : void {
    serializeEntity(writer, virtualEventRegistration)
    writer.writeDateValue("cancelationDateTime", virtualEventRegistration.cancelationDateTime);
    writer.writeStringValue("email", virtualEventRegistration.email);
    writer.writeStringValue("firstName", virtualEventRegistration.firstName);
    writer.writeStringValue("lastName", virtualEventRegistration.lastName);
    writer.writeDateValue("registrationDateTime", virtualEventRegistration.registrationDateTime);
    writer.writeCollectionOfObjectValues<VirtualEventRegistrationQuestionAnswer>("registrationQuestionAnswers", virtualEventRegistration.registrationQuestionAnswers, serializeVirtualEventRegistrationQuestionAnswer);
    writer.writeEnumValue<VirtualEventAttendeeRegistrationStatus>("status", virtualEventRegistration.status);
    writer.writeStringValue("userId", virtualEventRegistration.userId);
}
export interface VirtualEventRegistration extends Entity, Parsable {
    /**
     * The cancelationDateTime property
     */
    cancelationDateTime?: Date;
    /**
     * The email property
     */
    email?: string;
    /**
     * The firstName property
     */
    firstName?: string;
    /**
     * The lastName property
     */
    lastName?: string;
    /**
     * The registrationDateTime property
     */
    registrationDateTime?: Date;
    /**
     * The registrationQuestionAnswers property
     */
    registrationQuestionAnswers?: VirtualEventRegistrationQuestionAnswer[];
    /**
     * The status property
     */
    status?: VirtualEventAttendeeRegistrationStatus;
    /**
     * The userId property
     */
    userId?: string;
}
// tslint:enable
// eslint-enable
