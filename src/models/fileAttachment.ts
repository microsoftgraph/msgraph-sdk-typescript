// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoAttachment, serializeAttachment, type Attachment } from './attachment';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createFileAttachmentFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoFileAttachment;
}
export function deserializeIntoFileAttachment(fileAttachment: FileAttachment | undefined = {} as FileAttachment) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAttachment(fileAttachment),
        "contentBytes": n => { fileAttachment.contentBytes = n.getStringValue(); },
        "contentId": n => { fileAttachment.contentId = n.getStringValue(); },
        "contentLocation": n => { fileAttachment.contentLocation = n.getStringValue(); },
    }
}
export interface FileAttachment extends Attachment, Parsable {
    /**
     * The base64-encoded contents of the file.
     */
    contentBytes?: string;
    /**
     * The ID of the attachment in the Exchange store.
     */
    contentId?: string;
    /**
     * Don't use this property as it isn't supported.
     */
    contentLocation?: string;
}
export function serializeFileAttachment(writer: SerializationWriter, fileAttachment: FileAttachment | undefined = {} as FileAttachment) : void {
        serializeAttachment(writer, fileAttachment)
        writer.writeStringValue("contentBytes", fileAttachment.contentBytes);
        writer.writeStringValue("contentId", fileAttachment.contentId);
        writer.writeStringValue("contentLocation", fileAttachment.contentLocation);
}
// tslint:enable
// eslint-enable
