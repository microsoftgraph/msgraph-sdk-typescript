// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoCustomExtensionEndpointConfiguration, serializeCustomExtensionEndpointConfiguration, type CustomExtensionEndpointConfiguration } from './customExtensionEndpointConfiguration';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createLogicAppTriggerEndpointConfigurationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoLogicAppTriggerEndpointConfiguration;
}
export function deserializeIntoLogicAppTriggerEndpointConfiguration(logicAppTriggerEndpointConfiguration: LogicAppTriggerEndpointConfiguration | undefined = {} as LogicAppTriggerEndpointConfiguration) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCustomExtensionEndpointConfiguration(logicAppTriggerEndpointConfiguration),
        "logicAppWorkflowName": n => { logicAppTriggerEndpointConfiguration.logicAppWorkflowName = n.getStringValue(); },
        "resourceGroupName": n => { logicAppTriggerEndpointConfiguration.resourceGroupName = n.getStringValue(); },
        "subscriptionId": n => { logicAppTriggerEndpointConfiguration.subscriptionId = n.getStringValue(); },
        "url": n => { logicAppTriggerEndpointConfiguration.url = n.getStringValue(); },
    }
}
export interface LogicAppTriggerEndpointConfiguration extends CustomExtensionEndpointConfiguration, Parsable {
    /**
     * The name of the logic app.
     */
    logicAppWorkflowName?: string;
    /**
     * The Azure resource group name for the logic app.
     */
    resourceGroupName?: string;
    /**
     * Identifier of the Azure subscription for the logic app.
     */
    subscriptionId?: string;
    /**
     * The URL to the logic app endpoint that will be triggered. Only required for app-only token scenarios where app is creating a customCalloutExtension without a signed-in user.
     */
    url?: string;
}
export function serializeLogicAppTriggerEndpointConfiguration(writer: SerializationWriter, logicAppTriggerEndpointConfiguration: LogicAppTriggerEndpointConfiguration | undefined = {} as LogicAppTriggerEndpointConfiguration) : void {
    serializeCustomExtensionEndpointConfiguration(writer, logicAppTriggerEndpointConfiguration)
    writer.writeStringValue("logicAppWorkflowName", logicAppTriggerEndpointConfiguration.logicAppWorkflowName);
    writer.writeStringValue("resourceGroupName", logicAppTriggerEndpointConfiguration.resourceGroupName);
    writer.writeStringValue("subscriptionId", logicAppTriggerEndpointConfiguration.subscriptionId);
    writer.writeStringValue("url", logicAppTriggerEndpointConfiguration.url);
}
// tslint:enable
// eslint-enable
