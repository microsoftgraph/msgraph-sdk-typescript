// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from './baseCollectionPaginationCountResponse';
import { createPayloadFromDiscriminatorValue, serializePayload, type Payload } from './payload';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createPayloadCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoPayloadCollectionResponse;
}
export function deserializeIntoPayloadCollectionResponse(payloadCollectionResponse: PayloadCollectionResponse | undefined = {} as PayloadCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(payloadCollectionResponse),
        "value": n => { payloadCollectionResponse.value = n.getCollectionOfObjectValues<Payload>(createPayloadFromDiscriminatorValue); },
    }
}
export interface PayloadCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Payload[];
}
export function serializePayloadCollectionResponse(writer: SerializationWriter, payloadCollectionResponse: PayloadCollectionResponse | undefined = {} as PayloadCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, payloadCollectionResponse)
    writer.writeCollectionOfObjectValues<Payload>("value", payloadCollectionResponse.value, serializePayload);
}
// tslint:enable
// eslint-enable
