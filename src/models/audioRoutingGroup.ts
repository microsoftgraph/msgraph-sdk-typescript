// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { RoutingMode } from './routingMode';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AudioRoutingGroup extends Entity, Parsable {
    /**
     * List of receiving participant ids.
     */
    receivers?: string[];
    /**
     * The routingMode property
     */
    routingMode?: RoutingMode;
    /**
     * List of source participant ids.
     */
    sources?: string[];
}
export function createAudioRoutingGroupFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAudioRoutingGroup;
}
export function deserializeIntoAudioRoutingGroup(audioRoutingGroup: AudioRoutingGroup | undefined = {} as AudioRoutingGroup) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(audioRoutingGroup),
        "receivers": n => { audioRoutingGroup.receivers = n.getCollectionOfPrimitiveValues<string>(); },
        "routingMode": n => { audioRoutingGroup.routingMode = n.getEnumValue<RoutingMode>(RoutingMode); },
        "sources": n => { audioRoutingGroup.sources = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export function serializeAudioRoutingGroup(writer: SerializationWriter, audioRoutingGroup: AudioRoutingGroup | undefined = {} as AudioRoutingGroup) : void {
    serializeEntity(writer, audioRoutingGroup)
    writer.writeCollectionOfPrimitiveValues<string>("receivers", audioRoutingGroup.receivers);
    writer.writeEnumValue<RoutingMode>("routingMode", audioRoutingGroup.routingMode);
    writer.writeCollectionOfPrimitiveValues<string>("sources", audioRoutingGroup.sources);
}
// tslint:enable
// eslint-enable
