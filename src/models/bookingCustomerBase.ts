// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { deserializeIntoBookingCustomer } from './bookingCustomer';
import { deserializeIntoEntity, serializeEntity, type Entity } from './entity';
import { type BookingCustomer } from './index';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BookingCustomerBase extends Entity, Parsable {
}
export function createBookingCustomerBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.bookingCustomer":
                    return deserializeIntoBookingCustomer;
            }
        }
    }
    return deserializeIntoBookingCustomerBase;
}
export function deserializeIntoBookingCustomerBase(bookingCustomerBase: BookingCustomerBase | undefined = {} as BookingCustomerBase) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(bookingCustomerBase),
    }
}
export function serializeBookingCustomerBase(writer: SerializationWriter, bookingCustomerBase: BookingCustomerBase | undefined = {} as BookingCustomerBase) : void {
        serializeEntity(writer, bookingCustomerBase)
}
// tslint:enable
// eslint-enable
