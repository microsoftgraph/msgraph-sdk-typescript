// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createMessageFromDiscriminatorValue, serializeMessage, type Message } from '../../../../../../../models/message';
import { createRecipientFromDiscriminatorValue, serializeRecipient, type Recipient } from '../../../../../../../models/recipient';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createCreateForwardPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCreateForwardPostRequestBody;
}
export interface CreateForwardPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The Comment property
     */
    comment?: string;
    /**
     * The Message property
     */
    message?: Message;
    /**
     * The ToRecipients property
     */
    toRecipients?: Recipient[];
}
export function deserializeIntoCreateForwardPostRequestBody(createForwardPostRequestBody: CreateForwardPostRequestBody | undefined = {} as CreateForwardPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "comment": n => { createForwardPostRequestBody.comment = n.getStringValue(); },
        "message": n => { createForwardPostRequestBody.message = n.getObjectValue<Message>(createMessageFromDiscriminatorValue); },
        "toRecipients": n => { createForwardPostRequestBody.toRecipients = n.getCollectionOfObjectValues<Recipient>(createRecipientFromDiscriminatorValue); },
    }
}
export function serializeCreateForwardPostRequestBody(writer: SerializationWriter, createForwardPostRequestBody: CreateForwardPostRequestBody | undefined = {} as CreateForwardPostRequestBody) : void {
        writer.writeStringValue("Comment", createForwardPostRequestBody.comment);
        writer.writeObjectValue<Message>("Message", createForwardPostRequestBody.message, );
        writer.writeCollectionOfObjectValues<Recipient>("ToRecipients", createForwardPostRequestBody.toRecipients, );
        writer.writeAdditionalData(createForwardPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
