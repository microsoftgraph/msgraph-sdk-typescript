// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface CopyNotebookPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The groupId property
     */
    groupId?: string;
    /**
     * The notebookFolder property
     */
    notebookFolder?: string;
    /**
     * The renameAs property
     */
    renameAs?: string;
    /**
     * The siteCollectionId property
     */
    siteCollectionId?: string;
    /**
     * The siteId property
     */
    siteId?: string;
}
export function createCopyNotebookPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoCopyNotebookPostRequestBody;
}
export function deserializeIntoCopyNotebookPostRequestBody(copyNotebookPostRequestBody: CopyNotebookPostRequestBody | undefined = {} as CopyNotebookPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "groupId": n => { copyNotebookPostRequestBody.groupId = n.getStringValue(); },
        "notebookFolder": n => { copyNotebookPostRequestBody.notebookFolder = n.getStringValue(); },
        "renameAs": n => { copyNotebookPostRequestBody.renameAs = n.getStringValue(); },
        "siteCollectionId": n => { copyNotebookPostRequestBody.siteCollectionId = n.getStringValue(); },
        "siteId": n => { copyNotebookPostRequestBody.siteId = n.getStringValue(); },
    }
}
export function serializeCopyNotebookPostRequestBody(writer: SerializationWriter, copyNotebookPostRequestBody: CopyNotebookPostRequestBody | undefined = {} as CopyNotebookPostRequestBody) : void {
        writer.writeStringValue("groupId", copyNotebookPostRequestBody.groupId);
        writer.writeStringValue("notebookFolder", copyNotebookPostRequestBody.notebookFolder);
        writer.writeStringValue("renameAs", copyNotebookPostRequestBody.renameAs);
        writer.writeStringValue("siteCollectionId", copyNotebookPostRequestBody.siteCollectionId);
        writer.writeStringValue("siteId", copyNotebookPostRequestBody.siteId);
        writer.writeAdditionalData(copyNotebookPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
