// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Duration, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createSetUserPreferredPresencePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoSetUserPreferredPresencePostRequestBody;
}
export function deserializeIntoSetUserPreferredPresencePostRequestBody(setUserPreferredPresencePostRequestBody: SetUserPreferredPresencePostRequestBody | undefined = {} as SetUserPreferredPresencePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "activity": n => { setUserPreferredPresencePostRequestBody.activity = n.getStringValue(); },
        "availability": n => { setUserPreferredPresencePostRequestBody.availability = n.getStringValue(); },
        "expirationDuration": n => { setUserPreferredPresencePostRequestBody.expirationDuration = n.getDurationValue(); },
    }
}
export function serializeSetUserPreferredPresencePostRequestBody(writer: SerializationWriter, setUserPreferredPresencePostRequestBody: SetUserPreferredPresencePostRequestBody | undefined = {} as SetUserPreferredPresencePostRequestBody) : void {
        writer.writeStringValue("activity", setUserPreferredPresencePostRequestBody.activity);
        writer.writeStringValue("availability", setUserPreferredPresencePostRequestBody.availability);
        writer.writeDurationValue("expirationDuration", setUserPreferredPresencePostRequestBody.expirationDuration);
        writer.writeAdditionalData(setUserPreferredPresencePostRequestBody.additionalData);
}
export interface SetUserPreferredPresencePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * The activity property
     */
    activity?: string;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The availability property
     */
    availability?: string;
    /**
     * The expirationDuration property
     */
    expirationDuration?: Duration;
}
// tslint:enable
// eslint-enable
