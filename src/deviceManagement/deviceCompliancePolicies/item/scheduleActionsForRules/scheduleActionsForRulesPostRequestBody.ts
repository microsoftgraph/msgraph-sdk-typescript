// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createDeviceComplianceScheduledActionForRuleFromDiscriminatorValue, serializeDeviceComplianceScheduledActionForRule, type DeviceComplianceScheduledActionForRule } from '../../../../models/deviceComplianceScheduledActionForRule';
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export function createScheduleActionsForRulesPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoScheduleActionsForRulesPostRequestBody;
}
export function deserializeIntoScheduleActionsForRulesPostRequestBody(scheduleActionsForRulesPostRequestBody: ScheduleActionsForRulesPostRequestBody | undefined = {} as ScheduleActionsForRulesPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "deviceComplianceScheduledActionForRules": n => { scheduleActionsForRulesPostRequestBody.deviceComplianceScheduledActionForRules = n.getCollectionOfObjectValues<DeviceComplianceScheduledActionForRule>(createDeviceComplianceScheduledActionForRuleFromDiscriminatorValue); },
    }
}
export interface ScheduleActionsForRulesPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The deviceComplianceScheduledActionForRules property
     */
    deviceComplianceScheduledActionForRules?: DeviceComplianceScheduledActionForRule[];
}
export function serializeScheduleActionsForRulesPostRequestBody(writer: SerializationWriter, scheduleActionsForRulesPostRequestBody: ScheduleActionsForRulesPostRequestBody | undefined = {} as ScheduleActionsForRulesPostRequestBody) : void {
        writer.writeCollectionOfObjectValues<DeviceComplianceScheduledActionForRule>("deviceComplianceScheduledActionForRules", scheduleActionsForRulesPostRequestBody.deviceComplianceScheduledActionForRules, );
        writer.writeAdditionalData(scheduleActionsForRulesPostRequestBody.additionalData);
}
// tslint:enable
// eslint-enable
