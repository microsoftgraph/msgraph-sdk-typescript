import { deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, type BaseCollectionPaginationCountResponse } from '../../models/baseCollectionPaginationCountResponse';
import { createRolePermissionFromDiscriminatorValue, serializeRolePermission, type RolePermission } from '../../models/rolePermission';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function createGetEffectivePermissionsWithScopeResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoGetEffectivePermissionsWithScopeResponse;
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function deserializeIntoGetEffectivePermissionsWithScopeResponse(getEffectivePermissionsWithScopeResponse: GetEffectivePermissionsWithScopeResponse | undefined = {} as GetEffectivePermissionsWithScopeResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(getEffectivePermissionsWithScopeResponse),
        "value": n => { getEffectivePermissionsWithScopeResponse.value = n.getCollectionOfObjectValues<RolePermission>(createRolePermissionFromDiscriminatorValue); },
    }
}
export interface GetEffectivePermissionsWithScopeResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RolePermission[];
}
// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
export function serializeGetEffectivePermissionsWithScopeResponse(writer: SerializationWriter, getEffectivePermissionsWithScopeResponse: GetEffectivePermissionsWithScopeResponse | undefined = {} as GetEffectivePermissionsWithScopeResponse) : void {
        serializeBaseCollectionPaginationCountResponse(writer, getEffectivePermissionsWithScopeResponse)
        writer.writeCollectionOfObjectValues<RolePermission>("value", getEffectivePermissionsWithScopeResponse.value, );
}
