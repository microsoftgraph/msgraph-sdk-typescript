/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UploadPostRequestBody}
 */
// @ts-ignore
export function createUploadPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUploadPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param UploadPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUploadPostRequestBody(uploadPostRequestBody: Partial<UploadPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { uploadPostRequestBody.backingStoreEnabled = true; },
        "sha256FileHash": n => { uploadPostRequestBody.sha256FileHash = n.getStringValue(); },
        "uploadUrl": n => { uploadPostRequestBody.uploadUrl = n.getStringValue(); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UploadPostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUploadPostRequestBody(writer: SerializationWriter, uploadPostRequestBody: Partial<UploadPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!uploadPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("sha256FileHash", uploadPostRequestBody.sha256FileHash);
    writer.writeStringValue("uploadUrl", uploadPostRequestBody.uploadUrl);
    writer.writeAdditionalData(uploadPostRequestBody.additionalData);
}
export interface UploadPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The sha256FileHash property
     */
    sha256FileHash?: string | null;
    /**
     * The uploadUrl property
     */
    uploadUrl?: string | null;
}
/**
 * Provides operations to call the upload method.
 */
export interface UploadRequestBuilder extends BaseRequestBuilder<UploadRequestBuilder> {
    /**
     * Append additional certificate authority details to a certificateBasedAuthPki resource. Only one operation can run at a time and this operation can take up to 30 minutes to complete. To know whether another upload is in progress, call the Get certificateBasedAuthPki. The status property will have the value running.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/certificatebasedauthpki-upload?view=graph-rest-1.0|Find more info here}
     */
     post(body: UploadPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Append additional certificate authority details to a certificateBasedAuthPki resource. Only one operation can run at a time and this operation can take up to 30 minutes to complete. To know whether another upload is in progress, call the Get certificateBasedAuthPki. The status property will have the value running.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UploadPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const UploadRequestBuilderUriTemplate = "{+baseurl}/directory/publicKeyInfrastructure/certificateBasedAuthConfigurations/{certificateBasedAuthPki%2Did}/upload";
/**
 * Metadata for all the requests in the request builder.
 */
export const UploadRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: UploadRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUploadPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
