/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDirectoryObjectFromDiscriminatorValue, type DirectoryObject } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CheckMemberGroupsRequestBuilderRequestsMetadata, type CheckMemberGroupsRequestBuilder } from './checkMemberGroups/index.js';
// @ts-ignore
import { CheckMemberObjectsRequestBuilderRequestsMetadata, type CheckMemberObjectsRequestBuilder } from './checkMemberObjects/index.js';
// @ts-ignore
import { GetMemberGroupsRequestBuilderRequestsMetadata, type GetMemberGroupsRequestBuilder } from './getMemberGroups/index.js';
// @ts-ignore
import { GetMemberObjectsRequestBuilderRequestsMetadata, type GetMemberObjectsRequestBuilder } from './getMemberObjects/index.js';
// @ts-ignore
import { GraphAdministrativeUnitRequestBuilderRequestsMetadata, type GraphAdministrativeUnitRequestBuilder } from './graphAdministrativeUnit/index.js';
// @ts-ignore
import { GraphApplicationRequestBuilderRequestsMetadata, type GraphApplicationRequestBuilder } from './graphApplication/index.js';
// @ts-ignore
import { GraphDeviceRequestBuilderRequestsMetadata, type GraphDeviceRequestBuilder } from './graphDevice/index.js';
// @ts-ignore
import { GraphGroupRequestBuilderRequestsMetadata, type GraphGroupRequestBuilder } from './graphGroup/index.js';
// @ts-ignore
import { GraphServicePrincipalRequestBuilderRequestsMetadata, type GraphServicePrincipalRequestBuilder } from './graphServicePrincipal/index.js';
// @ts-ignore
import { GraphUserRequestBuilderRequestsMetadata, type GraphUserRequestBuilder } from './graphUser/index.js';
// @ts-ignore
import { RestoreRequestBuilderRequestsMetadata, type RestoreRequestBuilder } from './restore/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the deletedItems property of the microsoft.graph.directory entity.
 */
export interface DirectoryObjectItemRequestBuilder extends BaseRequestBuilder<DirectoryObjectItemRequestBuilder> {
    /**
     * Provides operations to call the checkMemberGroups method.
     */
    get checkMemberGroups(): CheckMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the checkMemberObjects method.
     */
    get checkMemberObjects(): CheckMemberObjectsRequestBuilder;
    /**
     * Provides operations to call the getMemberGroups method.
     */
    get getMemberGroups(): GetMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the getMemberObjects method.
     */
    get getMemberObjects(): GetMemberObjectsRequestBuilder;
    /**
     * Casts the previous resource to administrativeUnit.
     */
    get graphAdministrativeUnit(): GraphAdministrativeUnitRequestBuilder;
    /**
     * Casts the previous resource to application.
     */
    get graphApplication(): GraphApplicationRequestBuilder;
    /**
     * Casts the previous resource to device.
     */
    get graphDevice(): GraphDeviceRequestBuilder;
    /**
     * Casts the previous resource to group.
     */
    get graphGroup(): GraphGroupRequestBuilder;
    /**
     * Casts the previous resource to servicePrincipal.
     */
    get graphServicePrincipal(): GraphServicePrincipalRequestBuilder;
    /**
     * Casts the previous resource to user.
     */
    get graphUser(): GraphUserRequestBuilder;
    /**
     * Provides operations to call the restore method.
     */
    get restore(): RestoreRequestBuilder;
    /**
     * Permanently delete a recently deleted application, group, servicePrincipal, or user object from deleted items. After an item is permanently deleted, it cannot be restored. Administrative units cannot be permanently deleted by using the deletedItems API. Soft-deleted administrative units will be permanently deleted 30 days after initial deletion unless they are restored.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/directory-deleteditems-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties of a recently deleted application, group, servicePrincipal, administrative unit, or user object from deleted items.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DirectoryObject>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/directory-deleteditems-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<DirectoryObjectItemRequestBuilderGetQueryParameters> | undefined) : Promise<DirectoryObject | undefined>;
    /**
     * Permanently delete a recently deleted application, group, servicePrincipal, or user object from deleted items. After an item is permanently deleted, it cannot be restored. Administrative units cannot be permanently deleted by using the deletedItems API. Soft-deleted administrative units will be permanently deleted 30 days after initial deletion unless they are restored.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties of a recently deleted application, group, servicePrincipal, administrative unit, or user object from deleted items.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DirectoryObjectItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties of a recently deleted application, group, servicePrincipal, administrative unit, or user object from deleted items.
 */
export interface DirectoryObjectItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const DirectoryObjectItemRequestBuilderUriTemplate = "{+baseurl}/directory/deletedItems/{directoryObject%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DirectoryObjectItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DirectoryObjectItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DirectoryObjectItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    checkMemberGroups: {
        requestsMetadata: CheckMemberGroupsRequestBuilderRequestsMetadata,
    },
    checkMemberObjects: {
        requestsMetadata: CheckMemberObjectsRequestBuilderRequestsMetadata,
    },
    getMemberGroups: {
        requestsMetadata: GetMemberGroupsRequestBuilderRequestsMetadata,
    },
    getMemberObjects: {
        requestsMetadata: GetMemberObjectsRequestBuilderRequestsMetadata,
    },
    graphAdministrativeUnit: {
        requestsMetadata: GraphAdministrativeUnitRequestBuilderRequestsMetadata,
    },
    graphApplication: {
        requestsMetadata: GraphApplicationRequestBuilderRequestsMetadata,
    },
    graphDevice: {
        requestsMetadata: GraphDeviceRequestBuilderRequestsMetadata,
    },
    graphGroup: {
        requestsMetadata: GraphGroupRequestBuilderRequestsMetadata,
    },
    graphServicePrincipal: {
        requestsMetadata: GraphServicePrincipalRequestBuilderRequestsMetadata,
    },
    graphUser: {
        requestsMetadata: GraphUserRequestBuilderRequestsMetadata,
    },
    restore: {
        requestsMetadata: RestoreRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DirectoryObjectItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DirectoryObjectItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: DirectoryObjectItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDirectoryObjectFromDiscriminatorValue,
        queryParametersMapper: DirectoryObjectItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
