/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createRiskyServicePrincipalHistoryItemCollectionResponseFromDiscriminatorValue, createRiskyServicePrincipalHistoryItemFromDiscriminatorValue, serializeRiskyServicePrincipalHistoryItem, type RiskyServicePrincipalHistoryItem, type RiskyServicePrincipalHistoryItemCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { RiskyServicePrincipalHistoryItemItemRequestBuilderRequestsMetadata, type RiskyServicePrincipalHistoryItemItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the history property of the microsoft.graph.riskyServicePrincipal entity.
 */
export interface HistoryRequestBuilder extends BaseRequestBuilder<HistoryRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the history property of the microsoft.graph.riskyServicePrincipal entity.
     * @param riskyServicePrincipalHistoryItemId The unique identifier of riskyServicePrincipalHistoryItem
     * @returns {RiskyServicePrincipalHistoryItemItemRequestBuilder}
     */
     byRiskyServicePrincipalHistoryItemId(riskyServicePrincipalHistoryItemId: string) : RiskyServicePrincipalHistoryItemItemRequestBuilder;
    /**
     * Get the risk history of a riskyServicePrincipal object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RiskyServicePrincipalHistoryItemCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/riskyserviceprincipal-list-history?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<HistoryRequestBuilderGetQueryParameters> | undefined) : Promise<RiskyServicePrincipalHistoryItemCollectionResponse | undefined>;
    /**
     * Create new navigation property to history for identityProtection
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RiskyServicePrincipalHistoryItem>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: RiskyServicePrincipalHistoryItem, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RiskyServicePrincipalHistoryItem | undefined>;
    /**
     * Get the risk history of a riskyServicePrincipal object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<HistoryRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to history for identityProtection
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: RiskyServicePrincipalHistoryItem, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get the risk history of a riskyServicePrincipal object.
 */
export interface HistoryRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const HistoryRequestBuilderUriTemplate = "{+baseurl}/identityProtection/riskyServicePrincipals/{riskyServicePrincipal%2Did}/history{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the history property of the microsoft.graph.riskyServicePrincipal entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    History: "history",
} as const;
/**
 * Provides operations to manage the history property of the microsoft.graph.riskyServicePrincipal entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AppId: "appId",
    AppIdDesc: "appId desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    IsEnabled: "isEnabled",
    IsEnabledDesc: "isEnabled desc",
    IsProcessing: "isProcessing",
    IsProcessingDesc: "isProcessing desc",
    RiskDetail: "riskDetail",
    RiskDetailDesc: "riskDetail desc",
    RiskLastUpdatedDateTime: "riskLastUpdatedDateTime",
    RiskLastUpdatedDateTimeDesc: "riskLastUpdatedDateTime desc",
    RiskLevel: "riskLevel",
    RiskLevelDesc: "riskLevel desc",
    RiskState: "riskState",
    RiskStateDesc: "riskState desc",
    ServicePrincipalType: "servicePrincipalType",
    ServicePrincipalTypeDesc: "servicePrincipalType desc",
    Activity: "activity",
    ActivityDesc: "activity desc",
    InitiatedBy: "initiatedBy",
    InitiatedByDesc: "initiatedBy desc",
} as const;
/**
 * Provides operations to manage the history property of the microsoft.graph.riskyServicePrincipal entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AppId: "appId",
    DisplayName: "displayName",
    IsEnabled: "isEnabled",
    IsProcessing: "isProcessing",
    RiskDetail: "riskDetail",
    RiskLastUpdatedDateTime: "riskLastUpdatedDateTime",
    RiskLevel: "riskLevel",
    RiskState: "riskState",
    ServicePrincipalType: "servicePrincipalType",
    Activity: "activity",
    InitiatedBy: "initiatedBy",
    History: "history",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const HistoryRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const HistoryRequestBuilderNavigationMetadata: Record<Exclude<keyof HistoryRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byRiskyServicePrincipalHistoryItemId: {
        requestsMetadata: RiskyServicePrincipalHistoryItemItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["riskyServicePrincipalHistoryItem%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const HistoryRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: HistoryRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRiskyServicePrincipalHistoryItemCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: HistoryRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: HistoryRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRiskyServicePrincipalHistoryItemFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRiskyServicePrincipalHistoryItem,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
