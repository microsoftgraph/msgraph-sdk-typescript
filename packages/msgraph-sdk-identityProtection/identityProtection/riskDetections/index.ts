/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createRiskDetectionCollectionResponseFromDiscriminatorValue, createRiskDetectionFromDiscriminatorValue, serializeRiskDetection, type RiskDetection, type RiskDetectionCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { RiskDetectionItemRequestBuilderRequestsMetadata, type RiskDetectionItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the riskDetections property of the microsoft.graph.identityProtectionRoot entity.
 */
export interface RiskDetectionsRequestBuilder extends BaseRequestBuilder<RiskDetectionsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the riskDetections property of the microsoft.graph.identityProtectionRoot entity.
     * @param riskDetectionId The unique identifier of riskDetection
     * @returns {RiskDetectionItemRequestBuilder}
     */
     byRiskDetectionId(riskDetectionId: string) : RiskDetectionItemRequestBuilder;
    /**
     * Get a list of the riskDetection objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RiskDetectionCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/riskdetection-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<RiskDetectionsRequestBuilderGetQueryParameters> | undefined) : Promise<RiskDetectionCollectionResponse | undefined>;
    /**
     * Create new navigation property to riskDetections for identityProtection
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RiskDetection>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: RiskDetection, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RiskDetection | undefined>;
    /**
     * Get a list of the riskDetection objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<RiskDetectionsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to riskDetections for identityProtection
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: RiskDetection, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the riskDetection objects and their properties.
 */
export interface RiskDetectionsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const RiskDetectionsRequestBuilderUriTemplate = "{+baseurl}/identityProtection/riskDetections{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the riskDetections property of the microsoft.graph.identityProtectionRoot entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the riskDetections property of the microsoft.graph.identityProtectionRoot entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    Activity: "activity",
    ActivityDesc: "activity desc",
    ActivityDateTime: "activityDateTime",
    ActivityDateTimeDesc: "activityDateTime desc",
    AdditionalInfo: "additionalInfo",
    AdditionalInfoDesc: "additionalInfo desc",
    CorrelationId: "correlationId",
    CorrelationIdDesc: "correlationId desc",
    DetectedDateTime: "detectedDateTime",
    DetectedDateTimeDesc: "detectedDateTime desc",
    DetectionTimingType: "detectionTimingType",
    DetectionTimingTypeDesc: "detectionTimingType desc",
    IpAddress: "ipAddress",
    IpAddressDesc: "ipAddress desc",
    LastUpdatedDateTime: "lastUpdatedDateTime",
    LastUpdatedDateTimeDesc: "lastUpdatedDateTime desc",
    Location: "location",
    LocationDesc: "location desc",
    RequestId: "requestId",
    RequestIdDesc: "requestId desc",
    RiskDetail: "riskDetail",
    RiskDetailDesc: "riskDetail desc",
    RiskEventType: "riskEventType",
    RiskEventTypeDesc: "riskEventType desc",
    RiskLevel: "riskLevel",
    RiskLevelDesc: "riskLevel desc",
    RiskState: "riskState",
    RiskStateDesc: "riskState desc",
    Source: "source",
    SourceDesc: "source desc",
    TokenIssuerType: "tokenIssuerType",
    TokenIssuerTypeDesc: "tokenIssuerType desc",
    UserDisplayName: "userDisplayName",
    UserDisplayNameDesc: "userDisplayName desc",
    UserId: "userId",
    UserIdDesc: "userId desc",
    UserPrincipalName: "userPrincipalName",
    UserPrincipalNameDesc: "userPrincipalName desc",
} as const;
/**
 * Provides operations to manage the riskDetections property of the microsoft.graph.identityProtectionRoot entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Activity: "activity",
    ActivityDateTime: "activityDateTime",
    AdditionalInfo: "additionalInfo",
    CorrelationId: "correlationId",
    DetectedDateTime: "detectedDateTime",
    DetectionTimingType: "detectionTimingType",
    IpAddress: "ipAddress",
    LastUpdatedDateTime: "lastUpdatedDateTime",
    Location: "location",
    RequestId: "requestId",
    RiskDetail: "riskDetail",
    RiskEventType: "riskEventType",
    RiskLevel: "riskLevel",
    RiskState: "riskState",
    Source: "source",
    TokenIssuerType: "tokenIssuerType",
    UserDisplayName: "userDisplayName",
    UserId: "userId",
    UserPrincipalName: "userPrincipalName",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const RiskDetectionsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const RiskDetectionsRequestBuilderNavigationMetadata: Record<Exclude<keyof RiskDetectionsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byRiskDetectionId: {
        requestsMetadata: RiskDetectionItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["riskDetection%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const RiskDetectionsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: RiskDetectionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRiskDetectionCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: RiskDetectionsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: RiskDetectionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRiskDetectionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRiskDetection,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
