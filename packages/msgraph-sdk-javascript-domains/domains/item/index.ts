/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDomainFromDiscriminatorValue, serializeDomain, type Domain } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { DomainNameReferencesRequestBuilderNavigationMetadata, DomainNameReferencesRequestBuilderRequestsMetadata, DomainNameReferencesRequestBuilderUriTemplate, type DomainNameReferencesRequestBuilder } from './domainNameReferences/';
import { FederationConfigurationRequestBuilderNavigationMetadata, FederationConfigurationRequestBuilderRequestsMetadata, FederationConfigurationRequestBuilderUriTemplate, type FederationConfigurationRequestBuilder } from './federationConfiguration/';
import { ForceDeleteRequestBuilderRequestsMetadata, ForceDeleteRequestBuilderUriTemplate, type ForceDeleteRequestBuilder } from './forceDelete/';
import { PromoteRequestBuilderRequestsMetadata, PromoteRequestBuilderUriTemplate, type PromoteRequestBuilder } from './promote/';
import { ServiceConfigurationRecordsRequestBuilderNavigationMetadata, ServiceConfigurationRecordsRequestBuilderRequestsMetadata, ServiceConfigurationRecordsRequestBuilderUriTemplate, type ServiceConfigurationRecordsRequestBuilder } from './serviceConfigurationRecords/';
import { type VerificationDnsRecordsRequestBuilder, VerificationDnsRecordsRequestBuilderNavigationMetadata, VerificationDnsRecordsRequestBuilderRequestsMetadata, VerificationDnsRecordsRequestBuilderUriTemplate } from './verificationDnsRecords/';
import { type VerifyRequestBuilder, VerifyRequestBuilderRequestsMetadata, VerifyRequestBuilderUriTemplate } from './verify/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of domain entities.
 */
export interface DomainItemRequestBuilder extends BaseRequestBuilder<DomainItemRequestBuilder> {
    /**
     * Provides operations to manage the domainNameReferences property of the microsoft.graph.domain entity.
     */
    get domainNameReferences(): DomainNameReferencesRequestBuilder;
    /**
     * Provides operations to manage the federationConfiguration property of the microsoft.graph.domain entity.
     */
    get federationConfiguration(): FederationConfigurationRequestBuilder;
    /**
     * Provides operations to call the forceDelete method.
     */
    get forceDelete(): ForceDeleteRequestBuilder;
    /**
     * Provides operations to call the promote method.
     */
    get promote(): PromoteRequestBuilder;
    /**
     * Provides operations to manage the serviceConfigurationRecords property of the microsoft.graph.domain entity.
     */
    get serviceConfigurationRecords(): ServiceConfigurationRecordsRequestBuilder;
    /**
     * Provides operations to manage the verificationDnsRecords property of the microsoft.graph.domain entity.
     */
    get verificationDnsRecords(): VerificationDnsRecordsRequestBuilder;
    /**
     * Provides operations to call the verify method.
     */
    get verify(): VerifyRequestBuilder;
    /**
     * Deletes a domain from a tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/domain-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties and relationships of domain object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Domain
     * @see {@link https://learn.microsoft.com/graph/api/domain-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<DomainItemRequestBuilderGetQueryParameters> | undefined) : Promise<Domain | undefined>;
    /**
     * Update the properties of domain object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Domain
     * @see {@link https://learn.microsoft.com/graph/api/domain-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: Domain, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Domain | undefined>;
    /**
     * Deletes a domain from a tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of domain object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DomainItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of domain object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: Domain, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of domain object.
 */
export interface DomainItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DomainItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DomainItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DomainItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    domainNameReferences: {
        uriTemplate: DomainNameReferencesRequestBuilderUriTemplate,
        requestsMetadata: DomainNameReferencesRequestBuilderRequestsMetadata,
        navigationMetadata: DomainNameReferencesRequestBuilderNavigationMetadata,
    },
    federationConfiguration: {
        uriTemplate: FederationConfigurationRequestBuilderUriTemplate,
        requestsMetadata: FederationConfigurationRequestBuilderRequestsMetadata,
        navigationMetadata: FederationConfigurationRequestBuilderNavigationMetadata,
    },
    forceDelete: {
        uriTemplate: ForceDeleteRequestBuilderUriTemplate,
        requestsMetadata: ForceDeleteRequestBuilderRequestsMetadata,
    },
    promote: {
        uriTemplate: PromoteRequestBuilderUriTemplate,
        requestsMetadata: PromoteRequestBuilderRequestsMetadata,
    },
    serviceConfigurationRecords: {
        uriTemplate: ServiceConfigurationRecordsRequestBuilderUriTemplate,
        requestsMetadata: ServiceConfigurationRecordsRequestBuilderRequestsMetadata,
        navigationMetadata: ServiceConfigurationRecordsRequestBuilderNavigationMetadata,
    },
    verificationDnsRecords: {
        uriTemplate: VerificationDnsRecordsRequestBuilderUriTemplate,
        requestsMetadata: VerificationDnsRecordsRequestBuilderRequestsMetadata,
        navigationMetadata: VerificationDnsRecordsRequestBuilderNavigationMetadata,
    },
    verify: {
        uriTemplate: VerifyRequestBuilderUriTemplate,
        requestsMetadata: VerifyRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DomainItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDomainFromDiscriminatorValue,
        queryParametersMapper: DomainItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDomainFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDomain,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const DomainItemRequestBuilderUriTemplate = "{+baseurl}/domains/{domain%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
