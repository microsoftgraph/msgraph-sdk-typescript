/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createTenantInformationFromDiscriminatorValue, type TenantInformation } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to call the findTenantInformationByDomainName method.
 */
export interface FindTenantInformationByDomainNameWithDomainNameRequestBuilder extends BaseRequestBuilder<FindTenantInformationByDomainNameWithDomainNameRequestBuilder> {
    /**
     * Given a domain name, search for a tenant and read its tenantInformation. You can use this API to validate tenant information and use the tenantId to configure cross-tenant access settings between you and the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TenantInformation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/tenantrelationship-findtenantinformationbydomainname?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TenantInformation | undefined>;
    /**
     * Given a domain name, search for a tenant and read its tenantInformation. You can use this API to validate tenant information and use the tenantId to configure cross-tenant access settings between you and the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const FindTenantInformationByDomainNameWithDomainNameRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/findTenantInformationByDomainName(domainName='{domainName}')";
/**
 * Metadata for all the requests in the request builder.
 */
export const FindTenantInformationByDomainNameWithDomainNameRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: FindTenantInformationByDomainNameWithDomainNameRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTenantInformationFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
