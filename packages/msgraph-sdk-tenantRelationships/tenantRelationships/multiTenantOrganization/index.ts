/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createMultiTenantOrganizationFromDiscriminatorValue, serializeMultiTenantOrganization, type MultiTenantOrganization } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { JoinRequestRequestBuilderRequestsMetadata, type JoinRequestRequestBuilder } from './joinRequest/index.js';
// @ts-ignore
import { TenantsRequestBuilderNavigationMetadata, TenantsRequestBuilderRequestsMetadata, type TenantsRequestBuilder } from './tenants/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the multiTenantOrganization property of the microsoft.graph.tenantRelationship entity.
 */
export interface MultiTenantOrganizationRequestBuilder extends BaseRequestBuilder<MultiTenantOrganizationRequestBuilder> {
    /**
     * Provides operations to manage the joinRequest property of the microsoft.graph.multiTenantOrganization entity.
     */
    get joinRequest(): JoinRequestRequestBuilder;
    /**
     * Provides operations to manage the tenants property of the microsoft.graph.multiTenantOrganization entity.
     */
    get tenants(): TenantsRequestBuilder;
    /**
     * Get properties of the multitenant organization.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MultiTenantOrganization>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/multitenantorganization-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<MultiTenantOrganizationRequestBuilderGetQueryParameters> | undefined) : Promise<MultiTenantOrganization | undefined>;
    /**
     * Create a new multitenant organization. By default, the creator tenant becomes an owner tenant upon successful creation. Only owner tenants can manage a multitenant organization.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MultiTenantOrganization>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/tenantrelationship-put-multitenantorganization?view=graph-rest-1.0|Find more info here}
     */
     patch(body: MultiTenantOrganization, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<MultiTenantOrganization | undefined>;
    /**
     * Get properties of the multitenant organization.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MultiTenantOrganizationRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new multitenant organization. By default, the creator tenant becomes an owner tenant upon successful creation. Only owner tenants can manage a multitenant organization.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: MultiTenantOrganization, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get properties of the multitenant organization.
 */
export interface MultiTenantOrganizationRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const MultiTenantOrganizationRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/multiTenantOrganization{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MultiTenantOrganizationRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const MultiTenantOrganizationRequestBuilderNavigationMetadata: Record<Exclude<keyof MultiTenantOrganizationRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    joinRequest: {
        requestsMetadata: JoinRequestRequestBuilderRequestsMetadata,
    },
    tenants: {
        requestsMetadata: TenantsRequestBuilderRequestsMetadata,
        navigationMetadata: TenantsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MultiTenantOrganizationRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: MultiTenantOrganizationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createMultiTenantOrganizationFromDiscriminatorValue,
        queryParametersMapper: MultiTenantOrganizationRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: MultiTenantOrganizationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createMultiTenantOrganizationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeMultiTenantOrganization,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
