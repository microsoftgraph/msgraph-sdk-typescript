/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDelegatedAdminRelationshipFromDiscriminatorValue, serializeDelegatedAdminRelationship, type DelegatedAdminRelationship } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AccessAssignmentsRequestBuilderNavigationMetadata, AccessAssignmentsRequestBuilderRequestsMetadata, type AccessAssignmentsRequestBuilder } from './accessAssignments/index.js';
// @ts-ignore
import { OperationsRequestBuilderNavigationMetadata, OperationsRequestBuilderRequestsMetadata, type OperationsRequestBuilder } from './operations/index.js';
// @ts-ignore
import { RequestsRequestBuilderNavigationMetadata, RequestsRequestBuilderRequestsMetadata, type RequestsRequestBuilder } from './requests/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the delegatedAdminRelationships property of the microsoft.graph.tenantRelationship entity.
 */
export interface DelegatedAdminRelationshipItemRequestBuilder extends BaseRequestBuilder<DelegatedAdminRelationshipItemRequestBuilder> {
    /**
     * Provides operations to manage the accessAssignments property of the microsoft.graph.delegatedAdminRelationship entity.
     */
    get accessAssignments(): AccessAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the operations property of the microsoft.graph.delegatedAdminRelationship entity.
     */
    get operations(): OperationsRequestBuilder;
    /**
     * Provides operations to manage the requests property of the microsoft.graph.delegatedAdminRelationship entity.
     */
    get requests(): RequestsRequestBuilder;
    /**
     * Delete a delegatedAdminRelationship object. A relationship can only be deleted if it's in the 'created' status. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/delegatedadminrelationship-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties of a delegatedAdminRelationship object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DelegatedAdminRelationship>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/delegatedadminrelationship-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<DelegatedAdminRelationshipItemRequestBuilderGetQueryParameters> | undefined) : Promise<DelegatedAdminRelationship | undefined>;
    /**
     * Update the properties of a delegatedAdminRelationship object.  The following restrictions apply:- You can update this relationship when its status property is created.- You can update the autoExtendDuration property when status is either created or active.- You can only remove the Microsoft Entra Global Administrator role when the status property is active, which indicates a long-running operation.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DelegatedAdminRelationship>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/delegatedadminrelationship-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: DelegatedAdminRelationship, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DelegatedAdminRelationship | undefined>;
    /**
     * Delete a delegatedAdminRelationship object. A relationship can only be deleted if it's in the 'created' status. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties of a delegatedAdminRelationship object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DelegatedAdminRelationshipItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a delegatedAdminRelationship object.  The following restrictions apply:- You can update this relationship when its status property is created.- You can update the autoExtendDuration property when status is either created or active.- You can only remove the Microsoft Entra Global Administrator role when the status property is active, which indicates a long-running operation.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DelegatedAdminRelationship, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties of a delegatedAdminRelationship object.
 */
export interface DelegatedAdminRelationshipItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const DelegatedAdminRelationshipItemRequestBuilderUriTemplate = "{+baseurl}/tenantRelationships/delegatedAdminRelationships/{delegatedAdminRelationship%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DelegatedAdminRelationshipItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DelegatedAdminRelationshipItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DelegatedAdminRelationshipItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    accessAssignments: {
        requestsMetadata: AccessAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AccessAssignmentsRequestBuilderNavigationMetadata,
    },
    operations: {
        requestsMetadata: OperationsRequestBuilderRequestsMetadata,
        navigationMetadata: OperationsRequestBuilderNavigationMetadata,
    },
    requests: {
        requestsMetadata: RequestsRequestBuilderRequestsMetadata,
        navigationMetadata: RequestsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DelegatedAdminRelationshipItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DelegatedAdminRelationshipItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: DelegatedAdminRelationshipItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDelegatedAdminRelationshipFromDiscriminatorValue,
        queryParametersMapper: DelegatedAdminRelationshipItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DelegatedAdminRelationshipItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDelegatedAdminRelationshipFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDelegatedAdminRelationship,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
