/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createChannelFromDiscriminatorValue, serializeChannel, type Channel } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { CompleteMigrationRequestBuilderRequestsMetadata, CompleteMigrationRequestBuilderUriTemplate, type CompleteMigrationRequestBuilder } from './completeMigration/';
import { DoesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalNameRequestBuilderRequestsMetadata, DoesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalNameRequestBuilderUriTemplate, type DoesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalNameRequestBuilder } from './doesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalName/';
import { FilesFolderRequestBuilderNavigationMetadata, FilesFolderRequestBuilderRequestsMetadata, FilesFolderRequestBuilderUriTemplate, type FilesFolderRequestBuilder } from './filesFolder/';
import { MembersRequestBuilderNavigationMetadata, MembersRequestBuilderRequestsMetadata, MembersRequestBuilderUriTemplate, type MembersRequestBuilder } from './members/';
import { MessagesRequestBuilderNavigationMetadata, MessagesRequestBuilderRequestsMetadata, MessagesRequestBuilderUriTemplate, type MessagesRequestBuilder } from './messages/';
import { ProvisionEmailRequestBuilderRequestsMetadata, ProvisionEmailRequestBuilderUriTemplate, type ProvisionEmailRequestBuilder } from './provisionEmail/';
import { RemoveEmailRequestBuilderRequestsMetadata, RemoveEmailRequestBuilderUriTemplate, type RemoveEmailRequestBuilder } from './removeEmail/';
import { SharedWithTeamsRequestBuilderNavigationMetadata, SharedWithTeamsRequestBuilderRequestsMetadata, SharedWithTeamsRequestBuilderUriTemplate, type SharedWithTeamsRequestBuilder } from './sharedWithTeams/';
import { TabsRequestBuilderNavigationMetadata, TabsRequestBuilderRequestsMetadata, TabsRequestBuilderUriTemplate, type TabsRequestBuilder } from './tabs/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the channels property of the microsoft.graph.deletedTeam entity.
 */
export interface ChannelItemRequestBuilder extends BaseRequestBuilder<ChannelItemRequestBuilder> {
    /**
     * Provides operations to call the completeMigration method.
     */
    get completeMigration(): CompleteMigrationRequestBuilder;
    /**
     * Provides operations to call the doesUserHaveAccess method.
     */
    get doesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalName(): DoesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalNameRequestBuilder;
    /**
     * Provides operations to manage the filesFolder property of the microsoft.graph.channel entity.
     */
    get filesFolder(): FilesFolderRequestBuilder;
    /**
     * Provides operations to manage the members property of the microsoft.graph.channel entity.
     */
    get members(): MembersRequestBuilder;
    /**
     * Provides operations to manage the messages property of the microsoft.graph.channel entity.
     */
    get messages(): MessagesRequestBuilder;
    /**
     * Provides operations to call the provisionEmail method.
     */
    get provisionEmail(): ProvisionEmailRequestBuilder;
    /**
     * Provides operations to call the removeEmail method.
     */
    get removeEmail(): RemoveEmailRequestBuilder;
    /**
     * Provides operations to manage the sharedWithTeams property of the microsoft.graph.channel entity.
     */
    get sharedWithTeams(): SharedWithTeamsRequestBuilder;
    /**
     * Provides operations to manage the tabs property of the microsoft.graph.channel entity.
     */
    get tabs(): TabsRequestBuilder;
    /**
     * Delete navigation property channels for teamwork
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The channels that are either shared with this deleted team or created in this deleted team.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Channel
     */
     get(requestConfiguration?: RequestConfiguration<ChannelItemRequestBuilderGetQueryParameters> | undefined) : Promise<Channel | undefined>;
    /**
     * Update the navigation property channels in teamwork
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Channel
     */
     patch(body: Channel, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Channel | undefined>;
    /**
     * Delete navigation property channels for teamwork
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The channels that are either shared with this deleted team or created in this deleted team.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ChannelItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property channels in teamwork
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: Channel, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The channels that are either shared with this deleted team or created in this deleted team.
 */
export interface ChannelItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ChannelItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ChannelItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ChannelItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    completeMigration: {
        uriTemplate: CompleteMigrationRequestBuilderUriTemplate,
        requestsMetadata: CompleteMigrationRequestBuilderRequestsMetadata,
    },
    doesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalName: {
        uriTemplate: DoesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalNameRequestBuilderUriTemplate,
        requestsMetadata: DoesUserHaveAccessuserIdUserIdTenantIdTenantIdUserPrincipalNameUserPrincipalNameRequestBuilderRequestsMetadata,
    },
    filesFolder: {
        uriTemplate: FilesFolderRequestBuilderUriTemplate,
        requestsMetadata: FilesFolderRequestBuilderRequestsMetadata,
        navigationMetadata: FilesFolderRequestBuilderNavigationMetadata,
    },
    members: {
        uriTemplate: MembersRequestBuilderUriTemplate,
        requestsMetadata: MembersRequestBuilderRequestsMetadata,
        navigationMetadata: MembersRequestBuilderNavigationMetadata,
    },
    messages: {
        uriTemplate: MessagesRequestBuilderUriTemplate,
        requestsMetadata: MessagesRequestBuilderRequestsMetadata,
        navigationMetadata: MessagesRequestBuilderNavigationMetadata,
    },
    provisionEmail: {
        uriTemplate: ProvisionEmailRequestBuilderUriTemplate,
        requestsMetadata: ProvisionEmailRequestBuilderRequestsMetadata,
    },
    removeEmail: {
        uriTemplate: RemoveEmailRequestBuilderUriTemplate,
        requestsMetadata: RemoveEmailRequestBuilderRequestsMetadata,
    },
    sharedWithTeams: {
        uriTemplate: SharedWithTeamsRequestBuilderUriTemplate,
        requestsMetadata: SharedWithTeamsRequestBuilderRequestsMetadata,
        navigationMetadata: SharedWithTeamsRequestBuilderNavigationMetadata,
    },
    tabs: {
        uriTemplate: TabsRequestBuilderUriTemplate,
        requestsMetadata: TabsRequestBuilderRequestsMetadata,
        navigationMetadata: TabsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ChannelItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createChannelFromDiscriminatorValue,
        queryParametersMapper: ChannelItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createChannelFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeChannel,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const ChannelItemRequestBuilderUriTemplate = "{+baseurl}/teamwork/deletedTeams/{deletedTeam%2Did}/channels/{channel%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
