/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createLearningContentCollectionResponseFromDiscriminatorValue, createLearningContentFromDiscriminatorValue, serializeLearningContent, type LearningContent, type LearningContentCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { LearningContentItemRequestBuilderRequestsMetadata, type LearningContentItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the learningContents property of the microsoft.graph.learningProvider entity.
 */
export interface LearningContentsRequestBuilder extends BaseRequestBuilder<LearningContentsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the learningContents property of the microsoft.graph.learningProvider entity.
     * @param learningContentId The unique identifier of learningContent
     * @returns {LearningContentItemRequestBuilder}
     */
     byLearningContentId(learningContentId: string) : LearningContentItemRequestBuilder;
    /**
     * Get a list of the learningContent resources and their properties. This list represents the metadata of the specified provider's content in Viva Learning.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<LearningContentCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/learningprovider-list-learningcontents?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<LearningContentsRequestBuilderGetQueryParameters> | undefined) : Promise<LearningContentCollectionResponse | undefined>;
    /**
     * Create new navigation property to learningContents for employeeExperience
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<LearningContent>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: LearningContent, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<LearningContent | undefined>;
    /**
     * Get a list of the learningContent resources and their properties. This list represents the metadata of the specified provider's content in Viva Learning.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<LearningContentsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to learningContents for employeeExperience
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: LearningContent, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the learningContent resources and their properties. This list represents the metadata of the specified provider's content in Viva Learning.
 */
export interface LearningContentsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const LearningContentsRequestBuilderUriTemplate = "{+baseurl}/employeeExperience/learningProviders/{learningProvider%2Did}/learningContents{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the learningContents property of the microsoft.graph.learningProvider entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the learningContents property of the microsoft.graph.learningProvider entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AdditionalTags: "additionalTags",
    AdditionalTagsDesc: "additionalTags desc",
    ContentWebUrl: "contentWebUrl",
    ContentWebUrlDesc: "contentWebUrl desc",
    Contributors: "contributors",
    ContributorsDesc: "contributors desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Description: "description",
    DescriptionDesc: "description desc",
    Duration: "duration",
    DurationDesc: "duration desc",
    ExternalId: "externalId",
    ExternalIdDesc: "externalId desc",
    Format: "format",
    FormatDesc: "format desc",
    IsActive: "isActive",
    IsActiveDesc: "isActive desc",
    IsPremium: "isPremium",
    IsPremiumDesc: "isPremium desc",
    IsSearchable: "isSearchable",
    IsSearchableDesc: "isSearchable desc",
    LanguageTag: "languageTag",
    LanguageTagDesc: "languageTag desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    NumberOfPages: "numberOfPages",
    NumberOfPagesDesc: "numberOfPages desc",
    SkillTags: "skillTags",
    SkillTagsDesc: "skillTags desc",
    SourceName: "sourceName",
    SourceNameDesc: "sourceName desc",
    ThumbnailWebUrl: "thumbnailWebUrl",
    ThumbnailWebUrlDesc: "thumbnailWebUrl desc",
    Title: "title",
    TitleDesc: "title desc",
} as const;
/**
 * Provides operations to manage the learningContents property of the microsoft.graph.learningProvider entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AdditionalTags: "additionalTags",
    ContentWebUrl: "contentWebUrl",
    Contributors: "contributors",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    Duration: "duration",
    ExternalId: "externalId",
    Format: "format",
    IsActive: "isActive",
    IsPremium: "isPremium",
    IsSearchable: "isSearchable",
    LanguageTag: "languageTag",
    LastModifiedDateTime: "lastModifiedDateTime",
    NumberOfPages: "numberOfPages",
    SkillTags: "skillTags",
    SourceName: "sourceName",
    ThumbnailWebUrl: "thumbnailWebUrl",
    Title: "title",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const LearningContentsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const LearningContentsRequestBuilderNavigationMetadata: Record<Exclude<keyof LearningContentsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byLearningContentId: {
        requestsMetadata: LearningContentItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["learningContent%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const LearningContentsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: LearningContentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createLearningContentCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: LearningContentsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: LearningContentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createLearningContentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeLearningContent,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
