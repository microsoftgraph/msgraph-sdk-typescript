/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createLearningProviderFromDiscriminatorValue, serializeLearningProvider, type LearningProvider } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { LearningContentsRequestBuilderNavigationMetadata, LearningContentsRequestBuilderRequestsMetadata, type LearningContentsRequestBuilder } from './learningContents/index.js';
// @ts-ignore
import { LearningContentsWithExternalIdRequestBuilderRequestsMetadata, type LearningContentsWithExternalIdRequestBuilder } from './learningContentsWithExternalId/index.js';
// @ts-ignore
import { LearningCourseActivitiesRequestBuilderNavigationMetadata, LearningCourseActivitiesRequestBuilderRequestsMetadata, type LearningCourseActivitiesRequestBuilder } from './learningCourseActivities/index.js';
// @ts-ignore
import { LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilderRequestsMetadata, type LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilder } from './learningCourseActivitiesWithExternalcourseActivityId/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the learningProviders property of the microsoft.graph.employeeExperience entity.
 */
export interface LearningProviderItemRequestBuilder extends BaseRequestBuilder<LearningProviderItemRequestBuilder> {
    /**
     * Provides operations to manage the learningContents property of the microsoft.graph.learningProvider entity.
     */
    get learningContents(): LearningContentsRequestBuilder;
    /**
     * Provides operations to manage the learningCourseActivities property of the microsoft.graph.learningProvider entity.
     */
    get learningCourseActivities(): LearningCourseActivitiesRequestBuilder;
    /**
     * Delete a learningProvider resource and remove its registration in Viva Learning for a tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/employeeexperience-delete-learningproviders?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a learningProvider object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<LearningProvider>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/learningprovider-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<LearningProviderItemRequestBuilderGetQueryParameters> | undefined) : Promise<LearningProvider | undefined>;
    /**
     * Provides operations to manage the learningContents property of the microsoft.graph.learningProvider entity.
     * @param externalId Alternate key of learningContent
     * @returns {LearningContentsWithExternalIdRequestBuilder}
     */
     learningContentsWithExternalId(externalId: string | undefined) : LearningContentsWithExternalIdRequestBuilder;
    /**
     * Provides operations to manage the learningCourseActivities property of the microsoft.graph.learningProvider entity.
     * @param externalcourseActivityId Alternate key of learningCourseActivity
     * @returns {LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilder}
     */
     learningCourseActivitiesWithExternalcourseActivityId(externalcourseActivityId: string | undefined) : LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilder;
    /**
     * Update the properties of a learningProvider object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<LearningProvider>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/learningprovider-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: LearningProvider, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<LearningProvider | undefined>;
    /**
     * Delete a learningProvider resource and remove its registration in Viva Learning for a tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a learningProvider object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<LearningProviderItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a learningProvider object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: LearningProvider, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a learningProvider object.
 */
export interface LearningProviderItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const LearningProviderItemRequestBuilderUriTemplate = "{+baseurl}/employeeExperience/learningProviders/{learningProvider%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const LearningProviderItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const LearningProviderItemRequestBuilderNavigationMetadata: Record<Exclude<keyof LearningProviderItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    learningContentsWithExternalId: {
        requestsMetadata: LearningContentsWithExternalIdRequestBuilderRequestsMetadata,
        pathParametersMappings: ["externalId"],
    },
    learningCourseActivitiesWithExternalcourseActivityId: {
        requestsMetadata: LearningCourseActivitiesWithExternalcourseActivityIdRequestBuilderRequestsMetadata,
        pathParametersMappings: ["externalcourseActivityId"],
    },
    learningContents: {
        requestsMetadata: LearningContentsRequestBuilderRequestsMetadata,
        navigationMetadata: LearningContentsRequestBuilderNavigationMetadata,
    },
    learningCourseActivities: {
        requestsMetadata: LearningCourseActivitiesRequestBuilderRequestsMetadata,
        navigationMetadata: LearningCourseActivitiesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const LearningProviderItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: LearningProviderItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: LearningProviderItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createLearningProviderFromDiscriminatorValue,
        queryParametersMapper: LearningProviderItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: LearningProviderItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createLearningProviderFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeLearningProvider,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
