/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createGroupFromDiscriminatorValue, createIdentitySetFromDiscriminatorValue, createPhysicalAddressFromDiscriminatorValue, createPublicErrorFromDiscriminatorValue, createResultInfoFromDiscriminatorValue, createSiteFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, deserializeIntoEntity, serializeBaseCollectionPaginationCountResponse, serializeEntity, serializeGroup, serializeIdentitySet, serializePhysicalAddress, serializePublicError, serializeResultInfo, serializeSite, type BaseCollectionPaginationCountResponse, type Entity, type Group, type IdentitySet, type PhysicalAddress, type PublicError, type ResultInfo, type Site } from '../index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type Duration, type Guid, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AadRiskDetectionAuditRecord extends AuditData, Parsable {
}
export type ActionAfterRetentionPeriod = (typeof ActionAfterRetentionPeriodObject)[keyof typeof ActionAfterRetentionPeriodObject];
export type AdditionalDataOptions = (typeof AdditionalDataOptionsObject)[keyof typeof AdditionalDataOptionsObject];
export type AdditionalOptions = (typeof AdditionalOptionsObject)[keyof typeof AdditionalOptionsObject];
export interface AedAuditRecord extends AuditData, Parsable {
}
export interface AiAppInteractionAuditRecord extends AuditData, Parsable {
}
export interface AipFileDeleted extends AuditData, Parsable {
}
export interface AipHeartBeat extends AuditData, Parsable {
}
export interface AipProtectionActionLogRequest extends AuditData, Parsable {
}
export interface AipScannerDiscoverEvent extends AuditData, Parsable {
}
export interface AipSensitivityLabelActionLogRequest extends AuditData, Parsable {
}
export interface AirAdminActionInvestigationData extends AuditData, Parsable {
}
export interface AirInvestigationData extends AuditData, Parsable {
}
export interface AirManualInvestigationData extends AuditData, Parsable {
}
export interface Alert extends Entity, Parsable {
    /**
     * The adversary or activity group that is associated with this alert.
     */
    actorDisplayName?: string | null;
    /**
     * A collection of other alert properties, including user-defined properties. Any custom details defined in the alert, and any dynamic content in the alert details, are stored here.
     */
    additionalDataProperty?: Dictionary | null;
    /**
     * The ID of the policy that generated the alert, and populated when there is a specific policy that generated the alert, whether configured by a customer or a built-in policy.
     */
    alertPolicyId?: string | null;
    /**
     * URL for the Microsoft 365 Defender portal alert page.
     */
    alertWebUrl?: string | null;
    /**
     * Owner of the alert, or null if no owner is assigned.
     */
    assignedTo?: string | null;
    /**
     * The attack kill-chain category that the alert belongs to. Aligned with the MITRE ATT&CK framework.
     */
    category?: string | null;
    /**
     * Specifies whether the alert represents a true threat. Possible values are: unknown, falsePositive, truePositive, informationalExpectedActivity, unknownFutureValue.
     */
    classification?: AlertClassification | null;
    /**
     * Array of comments created by the Security Operations (SecOps) team during the alert management process.
     */
    comments?: AlertComment[] | null;
    /**
     * Time when Microsoft 365 Defender created the alert.
     */
    createdDateTime?: Date | null;
    /**
     * User defined custom fields with string values.
     */
    customDetails?: Dictionary | null;
    /**
     * String value describing each alert.
     */
    description?: string | null;
    /**
     * Detection technology or sensor that identified the notable component or activity. Possible values are: unknown, microsoftDefenderForEndpoint, antivirus, smartScreen, customTi, microsoftDefenderForOffice365, automatedInvestigation, microsoftThreatExperts, customDetection, microsoftDefenderForIdentity, cloudAppSecurity, microsoft365Defender, azureAdIdentityProtection, manual, microsoftDataLossPrevention, appGovernancePolicy, appGovernanceDetection, unknownFutureValue, microsoftDefenderForCloud, microsoftDefenderForIoT, microsoftDefenderForServers, microsoftDefenderForStorage, microsoftDefenderForDNS, microsoftDefenderForDatabases, microsoftDefenderForContainers, microsoftDefenderForNetwork, microsoftDefenderForAppService, microsoftDefenderForKeyVault, microsoftDefenderForResourceManager, microsoftDefenderForApiManagement, microsoftSentinel, nrtAlerts, scheduledAlerts, microsoftDefenderThreatIntelligenceAnalytics, builtInMl, microsoftThreatIntelligence. Use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: microsoftDefenderForCloud, microsoftDefenderForIoT, microsoftDefenderForServers, microsoftDefenderForStorage, microsoftDefenderForDNS, microsoftDefenderForDatabases, microsoftDefenderForContainers, microsoftDefenderForNetwork, microsoftDefenderForAppService, microsoftDefenderForKeyVault, microsoftDefenderForResourceManager, microsoftDefenderForApiManagement, microsoftSentinel, nrtAlerts, scheduledAlerts, microsoftDefenderThreatIntelligenceAnalytics, builtInMl, microsoftThreatIntelligence.
     */
    detectionSource?: DetectionSource | null;
    /**
     * The ID of the detector that triggered the alert.
     */
    detectorId?: string | null;
    /**
     * Specifies the result of the investigation, whether the alert represents a true attack and if so, the nature of the attack. Possible values are: unknown, apt, malware, securityPersonnel, securityTesting, unwantedSoftware, other, multiStagedAttack, compromisedAccount, phishing, maliciousUserActivity, notMalicious, notEnoughDataToValidate, confirmedUserActivity, lineOfBusinessApplication, unknownFutureValue.
     */
    determination?: AlertDetermination | null;
    /**
     * Collection of evidence related to the alert.
     */
    evidence?: AlertEvidence[] | null;
    /**
     * The earliest activity associated with the alert.
     */
    firstActivityDateTime?: Date | null;
    /**
     * Unique identifier to represent the incident this alert resource is associated with.
     */
    incidentId?: string | null;
    /**
     * URL for the incident page in the Microsoft 365 Defender portal.
     */
    incidentWebUrl?: string | null;
    /**
     * The oldest activity associated with the alert.
     */
    lastActivityDateTime?: Date | null;
    /**
     * Time when the alert was last updated at Microsoft 365 Defender.
     */
    lastUpdateDateTime?: Date | null;
    /**
     * The attack techniques, as aligned with the MITRE ATT&CK framework.
     */
    mitreTechniques?: string[] | null;
    /**
     * The name of the product which published this alert.
     */
    productName?: string | null;
    /**
     * The ID of the alert as it appears in the security provider product that generated the alert.
     */
    providerAlertId?: string | null;
    /**
     * Recommended response and remediation actions to take in the event this alert was generated.
     */
    recommendedActions?: string | null;
    /**
     * Time when the alert was resolved.
     */
    resolvedDateTime?: Date | null;
    /**
     * The serviceSource property
     */
    serviceSource?: ServiceSource | null;
    /**
     * The severity property
     */
    severity?: AlertSeverity | null;
    /**
     * The status property
     */
    status?: AlertStatus | null;
    /**
     * The system tags associated with the alert.
     */
    systemTags?: string[] | null;
    /**
     * The Microsoft Entra tenant the alert was created in.
     */
    tenantId?: string | null;
    /**
     * The threat associated with this alert.
     */
    threatDisplayName?: string | null;
    /**
     * Threat family associated with this alert.
     */
    threatFamilyName?: string | null;
    /**
     * Brief identifying string value describing the alert.
     */
    title?: string | null;
}
export type AlertClassification = (typeof AlertClassificationObject)[keyof typeof AlertClassificationObject];
export interface AlertCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Alert[] | null;
}
export interface AlertComment extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The comment text.
     */
    comment?: string | null;
    /**
     * The person or app name that submitted the comment.
     */
    createdByDisplayName?: string | null;
    /**
     * The time when the comment was submitted.
     */
    createdDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type AlertDetermination = (typeof AlertDeterminationObject)[keyof typeof AlertDeterminationObject];
export interface AlertEvidence extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The date and time when the evidence was created and added to the alert. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * Detailed description of the entity role/s in an alert. Values are free-form.
     */
    detailedRoles?: string[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The remediationStatus property
     */
    remediationStatus?: EvidenceRemediationStatus | null;
    /**
     * Details about the remediation status.
     */
    remediationStatusDetails?: string | null;
    /**
     * The role/s that an evidence entity represents in an alert, for example, an IP address that is associated with an attacker has the evidence role Attacker.
     */
    roles?: EvidenceRole[] | null;
    /**
     * Array of custom tags associated with an evidence instance, for example, to denote a group of devices, high-value assets, etc.
     */
    tags?: string[] | null;
    /**
     * The verdict property
     */
    verdict?: EvidenceVerdict | null;
}
export type AlertSeverity = (typeof AlertSeverityObject)[keyof typeof AlertSeverityObject];
export type AlertStatus = (typeof AlertStatusObject)[keyof typeof AlertStatusObject];
export interface AmazonResourceEvidence extends AlertEvidence, Parsable {
    /**
     * The unique identifier for the Amazon account.
     */
    amazonAccountId?: string | null;
    /**
     * The Amazon resource identifier (ARN) for the cloud resource.
     */
    amazonResourceId?: string | null;
    /**
     * The name of the resource.
     */
    resourceName?: string | null;
    /**
     * The type of the resource.
     */
    resourceType?: string | null;
}
export interface AnalyzedMessageEvidence extends AlertEvidence, Parsable {
    /**
     * Direction of the email relative to your network. The possible values are: inbound, outbound or intraorg.
     */
    antiSpamDirection?: string | null;
    /**
     * Number of attachments in the email.
     */
    attachmentsCount?: number | null;
    /**
     * Delivery action of the email. The possible values are: delivered, deliveredAsSpam, junked, blocked, or replaced.
     */
    deliveryAction?: string | null;
    /**
     * Location where the email was delivered. The possible values are: inbox, external, junkFolder, quarantine, failed, dropped, deletedFolder or forwarded.
     */
    deliveryLocation?: string | null;
    /**
     * Public-facing identifier for the email that is set by the sending email system.
     */
    internetMessageId?: string | null;
    /**
     * Detected language of the email content.
     */
    language?: string | null;
    /**
     * Unique identifier for the email, generated by Microsoft 365.
     */
    networkMessageId?: string | null;
    /**
     * The P1 sender.
     */
    p1Sender?: EmailSender | null;
    /**
     * The P2 sender.
     */
    p2Sender?: EmailSender | null;
    /**
     * Date and time when the email was received.
     */
    receivedDateTime?: Date | null;
    /**
     * Email address of the recipient, or email address of the recipient after distribution list expansion.
     */
    recipientEmailAddress?: string | null;
    /**
     * IP address of the last detected mail server that relayed the message.
     */
    senderIp?: string | null;
    /**
     * Subject of the email.
     */
    subject?: string | null;
    /**
     * Collection of methods used to detect malware, phishing, or other threats found in the email.
     */
    threatDetectionMethods?: string[] | null;
    /**
     * Collection of detection names for malware or other threats found.
     */
    threats?: string[] | null;
    /**
     * Number of embedded URLs in the email.
     */
    urlCount?: number | null;
    /**
     * Collection of the URLs contained in this email.
     */
    urls?: string[] | null;
    /**
     * Uniform resource name (URN) of the automated investigation where the cluster was identified.
     */
    urn?: string | null;
}
export type AntispamTeamsDirection = (typeof AntispamTeamsDirectionObject)[keyof typeof AntispamTeamsDirectionObject];
export interface Article extends Entity, Parsable {
    /**
     * The body property
     */
    body?: FormattedContent | null;
    /**
     * The date and time when this article was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * URL of the header image for this article, used for display purposes.
     */
    imageUrl?: string | null;
    /**
     * Indicators related to this article.
     */
    indicators?: ArticleIndicator[] | null;
    /**
     * Indicates whether this article is currently featured by Microsoft.
     */
    isFeatured?: boolean | null;
    /**
     * The most recent date and time when this article was updated. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastUpdatedDateTime?: Date | null;
    /**
     * The summary property
     */
    summary?: FormattedContent | null;
    /**
     * Tags for this article, communicating keywords, or key concepts.
     */
    tags?: string[] | null;
    /**
     * The title of this article.
     */
    title?: string | null;
}
export interface ArticleCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Article[] | null;
}
export interface ArticleIndicator extends Indicator, Parsable {
}
export interface ArticleIndicatorCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: ArticleIndicator[] | null;
}
export interface Artifact extends Entity, Parsable {
}
export interface AttackSimAdminAuditRecord extends AuditData, Parsable {
}
export interface AuditCoreRoot extends Entity, Parsable {
    /**
     * The queries property
     */
    queries?: AuditLogQuery[] | null;
}
export interface AuditData extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface AuditLogQuery extends Entity, Parsable {
    /**
     * The administrative units tagged to an audit log record.
     */
    administrativeUnitIdFilters?: string[] | null;
    /**
     * The display name of the saved audit log query.
     */
    displayName?: string | null;
    /**
     * The end date of the date range in the query.
     */
    filterEndDateTime?: Date | null;
    /**
     * The start date of the date range in the query.
     */
    filterStartDateTime?: Date | null;
    /**
     * The IP address of the device that was used when the activity was logged.
     */
    ipAddressFilters?: string[] | null;
    /**
     * Free text field to search non-indexed properties of the audit log.
     */
    keywordFilter?: string | null;
    /**
     * For SharePoint and OneDrive for Business activity, the full path name of the file or folder accessed by the user. For Exchange admin audit logging, the name of the object that was modified by the cmdlet.
     */
    objectIdFilters?: string[] | null;
    /**
     * The name of the user or admin activity. For a description of the most common operations/activities, see Search the audit log in the Office 365 Protection Center.
     */
    operationFilters?: string[] | null;
    /**
     * An individual audit log record.
     */
    records?: AuditLogRecord[] | null;
    /**
     * The type of operation indicated by the record. The possible values are: exchangeAdmin, exchangeItem, exchangeItemGroup, sharePoint, syntheticProbe, sharePointFileOperation, oneDrive, azureActiveDirectory, azureActiveDirectoryAccountLogon, dataCenterSecurityCmdlet, complianceDLPSharePoint, sway, complianceDLPExchange, sharePointSharingOperation, azureActiveDirectoryStsLogon, skypeForBusinessPSTNUsage, skypeForBusinessUsersBlocked, securityComplianceCenterEOPCmdlet, exchangeAggregatedOperation, powerBIAudit, crm, yammer, skypeForBusinessCmdlets, discovery, microsoftTeams, threatIntelligence, mailSubmission, microsoftFlow, aeD, microsoftStream, complianceDLPSharePointClassification, threatFinder, project, sharePointListOperation, sharePointCommentOperation, dataGovernance, kaizala, securityComplianceAlerts, threatIntelligenceUrl, securityComplianceInsights, mipLabel, workplaceAnalytics, powerAppsApp, powerAppsPlan, threatIntelligenceAtpContent, labelContentExplorer, teamsHealthcare, exchangeItemAggregated, hygieneEvent, dataInsightsRestApiAudit, informationBarrierPolicyApplication, sharePointListItemOperation, sharePointContentTypeOperation, sharePointFieldOperation, microsoftTeamsAdmin, hrSignal, microsoftTeamsDevice, microsoftTeamsAnalytics, informationWorkerProtection, campaign, dlpEndpoint, airInvestigation, quarantine, microsoftForms, applicationAudit, complianceSupervisionExchange, customerKeyServiceEncryption, officeNative, mipAutoLabelSharePointItem, mipAutoLabelSharePointPolicyLocation, microsoftTeamsShifts, secureScore, mipAutoLabelExchangeItem, cortanaBriefing, search, wdatpAlerts, powerPlatformAdminDlp, powerPlatformAdminEnvironment, mdatpAudit, sensitivityLabelPolicyMatch, sensitivityLabelAction, sensitivityLabeledFileAction, attackSim, airManualInvestigation, securityComplianceRBAC, userTraining, airAdminActionInvestigation, mstic, physicalBadgingSignal, teamsEasyApprovals, aipDiscover, aipSensitivityLabelAction, aipProtectionAction, aipFileDeleted, aipHeartBeat, mcasAlerts, onPremisesFileShareScannerDlp, onPremisesSharePointScannerDlp, exchangeSearch, sharePointSearch, privacyDataMinimization, labelAnalyticsAggregate, myAnalyticsSettings, securityComplianceUserChange, complianceDLPExchangeClassification, complianceDLPEndpoint, mipExactDataMatch, msdeResponseActions, msdeGeneralSettings, msdeIndicatorsSettings, ms365DCustomDetection, msdeRolesSettings, mapgAlerts, mapgPolicy, mapgRemediation, privacyRemediationAction, privacyDigestEmail, mipAutoLabelSimulationProgress, mipAutoLabelSimulationCompletion, mipAutoLabelProgressFeedback, dlpSensitiveInformationType, mipAutoLabelSimulationStatistics, largeContentMetadata, microsoft365Group, cdpMlInferencingResult, filteringMailMetadata, cdpClassificationMailItem, cdpClassificationDocument, officeScriptsRunAction, filteringPostMailDeliveryAction, cdpUnifiedFeedback, tenantAllowBlockList, consumptionResource, healthcareSignal, dlpImportResult, cdpCompliancePolicyExecution, multiStageDisposition, privacyDataMatch, filteringDocMetadata, filteringEmailFeatures, powerBIDlp, filteringUrlInfo, filteringAttachmentInfo, coreReportingSettings, complianceConnector, powerPlatformLockboxResourceAccessRequest, powerPlatformLockboxResourceCommand, cdpPredictiveCodingLabel, cdpCompliancePolicyUserFeedback, webpageActivityEndpoint, omePortal, cmImprovementActionChange, filteringUrlClick, mipLabelAnalyticsAuditRecord, filteringEntityEvent, filteringRuleHits, filteringMailSubmission, labelExplorer, microsoftManagedServicePlatform, powerPlatformServiceActivity, scorePlatformGenericAuditRecord, filteringTimeTravelDocMetadata, alert, alertStatus, alertIncident, incidentStatus, case, caseInvestigation, recordsManagement, privacyRemediation, dataShareOperation, cdpDlpSensitive, ehrConnector, filteringMailGradingResult, publicFolder, privacyTenantAuditHistoryRecord, aipScannerDiscoverEvent, eduDataLakeDownloadOperation, m365ComplianceConnector, microsoftGraphDataConnectOperation, microsoftPurview, filteringEmailContentFeatures, powerPagesSite, powerAppsResource, plannerPlan, plannerCopyPlan, plannerTask, plannerRoster, plannerPlanList, plannerTaskList, plannerTenantSettings, projectForTheWebProject, projectForTheWebTask, projectForTheWebRoadmap, projectForTheWebRoadmapItem, projectForTheWebProjectSettings, projectForTheWebRoadmapSettings, quarantineMetadata, microsoftTodoAudit, timeTravelFilteringDocMetadata, teamsQuarantineMetadata, sharePointAppPermissionOperation, microsoftTeamsSensitivityLabelAction, filteringTeamsMetadata, filteringTeamsUrlInfo, filteringTeamsPostDeliveryAction, mdcAssessments, mdcRegulatoryComplianceStandards, mdcRegulatoryComplianceControls, mdcRegulatoryComplianceAssessments, mdcSecurityConnectors, mdaDataSecuritySignal, vivaGoals, filteringRuntimeInfo, attackSimAdmin, microsoftGraphDataConnectConsent, filteringAtpDetonationInfo, privacyPortal, managedTenants, unifiedSimulationMatchedItem, unifiedSimulationSummary, updateQuarantineMetadata, ms365DSuppressionRule, purviewDataMapOperation, filteringUrlPostClickAction, irmUserDefinedDetectionSignal, teamsUpdates, plannerRosterSensitivityLabel, ms365DIncident, filteringDelistingMetadata, complianceDLPSharePointClassificationExtended, microsoftDefenderForIdentityAudit, supervisoryReviewDayXInsight, defenderExpertsforXDRAdmin, cdpEdgeBlockedMessage, hostedRpa, cdpContentExplorerAggregateRecord, cdpHygieneAttachmentInfo, cdpHygieneSummary, cdpPostMailDeliveryAction, cdpEmailFeatures, cdpHygieneUrlInfo, cdpUrlClick, cdpPackageManagerHygieneEvent, filteringDocScan, timeTravelFilteringDocScan, mapgOnboard, unknownFutureValue.
     */
    recordTypeFilters?: AuditLogRecordType[] | null;
    /**
     * The serviceFilters property
     */
    serviceFilters?: string[] | null;
    /**
     * Describes the current status of the query. The possible values are: notStarted, running, succeeded, failed, cancelled, unknownFutureValue.
     */
    status?: AuditLogQueryStatus | null;
    /**
     * The UPN (user principal name) of the user who performed the action (specified in the operation property) that resulted in the record being logged; for example, myname@mydomain_name.
     */
    userPrincipalNameFilters?: string[] | null;
}
export interface AuditLogQueryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AuditLogQuery[] | null;
}
export type AuditLogQueryStatus = (typeof AuditLogQueryStatusObject)[keyof typeof AuditLogQueryStatusObject];
export interface AuditLogRecord extends Entity, Parsable {
    /**
     * The administrative units tagged to an audit log record.
     */
    administrativeUnits?: string[] | null;
    /**
     * A JSON object that contains the actual audit log data.
     */
    auditData?: AuditData | null;
    /**
     * The type of operation indicated by the record. The possible values are: exchangeAdmin, exchangeItem, exchangeItemGroup, sharePoint, syntheticProbe, sharePointFileOperation, oneDrive, azureActiveDirectory, azureActiveDirectoryAccountLogon, dataCenterSecurityCmdlet, complianceDLPSharePoint, sway, complianceDLPExchange, sharePointSharingOperation, azureActiveDirectoryStsLogon, skypeForBusinessPSTNUsage, skypeForBusinessUsersBlocked, securityComplianceCenterEOPCmdlet, exchangeAggregatedOperation, powerBIAudit, crm, yammer, skypeForBusinessCmdlets, discovery, microsoftTeams, threatIntelligence, mailSubmission, microsoftFlow, aeD, microsoftStream, complianceDLPSharePointClassification, threatFinder, project, sharePointListOperation, sharePointCommentOperation, dataGovernance, kaizala, securityComplianceAlerts, threatIntelligenceUrl, securityComplianceInsights, mipLabel, workplaceAnalytics, powerAppsApp, powerAppsPlan, threatIntelligenceAtpContent, labelContentExplorer, teamsHealthcare, exchangeItemAggregated, hygieneEvent, dataInsightsRestApiAudit, informationBarrierPolicyApplication, sharePointListItemOperation, sharePointContentTypeOperation, sharePointFieldOperation, microsoftTeamsAdmin, hrSignal, microsoftTeamsDevice, microsoftTeamsAnalytics, informationWorkerProtection, campaign, dlpEndpoint, airInvestigation, quarantine, microsoftForms, applicationAudit, complianceSupervisionExchange, customerKeyServiceEncryption, officeNative, mipAutoLabelSharePointItem, mipAutoLabelSharePointPolicyLocation, microsoftTeamsShifts, secureScore, mipAutoLabelExchangeItem, cortanaBriefing, search, wdatpAlerts, powerPlatformAdminDlp, powerPlatformAdminEnvironment, mdatpAudit, sensitivityLabelPolicyMatch, sensitivityLabelAction, sensitivityLabeledFileAction, attackSim, airManualInvestigation, securityComplianceRBAC, userTraining, airAdminActionInvestigation, mstic, physicalBadgingSignal, teamsEasyApprovals, aipDiscover, aipSensitivityLabelAction, aipProtectionAction, aipFileDeleted, aipHeartBeat, mcasAlerts, onPremisesFileShareScannerDlp, onPremisesSharePointScannerDlp, exchangeSearch, sharePointSearch, privacyDataMinimization, labelAnalyticsAggregate, myAnalyticsSettings, securityComplianceUserChange, complianceDLPExchangeClassification, complianceDLPEndpoint, mipExactDataMatch, msdeResponseActions, msdeGeneralSettings, msdeIndicatorsSettings, ms365DCustomDetection, msdeRolesSettings, mapgAlerts, mapgPolicy, mapgRemediation, privacyRemediationAction, privacyDigestEmail, mipAutoLabelSimulationProgress, mipAutoLabelSimulationCompletion, mipAutoLabelProgressFeedback, dlpSensitiveInformationType, mipAutoLabelSimulationStatistics, largeContentMetadata, microsoft365Group, cdpMlInferencingResult, filteringMailMetadata, cdpClassificationMailItem, cdpClassificationDocument, officeScriptsRunAction, filteringPostMailDeliveryAction, cdpUnifiedFeedback, tenantAllowBlockList, consumptionResource, healthcareSignal, dlpImportResult, cdpCompliancePolicyExecution, multiStageDisposition, privacyDataMatch, filteringDocMetadata, filteringEmailFeatures, powerBIDlp, filteringUrlInfo, filteringAttachmentInfo, coreReportingSettings, complianceConnector, powerPlatformLockboxResourceAccessRequest, powerPlatformLockboxResourceCommand, cdpPredictiveCodingLabel, cdpCompliancePolicyUserFeedback, webpageActivityEndpoint, omePortal, cmImprovementActionChange, filteringUrlClick, mipLabelAnalyticsAuditRecord, filteringEntityEvent, filteringRuleHits, filteringMailSubmission, labelExplorer, microsoftManagedServicePlatform, powerPlatformServiceActivity, scorePlatformGenericAuditRecord, filteringTimeTravelDocMetadata, alert, alertStatus, alertIncident, incidentStatus, case, caseInvestigation, recordsManagement, privacyRemediation, dataShareOperation, cdpDlpSensitive, ehrConnector, filteringMailGradingResult, publicFolder, privacyTenantAuditHistoryRecord, aipScannerDiscoverEvent, eduDataLakeDownloadOperation, m365ComplianceConnector, microsoftGraphDataConnectOperation, microsoftPurview, filteringEmailContentFeatures, powerPagesSite, powerAppsResource, plannerPlan, plannerCopyPlan, plannerTask, plannerRoster, plannerPlanList, plannerTaskList, plannerTenantSettings, projectForTheWebProject, projectForTheWebTask, projectForTheWebRoadmap, projectForTheWebRoadmapItem, projectForTheWebProjectSettings, projectForTheWebRoadmapSettings, quarantineMetadata, microsoftTodoAudit, timeTravelFilteringDocMetadata, teamsQuarantineMetadata, sharePointAppPermissionOperation, microsoftTeamsSensitivityLabelAction, filteringTeamsMetadata, filteringTeamsUrlInfo, filteringTeamsPostDeliveryAction, mdcAssessments, mdcRegulatoryComplianceStandards, mdcRegulatoryComplianceControls, mdcRegulatoryComplianceAssessments, mdcSecurityConnectors, mdaDataSecuritySignal, vivaGoals, filteringRuntimeInfo, attackSimAdmin, microsoftGraphDataConnectConsent, filteringAtpDetonationInfo, privacyPortal, managedTenants, unifiedSimulationMatchedItem, unifiedSimulationSummary, updateQuarantineMetadata, ms365DSuppressionRule, purviewDataMapOperation, filteringUrlPostClickAction, irmUserDefinedDetectionSignal, teamsUpdates, plannerRosterSensitivityLabel, ms365DIncident, filteringDelistingMetadata, complianceDLPSharePointClassificationExtended, microsoftDefenderForIdentityAudit, supervisoryReviewDayXInsight, defenderExpertsforXDRAdmin, cdpEdgeBlockedMessage, hostedRpa, cdpContentExplorerAggregateRecord, cdpHygieneAttachmentInfo, cdpHygieneSummary, cdpPostMailDeliveryAction, cdpEmailFeatures, cdpHygieneUrlInfo, cdpUrlClick, cdpPackageManagerHygieneEvent, filteringDocScan, timeTravelFilteringDocScan, mapgOnboard, unknownFutureValue.
     */
    auditLogRecordType?: AuditLogRecordType | null;
    /**
     * The IP address of the device used when the activity was logged. The IP address is displayed in either an IPv4 or IPv6 address format.
     */
    clientIp?: string | null;
    /**
     * The date and time in UTC when the user performed the activity.
     */
    createdDateTime?: Date | null;
    /**
     * For Exchange admin audit logging, the name of the object modified by the cmdlet. For SharePoint activity, the full URL path name of the file or folder accessed by a user. For Microsoft Entra activity, the name of the user account that was modified.
     */
    objectId?: string | null;
    /**
     * The name of the user or admin activity.
     */
    operation?: string | null;
    /**
     * The GUID for your organization.
     */
    organizationId?: string | null;
    /**
     * The Microsoft 365 service where the activity occurred.
     */
    service?: string | null;
    /**
     * The user who performed the action (specified in the Operation property) that resulted in the record being logged. Audit records for activity performed by system accounts (such as SHAREPOINT/system or NT AUTHORITY/SYSTEM) are also included in the audit log. Another common value for the UserId property is app@sharepoint. It indicates that the 'user' who performed the activity was an application with the necessary permissions in SharePoint to perform organization-wide actions (such as searching a SharePoint site or OneDrive account) on behalf of a user, admin, or service.
     */
    userId?: string | null;
    /**
     * UPN of the user who performed the action.
     */
    userPrincipalName?: string | null;
    /**
     * The type of user that performed the operation. The possible values are: regular, reserved, admin, dcAdmin, system, application, servicePrincipal, customPolicy, systemPolicy, partnerTechnician, guest, unknownFutureValue.
     */
    userType?: AuditLogUserType | null;
}
export interface AuditLogRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AuditLogRecord[] | null;
}
export type AuditLogRecordType = (typeof AuditLogRecordTypeObject)[keyof typeof AuditLogRecordTypeObject];
export type AuditLogUserType = (typeof AuditLogUserTypeObject)[keyof typeof AuditLogUserTypeObject];
export interface AuditSearchAuditRecord extends AuditData, Parsable {
}
export interface AuthorityTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface AuthorityTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AuthorityTemplate[] | null;
}
export interface AutonomousSystem extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the autonomous system.
     */
    name?: string | null;
    /**
     * The autonomous system number, assigned by IANA.
     */
    number?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The name of the autonomous system organization.
     */
    organization?: string | null;
    /**
     * A displayable value for these autonomous system details.
     */
    value?: string | null;
}
export interface AzureActiveDirectoryAccountLogonAuditRecord extends AuditData, Parsable {
}
export interface AzureActiveDirectoryAuditRecord extends AuditData, Parsable {
}
export interface AzureActiveDirectoryBaseAuditRecord extends AuditData, Parsable {
}
export interface AzureActiveDirectoryStsLogonAuditRecord extends AuditData, Parsable {
}
export interface AzureResourceEvidence extends AlertEvidence, Parsable {
    /**
     * The unique identifier for the Azure resource.
     */
    resourceId?: string | null;
    /**
     * The name of the resource.
     */
    resourceName?: string | null;
    /**
     * The type of the resource.
     */
    resourceType?: string | null;
}
export type BehaviorDuringRetentionPeriod = (typeof BehaviorDuringRetentionPeriodObject)[keyof typeof BehaviorDuringRetentionPeriodObject];
export interface BlobContainerEvidence extends AlertEvidence, Parsable {
    /**
     * The name of the blob container.
     */
    name?: string | null;
    /**
     * The storage which the blob container belongs to.
     */
    storageResource?: AzureResourceEvidence | null;
    /**
     * The full URL representation of the blob container.
     */
    url?: string | null;
}
export interface BlobEvidence extends AlertEvidence, Parsable {
    /**
     * The container which the blob belongs to.
     */
    blobContainer?: BlobContainerEvidence | null;
    /**
     * The Etag associated with this blob.
     */
    etag?: string | null;
    /**
     * The file hashes associated with this blob.
     */
    fileHashes?: FileHash[] | null;
    /**
     * The name of the blob.
     */
    name?: string | null;
    /**
     * The full URL representation of the blob.
     */
    url?: string | null;
}
export interface CampaignAuditRecord extends AuditData, Parsable {
}
export type CaseAction = (typeof CaseActionObject)[keyof typeof CaseActionObject];
export interface CaseAuditRecord extends AuditData, Parsable {
}
export interface CaseEscaped extends Entity, Parsable {
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedBy property
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The status property
     */
    status?: CaseStatus | null;
}
export interface CaseInvestigation extends AuditData, Parsable {
}
export interface CaseOperation extends Entity, Parsable {
    /**
     * The type of action the operation represents. Possible values are: contentExport,  applyTags, convertToPdf, index, estimateStatistics, addToReviewSet, holdUpdate, unknownFutureValue, purgeData, exportReport, exportResult. Use the Prefer: include-unknown-enum-members request header to get the following values from this evolvable enum: purgeData, exportReport, exportResult.
     */
    action?: CaseAction | null;
    /**
     * The date and time the operation was completed.
     */
    completedDateTime?: Date | null;
    /**
     * The user that created the operation.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date and time the operation was created.
     */
    createdDateTime?: Date | null;
    /**
     * The progress of the operation.
     */
    percentProgress?: number | null;
    /**
     * Contains success and failure-specific result information.
     */
    resultInfo?: ResultInfo | null;
    /**
     * The status of the case operation. Possible values are: notStarted, submissionFailed, running, succeeded, partiallySucceeded, failed.
     */
    status?: CaseOperationStatus | null;
}
export interface CaseOperationCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CaseOperation[] | null;
}
export type CaseOperationStatus = (typeof CaseOperationStatusObject)[keyof typeof CaseOperationStatusObject];
export interface CasesRoot extends Entity, Parsable {
    /**
     * The ediscoveryCases property
     */
    ediscoveryCases?: EdiscoveryCase[] | null;
}
export type CaseStatus = (typeof CaseStatusObject)[keyof typeof CaseStatusObject];
export interface CategoryTemplate extends FilePlanDescriptorTemplate, Parsable {
    /**
     * Represents all subcategories under a particular category.
     */
    subcategories?: SubcategoryTemplate[] | null;
}
export interface CategoryTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CategoryTemplate[] | null;
}
export interface CdpColdCrawlStatusRecord extends AuditData, Parsable {
}
export interface CdpContentExplorerAggregateRecord extends AuditData, Parsable {
}
export interface CdpDlpSensitiveAuditRecord extends AuditData, Parsable {
}
export interface CdpDlpSensitiveEndpointAuditRecord extends AuditData, Parsable {
}
export interface CdpLogRecord extends AuditData, Parsable {
}
export interface CdpOcrBillingRecord extends AuditData, Parsable {
}
export interface CdpResourceScopeChangeEventRecord extends AuditData, Parsable {
}
export interface CernerSMSLinkRecord extends AuditData, Parsable {
}
export interface CernerSMSSettingsUpdateRecord extends AuditData, Parsable {
}
export interface CernerSMSUnlinkRecord extends AuditData, Parsable {
}
export type ChildSelectability = (typeof ChildSelectabilityObject)[keyof typeof ChildSelectabilityObject];
export interface CitationTemplate extends FilePlanDescriptorTemplate, Parsable {
    /**
     * Represents the jurisdiction or agency that published the citation.
     */
    citationJurisdiction?: string | null;
    /**
     * Represents the URL to the published citation.
     */
    citationUrl?: string | null;
}
export interface CitationTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: CitationTemplate[] | null;
}
export interface CloudApplicationEvidence extends AlertEvidence, Parsable {
    /**
     * Unique identifier of the application.
     */
    appId?: number | null;
    /**
     * Name of the application.
     */
    displayName?: string | null;
    /**
     * Identifier of the instance of the Software as a Service (SaaS) application.
     */
    instanceId?: number | null;
    /**
     * Name of the instance of the SaaS application.
     */
    instanceName?: string | null;
    /**
     * The identifier of the SaaS application.
     */
    saasAppId?: number | null;
    /**
     * The stream property
     */
    stream?: Stream | null;
}
export type CloudAttachmentVersion = (typeof CloudAttachmentVersionObject)[keyof typeof CloudAttachmentVersionObject];
export interface CloudLogonRequestEvidence extends AlertEvidence, Parsable {
    /**
     * The unique identifier for the sign-in request.
     */
    requestId?: string | null;
}
export interface CloudLogonSessionEvidence extends AlertEvidence, Parsable {
    /**
     * The account associated with the sign-in session.
     */
    account?: UserEvidence | null;
    /**
     * The browser that is used for the sign-in, if known.
     */
    browser?: string | null;
    /**
     * The friendly name of the device, if known.
     */
    deviceName?: string | null;
    /**
     * The operating system that the device is running, if known.
     */
    operatingSystem?: string | null;
    /**
     * The previous sign-in time for this account, if known.
     */
    previousLogonDateTime?: Date | null;
    /**
     * The authentication protocol that is used in this session, if known.
     */
    protocol?: string | null;
    /**
     * The session ID for the account reported in the alert.
     */
    sessionId?: string | null;
    /**
     * The session start time, if known.
     */
    startUtcDateTime?: Date | null;
    /**
     * The user agent that is used for the sign-in, if known.
     */
    userAgent?: string | null;
}
export interface ComplianceConnectorAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDLMExchangeAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDLMSharePointAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpApplicationsAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpApplicationsClassificationAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpBaseAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpClassificationBaseAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpClassificationBaseCdpRecord extends AuditData, Parsable {
}
export interface ComplianceDlpEndpointAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpEndpointDiscoveryAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeClassificationAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeClassificationCdpRecord extends AuditData, Parsable {
}
export interface ComplianceDlpExchangeDiscoveryAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpSharePointAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpSharePointClassificationAuditRecord extends AuditData, Parsable {
}
export interface ComplianceDlpSharePointClassificationExtendedAuditRecord extends AuditData, Parsable {
}
export interface ComplianceManagerActionRecord extends AuditData, Parsable {
}
export interface ComplianceSupervisionBaseAuditRecord extends AuditData, Parsable {
}
export interface ComplianceSupervisionExchangeAuditRecord extends AuditData, Parsable {
}
export interface ConsumptionResourceAuditRecord extends AuditData, Parsable {
}
export interface ContainerEvidence extends AlertEvidence, Parsable {
    /**
     * The list of arguments.
     */
    args?: string[] | null;
    /**
     * The list of commands.
     */
    command?: string[] | null;
    /**
     * The container ID.
     */
    containerId?: string | null;
    /**
     * The image used to run the container.
     */
    image?: ContainerImageEvidence | null;
    /**
     * The privileged status.
     */
    isPrivileged?: boolean | null;
    /**
     * The container name.
     */
    name?: string | null;
    /**
     * The pod this container belongs to.
     */
    pod?: KubernetesPodEvidence | null;
}
export interface ContainerImageEvidence extends AlertEvidence, Parsable {
    /**
     * The digest image entity, in case this is a tag image.
     */
    digestImage?: ContainerImageEvidence | null;
    /**
     * The unique identifier for the container image entity.
     */
    imageId?: string | null;
    /**
     * The container registry for this image.
     */
    registry?: ContainerRegistryEvidence | null;
}
export type ContainerPortProtocol = (typeof ContainerPortProtocolObject)[keyof typeof ContainerPortProtocolObject];
export interface ContainerRegistryEvidence extends AlertEvidence, Parsable {
    /**
     * The registry URI.
     */
    registry?: string | null;
}
export type ContentFormat = (typeof ContentFormatObject)[keyof typeof ContentFormatObject];
export interface CopilotInteractionAuditRecord extends AuditData, Parsable {
}
export interface CoreReportingSettingsAuditRecord extends AuditData, Parsable {
}
export interface CortanaBriefingAuditRecord extends AuditData, Parsable {
}
export interface CpsCommonPolicyAuditRecord extends AuditData, Parsable {
}
export interface CpsPolicyConfigAuditRecord extends AuditData, Parsable {
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AadRiskDetectionAuditRecord}
 */
// @ts-ignore
export function createAadRiskDetectionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAadRiskDetectionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AedAuditRecord}
 */
// @ts-ignore
export function createAedAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAedAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AiAppInteractionAuditRecord}
 */
// @ts-ignore
export function createAiAppInteractionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAiAppInteractionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipFileDeleted}
 */
// @ts-ignore
export function createAipFileDeletedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipFileDeleted;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipHeartBeat}
 */
// @ts-ignore
export function createAipHeartBeatFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipHeartBeat;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipProtectionActionLogRequest}
 */
// @ts-ignore
export function createAipProtectionActionLogRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipProtectionActionLogRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipScannerDiscoverEvent}
 */
// @ts-ignore
export function createAipScannerDiscoverEventFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipScannerDiscoverEvent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AipSensitivityLabelActionLogRequest}
 */
// @ts-ignore
export function createAipSensitivityLabelActionLogRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAipSensitivityLabelActionLogRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AirAdminActionInvestigationData}
 */
// @ts-ignore
export function createAirAdminActionInvestigationDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAirAdminActionInvestigationData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AirInvestigationData}
 */
// @ts-ignore
export function createAirInvestigationDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAirInvestigationData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AirManualInvestigationData}
 */
// @ts-ignore
export function createAirManualInvestigationDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAirManualInvestigationData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertCollectionResponse}
 */
// @ts-ignore
export function createAlertCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertComment}
 */
// @ts-ignore
export function createAlertCommentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlertComment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AlertEvidence}
 */
// @ts-ignore
export function createAlertEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.amazonResourceEvidence":
                    return deserializeIntoAmazonResourceEvidence;
                case "#microsoft.graph.security.analyzedMessageEvidence":
                    return deserializeIntoAnalyzedMessageEvidence;
                case "#microsoft.graph.security.azureResourceEvidence":
                    return deserializeIntoAzureResourceEvidence;
                case "#microsoft.graph.security.blobContainerEvidence":
                    return deserializeIntoBlobContainerEvidence;
                case "#microsoft.graph.security.blobEvidence":
                    return deserializeIntoBlobEvidence;
                case "#microsoft.graph.security.cloudApplicationEvidence":
                    return deserializeIntoCloudApplicationEvidence;
                case "#microsoft.graph.security.cloudLogonRequestEvidence":
                    return deserializeIntoCloudLogonRequestEvidence;
                case "#microsoft.graph.security.cloudLogonSessionEvidence":
                    return deserializeIntoCloudLogonSessionEvidence;
                case "#microsoft.graph.security.containerEvidence":
                    return deserializeIntoContainerEvidence;
                case "#microsoft.graph.security.containerImageEvidence":
                    return deserializeIntoContainerImageEvidence;
                case "#microsoft.graph.security.containerRegistryEvidence":
                    return deserializeIntoContainerRegistryEvidence;
                case "#microsoft.graph.security.deviceEvidence":
                    return deserializeIntoDeviceEvidence;
                case "#microsoft.graph.security.dnsEvidence":
                    return deserializeIntoDnsEvidence;
                case "#microsoft.graph.security.fileEvidence":
                    return deserializeIntoFileEvidence;
                case "#microsoft.graph.security.fileHashEvidence":
                    return deserializeIntoFileHashEvidence;
                case "#microsoft.graph.security.gitHubOrganizationEvidence":
                    return deserializeIntoGitHubOrganizationEvidence;
                case "#microsoft.graph.security.gitHubRepoEvidence":
                    return deserializeIntoGitHubRepoEvidence;
                case "#microsoft.graph.security.gitHubUserEvidence":
                    return deserializeIntoGitHubUserEvidence;
                case "#microsoft.graph.security.googleCloudResourceEvidence":
                    return deserializeIntoGoogleCloudResourceEvidence;
                case "#microsoft.graph.security.hostLogonSessionEvidence":
                    return deserializeIntoHostLogonSessionEvidence;
                case "#microsoft.graph.security.ioTDeviceEvidence":
                    return deserializeIntoIoTDeviceEvidence;
                case "#microsoft.graph.security.ipEvidence":
                    return deserializeIntoIpEvidence;
                case "#microsoft.graph.security.kubernetesClusterEvidence":
                    return deserializeIntoKubernetesClusterEvidence;
                case "#microsoft.graph.security.kubernetesControllerEvidence":
                    return deserializeIntoKubernetesControllerEvidence;
                case "#microsoft.graph.security.kubernetesNamespaceEvidence":
                    return deserializeIntoKubernetesNamespaceEvidence;
                case "#microsoft.graph.security.kubernetesPodEvidence":
                    return deserializeIntoKubernetesPodEvidence;
                case "#microsoft.graph.security.kubernetesSecretEvidence":
                    return deserializeIntoKubernetesSecretEvidence;
                case "#microsoft.graph.security.kubernetesServiceAccountEvidence":
                    return deserializeIntoKubernetesServiceAccountEvidence;
                case "#microsoft.graph.security.kubernetesServiceEvidence":
                    return deserializeIntoKubernetesServiceEvidence;
                case "#microsoft.graph.security.mailboxConfigurationEvidence":
                    return deserializeIntoMailboxConfigurationEvidence;
                case "#microsoft.graph.security.mailboxEvidence":
                    return deserializeIntoMailboxEvidence;
                case "#microsoft.graph.security.mailClusterEvidence":
                    return deserializeIntoMailClusterEvidence;
                case "#microsoft.graph.security.malwareEvidence":
                    return deserializeIntoMalwareEvidence;
                case "#microsoft.graph.security.networkConnectionEvidence":
                    return deserializeIntoNetworkConnectionEvidence;
                case "#microsoft.graph.security.nicEvidence":
                    return deserializeIntoNicEvidence;
                case "#microsoft.graph.security.oauthApplicationEvidence":
                    return deserializeIntoOauthApplicationEvidence;
                case "#microsoft.graph.security.processEvidence":
                    return deserializeIntoProcessEvidence;
                case "#microsoft.graph.security.registryKeyEvidence":
                    return deserializeIntoRegistryKeyEvidence;
                case "#microsoft.graph.security.registryValueEvidence":
                    return deserializeIntoRegistryValueEvidence;
                case "#microsoft.graph.security.sasTokenEvidence":
                    return deserializeIntoSasTokenEvidence;
                case "#microsoft.graph.security.securityGroupEvidence":
                    return deserializeIntoSecurityGroupEvidence;
                case "#microsoft.graph.security.servicePrincipalEvidence":
                    return deserializeIntoServicePrincipalEvidence;
                case "#microsoft.graph.security.submissionMailEvidence":
                    return deserializeIntoSubmissionMailEvidence;
                case "#microsoft.graph.security.teamsMessageEvidence":
                    return deserializeIntoTeamsMessageEvidence;
                case "#microsoft.graph.security.urlEvidence":
                    return deserializeIntoUrlEvidence;
                case "#microsoft.graph.security.userEvidence":
                    return deserializeIntoUserEvidence;
            }
        }
    }
    return deserializeIntoAlertEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Alert}
 */
// @ts-ignore
export function createAlertFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAlert;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AmazonResourceEvidence}
 */
// @ts-ignore
export function createAmazonResourceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAmazonResourceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AnalyzedMessageEvidence}
 */
// @ts-ignore
export function createAnalyzedMessageEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAnalyzedMessageEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ArticleCollectionResponse}
 */
// @ts-ignore
export function createArticleCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticleCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Article}
 */
// @ts-ignore
export function createArticleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticle;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ArticleIndicatorCollectionResponse}
 */
// @ts-ignore
export function createArticleIndicatorCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticleIndicatorCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ArticleIndicator}
 */
// @ts-ignore
export function createArticleIndicatorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoArticleIndicator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Artifact}
 */
// @ts-ignore
export function createArtifactFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.host":
                    return deserializeIntoHost;
                case "#microsoft.graph.security.hostComponent":
                    return deserializeIntoHostComponent;
                case "#microsoft.graph.security.hostCookie":
                    return deserializeIntoHostCookie;
                case "#microsoft.graph.security.hostname":
                    return deserializeIntoHostname;
                case "#microsoft.graph.security.hostSslCertificate":
                    return deserializeIntoHostSslCertificate;
                case "#microsoft.graph.security.hostTracker":
                    return deserializeIntoHostTracker;
                case "#microsoft.graph.security.ipAddress":
                    return deserializeIntoIpAddress;
                case "#microsoft.graph.security.passiveDnsRecord":
                    return deserializeIntoPassiveDnsRecord;
                case "#microsoft.graph.security.sslCertificate":
                    return deserializeIntoSslCertificate;
                case "#microsoft.graph.security.unclassifiedArtifact":
                    return deserializeIntoUnclassifiedArtifact;
            }
        }
    }
    return deserializeIntoArtifact;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AttackSimAdminAuditRecord}
 */
// @ts-ignore
export function createAttackSimAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAttackSimAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditCoreRoot}
 */
// @ts-ignore
export function createAuditCoreRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditCoreRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditData}
 */
// @ts-ignore
export function createAuditDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.aadRiskDetectionAuditRecord":
                    return deserializeIntoAadRiskDetectionAuditRecord;
                case "#microsoft.graph.security.aedAuditRecord":
                    return deserializeIntoAedAuditRecord;
                case "#microsoft.graph.security.aiAppInteractionAuditRecord":
                    return deserializeIntoAiAppInteractionAuditRecord;
                case "#microsoft.graph.security.aipFileDeleted":
                    return deserializeIntoAipFileDeleted;
                case "#microsoft.graph.security.aipHeartBeat":
                    return deserializeIntoAipHeartBeat;
                case "#microsoft.graph.security.aipProtectionActionLogRequest":
                    return deserializeIntoAipProtectionActionLogRequest;
                case "#microsoft.graph.security.aipScannerDiscoverEvent":
                    return deserializeIntoAipScannerDiscoverEvent;
                case "#microsoft.graph.security.aipSensitivityLabelActionLogRequest":
                    return deserializeIntoAipSensitivityLabelActionLogRequest;
                case "#microsoft.graph.security.airAdminActionInvestigationData":
                    return deserializeIntoAirAdminActionInvestigationData;
                case "#microsoft.graph.security.airInvestigationData":
                    return deserializeIntoAirInvestigationData;
                case "#microsoft.graph.security.airManualInvestigationData":
                    return deserializeIntoAirManualInvestigationData;
                case "#microsoft.graph.security.attackSimAdminAuditRecord":
                    return deserializeIntoAttackSimAdminAuditRecord;
                case "#microsoft.graph.security.auditSearchAuditRecord":
                    return deserializeIntoAuditSearchAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryAccountLogonAuditRecord":
                    return deserializeIntoAzureActiveDirectoryAccountLogonAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryAuditRecord":
                    return deserializeIntoAzureActiveDirectoryAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryBaseAuditRecord":
                    return deserializeIntoAzureActiveDirectoryBaseAuditRecord;
                case "#microsoft.graph.security.azureActiveDirectoryStsLogonAuditRecord":
                    return deserializeIntoAzureActiveDirectoryStsLogonAuditRecord;
                case "#microsoft.graph.security.campaignAuditRecord":
                    return deserializeIntoCampaignAuditRecord;
                case "#microsoft.graph.security.caseAuditRecord":
                    return deserializeIntoCaseAuditRecord;
                case "#microsoft.graph.security.caseInvestigation":
                    return deserializeIntoCaseInvestigation;
                case "#microsoft.graph.security.cdpColdCrawlStatusRecord":
                    return deserializeIntoCdpColdCrawlStatusRecord;
                case "#microsoft.graph.security.cdpContentExplorerAggregateRecord":
                    return deserializeIntoCdpContentExplorerAggregateRecord;
                case "#microsoft.graph.security.cdpDlpSensitiveAuditRecord":
                    return deserializeIntoCdpDlpSensitiveAuditRecord;
                case "#microsoft.graph.security.cdpDlpSensitiveEndpointAuditRecord":
                    return deserializeIntoCdpDlpSensitiveEndpointAuditRecord;
                case "#microsoft.graph.security.cdpLogRecord":
                    return deserializeIntoCdpLogRecord;
                case "#microsoft.graph.security.cdpOcrBillingRecord":
                    return deserializeIntoCdpOcrBillingRecord;
                case "#microsoft.graph.security.cdpResourceScopeChangeEventRecord":
                    return deserializeIntoCdpResourceScopeChangeEventRecord;
                case "#microsoft.graph.security.cernerSMSLinkRecord":
                    return deserializeIntoCernerSMSLinkRecord;
                case "#microsoft.graph.security.cernerSMSSettingsUpdateRecord":
                    return deserializeIntoCernerSMSSettingsUpdateRecord;
                case "#microsoft.graph.security.cernerSMSUnlinkRecord":
                    return deserializeIntoCernerSMSUnlinkRecord;
                case "#microsoft.graph.security.complianceConnectorAuditRecord":
                    return deserializeIntoComplianceConnectorAuditRecord;
                case "#microsoft.graph.security.complianceDLMExchangeAuditRecord":
                    return deserializeIntoComplianceDLMExchangeAuditRecord;
                case "#microsoft.graph.security.complianceDLMSharePointAuditRecord":
                    return deserializeIntoComplianceDLMSharePointAuditRecord;
                case "#microsoft.graph.security.complianceDlpApplicationsAuditRecord":
                    return deserializeIntoComplianceDlpApplicationsAuditRecord;
                case "#microsoft.graph.security.complianceDlpApplicationsClassificationAuditRecord":
                    return deserializeIntoComplianceDlpApplicationsClassificationAuditRecord;
                case "#microsoft.graph.security.complianceDlpBaseAuditRecord":
                    return deserializeIntoComplianceDlpBaseAuditRecord;
                case "#microsoft.graph.security.complianceDlpClassificationBaseAuditRecord":
                    return deserializeIntoComplianceDlpClassificationBaseAuditRecord;
                case "#microsoft.graph.security.complianceDlpClassificationBaseCdpRecord":
                    return deserializeIntoComplianceDlpClassificationBaseCdpRecord;
                case "#microsoft.graph.security.complianceDlpEndpointAuditRecord":
                    return deserializeIntoComplianceDlpEndpointAuditRecord;
                case "#microsoft.graph.security.complianceDlpEndpointDiscoveryAuditRecord":
                    return deserializeIntoComplianceDlpEndpointDiscoveryAuditRecord;
                case "#microsoft.graph.security.complianceDlpExchangeAuditRecord":
                    return deserializeIntoComplianceDlpExchangeAuditRecord;
                case "#microsoft.graph.security.complianceDlpExchangeClassificationAuditRecord":
                    return deserializeIntoComplianceDlpExchangeClassificationAuditRecord;
                case "#microsoft.graph.security.complianceDlpExchangeClassificationCdpRecord":
                    return deserializeIntoComplianceDlpExchangeClassificationCdpRecord;
                case "#microsoft.graph.security.complianceDlpExchangeDiscoveryAuditRecord":
                    return deserializeIntoComplianceDlpExchangeDiscoveryAuditRecord;
                case "#microsoft.graph.security.complianceDlpSharePointAuditRecord":
                    return deserializeIntoComplianceDlpSharePointAuditRecord;
                case "#microsoft.graph.security.complianceDlpSharePointClassificationAuditRecord":
                    return deserializeIntoComplianceDlpSharePointClassificationAuditRecord;
                case "#microsoft.graph.security.complianceDlpSharePointClassificationExtendedAuditRecord":
                    return deserializeIntoComplianceDlpSharePointClassificationExtendedAuditRecord;
                case "#microsoft.graph.security.complianceManagerActionRecord":
                    return deserializeIntoComplianceManagerActionRecord;
                case "#microsoft.graph.security.complianceSupervisionBaseAuditRecord":
                    return deserializeIntoComplianceSupervisionBaseAuditRecord;
                case "#microsoft.graph.security.complianceSupervisionExchangeAuditRecord":
                    return deserializeIntoComplianceSupervisionExchangeAuditRecord;
                case "#microsoft.graph.security.consumptionResourceAuditRecord":
                    return deserializeIntoConsumptionResourceAuditRecord;
                case "#microsoft.graph.security.copilotInteractionAuditRecord":
                    return deserializeIntoCopilotInteractionAuditRecord;
                case "#microsoft.graph.security.coreReportingSettingsAuditRecord":
                    return deserializeIntoCoreReportingSettingsAuditRecord;
                case "#microsoft.graph.security.cortanaBriefingAuditRecord":
                    return deserializeIntoCortanaBriefingAuditRecord;
                case "#microsoft.graph.security.cpsCommonPolicyAuditRecord":
                    return deserializeIntoCpsCommonPolicyAuditRecord;
                case "#microsoft.graph.security.cpsPolicyConfigAuditRecord":
                    return deserializeIntoCpsPolicyConfigAuditRecord;
                case "#microsoft.graph.security.crmBaseAuditRecord":
                    return deserializeIntoCrmBaseAuditRecord;
                case "#microsoft.graph.security.crmEntityOperationAuditRecord":
                    return deserializeIntoCrmEntityOperationAuditRecord;
                case "#microsoft.graph.security.customerKeyServiceEncryptionAuditRecord":
                    return deserializeIntoCustomerKeyServiceEncryptionAuditRecord;
                case "#microsoft.graph.security.dataCenterSecurityBaseAuditRecord":
                    return deserializeIntoDataCenterSecurityBaseAuditRecord;
                case "#microsoft.graph.security.dataCenterSecurityCmdletAuditRecord":
                    return deserializeIntoDataCenterSecurityCmdletAuditRecord;
                case "#microsoft.graph.security.dataGovernanceAuditRecord":
                    return deserializeIntoDataGovernanceAuditRecord;
                case "#microsoft.graph.security.dataInsightsRestApiAuditRecord":
                    return deserializeIntoDataInsightsRestApiAuditRecord;
                case "#microsoft.graph.security.dataLakeExportOperationAuditRecord":
                    return deserializeIntoDataLakeExportOperationAuditRecord;
                case "#microsoft.graph.security.dataShareOperationAuditRecord":
                    return deserializeIntoDataShareOperationAuditRecord;
                case "#microsoft.graph.security.defaultAuditData":
                    return deserializeIntoDefaultAuditData;
                case "#microsoft.graph.security.defenderSecurityAlertBaseRecord":
                    return deserializeIntoDefenderSecurityAlertBaseRecord;
                case "#microsoft.graph.security.deleteCertificateRecord":
                    return deserializeIntoDeleteCertificateRecord;
                case "#microsoft.graph.security.disableConsentRecord":
                    return deserializeIntoDisableConsentRecord;
                case "#microsoft.graph.security.discoveryAuditRecord":
                    return deserializeIntoDiscoveryAuditRecord;
                case "#microsoft.graph.security.dlpEndpointAuditRecord":
                    return deserializeIntoDlpEndpointAuditRecord;
                case "#microsoft.graph.security.dlpSensitiveInformationTypeCmdletRecord":
                    return deserializeIntoDlpSensitiveInformationTypeCmdletRecord;
                case "#microsoft.graph.security.dlpSensitiveInformationTypeRulePackageCmdletRecord":
                    return deserializeIntoDlpSensitiveInformationTypeRulePackageCmdletRecord;
                case "#microsoft.graph.security.downloadCertificateRecord":
                    return deserializeIntoDownloadCertificateRecord;
                case "#microsoft.graph.security.dynamics365BusinessCentralAuditRecord":
                    return deserializeIntoDynamics365BusinessCentralAuditRecord;
                case "#microsoft.graph.security.enableConsentRecord":
                    return deserializeIntoEnableConsentRecord;
                case "#microsoft.graph.security.epicSMSLinkRecord":
                    return deserializeIntoEpicSMSLinkRecord;
                case "#microsoft.graph.security.epicSMSSettingsUpdateRecord":
                    return deserializeIntoEpicSMSSettingsUpdateRecord;
                case "#microsoft.graph.security.epicSMSUnlinkRecord":
                    return deserializeIntoEpicSMSUnlinkRecord;
                case "#microsoft.graph.security.exchangeAdminAuditRecord":
                    return deserializeIntoExchangeAdminAuditRecord;
                case "#microsoft.graph.security.exchangeAggregatedMailboxAuditRecord":
                    return deserializeIntoExchangeAggregatedMailboxAuditRecord;
                case "#microsoft.graph.security.exchangeAggregatedOperationRecord":
                    return deserializeIntoExchangeAggregatedOperationRecord;
                case "#microsoft.graph.security.exchangeMailboxAuditBaseRecord":
                    return deserializeIntoExchangeMailboxAuditBaseRecord;
                case "#microsoft.graph.security.exchangeMailboxAuditGroupRecord":
                    return deserializeIntoExchangeMailboxAuditGroupRecord;
                case "#microsoft.graph.security.exchangeMailboxAuditRecord":
                    return deserializeIntoExchangeMailboxAuditRecord;
                case "#microsoft.graph.security.fhirBaseUrlAddRecord":
                    return deserializeIntoFhirBaseUrlAddRecord;
                case "#microsoft.graph.security.fhirBaseUrlApproveRecord":
                    return deserializeIntoFhirBaseUrlApproveRecord;
                case "#microsoft.graph.security.fhirBaseUrlDeleteRecord":
                    return deserializeIntoFhirBaseUrlDeleteRecord;
                case "#microsoft.graph.security.fhirBaseUrlUpdateRecord":
                    return deserializeIntoFhirBaseUrlUpdateRecord;
                case "#microsoft.graph.security.healthcareSignalRecord":
                    return deserializeIntoHealthcareSignalRecord;
                case "#microsoft.graph.security.hostedRpaAuditRecord":
                    return deserializeIntoHostedRpaAuditRecord;
                case "#microsoft.graph.security.hrSignalAuditRecord":
                    return deserializeIntoHrSignalAuditRecord;
                case "#microsoft.graph.security.hygieneEventRecord":
                    return deserializeIntoHygieneEventRecord;
                case "#microsoft.graph.security.informationBarrierPolicyApplicationAuditRecord":
                    return deserializeIntoInformationBarrierPolicyApplicationAuditRecord;
                case "#microsoft.graph.security.informationWorkerProtectionAuditRecord":
                    return deserializeIntoInformationWorkerProtectionAuditRecord;
                case "#microsoft.graph.security.insiderRiskScopedUserInsightsRecord":
                    return deserializeIntoInsiderRiskScopedUserInsightsRecord;
                case "#microsoft.graph.security.insiderRiskScopedUsersRecord":
                    return deserializeIntoInsiderRiskScopedUsersRecord;
                case "#microsoft.graph.security.irmSecurityAlertRecord":
                    return deserializeIntoIrmSecurityAlertRecord;
                case "#microsoft.graph.security.irmUserDefinedDetectionRecord":
                    return deserializeIntoIrmUserDefinedDetectionRecord;
                case "#microsoft.graph.security.kaizalaAuditRecord":
                    return deserializeIntoKaizalaAuditRecord;
                case "#microsoft.graph.security.labelAnalyticsAggregateAuditRecord":
                    return deserializeIntoLabelAnalyticsAggregateAuditRecord;
                case "#microsoft.graph.security.labelContentExplorerAuditRecord":
                    return deserializeIntoLabelContentExplorerAuditRecord;
                case "#microsoft.graph.security.largeContentMetadataAuditRecord":
                    return deserializeIntoLargeContentMetadataAuditRecord;
                case "#microsoft.graph.security.m365ComplianceConnectorAuditRecord":
                    return deserializeIntoM365ComplianceConnectorAuditRecord;
                case "#microsoft.graph.security.m365DAADAuditRecord":
                    return deserializeIntoM365DAADAuditRecord;
                case "#microsoft.graph.security.mailSubmissionData":
                    return deserializeIntoMailSubmissionData;
                case "#microsoft.graph.security.managedServicesAuditRecord":
                    return deserializeIntoManagedServicesAuditRecord;
                case "#microsoft.graph.security.managedTenantsAuditRecord":
                    return deserializeIntoManagedTenantsAuditRecord;
                case "#microsoft.graph.security.mapgAlertsAuditRecord":
                    return deserializeIntoMapgAlertsAuditRecord;
                case "#microsoft.graph.security.mapgOnboardAuditRecord":
                    return deserializeIntoMapgOnboardAuditRecord;
                case "#microsoft.graph.security.mapgPolicyAuditRecord":
                    return deserializeIntoMapgPolicyAuditRecord;
                case "#microsoft.graph.security.mcasAlertsAuditRecord":
                    return deserializeIntoMcasAlertsAuditRecord;
                case "#microsoft.graph.security.mdaDataSecuritySignalRecord":
                    return deserializeIntoMdaDataSecuritySignalRecord;
                case "#microsoft.graph.security.mdatpAuditRecord":
                    return deserializeIntoMdatpAuditRecord;
                case "#microsoft.graph.security.mdcEventsRecord":
                    return deserializeIntoMdcEventsRecord;
                case "#microsoft.graph.security.mdiAuditRecord":
                    return deserializeIntoMdiAuditRecord;
                case "#microsoft.graph.security.meshWorldsAuditRecord":
                    return deserializeIntoMeshWorldsAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupBackupItemAuditRecord":
                    return deserializeIntoMicrosoft365BackupBackupItemAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupBackupPolicyAuditRecord":
                    return deserializeIntoMicrosoft365BackupBackupPolicyAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupRestoreItemAuditRecord":
                    return deserializeIntoMicrosoft365BackupRestoreItemAuditRecord;
                case "#microsoft.graph.security.microsoft365BackupRestoreTaskAuditRecord":
                    return deserializeIntoMicrosoft365BackupRestoreTaskAuditRecord;
                case "#microsoft.graph.security.microsoftDefenderExpertsBaseAuditRecord":
                    return deserializeIntoMicrosoftDefenderExpertsBaseAuditRecord;
                case "#microsoft.graph.security.microsoftDefenderExpertsXDRAuditRecord":
                    return deserializeIntoMicrosoftDefenderExpertsXDRAuditRecord;
                case "#microsoft.graph.security.microsoftFlowAuditRecord":
                    return deserializeIntoMicrosoftFlowAuditRecord;
                case "#microsoft.graph.security.microsoftFormsAuditRecord":
                    return deserializeIntoMicrosoftFormsAuditRecord;
                case "#microsoft.graph.security.microsoftGraphDataConnectConsent":
                    return deserializeIntoMicrosoftGraphDataConnectConsent;
                case "#microsoft.graph.security.microsoftGraphDataConnectOperation":
                    return deserializeIntoMicrosoftGraphDataConnectOperation;
                case "#microsoft.graph.security.microsoftPurviewDataMapOperationRecord":
                    return deserializeIntoMicrosoftPurviewDataMapOperationRecord;
                case "#microsoft.graph.security.microsoftPurviewMetadataPolicyOperationRecord":
                    return deserializeIntoMicrosoftPurviewMetadataPolicyOperationRecord;
                case "#microsoft.graph.security.microsoftPurviewPolicyOperationRecord":
                    return deserializeIntoMicrosoftPurviewPolicyOperationRecord;
                case "#microsoft.graph.security.microsoftPurviewPrivacyAuditEvent":
                    return deserializeIntoMicrosoftPurviewPrivacyAuditEvent;
                case "#microsoft.graph.security.microsoftStreamAuditRecord":
                    return deserializeIntoMicrosoftStreamAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsAdminAuditRecord":
                    return deserializeIntoMicrosoftTeamsAdminAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsAnalyticsAuditRecord":
                    return deserializeIntoMicrosoftTeamsAnalyticsAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsAuditRecord":
                    return deserializeIntoMicrosoftTeamsAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsDeviceAuditRecord":
                    return deserializeIntoMicrosoftTeamsDeviceAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsRetentionLabelActionAuditRecord":
                    return deserializeIntoMicrosoftTeamsRetentionLabelActionAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsSensitivityLabelActionAuditRecord":
                    return deserializeIntoMicrosoftTeamsSensitivityLabelActionAuditRecord;
                case "#microsoft.graph.security.microsoftTeamsShiftsAuditRecord":
                    return deserializeIntoMicrosoftTeamsShiftsAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelExchangeItemAuditRecord":
                    return deserializeIntoMipAutoLabelExchangeItemAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelItemAuditRecord":
                    return deserializeIntoMipAutoLabelItemAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelPolicyAuditRecord":
                    return deserializeIntoMipAutoLabelPolicyAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelProgressFeedbackAuditRecord":
                    return deserializeIntoMipAutoLabelProgressFeedbackAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelSharePointItemAuditRecord":
                    return deserializeIntoMipAutoLabelSharePointItemAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelSharePointPolicyLocationAuditRecord":
                    return deserializeIntoMipAutoLabelSharePointPolicyLocationAuditRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationSharePointCompletionRecord":
                    return deserializeIntoMipAutoLabelSimulationSharePointCompletionRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationSharePointProgressRecord":
                    return deserializeIntoMipAutoLabelSimulationSharePointProgressRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationStatisticsRecord":
                    return deserializeIntoMipAutoLabelSimulationStatisticsRecord;
                case "#microsoft.graph.security.mipAutoLabelSimulationStatusRecord":
                    return deserializeIntoMipAutoLabelSimulationStatusRecord;
                case "#microsoft.graph.security.mipExactDataMatchAuditRecord":
                    return deserializeIntoMipExactDataMatchAuditRecord;
                case "#microsoft.graph.security.mipLabelAnalyticsAuditRecord":
                    return deserializeIntoMipLabelAnalyticsAuditRecord;
                case "#microsoft.graph.security.mipLabelAuditRecord":
                    return deserializeIntoMipLabelAuditRecord;
                case "#microsoft.graph.security.mS365DCustomDetectionAuditRecord":
                    return deserializeIntoMS365DCustomDetectionAuditRecord;
                case "#microsoft.graph.security.mS365DIncidentAuditRecord":
                    return deserializeIntoMS365DIncidentAuditRecord;
                case "#microsoft.graph.security.mS365DSuppressionRuleAuditRecord":
                    return deserializeIntoMS365DSuppressionRuleAuditRecord;
                case "#microsoft.graph.security.msdeGeneralSettingsAuditRecord":
                    return deserializeIntoMsdeGeneralSettingsAuditRecord;
                case "#microsoft.graph.security.msdeIndicatorsSettingsAuditRecord":
                    return deserializeIntoMsdeIndicatorsSettingsAuditRecord;
                case "#microsoft.graph.security.msdeResponseActionsAuditRecord":
                    return deserializeIntoMsdeResponseActionsAuditRecord;
                case "#microsoft.graph.security.msdeRolesSettingsAuditRecord":
                    return deserializeIntoMsdeRolesSettingsAuditRecord;
                case "#microsoft.graph.security.msticNationStateNotificationRecord":
                    return deserializeIntoMsticNationStateNotificationRecord;
                case "#microsoft.graph.security.multiStageDispositionAuditRecord":
                    return deserializeIntoMultiStageDispositionAuditRecord;
                case "#microsoft.graph.security.myAnalyticsSettingsAuditRecord":
                    return deserializeIntoMyAnalyticsSettingsAuditRecord;
                case "#microsoft.graph.security.officeNativeAuditRecord":
                    return deserializeIntoOfficeNativeAuditRecord;
                case "#microsoft.graph.security.omePortalAuditRecord":
                    return deserializeIntoOmePortalAuditRecord;
                case "#microsoft.graph.security.oneDriveAuditRecord":
                    return deserializeIntoOneDriveAuditRecord;
                case "#microsoft.graph.security.onPremisesFileShareScannerDlpAuditRecord":
                    return deserializeIntoOnPremisesFileShareScannerDlpAuditRecord;
                case "#microsoft.graph.security.onPremisesScannerDlpAuditRecord":
                    return deserializeIntoOnPremisesScannerDlpAuditRecord;
                case "#microsoft.graph.security.onPremisesSharePointScannerDlpAuditRecord":
                    return deserializeIntoOnPremisesSharePointScannerDlpAuditRecord;
                case "#microsoft.graph.security.owaGetAccessTokenForResourceAuditRecord":
                    return deserializeIntoOwaGetAccessTokenForResourceAuditRecord;
                case "#microsoft.graph.security.peopleAdminSettingsAuditRecord":
                    return deserializeIntoPeopleAdminSettingsAuditRecord;
                case "#microsoft.graph.security.physicalBadgingSignalAuditRecord":
                    return deserializeIntoPhysicalBadgingSignalAuditRecord;
                case "#microsoft.graph.security.plannerCopyPlanAuditRecord":
                    return deserializeIntoPlannerCopyPlanAuditRecord;
                case "#microsoft.graph.security.plannerPlanAuditRecord":
                    return deserializeIntoPlannerPlanAuditRecord;
                case "#microsoft.graph.security.plannerPlanListAuditRecord":
                    return deserializeIntoPlannerPlanListAuditRecord;
                case "#microsoft.graph.security.plannerRosterAuditRecord":
                    return deserializeIntoPlannerRosterAuditRecord;
                case "#microsoft.graph.security.plannerRosterSensitivityLabelAuditRecord":
                    return deserializeIntoPlannerRosterSensitivityLabelAuditRecord;
                case "#microsoft.graph.security.plannerTaskAuditRecord":
                    return deserializeIntoPlannerTaskAuditRecord;
                case "#microsoft.graph.security.plannerTaskListAuditRecord":
                    return deserializeIntoPlannerTaskListAuditRecord;
                case "#microsoft.graph.security.plannerTenantSettingsAuditRecord":
                    return deserializeIntoPlannerTenantSettingsAuditRecord;
                case "#microsoft.graph.security.powerAppsAuditAppRecord":
                    return deserializeIntoPowerAppsAuditAppRecord;
                case "#microsoft.graph.security.powerAppsAuditPlanRecord":
                    return deserializeIntoPowerAppsAuditPlanRecord;
                case "#microsoft.graph.security.powerAppsAuditResourceRecord":
                    return deserializeIntoPowerAppsAuditResourceRecord;
                case "#microsoft.graph.security.powerBiAuditRecord":
                    return deserializeIntoPowerBiAuditRecord;
                case "#microsoft.graph.security.powerBiDlpAuditRecord":
                    return deserializeIntoPowerBiDlpAuditRecord;
                case "#microsoft.graph.security.powerPagesSiteAuditRecord":
                    return deserializeIntoPowerPagesSiteAuditRecord;
                case "#microsoft.graph.security.powerPlatformAdminDlpAuditRecord":
                    return deserializeIntoPowerPlatformAdminDlpAuditRecord;
                case "#microsoft.graph.security.powerPlatformAdminEnvironmentAuditRecord":
                    return deserializeIntoPowerPlatformAdminEnvironmentAuditRecord;
                case "#microsoft.graph.security.powerPlatformAdministratorActivityRecord":
                    return deserializeIntoPowerPlatformAdministratorActivityRecord;
                case "#microsoft.graph.security.powerPlatformLockboxResourceAccessRequestAuditRecord":
                    return deserializeIntoPowerPlatformLockboxResourceAccessRequestAuditRecord;
                case "#microsoft.graph.security.powerPlatformLockboxResourceCommandAuditRecord":
                    return deserializeIntoPowerPlatformLockboxResourceCommandAuditRecord;
                case "#microsoft.graph.security.powerPlatformServiceActivityAuditRecord":
                    return deserializeIntoPowerPlatformServiceActivityAuditRecord;
                case "#microsoft.graph.security.privacyDataMatchAuditRecord":
                    return deserializeIntoPrivacyDataMatchAuditRecord;
                case "#microsoft.graph.security.privacyDataMinimizationRecord":
                    return deserializeIntoPrivacyDataMinimizationRecord;
                case "#microsoft.graph.security.privacyDigestEmailRecord":
                    return deserializeIntoPrivacyDigestEmailRecord;
                case "#microsoft.graph.security.privacyOpenAccessAuditRecord":
                    return deserializeIntoPrivacyOpenAccessAuditRecord;
                case "#microsoft.graph.security.privacyPortalAuditRecord":
                    return deserializeIntoPrivacyPortalAuditRecord;
                case "#microsoft.graph.security.privacyRemediationActionRecord":
                    return deserializeIntoPrivacyRemediationActionRecord;
                case "#microsoft.graph.security.privacyRemediationRecord":
                    return deserializeIntoPrivacyRemediationRecord;
                case "#microsoft.graph.security.privacyTenantAuditHistoryRecord":
                    return deserializeIntoPrivacyTenantAuditHistoryRecord;
                case "#microsoft.graph.security.projectAuditRecord":
                    return deserializeIntoProjectAuditRecord;
                case "#microsoft.graph.security.projectForTheWebAssignedToMeSettingsAuditRecord":
                    return deserializeIntoProjectForTheWebAssignedToMeSettingsAuditRecord;
                case "#microsoft.graph.security.projectForTheWebProjectAuditRecord":
                    return deserializeIntoProjectForTheWebProjectAuditRecord;
                case "#microsoft.graph.security.projectForTheWebProjectSettingsAuditRecord":
                    return deserializeIntoProjectForTheWebProjectSettingsAuditRecord;
                case "#microsoft.graph.security.projectForTheWebRoadmapAuditRecord":
                    return deserializeIntoProjectForTheWebRoadmapAuditRecord;
                case "#microsoft.graph.security.projectForTheWebRoadmapItemAuditRecord":
                    return deserializeIntoProjectForTheWebRoadmapItemAuditRecord;
                case "#microsoft.graph.security.projectForTheWebRoadmapSettingsAuditRecord":
                    return deserializeIntoProjectForTheWebRoadmapSettingsAuditRecord;
                case "#microsoft.graph.security.projectForTheWebTaskAuditRecord":
                    return deserializeIntoProjectForTheWebTaskAuditRecord;
                case "#microsoft.graph.security.publicFolderAuditRecord":
                    return deserializeIntoPublicFolderAuditRecord;
                case "#microsoft.graph.security.purviewInsiderRiskAlertsRecord":
                    return deserializeIntoPurviewInsiderRiskAlertsRecord;
                case "#microsoft.graph.security.purviewInsiderRiskCasesRecord":
                    return deserializeIntoPurviewInsiderRiskCasesRecord;
                case "#microsoft.graph.security.quarantineAuditRecord":
                    return deserializeIntoQuarantineAuditRecord;
                case "#microsoft.graph.security.recordsManagementAuditRecord":
                    return deserializeIntoRecordsManagementAuditRecord;
                case "#microsoft.graph.security.retentionPolicyAuditRecord":
                    return deserializeIntoRetentionPolicyAuditRecord;
                case "#microsoft.graph.security.scoreEvidence":
                    return deserializeIntoScoreEvidence;
                case "#microsoft.graph.security.scorePlatformGenericAuditRecord":
                    return deserializeIntoScorePlatformGenericAuditRecord;
                case "#microsoft.graph.security.scriptRunAuditRecord":
                    return deserializeIntoScriptRunAuditRecord;
                case "#microsoft.graph.security.searchAuditRecord":
                    return deserializeIntoSearchAuditRecord;
                case "#microsoft.graph.security.securityComplianceAlertRecord":
                    return deserializeIntoSecurityComplianceAlertRecord;
                case "#microsoft.graph.security.securityComplianceCenterEOPCmdletAuditRecord":
                    return deserializeIntoSecurityComplianceCenterEOPCmdletAuditRecord;
                case "#microsoft.graph.security.securityComplianceInsightsAuditRecord":
                    return deserializeIntoSecurityComplianceInsightsAuditRecord;
                case "#microsoft.graph.security.securityComplianceRBACAuditRecord":
                    return deserializeIntoSecurityComplianceRBACAuditRecord;
                case "#microsoft.graph.security.securityComplianceUserChangeAuditRecord":
                    return deserializeIntoSecurityComplianceUserChangeAuditRecord;
                case "#microsoft.graph.security.sharePointAppPermissionOperationAuditRecord":
                    return deserializeIntoSharePointAppPermissionOperationAuditRecord;
                case "#microsoft.graph.security.sharePointAuditRecord":
                    return deserializeIntoSharePointAuditRecord;
                case "#microsoft.graph.security.sharePointCommentOperationAuditRecord":
                    return deserializeIntoSharePointCommentOperationAuditRecord;
                case "#microsoft.graph.security.sharePointContentTypeOperationAuditRecord":
                    return deserializeIntoSharePointContentTypeOperationAuditRecord;
                case "#microsoft.graph.security.sharePointESignatureAuditRecord":
                    return deserializeIntoSharePointESignatureAuditRecord;
                case "#microsoft.graph.security.sharePointFieldOperationAuditRecord":
                    return deserializeIntoSharePointFieldOperationAuditRecord;
                case "#microsoft.graph.security.sharePointFileOperationAuditRecord":
                    return deserializeIntoSharePointFileOperationAuditRecord;
                case "#microsoft.graph.security.sharePointListOperationAuditRecord":
                    return deserializeIntoSharePointListOperationAuditRecord;
                case "#microsoft.graph.security.sharePointSharingOperationAuditRecord":
                    return deserializeIntoSharePointSharingOperationAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessBaseAuditRecord":
                    return deserializeIntoSkypeForBusinessBaseAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessCmdletsAuditRecord":
                    return deserializeIntoSkypeForBusinessCmdletsAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessPSTNUsageAuditRecord":
                    return deserializeIntoSkypeForBusinessPSTNUsageAuditRecord;
                case "#microsoft.graph.security.skypeForBusinessUsersBlockedAuditRecord":
                    return deserializeIntoSkypeForBusinessUsersBlockedAuditRecord;
                case "#microsoft.graph.security.smsCreatePhoneNumberRecord":
                    return deserializeIntoSmsCreatePhoneNumberRecord;
                case "#microsoft.graph.security.smsDeletePhoneNumberRecord":
                    return deserializeIntoSmsDeletePhoneNumberRecord;
                case "#microsoft.graph.security.supervisoryReviewDayXInsightsAuditRecord":
                    return deserializeIntoSupervisoryReviewDayXInsightsAuditRecord;
                case "#microsoft.graph.security.syntheticProbeAuditRecord":
                    return deserializeIntoSyntheticProbeAuditRecord;
                case "#microsoft.graph.security.teamsEasyApprovalsAuditRecord":
                    return deserializeIntoTeamsEasyApprovalsAuditRecord;
                case "#microsoft.graph.security.teamsHealthcareAuditRecord":
                    return deserializeIntoTeamsHealthcareAuditRecord;
                case "#microsoft.graph.security.teamsUpdatesAuditRecord":
                    return deserializeIntoTeamsUpdatesAuditRecord;
                case "#microsoft.graph.security.tenantAllowBlockListAuditRecord":
                    return deserializeIntoTenantAllowBlockListAuditRecord;
                case "#microsoft.graph.security.threatFinderAuditRecord":
                    return deserializeIntoThreatFinderAuditRecord;
                case "#microsoft.graph.security.threatIntelligenceAtpContentData":
                    return deserializeIntoThreatIntelligenceAtpContentData;
                case "#microsoft.graph.security.threatIntelligenceMailData":
                    return deserializeIntoThreatIntelligenceMailData;
                case "#microsoft.graph.security.threatIntelligenceUrlClickData":
                    return deserializeIntoThreatIntelligenceUrlClickData;
                case "#microsoft.graph.security.todoAuditRecord":
                    return deserializeIntoTodoAuditRecord;
                case "#microsoft.graph.security.uamOperationAuditRecord":
                    return deserializeIntoUamOperationAuditRecord;
                case "#microsoft.graph.security.unifiedGroupAuditRecord":
                    return deserializeIntoUnifiedGroupAuditRecord;
                case "#microsoft.graph.security.unifiedSimulationMatchedItemAuditRecord":
                    return deserializeIntoUnifiedSimulationMatchedItemAuditRecord;
                case "#microsoft.graph.security.unifiedSimulationSummaryAuditRecord":
                    return deserializeIntoUnifiedSimulationSummaryAuditRecord;
                case "#microsoft.graph.security.uploadCertificateRecord":
                    return deserializeIntoUploadCertificateRecord;
                case "#microsoft.graph.security.urbacAssignmentAuditRecord":
                    return deserializeIntoUrbacAssignmentAuditRecord;
                case "#microsoft.graph.security.urbacEnableStateAuditRecord":
                    return deserializeIntoUrbacEnableStateAuditRecord;
                case "#microsoft.graph.security.urbacRoleAuditRecord":
                    return deserializeIntoUrbacRoleAuditRecord;
                case "#microsoft.graph.security.userTrainingAuditRecord":
                    return deserializeIntoUserTrainingAuditRecord;
                case "#microsoft.graph.security.vfamBasePolicyAuditRecord":
                    return deserializeIntoVfamBasePolicyAuditRecord;
                case "#microsoft.graph.security.vfamCreatePolicyAuditRecord":
                    return deserializeIntoVfamCreatePolicyAuditRecord;
                case "#microsoft.graph.security.vfamDeletePolicyAuditRecord":
                    return deserializeIntoVfamDeletePolicyAuditRecord;
                case "#microsoft.graph.security.vfamUpdatePolicyAuditRecord":
                    return deserializeIntoVfamUpdatePolicyAuditRecord;
                case "#microsoft.graph.security.vivaGoalsAuditRecord":
                    return deserializeIntoVivaGoalsAuditRecord;
                case "#microsoft.graph.security.vivaLearningAdminAuditRecord":
                    return deserializeIntoVivaLearningAdminAuditRecord;
                case "#microsoft.graph.security.vivaLearningAuditRecord":
                    return deserializeIntoVivaLearningAuditRecord;
                case "#microsoft.graph.security.vivaPulseAdminAuditRecord":
                    return deserializeIntoVivaPulseAdminAuditRecord;
                case "#microsoft.graph.security.vivaPulseOrganizerAuditRecord":
                    return deserializeIntoVivaPulseOrganizerAuditRecord;
                case "#microsoft.graph.security.vivaPulseReportAuditRecord":
                    return deserializeIntoVivaPulseReportAuditRecord;
                case "#microsoft.graph.security.vivaPulseResponseAuditRecord":
                    return deserializeIntoVivaPulseResponseAuditRecord;
                case "#microsoft.graph.security.wdatpAlertsAuditRecord":
                    return deserializeIntoWdatpAlertsAuditRecord;
                case "#microsoft.graph.security.windows365CustomerLockboxAuditRecord":
                    return deserializeIntoWindows365CustomerLockboxAuditRecord;
                case "#microsoft.graph.security.workplaceAnalyticsAuditRecord":
                    return deserializeIntoWorkplaceAnalyticsAuditRecord;
                case "#microsoft.graph.security.yammerAuditRecord":
                    return deserializeIntoYammerAuditRecord;
            }
        }
    }
    return deserializeIntoAuditData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogQueryCollectionResponse}
 */
// @ts-ignore
export function createAuditLogQueryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogQueryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogQuery}
 */
// @ts-ignore
export function createAuditLogQueryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogQuery;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogRecordCollectionResponse}
 */
// @ts-ignore
export function createAuditLogRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditLogRecord}
 */
// @ts-ignore
export function createAuditLogRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditLogRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuditSearchAuditRecord}
 */
// @ts-ignore
export function createAuditSearchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuditSearchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuthorityTemplateCollectionResponse}
 */
// @ts-ignore
export function createAuthorityTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuthorityTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AuthorityTemplate}
 */
// @ts-ignore
export function createAuthorityTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAuthorityTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AutonomousSystem}
 */
// @ts-ignore
export function createAutonomousSystemFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAutonomousSystem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryAccountLogonAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryAccountLogonAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryAccountLogonAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryBaseAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureActiveDirectoryStsLogonAuditRecord}
 */
// @ts-ignore
export function createAzureActiveDirectoryStsLogonAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureActiveDirectoryStsLogonAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AzureResourceEvidence}
 */
// @ts-ignore
export function createAzureResourceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAzureResourceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BlobContainerEvidence}
 */
// @ts-ignore
export function createBlobContainerEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBlobContainerEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BlobEvidence}
 */
// @ts-ignore
export function createBlobEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBlobEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CampaignAuditRecord}
 */
// @ts-ignore
export function createCampaignAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCampaignAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseAuditRecord}
 */
// @ts-ignore
export function createCaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseEscaped}
 */
// @ts-ignore
export function createCaseEscapedFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryCase":
                    return deserializeIntoEdiscoveryCase;
            }
        }
    }
    return deserializeIntoCaseEscaped;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseInvestigation}
 */
// @ts-ignore
export function createCaseInvestigationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCaseInvestigation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseOperationCollectionResponse}
 */
// @ts-ignore
export function createCaseOperationCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCaseOperationCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaseOperation}
 */
// @ts-ignore
export function createCaseOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryAddToReviewSetOperation":
                    return deserializeIntoEdiscoveryAddToReviewSetOperation;
                case "#microsoft.graph.security.ediscoveryEstimateOperation":
                    return deserializeIntoEdiscoveryEstimateOperation;
                case "#microsoft.graph.security.ediscoveryExportOperation":
                    return deserializeIntoEdiscoveryExportOperation;
                case "#microsoft.graph.security.ediscoveryHoldOperation":
                    return deserializeIntoEdiscoveryHoldOperation;
                case "#microsoft.graph.security.ediscoveryIndexOperation":
                    return deserializeIntoEdiscoveryIndexOperation;
                case "#microsoft.graph.security.ediscoveryPurgeDataOperation":
                    return deserializeIntoEdiscoveryPurgeDataOperation;
                case "#microsoft.graph.security.ediscoverySearchExportOperation":
                    return deserializeIntoEdiscoverySearchExportOperation;
                case "#microsoft.graph.security.ediscoveryTagOperation":
                    return deserializeIntoEdiscoveryTagOperation;
            }
        }
    }
    return deserializeIntoCaseOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CasesRoot}
 */
// @ts-ignore
export function createCasesRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCasesRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CategoryTemplateCollectionResponse}
 */
// @ts-ignore
export function createCategoryTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCategoryTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CategoryTemplate}
 */
// @ts-ignore
export function createCategoryTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCategoryTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpColdCrawlStatusRecord}
 */
// @ts-ignore
export function createCdpColdCrawlStatusRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpColdCrawlStatusRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpContentExplorerAggregateRecord}
 */
// @ts-ignore
export function createCdpContentExplorerAggregateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpContentExplorerAggregateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpDlpSensitiveAuditRecord}
 */
// @ts-ignore
export function createCdpDlpSensitiveAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpDlpSensitiveAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpDlpSensitiveEndpointAuditRecord}
 */
// @ts-ignore
export function createCdpDlpSensitiveEndpointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpDlpSensitiveEndpointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpLogRecord}
 */
// @ts-ignore
export function createCdpLogRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpLogRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpOcrBillingRecord}
 */
// @ts-ignore
export function createCdpOcrBillingRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpOcrBillingRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CdpResourceScopeChangeEventRecord}
 */
// @ts-ignore
export function createCdpResourceScopeChangeEventRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCdpResourceScopeChangeEventRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CernerSMSLinkRecord}
 */
// @ts-ignore
export function createCernerSMSLinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCernerSMSLinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CernerSMSSettingsUpdateRecord}
 */
// @ts-ignore
export function createCernerSMSSettingsUpdateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCernerSMSSettingsUpdateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CernerSMSUnlinkRecord}
 */
// @ts-ignore
export function createCernerSMSUnlinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCernerSMSUnlinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CitationTemplateCollectionResponse}
 */
// @ts-ignore
export function createCitationTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCitationTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CitationTemplate}
 */
// @ts-ignore
export function createCitationTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCitationTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudApplicationEvidence}
 */
// @ts-ignore
export function createCloudApplicationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudApplicationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudLogonRequestEvidence}
 */
// @ts-ignore
export function createCloudLogonRequestEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudLogonRequestEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CloudLogonSessionEvidence}
 */
// @ts-ignore
export function createCloudLogonSessionEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCloudLogonSessionEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceConnectorAuditRecord}
 */
// @ts-ignore
export function createComplianceConnectorAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceConnectorAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDLMExchangeAuditRecord}
 */
// @ts-ignore
export function createComplianceDLMExchangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDLMExchangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDLMSharePointAuditRecord}
 */
// @ts-ignore
export function createComplianceDLMSharePointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDLMSharePointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpApplicationsAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpApplicationsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpApplicationsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpApplicationsClassificationAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpApplicationsClassificationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpApplicationsClassificationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpBaseAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpClassificationBaseAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpClassificationBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpClassificationBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpClassificationBaseCdpRecord}
 */
// @ts-ignore
export function createComplianceDlpClassificationBaseCdpRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpClassificationBaseCdpRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpEndpointAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpEndpointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpEndpointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpEndpointDiscoveryAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpEndpointDiscoveryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpEndpointDiscoveryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeClassificationAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeClassificationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeClassificationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeClassificationCdpRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeClassificationCdpRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeClassificationCdpRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpExchangeDiscoveryAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpExchangeDiscoveryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpExchangeDiscoveryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpSharePointAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpSharePointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpSharePointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpSharePointClassificationAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpSharePointClassificationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpSharePointClassificationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceDlpSharePointClassificationExtendedAuditRecord}
 */
// @ts-ignore
export function createComplianceDlpSharePointClassificationExtendedAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceDlpSharePointClassificationExtendedAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceManagerActionRecord}
 */
// @ts-ignore
export function createComplianceManagerActionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceManagerActionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceSupervisionBaseAuditRecord}
 */
// @ts-ignore
export function createComplianceSupervisionBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceSupervisionBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ComplianceSupervisionExchangeAuditRecord}
 */
// @ts-ignore
export function createComplianceSupervisionExchangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoComplianceSupervisionExchangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ConsumptionResourceAuditRecord}
 */
// @ts-ignore
export function createConsumptionResourceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoConsumptionResourceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContainerEvidence}
 */
// @ts-ignore
export function createContainerEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContainerEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContainerImageEvidence}
 */
// @ts-ignore
export function createContainerImageEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContainerImageEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ContainerRegistryEvidence}
 */
// @ts-ignore
export function createContainerRegistryEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoContainerRegistryEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CopilotInteractionAuditRecord}
 */
// @ts-ignore
export function createCopilotInteractionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCopilotInteractionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CoreReportingSettingsAuditRecord}
 */
// @ts-ignore
export function createCoreReportingSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCoreReportingSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CortanaBriefingAuditRecord}
 */
// @ts-ignore
export function createCortanaBriefingAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCortanaBriefingAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CpsCommonPolicyAuditRecord}
 */
// @ts-ignore
export function createCpsCommonPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCpsCommonPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CpsPolicyConfigAuditRecord}
 */
// @ts-ignore
export function createCpsPolicyConfigAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCpsPolicyConfigAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CrmBaseAuditRecord}
 */
// @ts-ignore
export function createCrmBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCrmBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CrmEntityOperationAuditRecord}
 */
// @ts-ignore
export function createCrmEntityOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCrmEntityOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CustomerKeyServiceEncryptionAuditRecord}
 */
// @ts-ignore
export function createCustomerKeyServiceEncryptionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCustomerKeyServiceEncryptionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CvssSummary}
 */
// @ts-ignore
export function createCvssSummaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCvssSummary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataCenterSecurityBaseAuditRecord}
 */
// @ts-ignore
export function createDataCenterSecurityBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataCenterSecurityBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataCenterSecurityCmdletAuditRecord}
 */
// @ts-ignore
export function createDataCenterSecurityCmdletAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataCenterSecurityCmdletAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataGovernanceAuditRecord}
 */
// @ts-ignore
export function createDataGovernanceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataGovernanceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataInsightsRestApiAuditRecord}
 */
// @ts-ignore
export function createDataInsightsRestApiAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataInsightsRestApiAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataLakeExportOperationAuditRecord}
 */
// @ts-ignore
export function createDataLakeExportOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataLakeExportOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSet}
 */
// @ts-ignore
export function createDataSetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryReviewSet":
                    return deserializeIntoEdiscoveryReviewSet;
            }
        }
    }
    return deserializeIntoDataSet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataShareOperationAuditRecord}
 */
// @ts-ignore
export function createDataShareOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataShareOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSourceCollectionResponse}
 */
// @ts-ignore
export function createDataSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDataSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSourceContainer}
 */
// @ts-ignore
export function createDataSourceContainerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryCustodian":
                    return deserializeIntoEdiscoveryCustodian;
                case "#microsoft.graph.security.ediscoveryNoncustodialDataSource":
                    return deserializeIntoEdiscoveryNoncustodialDataSource;
            }
        }
    }
    return deserializeIntoDataSourceContainer;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DataSource}
 */
// @ts-ignore
export function createDataSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.siteSource":
                    return deserializeIntoSiteSource;
                case "#microsoft.graph.security.unifiedGroupSource":
                    return deserializeIntoUnifiedGroupSource;
                case "#microsoft.graph.security.userSource":
                    return deserializeIntoUserSource;
            }
        }
    }
    return deserializeIntoDataSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DefaultAuditData}
 */
// @ts-ignore
export function createDefaultAuditDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDefaultAuditData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DefenderSecurityAlertBaseRecord}
 */
// @ts-ignore
export function createDefenderSecurityAlertBaseRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDefenderSecurityAlertBaseRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeleteCertificateRecord}
 */
// @ts-ignore
export function createDeleteCertificateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeleteCertificateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DepartmentTemplateCollectionResponse}
 */
// @ts-ignore
export function createDepartmentTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDepartmentTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DepartmentTemplate}
 */
// @ts-ignore
export function createDepartmentTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDepartmentTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeploymentAccessKeyType}
 */
// @ts-ignore
export function createDeploymentAccessKeyTypeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeploymentAccessKeyType;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DeviceEvidence}
 */
// @ts-ignore
export function createDeviceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDeviceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Dictionary}
 */
// @ts-ignore
export function createDictionaryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDictionary;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DisableConsentRecord}
 */
// @ts-ignore
export function createDisableConsentRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDisableConsentRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DiscoveryAuditRecord}
 */
// @ts-ignore
export function createDiscoveryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDiscoveryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DispositionReviewStageCollectionResponse}
 */
// @ts-ignore
export function createDispositionReviewStageCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDispositionReviewStageCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DispositionReviewStage}
 */
// @ts-ignore
export function createDispositionReviewStageFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDispositionReviewStage;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DlpEndpointAuditRecord}
 */
// @ts-ignore
export function createDlpEndpointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDlpEndpointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DlpSensitiveInformationTypeCmdletRecord}
 */
// @ts-ignore
export function createDlpSensitiveInformationTypeCmdletRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDlpSensitiveInformationTypeCmdletRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DlpSensitiveInformationTypeRulePackageCmdletRecord}
 */
// @ts-ignore
export function createDlpSensitiveInformationTypeRulePackageCmdletRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDlpSensitiveInformationTypeRulePackageCmdletRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DnsEvidence}
 */
// @ts-ignore
export function createDnsEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDnsEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DownloadCertificateRecord}
 */
// @ts-ignore
export function createDownloadCertificateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDownloadCertificateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Dynamics365BusinessCentralAuditRecord}
 */
// @ts-ignore
export function createDynamics365BusinessCentralAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDynamics365BusinessCentralAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryAddToReviewSetOperation}
 */
// @ts-ignore
export function createEdiscoveryAddToReviewSetOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryAddToReviewSetOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCaseCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryCaseCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCaseCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCase}
 */
// @ts-ignore
export function createEdiscoveryCaseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCase;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCaseSettings}
 */
// @ts-ignore
export function createEdiscoveryCaseSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCaseSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCustodianCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryCustodianCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCustodianCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryCustodian}
 */
// @ts-ignore
export function createEdiscoveryCustodianFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryCustodian;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryEstimateOperation}
 */
// @ts-ignore
export function createEdiscoveryEstimateOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryEstimateOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryExportOperation}
 */
// @ts-ignore
export function createEdiscoveryExportOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryExportOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryHoldOperation}
 */
// @ts-ignore
export function createEdiscoveryHoldOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryHoldOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryIndexOperation}
 */
// @ts-ignore
export function createEdiscoveryIndexOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryIndexOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryNoncustodialDataSourceCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryNoncustodialDataSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryNoncustodialDataSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryNoncustodialDataSource}
 */
// @ts-ignore
export function createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryNoncustodialDataSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryPurgeDataOperation}
 */
// @ts-ignore
export function createEdiscoveryPurgeDataOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryPurgeDataOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSetCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryReviewSetCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSetCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSet}
 */
// @ts-ignore
export function createEdiscoveryReviewSetFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSetQueryCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryReviewSetQueryCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSetQueryCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewSetQuery}
 */
// @ts-ignore
export function createEdiscoveryReviewSetQueryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewSetQuery;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewTagCollectionResponse}
 */
// @ts-ignore
export function createEdiscoveryReviewTagCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewTagCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryReviewTag}
 */
// @ts-ignore
export function createEdiscoveryReviewTagFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryReviewTag;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoverySearchCollectionResponse}
 */
// @ts-ignore
export function createEdiscoverySearchCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoverySearchCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoverySearchExportOperation}
 */
// @ts-ignore
export function createEdiscoverySearchExportOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoverySearchExportOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoverySearch}
 */
// @ts-ignore
export function createEdiscoverySearchFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoverySearch;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EdiscoveryTagOperation}
 */
// @ts-ignore
export function createEdiscoveryTagOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEdiscoveryTagOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EmailSender}
 */
// @ts-ignore
export function createEmailSenderFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEmailSender;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EnableConsentRecord}
 */
// @ts-ignore
export function createEnableConsentRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEnableConsentRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EpicSMSLinkRecord}
 */
// @ts-ignore
export function createEpicSMSLinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEpicSMSLinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EpicSMSSettingsUpdateRecord}
 */
// @ts-ignore
export function createEpicSMSSettingsUpdateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEpicSMSSettingsUpdateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EpicSMSUnlinkRecord}
 */
// @ts-ignore
export function createEpicSMSUnlinkRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEpicSMSUnlinkRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EventPropagationResult}
 */
// @ts-ignore
export function createEventPropagationResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEventPropagationResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EventQuery}
 */
// @ts-ignore
export function createEventQueryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEventQuery;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeAdminAuditRecord}
 */
// @ts-ignore
export function createExchangeAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeAggregatedMailboxAuditRecord}
 */
// @ts-ignore
export function createExchangeAggregatedMailboxAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeAggregatedMailboxAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeAggregatedOperationRecord}
 */
// @ts-ignore
export function createExchangeAggregatedOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeAggregatedOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeMailboxAuditBaseRecord}
 */
// @ts-ignore
export function createExchangeMailboxAuditBaseRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeMailboxAuditBaseRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeMailboxAuditGroupRecord}
 */
// @ts-ignore
export function createExchangeMailboxAuditGroupRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeMailboxAuditGroupRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExchangeMailboxAuditRecord}
 */
// @ts-ignore
export function createExchangeMailboxAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExchangeMailboxAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ExportFileMetadata}
 */
// @ts-ignore
export function createExportFileMetadataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoExportFileMetadata;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlAddRecord}
 */
// @ts-ignore
export function createFhirBaseUrlAddRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlAddRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlApproveRecord}
 */
// @ts-ignore
export function createFhirBaseUrlApproveRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlApproveRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlDeleteRecord}
 */
// @ts-ignore
export function createFhirBaseUrlDeleteRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlDeleteRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FhirBaseUrlUpdateRecord}
 */
// @ts-ignore
export function createFhirBaseUrlUpdateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFhirBaseUrlUpdateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileDetails}
 */
// @ts-ignore
export function createFileDetailsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileDetails;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileEvidence}
 */
// @ts-ignore
export function createFileEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileHashEvidence}
 */
// @ts-ignore
export function createFileHashEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileHashEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FileHash}
 */
// @ts-ignore
export function createFileHashFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFileHash;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanAppliedCategory}
 */
// @ts-ignore
export function createFilePlanAppliedCategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanAppliedCategory;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanAuthority}
 */
// @ts-ignore
export function createFilePlanAuthorityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanAuthority;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanCitation}
 */
// @ts-ignore
export function createFilePlanCitationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanCitation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDepartment}
 */
// @ts-ignore
export function createFilePlanDepartmentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanDepartment;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDescriptorBase}
 */
// @ts-ignore
export function createFilePlanDescriptorBaseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.filePlanAppliedCategory":
                    return deserializeIntoFilePlanAppliedCategory;
                case "#microsoft.graph.security.filePlanAuthority":
                    return deserializeIntoFilePlanAuthority;
                case "#microsoft.graph.security.filePlanCitation":
                    return deserializeIntoFilePlanCitation;
                case "#microsoft.graph.security.filePlanDepartment":
                    return deserializeIntoFilePlanDepartment;
                case "#microsoft.graph.security.filePlanReference":
                    return deserializeIntoFilePlanReference;
                case "#microsoft.graph.security.filePlanSubcategory":
                    return deserializeIntoFilePlanSubcategory;
            }
        }
    }
    return deserializeIntoFilePlanDescriptorBase;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDescriptor}
 */
// @ts-ignore
export function createFilePlanDescriptorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanDescriptor;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanDescriptorTemplate}
 */
// @ts-ignore
export function createFilePlanDescriptorTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.authorityTemplate":
                    return deserializeIntoAuthorityTemplate;
                case "#microsoft.graph.security.categoryTemplate":
                    return deserializeIntoCategoryTemplate;
                case "#microsoft.graph.security.citationTemplate":
                    return deserializeIntoCitationTemplate;
                case "#microsoft.graph.security.departmentTemplate":
                    return deserializeIntoDepartmentTemplate;
                case "#microsoft.graph.security.filePlanReferenceTemplate":
                    return deserializeIntoFilePlanReferenceTemplate;
                case "#microsoft.graph.security.subcategoryTemplate":
                    return deserializeIntoSubcategoryTemplate;
            }
        }
    }
    return deserializeIntoFilePlanDescriptorTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanReference}
 */
// @ts-ignore
export function createFilePlanReferenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanReference;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanReferenceTemplateCollectionResponse}
 */
// @ts-ignore
export function createFilePlanReferenceTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanReferenceTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanReferenceTemplate}
 */
// @ts-ignore
export function createFilePlanReferenceTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanReferenceTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilePlanSubcategory}
 */
// @ts-ignore
export function createFilePlanSubcategoryFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilePlanSubcategory;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FormattedContent}
 */
// @ts-ignore
export function createFormattedContentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFormattedContent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GeoLocation}
 */
// @ts-ignore
export function createGeoLocationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGeoLocation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GitHubOrganizationEvidence}
 */
// @ts-ignore
export function createGitHubOrganizationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGitHubOrganizationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GitHubRepoEvidence}
 */
// @ts-ignore
export function createGitHubRepoEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGitHubRepoEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GitHubUserEvidence}
 */
// @ts-ignore
export function createGitHubUserEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGitHubUserEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {GoogleCloudResourceEvidence}
 */
// @ts-ignore
export function createGoogleCloudResourceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoGoogleCloudResourceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthcareSignalRecord}
 */
// @ts-ignore
export function createHealthcareSignalRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHealthcareSignalRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthIssueCollectionResponse}
 */
// @ts-ignore
export function createHealthIssueCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHealthIssueCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HealthIssue}
 */
// @ts-ignore
export function createHealthIssueFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHealthIssue;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostCollectionResponse}
 */
// @ts-ignore
export function createHostCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostComponentCollectionResponse}
 */
// @ts-ignore
export function createHostComponentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostComponentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostComponent}
 */
// @ts-ignore
export function createHostComponentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostComponent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostCookieCollectionResponse}
 */
// @ts-ignore
export function createHostCookieCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostCookieCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostCookie}
 */
// @ts-ignore
export function createHostCookieFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostCookie;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostedRpaAuditRecord}
 */
// @ts-ignore
export function createHostedRpaAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostedRpaAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Host}
 */
// @ts-ignore
export function createHostFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.hostname":
                    return deserializeIntoHostname;
                case "#microsoft.graph.security.ipAddress":
                    return deserializeIntoIpAddress;
            }
        }
    }
    return deserializeIntoHost;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostLogonSessionEvidence}
 */
// @ts-ignore
export function createHostLogonSessionEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostLogonSessionEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Hostname}
 */
// @ts-ignore
export function createHostnameFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostname;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPairCollectionResponse}
 */
// @ts-ignore
export function createHostPairCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPairCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPair}
 */
// @ts-ignore
export function createHostPairFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPair;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPortBanner}
 */
// @ts-ignore
export function createHostPortBannerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPortBanner;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPortCollectionResponse}
 */
// @ts-ignore
export function createHostPortCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPortCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPortComponent}
 */
// @ts-ignore
export function createHostPortComponentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPortComponent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostPort}
 */
// @ts-ignore
export function createHostPortFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostPort;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostReputation}
 */
// @ts-ignore
export function createHostReputationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostReputation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostReputationRule}
 */
// @ts-ignore
export function createHostReputationRuleFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostReputationRule;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostSslCertificateCollectionResponse}
 */
// @ts-ignore
export function createHostSslCertificateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostSslCertificateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostSslCertificate}
 */
// @ts-ignore
export function createHostSslCertificateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostSslCertificate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostSslCertificatePort}
 */
// @ts-ignore
export function createHostSslCertificatePortFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostSslCertificatePort;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostTrackerCollectionResponse}
 */
// @ts-ignore
export function createHostTrackerCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostTrackerCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HostTracker}
 */
// @ts-ignore
export function createHostTrackerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHostTracker;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HrSignalAuditRecord}
 */
// @ts-ignore
export function createHrSignalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHrSignalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HuntingQueryResults}
 */
// @ts-ignore
export function createHuntingQueryResultsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHuntingQueryResults;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HuntingRowResult}
 */
// @ts-ignore
export function createHuntingRowResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHuntingRowResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HygieneEventRecord}
 */
// @ts-ignore
export function createHygieneEventRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHygieneEventRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Hyperlink}
 */
// @ts-ignore
export function createHyperlinkFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHyperlink;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IdentityContainer}
 */
// @ts-ignore
export function createIdentityContainerFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIdentityContainer;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IncidentCollectionResponse}
 */
// @ts-ignore
export function createIncidentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIncidentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Incident}
 */
// @ts-ignore
export function createIncidentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIncident;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Indicator}
 */
// @ts-ignore
export function createIndicatorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.articleIndicator":
                    return deserializeIntoArticleIndicator;
                case "#microsoft.graph.security.intelligenceProfileIndicator":
                    return deserializeIntoIntelligenceProfileIndicator;
            }
        }
    }
    return deserializeIntoIndicator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InformationBarrierPolicyApplicationAuditRecord}
 */
// @ts-ignore
export function createInformationBarrierPolicyApplicationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInformationBarrierPolicyApplicationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InformationWorkerProtectionAuditRecord}
 */
// @ts-ignore
export function createInformationWorkerProtectionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInformationWorkerProtectionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InsiderRiskScopedUserInsightsRecord}
 */
// @ts-ignore
export function createInsiderRiskScopedUserInsightsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInsiderRiskScopedUserInsightsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InsiderRiskScopedUsersRecord}
 */
// @ts-ignore
export function createInsiderRiskScopedUsersRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInsiderRiskScopedUsersRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileCollectionResponse}
 */
// @ts-ignore
export function createIntelligenceProfileCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileCountryOrRegionOfOrigin}
 */
// @ts-ignore
export function createIntelligenceProfileCountryOrRegionOfOriginFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileCountryOrRegionOfOrigin;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfile}
 */
// @ts-ignore
export function createIntelligenceProfileFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfile;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileIndicatorCollectionResponse}
 */
// @ts-ignore
export function createIntelligenceProfileIndicatorCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileIndicatorCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IntelligenceProfileIndicator}
 */
// @ts-ignore
export function createIntelligenceProfileIndicatorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIntelligenceProfileIndicator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IoTDeviceEvidence}
 */
// @ts-ignore
export function createIoTDeviceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIoTDeviceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IpAddress}
 */
// @ts-ignore
export function createIpAddressFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIpAddress;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IpEvidence}
 */
// @ts-ignore
export function createIpEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIpEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IrmSecurityAlertRecord}
 */
// @ts-ignore
export function createIrmSecurityAlertRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIrmSecurityAlertRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IrmUserDefinedDetectionRecord}
 */
// @ts-ignore
export function createIrmUserDefinedDetectionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIrmUserDefinedDetectionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KaizalaAuditRecord}
 */
// @ts-ignore
export function createKaizalaAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKaizalaAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesClusterEvidence}
 */
// @ts-ignore
export function createKubernetesClusterEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesClusterEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesControllerEvidence}
 */
// @ts-ignore
export function createKubernetesControllerEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesControllerEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesNamespaceEvidence}
 */
// @ts-ignore
export function createKubernetesNamespaceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesNamespaceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesPodEvidence}
 */
// @ts-ignore
export function createKubernetesPodEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesPodEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesSecretEvidence}
 */
// @ts-ignore
export function createKubernetesSecretEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesSecretEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesServiceAccountEvidence}
 */
// @ts-ignore
export function createKubernetesServiceAccountEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesServiceAccountEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesServiceEvidence}
 */
// @ts-ignore
export function createKubernetesServiceEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesServiceEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesServicePort}
 */
// @ts-ignore
export function createKubernetesServicePortFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesServicePort;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelAnalyticsAggregateAuditRecord}
 */
// @ts-ignore
export function createLabelAnalyticsAggregateAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelAnalyticsAggregateAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelContentExplorerAuditRecord}
 */
// @ts-ignore
export function createLabelContentExplorerAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelContentExplorerAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LabelsRoot}
 */
// @ts-ignore
export function createLabelsRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLabelsRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LargeContentMetadataAuditRecord}
 */
// @ts-ignore
export function createLargeContentMetadataAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLargeContentMetadataAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoggedOnUser}
 */
// @ts-ignore
export function createLoggedOnUserFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoggedOnUser;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {M365ComplianceConnectorAuditRecord}
 */
// @ts-ignore
export function createM365ComplianceConnectorAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoM365ComplianceConnectorAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {M365DAADAuditRecord}
 */
// @ts-ignore
export function createM365DAADAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoM365DAADAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailboxConfigurationEvidence}
 */
// @ts-ignore
export function createMailboxConfigurationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailboxConfigurationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailboxEvidence}
 */
// @ts-ignore
export function createMailboxEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailboxEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailClusterEvidence}
 */
// @ts-ignore
export function createMailClusterEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailClusterEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MailSubmissionData}
 */
// @ts-ignore
export function createMailSubmissionDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMailSubmissionData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MalwareEvidence}
 */
// @ts-ignore
export function createMalwareEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMalwareEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedServicesAuditRecord}
 */
// @ts-ignore
export function createManagedServicesAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedServicesAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ManagedTenantsAuditRecord}
 */
// @ts-ignore
export function createManagedTenantsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoManagedTenantsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MapgAlertsAuditRecord}
 */
// @ts-ignore
export function createMapgAlertsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMapgAlertsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MapgOnboardAuditRecord}
 */
// @ts-ignore
export function createMapgOnboardAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMapgOnboardAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MapgPolicyAuditRecord}
 */
// @ts-ignore
export function createMapgPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMapgPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {McasAlertsAuditRecord}
 */
// @ts-ignore
export function createMcasAlertsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMcasAlertsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdaDataSecuritySignalRecord}
 */
// @ts-ignore
export function createMdaDataSecuritySignalRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdaDataSecuritySignalRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdatpAuditRecord}
 */
// @ts-ignore
export function createMdatpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdatpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdcEventsRecord}
 */
// @ts-ignore
export function createMdcEventsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdcEventsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MdiAuditRecord}
 */
// @ts-ignore
export function createMdiAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMdiAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MeshWorldsAuditRecord}
 */
// @ts-ignore
export function createMeshWorldsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMeshWorldsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupBackupItemAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupBackupItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupBackupItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupBackupPolicyAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupBackupPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupBackupPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupRestoreItemAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupRestoreItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupRestoreItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Microsoft365BackupRestoreTaskAuditRecord}
 */
// @ts-ignore
export function createMicrosoft365BackupRestoreTaskAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoft365BackupRestoreTaskAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftDefenderExpertsBaseAuditRecord}
 */
// @ts-ignore
export function createMicrosoftDefenderExpertsBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftDefenderExpertsBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftDefenderExpertsXDRAuditRecord}
 */
// @ts-ignore
export function createMicrosoftDefenderExpertsXDRAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftDefenderExpertsXDRAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftFlowAuditRecord}
 */
// @ts-ignore
export function createMicrosoftFlowAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftFlowAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftFormsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftFormsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftFormsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftGraphDataConnectConsent}
 */
// @ts-ignore
export function createMicrosoftGraphDataConnectConsentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftGraphDataConnectConsent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftGraphDataConnectOperation}
 */
// @ts-ignore
export function createMicrosoftGraphDataConnectOperationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftGraphDataConnectOperation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewDataMapOperationRecord}
 */
// @ts-ignore
export function createMicrosoftPurviewDataMapOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewDataMapOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewMetadataPolicyOperationRecord}
 */
// @ts-ignore
export function createMicrosoftPurviewMetadataPolicyOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewMetadataPolicyOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewPolicyOperationRecord}
 */
// @ts-ignore
export function createMicrosoftPurviewPolicyOperationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewPolicyOperationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftPurviewPrivacyAuditEvent}
 */
// @ts-ignore
export function createMicrosoftPurviewPrivacyAuditEventFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftPurviewPrivacyAuditEvent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftStreamAuditRecord}
 */
// @ts-ignore
export function createMicrosoftStreamAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftStreamAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsAdminAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsAnalyticsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsAnalyticsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsAnalyticsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsDeviceAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsDeviceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsDeviceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsRetentionLabelActionAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsRetentionLabelActionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsRetentionLabelActionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsSensitivityLabelActionAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsSensitivityLabelActionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsSensitivityLabelActionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MicrosoftTeamsShiftsAuditRecord}
 */
// @ts-ignore
export function createMicrosoftTeamsShiftsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMicrosoftTeamsShiftsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelExchangeItemAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelExchangeItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelExchangeItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelItemAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelPolicyAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelProgressFeedbackAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelProgressFeedbackAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelProgressFeedbackAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSharePointItemAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelSharePointItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSharePointItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSharePointPolicyLocationAuditRecord}
 */
// @ts-ignore
export function createMipAutoLabelSharePointPolicyLocationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSharePointPolicyLocationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationSharePointCompletionRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationSharePointCompletionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationSharePointCompletionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationSharePointProgressRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationSharePointProgressRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationSharePointProgressRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationStatisticsRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationStatisticsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationStatisticsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipAutoLabelSimulationStatusRecord}
 */
// @ts-ignore
export function createMipAutoLabelSimulationStatusRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipAutoLabelSimulationStatusRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipExactDataMatchAuditRecord}
 */
// @ts-ignore
export function createMipExactDataMatchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipExactDataMatchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipLabelAnalyticsAuditRecord}
 */
// @ts-ignore
export function createMipLabelAnalyticsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipLabelAnalyticsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MipLabelAuditRecord}
 */
// @ts-ignore
export function createMipLabelAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMipLabelAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MS365DCustomDetectionAuditRecord}
 */
// @ts-ignore
export function createMS365DCustomDetectionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMS365DCustomDetectionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MS365DIncidentAuditRecord}
 */
// @ts-ignore
export function createMS365DIncidentAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMS365DIncidentAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MS365DSuppressionRuleAuditRecord}
 */
// @ts-ignore
export function createMS365DSuppressionRuleAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMS365DSuppressionRuleAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeGeneralSettingsAuditRecord}
 */
// @ts-ignore
export function createMsdeGeneralSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeGeneralSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeIndicatorsSettingsAuditRecord}
 */
// @ts-ignore
export function createMsdeIndicatorsSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeIndicatorsSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeResponseActionsAuditRecord}
 */
// @ts-ignore
export function createMsdeResponseActionsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeResponseActionsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsdeRolesSettingsAuditRecord}
 */
// @ts-ignore
export function createMsdeRolesSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsdeRolesSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MsticNationStateNotificationRecord}
 */
// @ts-ignore
export function createMsticNationStateNotificationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMsticNationStateNotificationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MultiStageDispositionAuditRecord}
 */
// @ts-ignore
export function createMultiStageDispositionAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMultiStageDispositionAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {MyAnalyticsSettingsAuditRecord}
 */
// @ts-ignore
export function createMyAnalyticsSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoMyAnalyticsSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NetworkAdapter}
 */
// @ts-ignore
export function createNetworkAdapterFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNetworkAdapter;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NetworkConnectionEvidence}
 */
// @ts-ignore
export function createNetworkConnectionEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNetworkConnectionEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {NicEvidence}
 */
// @ts-ignore
export function createNicEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNicEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OauthApplicationEvidence}
 */
// @ts-ignore
export function createOauthApplicationEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOauthApplicationEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OcrSettings}
 */
// @ts-ignore
export function createOcrSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOcrSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OfficeNativeAuditRecord}
 */
// @ts-ignore
export function createOfficeNativeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOfficeNativeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OmePortalAuditRecord}
 */
// @ts-ignore
export function createOmePortalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOmePortalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OneDriveAuditRecord}
 */
// @ts-ignore
export function createOneDriveAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOneDriveAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OnPremisesFileShareScannerDlpAuditRecord}
 */
// @ts-ignore
export function createOnPremisesFileShareScannerDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOnPremisesFileShareScannerDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OnPremisesScannerDlpAuditRecord}
 */
// @ts-ignore
export function createOnPremisesScannerDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOnPremisesScannerDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OnPremisesSharePointScannerDlpAuditRecord}
 */
// @ts-ignore
export function createOnPremisesSharePointScannerDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOnPremisesSharePointScannerDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {OwaGetAccessTokenForResourceAuditRecord}
 */
// @ts-ignore
export function createOwaGetAccessTokenForResourceAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoOwaGetAccessTokenForResourceAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PassiveDnsRecordCollectionResponse}
 */
// @ts-ignore
export function createPassiveDnsRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassiveDnsRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PassiveDnsRecord}
 */
// @ts-ignore
export function createPassiveDnsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPassiveDnsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PeopleAdminSettingsAuditRecord}
 */
// @ts-ignore
export function createPeopleAdminSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPeopleAdminSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PhysicalBadgingSignalAuditRecord}
 */
// @ts-ignore
export function createPhysicalBadgingSignalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPhysicalBadgingSignalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerCopyPlanAuditRecord}
 */
// @ts-ignore
export function createPlannerCopyPlanAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerCopyPlanAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerPlanAuditRecord}
 */
// @ts-ignore
export function createPlannerPlanAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerPlanAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerPlanListAuditRecord}
 */
// @ts-ignore
export function createPlannerPlanListAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerPlanListAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerRosterAuditRecord}
 */
// @ts-ignore
export function createPlannerRosterAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerRosterAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerRosterSensitivityLabelAuditRecord}
 */
// @ts-ignore
export function createPlannerRosterSensitivityLabelAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerRosterSensitivityLabelAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerTaskAuditRecord}
 */
// @ts-ignore
export function createPlannerTaskAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerTaskAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerTaskListAuditRecord}
 */
// @ts-ignore
export function createPlannerTaskListAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerTaskListAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PlannerTenantSettingsAuditRecord}
 */
// @ts-ignore
export function createPlannerTenantSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPlannerTenantSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerAppsAuditAppRecord}
 */
// @ts-ignore
export function createPowerAppsAuditAppRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerAppsAuditAppRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerAppsAuditPlanRecord}
 */
// @ts-ignore
export function createPowerAppsAuditPlanRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerAppsAuditPlanRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerAppsAuditResourceRecord}
 */
// @ts-ignore
export function createPowerAppsAuditResourceRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerAppsAuditResourceRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerBiAuditRecord}
 */
// @ts-ignore
export function createPowerBiAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerBiAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerBiDlpAuditRecord}
 */
// @ts-ignore
export function createPowerBiDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerBiDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPagesSiteAuditRecord}
 */
// @ts-ignore
export function createPowerPagesSiteAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPagesSiteAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformAdminDlpAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformAdminDlpAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformAdminDlpAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformAdminEnvironmentAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformAdminEnvironmentAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformAdminEnvironmentAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformAdministratorActivityRecord}
 */
// @ts-ignore
export function createPowerPlatformAdministratorActivityRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformAdministratorActivityRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformLockboxResourceAccessRequestAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformLockboxResourceAccessRequestAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformLockboxResourceAccessRequestAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformLockboxResourceCommandAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformLockboxResourceCommandAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformLockboxResourceCommandAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PowerPlatformServiceActivityAuditRecord}
 */
// @ts-ignore
export function createPowerPlatformServiceActivityAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPowerPlatformServiceActivityAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyDataMatchAuditRecord}
 */
// @ts-ignore
export function createPrivacyDataMatchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyDataMatchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyDataMinimizationRecord}
 */
// @ts-ignore
export function createPrivacyDataMinimizationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyDataMinimizationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyDigestEmailRecord}
 */
// @ts-ignore
export function createPrivacyDigestEmailRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyDigestEmailRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyOpenAccessAuditRecord}
 */
// @ts-ignore
export function createPrivacyOpenAccessAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyOpenAccessAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyPortalAuditRecord}
 */
// @ts-ignore
export function createPrivacyPortalAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyPortalAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyRemediationActionRecord}
 */
// @ts-ignore
export function createPrivacyRemediationActionRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyRemediationActionRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyRemediationRecord}
 */
// @ts-ignore
export function createPrivacyRemediationRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyRemediationRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PrivacyTenantAuditHistoryRecord}
 */
// @ts-ignore
export function createPrivacyTenantAuditHistoryRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPrivacyTenantAuditHistoryRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProcessEvidence}
 */
// @ts-ignore
export function createProcessEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProcessEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectAuditRecord}
 */
// @ts-ignore
export function createProjectAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebAssignedToMeSettingsAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebAssignedToMeSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebAssignedToMeSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebProjectAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebProjectAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebProjectAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebProjectSettingsAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebProjectSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebProjectSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebRoadmapAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebRoadmapAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebRoadmapAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebRoadmapItemAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebRoadmapItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebRoadmapItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebRoadmapSettingsAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebRoadmapSettingsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebRoadmapSettingsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ProjectForTheWebTaskAuditRecord}
 */
// @ts-ignore
export function createProjectForTheWebTaskAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoProjectForTheWebTaskAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PublicFolderAuditRecord}
 */
// @ts-ignore
export function createPublicFolderAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPublicFolderAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PurviewInsiderRiskAlertsRecord}
 */
// @ts-ignore
export function createPurviewInsiderRiskAlertsRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPurviewInsiderRiskAlertsRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PurviewInsiderRiskCasesRecord}
 */
// @ts-ignore
export function createPurviewInsiderRiskCasesRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPurviewInsiderRiskCasesRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {QuarantineAuditRecord}
 */
// @ts-ignore
export function createQuarantineAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoQuarantineAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecordsManagementAuditRecord}
 */
// @ts-ignore
export function createRecordsManagementAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecordsManagementAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RedundancyDetectionSettings}
 */
// @ts-ignore
export function createRedundancyDetectionSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRedundancyDetectionSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegistryKeyEvidence}
 */
// @ts-ignore
export function createRegistryKeyEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegistryKeyEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegistryValueEvidence}
 */
// @ts-ignore
export function createRegistryValueEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegistryValueEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionDurationForever}
 */
// @ts-ignore
export function createRetentionDurationForeverFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionDurationForever;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionDuration}
 */
// @ts-ignore
export function createRetentionDurationFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.retentionDurationForever":
                    return deserializeIntoRetentionDurationForever;
                case "#microsoft.graph.security.retentionDurationInDays":
                    return deserializeIntoRetentionDurationInDays;
            }
        }
    }
    return deserializeIntoRetentionDuration;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionDurationInDays}
 */
// @ts-ignore
export function createRetentionDurationInDaysFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionDurationInDays;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventCollectionResponse}
 */
// @ts-ignore
export function createRetentionEventCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEvent}
 */
// @ts-ignore
export function createRetentionEventFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEvent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventStatus}
 */
// @ts-ignore
export function createRetentionEventStatusFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventStatus;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventTypeCollectionResponse}
 */
// @ts-ignore
export function createRetentionEventTypeCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventTypeCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionEventType}
 */
// @ts-ignore
export function createRetentionEventTypeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionEventType;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionLabelCollectionResponse}
 */
// @ts-ignore
export function createRetentionLabelCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionLabelCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionLabel}
 */
// @ts-ignore
export function createRetentionLabelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionLabel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RetentionPolicyAuditRecord}
 */
// @ts-ignore
export function createRetentionPolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRetentionPolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SasTokenEvidence}
 */
// @ts-ignore
export function createSasTokenEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSasTokenEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ScoreEvidence}
 */
// @ts-ignore
export function createScoreEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoScoreEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ScorePlatformGenericAuditRecord}
 */
// @ts-ignore
export function createScorePlatformGenericAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoScorePlatformGenericAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ScriptRunAuditRecord}
 */
// @ts-ignore
export function createScriptRunAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoScriptRunAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SearchAuditRecord}
 */
// @ts-ignore
export function createSearchAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSearchAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Search}
 */
// @ts-ignore
export function createSearchFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryReviewSetQuery":
                    return deserializeIntoEdiscoveryReviewSetQuery;
                case "#microsoft.graph.security.ediscoverySearch":
                    return deserializeIntoEdiscoverySearch;
            }
        }
    }
    return deserializeIntoSearch;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceAlertRecord}
 */
// @ts-ignore
export function createSecurityComplianceAlertRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceAlertRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceCenterEOPCmdletAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceCenterEOPCmdletAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceCenterEOPCmdletAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceInsightsAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceInsightsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceInsightsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceRBACAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceRBACAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceRBACAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityComplianceUserChangeAuditRecord}
 */
// @ts-ignore
export function createSecurityComplianceUserChangeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityComplianceUserChangeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecurityGroupEvidence}
 */
// @ts-ignore
export function createSecurityGroupEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecurityGroupEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensorCollectionResponse}
 */
// @ts-ignore
export function createSensorCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensorCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensorDeploymentPackage}
 */
// @ts-ignore
export function createSensorDeploymentPackageFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensorDeploymentPackage;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Sensor}
 */
// @ts-ignore
export function createSensorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensor;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SensorSettings}
 */
// @ts-ignore
export function createSensorSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSensorSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServicePrincipalEvidence}
 */
// @ts-ignore
export function createServicePrincipalEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServicePrincipalEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointAppPermissionOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointAppPermissionOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointAppPermissionOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointAuditRecord}
 */
// @ts-ignore
export function createSharePointAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointCommentOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointCommentOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointCommentOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointContentTypeOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointContentTypeOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointContentTypeOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointESignatureAuditRecord}
 */
// @ts-ignore
export function createSharePointESignatureAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointESignatureAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointFieldOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointFieldOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointFieldOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointFileOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointFileOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointFileOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointListOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointListOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointListOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePointSharingOperationAuditRecord}
 */
// @ts-ignore
export function createSharePointSharingOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePointSharingOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SinglePropertySchema}
 */
// @ts-ignore
export function createSinglePropertySchemaFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSinglePropertySchema;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SiteSourceCollectionResponse}
 */
// @ts-ignore
export function createSiteSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSiteSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SiteSource}
 */
// @ts-ignore
export function createSiteSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSiteSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessBaseAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessBaseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessBaseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessCmdletsAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessCmdletsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessCmdletsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessPSTNUsageAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessPSTNUsageAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessPSTNUsageAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SkypeForBusinessUsersBlockedAuditRecord}
 */
// @ts-ignore
export function createSkypeForBusinessUsersBlockedAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSkypeForBusinessUsersBlockedAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SmsCreatePhoneNumberRecord}
 */
// @ts-ignore
export function createSmsCreatePhoneNumberRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSmsCreatePhoneNumberRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SmsDeletePhoneNumberRecord}
 */
// @ts-ignore
export function createSmsDeletePhoneNumberRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSmsDeletePhoneNumberRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SslCertificateCollectionResponse}
 */
// @ts-ignore
export function createSslCertificateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSslCertificateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SslCertificateEntity}
 */
// @ts-ignore
export function createSslCertificateEntityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSslCertificateEntity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SslCertificate}
 */
// @ts-ignore
export function createSslCertificateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSslCertificate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Stream}
 */
// @ts-ignore
export function createStreamFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoStream;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubcategoryTemplateCollectionResponse}
 */
// @ts-ignore
export function createSubcategoryTemplateCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubcategoryTemplateCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubcategoryTemplate}
 */
// @ts-ignore
export function createSubcategoryTemplateFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubcategoryTemplate;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubdomainCollectionResponse}
 */
// @ts-ignore
export function createSubdomainCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubdomainCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Subdomain}
 */
// @ts-ignore
export function createSubdomainFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubdomain;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SubmissionMailEvidence}
 */
// @ts-ignore
export function createSubmissionMailEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSubmissionMailEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SupervisoryReviewDayXInsightsAuditRecord}
 */
// @ts-ignore
export function createSupervisoryReviewDayXInsightsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSupervisoryReviewDayXInsightsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SyntheticProbeAuditRecord}
 */
// @ts-ignore
export function createSyntheticProbeAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSyntheticProbeAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Tag}
 */
// @ts-ignore
export function createTagFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.ediscoveryReviewTag":
                    return deserializeIntoEdiscoveryReviewTag;
            }
        }
    }
    return deserializeIntoTag;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsEasyApprovalsAuditRecord}
 */
// @ts-ignore
export function createTeamsEasyApprovalsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsEasyApprovalsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsHealthcareAuditRecord}
 */
// @ts-ignore
export function createTeamsHealthcareAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsHealthcareAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsMessageEvidence}
 */
// @ts-ignore
export function createTeamsMessageEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsMessageEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TeamsUpdatesAuditRecord}
 */
// @ts-ignore
export function createTeamsUpdatesAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTeamsUpdatesAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TenantAllowBlockListAuditRecord}
 */
// @ts-ignore
export function createTenantAllowBlockListAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTenantAllowBlockListAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatFinderAuditRecord}
 */
// @ts-ignore
export function createThreatFinderAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatFinderAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligenceAtpContentData}
 */
// @ts-ignore
export function createThreatIntelligenceAtpContentDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligenceAtpContentData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligence}
 */
// @ts-ignore
export function createThreatIntelligenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligenceMailData}
 */
// @ts-ignore
export function createThreatIntelligenceMailDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligenceMailData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ThreatIntelligenceUrlClickData}
 */
// @ts-ignore
export function createThreatIntelligenceUrlClickDataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoThreatIntelligenceUrlClickData;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TodoAuditRecord}
 */
// @ts-ignore
export function createTodoAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTodoAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TopicModelingSettings}
 */
// @ts-ignore
export function createTopicModelingSettingsFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTopicModelingSettings;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TriggersRoot}
 */
// @ts-ignore
export function createTriggersRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTriggersRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TriggerTypesRoot}
 */
// @ts-ignore
export function createTriggerTypesRootFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoTriggerTypesRoot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UamOperationAuditRecord}
 */
// @ts-ignore
export function createUamOperationAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUamOperationAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnclassifiedArtifact}
 */
// @ts-ignore
export function createUnclassifiedArtifactFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnclassifiedArtifact;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedGroupAuditRecord}
 */
// @ts-ignore
export function createUnifiedGroupAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedGroupAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedGroupSourceCollectionResponse}
 */
// @ts-ignore
export function createUnifiedGroupSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedGroupSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedGroupSource}
 */
// @ts-ignore
export function createUnifiedGroupSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedGroupSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedSimulationMatchedItemAuditRecord}
 */
// @ts-ignore
export function createUnifiedSimulationMatchedItemAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedSimulationMatchedItemAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UnifiedSimulationSummaryAuditRecord}
 */
// @ts-ignore
export function createUnifiedSimulationSummaryAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUnifiedSimulationSummaryAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UploadCertificateRecord}
 */
// @ts-ignore
export function createUploadCertificateRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUploadCertificateRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrbacAssignmentAuditRecord}
 */
// @ts-ignore
export function createUrbacAssignmentAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrbacAssignmentAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrbacEnableStateAuditRecord}
 */
// @ts-ignore
export function createUrbacEnableStateAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrbacEnableStateAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrbacRoleAuditRecord}
 */
// @ts-ignore
export function createUrbacRoleAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrbacRoleAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UrlEvidence}
 */
// @ts-ignore
export function createUrlEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUrlEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserAccount}
 */
// @ts-ignore
export function createUserAccountFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserAccount;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserEvidence}
 */
// @ts-ignore
export function createUserEvidenceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserEvidence;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserSourceCollectionResponse}
 */
// @ts-ignore
export function createUserSourceCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserSourceCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserSource}
 */
// @ts-ignore
export function createUserSourceFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserSource;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserTrainingAuditRecord}
 */
// @ts-ignore
export function createUserTrainingAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserTrainingAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamBasePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamBasePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamBasePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamCreatePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamCreatePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamCreatePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamDeletePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamDeletePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamDeletePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VfamUpdatePolicyAuditRecord}
 */
// @ts-ignore
export function createVfamUpdatePolicyAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVfamUpdatePolicyAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaGoalsAuditRecord}
 */
// @ts-ignore
export function createVivaGoalsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaGoalsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaLearningAdminAuditRecord}
 */
// @ts-ignore
export function createVivaLearningAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaLearningAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaLearningAuditRecord}
 */
// @ts-ignore
export function createVivaLearningAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaLearningAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseAdminAuditRecord}
 */
// @ts-ignore
export function createVivaPulseAdminAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseAdminAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseOrganizerAuditRecord}
 */
// @ts-ignore
export function createVivaPulseOrganizerAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseOrganizerAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseReportAuditRecord}
 */
// @ts-ignore
export function createVivaPulseReportAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseReportAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VivaPulseResponseAuditRecord}
 */
// @ts-ignore
export function createVivaPulseResponseAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVivaPulseResponseAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VmMetadata}
 */
// @ts-ignore
export function createVmMetadataFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVmMetadata;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VulnerabilityCollectionResponse}
 */
// @ts-ignore
export function createVulnerabilityCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerabilityCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VulnerabilityComponentCollectionResponse}
 */
// @ts-ignore
export function createVulnerabilityComponentCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerabilityComponentCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VulnerabilityComponent}
 */
// @ts-ignore
export function createVulnerabilityComponentFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerabilityComponent;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Vulnerability}
 */
// @ts-ignore
export function createVulnerabilityFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVulnerability;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WdatpAlertsAuditRecord}
 */
// @ts-ignore
export function createWdatpAlertsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWdatpAlertsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisBaseRecord}
 */
// @ts-ignore
export function createWhoisBaseRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode?.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.security.whoisHistoryRecord":
                    return deserializeIntoWhoisHistoryRecord;
                case "#microsoft.graph.security.whoisRecord":
                    return deserializeIntoWhoisRecord;
            }
        }
    }
    return deserializeIntoWhoisBaseRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisContact}
 */
// @ts-ignore
export function createWhoisContactFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisContact;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisHistoryRecordCollectionResponse}
 */
// @ts-ignore
export function createWhoisHistoryRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisHistoryRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisHistoryRecord}
 */
// @ts-ignore
export function createWhoisHistoryRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisHistoryRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisNameserver}
 */
// @ts-ignore
export function createWhoisNameserverFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisNameserver;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisRecordCollectionResponse}
 */
// @ts-ignore
export function createWhoisRecordCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisRecordCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WhoisRecord}
 */
// @ts-ignore
export function createWhoisRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWhoisRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Windows365CustomerLockboxAuditRecord}
 */
// @ts-ignore
export function createWindows365CustomerLockboxAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWindows365CustomerLockboxAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WorkplaceAnalyticsAuditRecord}
 */
// @ts-ignore
export function createWorkplaceAnalyticsAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWorkplaceAnalyticsAuditRecord;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {YammerAuditRecord}
 */
// @ts-ignore
export function createYammerAuditRecordFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoYammerAuditRecord;
}
export interface CrmBaseAuditRecord extends AuditData, Parsable {
}
export interface CrmEntityOperationAuditRecord extends AuditData, Parsable {
}
export interface CustomerKeyServiceEncryptionAuditRecord extends AuditData, Parsable {
}
export interface CvssSummary extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The CVSS score about this vulnerability.
     */
    score?: number | null;
    /**
     * The CVSS severity rating for this vulnerability. The possible values are: none, low, medium, high, critical, unknownFutureValue.
     */
    severity?: VulnerabilitySeverity | null;
    /**
     * The CVSS vector string for this vulnerability.
     */
    vectorString?: string | null;
}
export interface DataCenterSecurityBaseAuditRecord extends AuditData, Parsable {
}
export interface DataCenterSecurityCmdletAuditRecord extends AuditData, Parsable {
}
export interface DataGovernanceAuditRecord extends AuditData, Parsable {
}
export interface DataInsightsRestApiAuditRecord extends AuditData, Parsable {
}
export interface DataLakeExportOperationAuditRecord extends AuditData, Parsable {
}
export interface DataSet extends Entity, Parsable {
    /**
     * The user who created the data set. Read-only.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date and time when the review set was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
     */
    createdDateTime?: Date | null;
    /**
     * The description of the data set.
     */
    description?: string | null;
    /**
     * The name of the data set. The name is unique with a maximum limit of 64 characters.
     */
    displayName?: string | null;
}
export interface DataShareOperationAuditRecord extends AuditData, Parsable {
}
export interface DataSource extends Entity, Parsable {
    /**
     * The user who created the dataSource.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date and time the dataSource was created.
     */
    createdDateTime?: Date | null;
    /**
     * The display name of the dataSource and is the name of the SharePoint site.
     */
    displayName?: string | null;
    /**
     * The hold status of the dataSource.The possible values are: notApplied, applied, applying, removing, partial
     */
    holdStatus?: DataSourceHoldStatus | null;
}
export interface DataSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DataSource[] | null;
}
export interface DataSourceContainer extends Entity, Parsable {
    /**
     * Created date and time of the dataSourceContainer entity.
     */
    createdDateTime?: Date | null;
    /**
     * Display name of the dataSourceContainer entity.
     */
    displayName?: string | null;
    /**
     * The hold status of the dataSourceContainer. The possible values are: notApplied, applied, applying, removing, partial
     */
    holdStatus?: DataSourceHoldStatus | null;
    /**
     * Last modified date and time of the dataSourceContainer.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * Date and time that the dataSourceContainer was released from the case.
     */
    releasedDateTime?: Date | null;
    /**
     * Latest status of the dataSourceContainer. Possible values are: Active, Released.
     */
    status?: DataSourceContainerStatus | null;
}
export type DataSourceContainerStatus = (typeof DataSourceContainerStatusObject)[keyof typeof DataSourceContainerStatusObject];
export type DataSourceHoldStatus = (typeof DataSourceHoldStatusObject)[keyof typeof DataSourceHoldStatusObject];
export type DataSourceScopes = (typeof DataSourceScopesObject)[keyof typeof DataSourceScopesObject];
export interface DefaultAuditData extends AuditData, Parsable {
}
export type DefaultRecordBehavior = (typeof DefaultRecordBehaviorObject)[keyof typeof DefaultRecordBehaviorObject];
export type DefenderAvStatus = (typeof DefenderAvStatusObject)[keyof typeof DefenderAvStatusObject];
export interface DefenderSecurityAlertBaseRecord extends AuditData, Parsable {
}
export interface DeleteCertificateRecord extends AuditData, Parsable {
}
export interface DepartmentTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface DepartmentTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DepartmentTemplate[] | null;
}
export interface DeploymentAccessKeyType extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The deployment access key.
     */
    deploymentAccessKey?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type DeploymentStatus = (typeof DeploymentStatusObject)[keyof typeof DeploymentStatusObject];
/**
 * The deserialization information for the current model
 * @param AadRiskDetectionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAadRiskDetectionAuditRecord(aadRiskDetectionAuditRecord: Partial<AadRiskDetectionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aadRiskDetectionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AedAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAedAuditRecord(aedAuditRecord: Partial<AedAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aedAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AiAppInteractionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAiAppInteractionAuditRecord(aiAppInteractionAuditRecord: Partial<AiAppInteractionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aiAppInteractionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AipFileDeleted The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipFileDeleted(aipFileDeleted: Partial<AipFileDeleted> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipFileDeleted),
    }
}
/**
 * The deserialization information for the current model
 * @param AipHeartBeat The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipHeartBeat(aipHeartBeat: Partial<AipHeartBeat> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipHeartBeat),
    }
}
/**
 * The deserialization information for the current model
 * @param AipProtectionActionLogRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipProtectionActionLogRequest(aipProtectionActionLogRequest: Partial<AipProtectionActionLogRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipProtectionActionLogRequest),
    }
}
/**
 * The deserialization information for the current model
 * @param AipScannerDiscoverEvent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipScannerDiscoverEvent(aipScannerDiscoverEvent: Partial<AipScannerDiscoverEvent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipScannerDiscoverEvent),
    }
}
/**
 * The deserialization information for the current model
 * @param AipSensitivityLabelActionLogRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAipSensitivityLabelActionLogRequest(aipSensitivityLabelActionLogRequest: Partial<AipSensitivityLabelActionLogRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(aipSensitivityLabelActionLogRequest),
    }
}
/**
 * The deserialization information for the current model
 * @param AirAdminActionInvestigationData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAirAdminActionInvestigationData(airAdminActionInvestigationData: Partial<AirAdminActionInvestigationData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(airAdminActionInvestigationData),
    }
}
/**
 * The deserialization information for the current model
 * @param AirInvestigationData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAirInvestigationData(airInvestigationData: Partial<AirInvestigationData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(airInvestigationData),
    }
}
/**
 * The deserialization information for the current model
 * @param AirManualInvestigationData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAirManualInvestigationData(airManualInvestigationData: Partial<AirManualInvestigationData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(airManualInvestigationData),
    }
}
/**
 * The deserialization information for the current model
 * @param Alert The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlert(alert: Partial<Alert> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(alert),
        "actorDisplayName": n => { alert.actorDisplayName = n.getStringValue(); },
        "additionalData": n => { alert.additionalDataProperty = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "alertPolicyId": n => { alert.alertPolicyId = n.getStringValue(); },
        "alertWebUrl": n => { alert.alertWebUrl = n.getStringValue(); },
        "assignedTo": n => { alert.assignedTo = n.getStringValue(); },
        "category": n => { alert.category = n.getStringValue(); },
        "classification": n => { alert.classification = n.getEnumValue<AlertClassification>(AlertClassificationObject); },
        "comments": n => { alert.comments = n.getCollectionOfObjectValues<AlertComment>(createAlertCommentFromDiscriminatorValue); },
        "createdDateTime": n => { alert.createdDateTime = n.getDateValue(); },
        "customDetails": n => { alert.customDetails = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "description": n => { alert.description = n.getStringValue(); },
        "detectionSource": n => { alert.detectionSource = n.getEnumValue<DetectionSource>(DetectionSourceObject); },
        "detectorId": n => { alert.detectorId = n.getStringValue(); },
        "determination": n => { alert.determination = n.getEnumValue<AlertDetermination>(AlertDeterminationObject); },
        "evidence": n => { alert.evidence = n.getCollectionOfObjectValues<AlertEvidence>(createAlertEvidenceFromDiscriminatorValue); },
        "firstActivityDateTime": n => { alert.firstActivityDateTime = n.getDateValue(); },
        "incidentId": n => { alert.incidentId = n.getStringValue(); },
        "incidentWebUrl": n => { alert.incidentWebUrl = n.getStringValue(); },
        "lastActivityDateTime": n => { alert.lastActivityDateTime = n.getDateValue(); },
        "lastUpdateDateTime": n => { alert.lastUpdateDateTime = n.getDateValue(); },
        "mitreTechniques": n => { alert.mitreTechniques = n.getCollectionOfPrimitiveValues<string>(); },
        "productName": n => { alert.productName = n.getStringValue(); },
        "providerAlertId": n => { alert.providerAlertId = n.getStringValue(); },
        "recommendedActions": n => { alert.recommendedActions = n.getStringValue(); },
        "resolvedDateTime": n => { alert.resolvedDateTime = n.getDateValue(); },
        "serviceSource": n => { alert.serviceSource = n.getEnumValue<ServiceSource>(ServiceSourceObject); },
        "severity": n => { alert.severity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "status": n => { alert.status = n.getEnumValue<AlertStatus>(AlertStatusObject); },
        "systemTags": n => { alert.systemTags = n.getCollectionOfPrimitiveValues<string>(); },
        "tenantId": n => { alert.tenantId = n.getStringValue(); },
        "threatDisplayName": n => { alert.threatDisplayName = n.getStringValue(); },
        "threatFamilyName": n => { alert.threatFamilyName = n.getStringValue(); },
        "title": n => { alert.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param AlertCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertCollectionResponse(alertCollectionResponse: Partial<AlertCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(alertCollectionResponse),
        "value": n => { alertCollectionResponse.value = n.getCollectionOfObjectValues<Alert>(createAlertFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param AlertComment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertComment(alertComment: Partial<AlertComment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertComment.backingStoreEnabled = true; },
        "comment": n => { alertComment.comment = n.getStringValue(); },
        "createdByDisplayName": n => { alertComment.createdByDisplayName = n.getStringValue(); },
        "createdDateTime": n => { alertComment.createdDateTime = n.getDateValue(); },
        "@odata.type": n => { alertComment.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param AlertEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAlertEvidence(alertEvidence: Partial<AlertEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { alertEvidence.backingStoreEnabled = true; },
        "createdDateTime": n => { alertEvidence.createdDateTime = n.getDateValue(); },
        "detailedRoles": n => { alertEvidence.detailedRoles = n.getCollectionOfPrimitiveValues<string>(); },
        "@odata.type": n => { alertEvidence.odataType = n.getStringValue(); },
        "remediationStatus": n => { alertEvidence.remediationStatus = n.getEnumValue<EvidenceRemediationStatus>(EvidenceRemediationStatusObject); },
        "remediationStatusDetails": n => { alertEvidence.remediationStatusDetails = n.getStringValue(); },
        "roles": n => { alertEvidence.roles = n.getCollectionOfEnumValues<EvidenceRole>(EvidenceRoleObject); },
        "tags": n => { alertEvidence.tags = n.getCollectionOfPrimitiveValues<string>(); },
        "verdict": n => { alertEvidence.verdict = n.getEnumValue<EvidenceVerdict>(EvidenceVerdictObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param AmazonResourceEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAmazonResourceEvidence(amazonResourceEvidence: Partial<AmazonResourceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(amazonResourceEvidence),
        "amazonAccountId": n => { amazonResourceEvidence.amazonAccountId = n.getStringValue(); },
        "amazonResourceId": n => { amazonResourceEvidence.amazonResourceId = n.getStringValue(); },
        "resourceName": n => { amazonResourceEvidence.resourceName = n.getStringValue(); },
        "resourceType": n => { amazonResourceEvidence.resourceType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param AnalyzedMessageEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAnalyzedMessageEvidence(analyzedMessageEvidence: Partial<AnalyzedMessageEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(analyzedMessageEvidence),
        "antiSpamDirection": n => { analyzedMessageEvidence.antiSpamDirection = n.getStringValue(); },
        "attachmentsCount": n => { analyzedMessageEvidence.attachmentsCount = n.getNumberValue(); },
        "deliveryAction": n => { analyzedMessageEvidence.deliveryAction = n.getStringValue(); },
        "deliveryLocation": n => { analyzedMessageEvidence.deliveryLocation = n.getStringValue(); },
        "internetMessageId": n => { analyzedMessageEvidence.internetMessageId = n.getStringValue(); },
        "language": n => { analyzedMessageEvidence.language = n.getStringValue(); },
        "networkMessageId": n => { analyzedMessageEvidence.networkMessageId = n.getStringValue(); },
        "p1Sender": n => { analyzedMessageEvidence.p1Sender = n.getObjectValue<EmailSender>(createEmailSenderFromDiscriminatorValue); },
        "p2Sender": n => { analyzedMessageEvidence.p2Sender = n.getObjectValue<EmailSender>(createEmailSenderFromDiscriminatorValue); },
        "receivedDateTime": n => { analyzedMessageEvidence.receivedDateTime = n.getDateValue(); },
        "recipientEmailAddress": n => { analyzedMessageEvidence.recipientEmailAddress = n.getStringValue(); },
        "senderIp": n => { analyzedMessageEvidence.senderIp = n.getStringValue(); },
        "subject": n => { analyzedMessageEvidence.subject = n.getStringValue(); },
        "threatDetectionMethods": n => { analyzedMessageEvidence.threatDetectionMethods = n.getCollectionOfPrimitiveValues<string>(); },
        "threats": n => { analyzedMessageEvidence.threats = n.getCollectionOfPrimitiveValues<string>(); },
        "urlCount": n => { analyzedMessageEvidence.urlCount = n.getNumberValue(); },
        "urls": n => { analyzedMessageEvidence.urls = n.getCollectionOfPrimitiveValues<string>(); },
        "urn": n => { analyzedMessageEvidence.urn = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Article The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticle(article: Partial<Article> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(article),
        "body": n => { article.body = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "createdDateTime": n => { article.createdDateTime = n.getDateValue(); },
        "imageUrl": n => { article.imageUrl = n.getStringValue(); },
        "indicators": n => { article.indicators = n.getCollectionOfObjectValues<ArticleIndicator>(createArticleIndicatorFromDiscriminatorValue); },
        "isFeatured": n => { article.isFeatured = n.getBooleanValue(); },
        "lastUpdatedDateTime": n => { article.lastUpdatedDateTime = n.getDateValue(); },
        "summary": n => { article.summary = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "tags": n => { article.tags = n.getCollectionOfPrimitiveValues<string>(); },
        "title": n => { article.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ArticleCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticleCollectionResponse(articleCollectionResponse: Partial<ArticleCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(articleCollectionResponse),
        "value": n => { articleCollectionResponse.value = n.getCollectionOfObjectValues<Article>(createArticleFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ArticleIndicator The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticleIndicator(articleIndicator: Partial<ArticleIndicator> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndicator(articleIndicator),
    }
}
/**
 * The deserialization information for the current model
 * @param ArticleIndicatorCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArticleIndicatorCollectionResponse(articleIndicatorCollectionResponse: Partial<ArticleIndicatorCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(articleIndicatorCollectionResponse),
        "value": n => { articleIndicatorCollectionResponse.value = n.getCollectionOfObjectValues<ArticleIndicator>(createArticleIndicatorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Artifact The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoArtifact(artifact: Partial<Artifact> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(artifact),
    }
}
/**
 * The deserialization information for the current model
 * @param AttackSimAdminAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAttackSimAdminAuditRecord(attackSimAdminAuditRecord: Partial<AttackSimAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(attackSimAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AuditCoreRoot The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditCoreRoot(auditCoreRoot: Partial<AuditCoreRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditCoreRoot),
        "queries": n => { auditCoreRoot.queries = n.getCollectionOfObjectValues<AuditLogQuery>(createAuditLogQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param AuditData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditData(auditData: Partial<AuditData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { auditData.backingStoreEnabled = true; },
        "@odata.type": n => { auditData.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param AuditLogQuery The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogQuery(auditLogQuery: Partial<AuditLogQuery> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditLogQuery),
        "administrativeUnitIdFilters": n => { auditLogQuery.administrativeUnitIdFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "displayName": n => { auditLogQuery.displayName = n.getStringValue(); },
        "filterEndDateTime": n => { auditLogQuery.filterEndDateTime = n.getDateValue(); },
        "filterStartDateTime": n => { auditLogQuery.filterStartDateTime = n.getDateValue(); },
        "ipAddressFilters": n => { auditLogQuery.ipAddressFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "keywordFilter": n => { auditLogQuery.keywordFilter = n.getStringValue(); },
        "objectIdFilters": n => { auditLogQuery.objectIdFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "operationFilters": n => { auditLogQuery.operationFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "records": n => { auditLogQuery.records = n.getCollectionOfObjectValues<AuditLogRecord>(createAuditLogRecordFromDiscriminatorValue); },
        "recordTypeFilters": n => { auditLogQuery.recordTypeFilters = n.getCollectionOfEnumValues<AuditLogRecordType>(AuditLogRecordTypeObject); },
        "serviceFilters": n => { auditLogQuery.serviceFilters = n.getCollectionOfPrimitiveValues<string>(); },
        "status": n => { auditLogQuery.status = n.getEnumValue<AuditLogQueryStatus>(AuditLogQueryStatusObject); },
        "userPrincipalNameFilters": n => { auditLogQuery.userPrincipalNameFilters = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @param AuditLogQueryCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogQueryCollectionResponse(auditLogQueryCollectionResponse: Partial<AuditLogQueryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(auditLogQueryCollectionResponse),
        "value": n => { auditLogQueryCollectionResponse.value = n.getCollectionOfObjectValues<AuditLogQuery>(createAuditLogQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param AuditLogRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogRecord(auditLogRecord: Partial<AuditLogRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(auditLogRecord),
        "administrativeUnits": n => { auditLogRecord.administrativeUnits = n.getCollectionOfPrimitiveValues<string>(); },
        "auditData": n => { auditLogRecord.auditData = n.getObjectValue<AuditData>(createAuditDataFromDiscriminatorValue); },
        "auditLogRecordType": n => { auditLogRecord.auditLogRecordType = n.getEnumValue<AuditLogRecordType>(AuditLogRecordTypeObject); },
        "clientIp": n => { auditLogRecord.clientIp = n.getStringValue(); },
        "createdDateTime": n => { auditLogRecord.createdDateTime = n.getDateValue(); },
        "objectId": n => { auditLogRecord.objectId = n.getStringValue(); },
        "operation": n => { auditLogRecord.operation = n.getStringValue(); },
        "organizationId": n => { auditLogRecord.organizationId = n.getStringValue(); },
        "service": n => { auditLogRecord.service = n.getStringValue(); },
        "userId": n => { auditLogRecord.userId = n.getStringValue(); },
        "userPrincipalName": n => { auditLogRecord.userPrincipalName = n.getStringValue(); },
        "userType": n => { auditLogRecord.userType = n.getEnumValue<AuditLogUserType>(AuditLogUserTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param AuditLogRecordCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditLogRecordCollectionResponse(auditLogRecordCollectionResponse: Partial<AuditLogRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(auditLogRecordCollectionResponse),
        "value": n => { auditLogRecordCollectionResponse.value = n.getCollectionOfObjectValues<AuditLogRecord>(createAuditLogRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param AuditSearchAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuditSearchAuditRecord(auditSearchAuditRecord: Partial<AuditSearchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(auditSearchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AuthorityTemplate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuthorityTemplate(authorityTemplate: Partial<AuthorityTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(authorityTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @param AuthorityTemplateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAuthorityTemplateCollectionResponse(authorityTemplateCollectionResponse: Partial<AuthorityTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(authorityTemplateCollectionResponse),
        "value": n => { authorityTemplateCollectionResponse.value = n.getCollectionOfObjectValues<AuthorityTemplate>(createAuthorityTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param AutonomousSystem The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAutonomousSystem(autonomousSystem: Partial<AutonomousSystem> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { autonomousSystem.backingStoreEnabled = true; },
        "name": n => { autonomousSystem.name = n.getStringValue(); },
        "number": n => { autonomousSystem.number = n.getNumberValue(); },
        "@odata.type": n => { autonomousSystem.odataType = n.getStringValue(); },
        "organization": n => { autonomousSystem.organization = n.getStringValue(); },
        "value": n => { autonomousSystem.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param AzureActiveDirectoryAccountLogonAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryAccountLogonAuditRecord(azureActiveDirectoryAccountLogonAuditRecord: Partial<AzureActiveDirectoryAccountLogonAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryAccountLogonAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AzureActiveDirectoryAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryAuditRecord(azureActiveDirectoryAuditRecord: Partial<AzureActiveDirectoryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AzureActiveDirectoryBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryBaseAuditRecord(azureActiveDirectoryBaseAuditRecord: Partial<AzureActiveDirectoryBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AzureActiveDirectoryStsLogonAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureActiveDirectoryStsLogonAuditRecord(azureActiveDirectoryStsLogonAuditRecord: Partial<AzureActiveDirectoryStsLogonAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(azureActiveDirectoryStsLogonAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param AzureResourceEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAzureResourceEvidence(azureResourceEvidence: Partial<AzureResourceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(azureResourceEvidence),
        "resourceId": n => { azureResourceEvidence.resourceId = n.getStringValue(); },
        "resourceName": n => { azureResourceEvidence.resourceName = n.getStringValue(); },
        "resourceType": n => { azureResourceEvidence.resourceType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param BlobContainerEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBlobContainerEvidence(blobContainerEvidence: Partial<BlobContainerEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(blobContainerEvidence),
        "name": n => { blobContainerEvidence.name = n.getStringValue(); },
        "storageResource": n => { blobContainerEvidence.storageResource = n.getObjectValue<AzureResourceEvidence>(createAzureResourceEvidenceFromDiscriminatorValue); },
        "url": n => { blobContainerEvidence.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param BlobEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBlobEvidence(blobEvidence: Partial<BlobEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(blobEvidence),
        "blobContainer": n => { blobEvidence.blobContainer = n.getObjectValue<BlobContainerEvidence>(createBlobContainerEvidenceFromDiscriminatorValue); },
        "etag": n => { blobEvidence.etag = n.getStringValue(); },
        "fileHashes": n => { blobEvidence.fileHashes = n.getCollectionOfObjectValues<FileHash>(createFileHashFromDiscriminatorValue); },
        "name": n => { blobEvidence.name = n.getStringValue(); },
        "url": n => { blobEvidence.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CampaignAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCampaignAuditRecord(campaignAuditRecord: Partial<CampaignAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(campaignAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseAuditRecord(caseAuditRecord: Partial<CaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(caseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CaseEscaped The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseEscaped(caseEscaped: Partial<CaseEscaped> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(caseEscaped),
        "createdDateTime": n => { caseEscaped.createdDateTime = n.getDateValue(); },
        "description": n => { caseEscaped.description = n.getStringValue(); },
        "displayName": n => { caseEscaped.displayName = n.getStringValue(); },
        "lastModifiedBy": n => { caseEscaped.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { caseEscaped.lastModifiedDateTime = n.getDateValue(); },
        "status": n => { caseEscaped.status = n.getEnumValue<CaseStatus>(CaseStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param CaseInvestigation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseInvestigation(caseInvestigation: Partial<CaseInvestigation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(caseInvestigation),
    }
}
/**
 * The deserialization information for the current model
 * @param CaseOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseOperation(caseOperation: Partial<CaseOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(caseOperation),
        "action": n => { caseOperation.action = n.getEnumValue<CaseAction>(CaseActionObject); },
        "completedDateTime": n => { caseOperation.completedDateTime = n.getDateValue(); },
        "createdBy": n => { caseOperation.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { caseOperation.createdDateTime = n.getDateValue(); },
        "percentProgress": n => { caseOperation.percentProgress = n.getNumberValue(); },
        "resultInfo": n => { caseOperation.resultInfo = n.getObjectValue<ResultInfo>(createResultInfoFromDiscriminatorValue); },
        "status": n => { caseOperation.status = n.getEnumValue<CaseOperationStatus>(CaseOperationStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param CaseOperationCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaseOperationCollectionResponse(caseOperationCollectionResponse: Partial<CaseOperationCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(caseOperationCollectionResponse),
        "value": n => { caseOperationCollectionResponse.value = n.getCollectionOfObjectValues<CaseOperation>(createCaseOperationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CasesRoot The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCasesRoot(casesRoot: Partial<CasesRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(casesRoot),
        "ediscoveryCases": n => { casesRoot.ediscoveryCases = n.getCollectionOfObjectValues<EdiscoveryCase>(createEdiscoveryCaseFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CategoryTemplate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCategoryTemplate(categoryTemplate: Partial<CategoryTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(categoryTemplate),
        "subcategories": n => { categoryTemplate.subcategories = n.getCollectionOfObjectValues<SubcategoryTemplate>(createSubcategoryTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CategoryTemplateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCategoryTemplateCollectionResponse(categoryTemplateCollectionResponse: Partial<CategoryTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(categoryTemplateCollectionResponse),
        "value": n => { categoryTemplateCollectionResponse.value = n.getCollectionOfObjectValues<CategoryTemplate>(createCategoryTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CdpColdCrawlStatusRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpColdCrawlStatusRecord(cdpColdCrawlStatusRecord: Partial<CdpColdCrawlStatusRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpColdCrawlStatusRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CdpContentExplorerAggregateRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpContentExplorerAggregateRecord(cdpContentExplorerAggregateRecord: Partial<CdpContentExplorerAggregateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpContentExplorerAggregateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CdpDlpSensitiveAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpDlpSensitiveAuditRecord(cdpDlpSensitiveAuditRecord: Partial<CdpDlpSensitiveAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpDlpSensitiveAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CdpDlpSensitiveEndpointAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpDlpSensitiveEndpointAuditRecord(cdpDlpSensitiveEndpointAuditRecord: Partial<CdpDlpSensitiveEndpointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpDlpSensitiveEndpointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CdpLogRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpLogRecord(cdpLogRecord: Partial<CdpLogRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpLogRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CdpOcrBillingRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpOcrBillingRecord(cdpOcrBillingRecord: Partial<CdpOcrBillingRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpOcrBillingRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CdpResourceScopeChangeEventRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCdpResourceScopeChangeEventRecord(cdpResourceScopeChangeEventRecord: Partial<CdpResourceScopeChangeEventRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cdpResourceScopeChangeEventRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CernerSMSLinkRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCernerSMSLinkRecord(cernerSMSLinkRecord: Partial<CernerSMSLinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cernerSMSLinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CernerSMSSettingsUpdateRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCernerSMSSettingsUpdateRecord(cernerSMSSettingsUpdateRecord: Partial<CernerSMSSettingsUpdateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cernerSMSSettingsUpdateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CernerSMSUnlinkRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCernerSMSUnlinkRecord(cernerSMSUnlinkRecord: Partial<CernerSMSUnlinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cernerSMSUnlinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CitationTemplate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCitationTemplate(citationTemplate: Partial<CitationTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(citationTemplate),
        "citationJurisdiction": n => { citationTemplate.citationJurisdiction = n.getStringValue(); },
        "citationUrl": n => { citationTemplate.citationUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CitationTemplateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCitationTemplateCollectionResponse(citationTemplateCollectionResponse: Partial<CitationTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(citationTemplateCollectionResponse),
        "value": n => { citationTemplateCollectionResponse.value = n.getCollectionOfObjectValues<CitationTemplate>(createCitationTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CloudApplicationEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudApplicationEvidence(cloudApplicationEvidence: Partial<CloudApplicationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(cloudApplicationEvidence),
        "appId": n => { cloudApplicationEvidence.appId = n.getNumberValue(); },
        "displayName": n => { cloudApplicationEvidence.displayName = n.getStringValue(); },
        "instanceId": n => { cloudApplicationEvidence.instanceId = n.getNumberValue(); },
        "instanceName": n => { cloudApplicationEvidence.instanceName = n.getStringValue(); },
        "saasAppId": n => { cloudApplicationEvidence.saasAppId = n.getNumberValue(); },
        "stream": n => { cloudApplicationEvidence.stream = n.getObjectValue<Stream>(createStreamFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param CloudLogonRequestEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudLogonRequestEvidence(cloudLogonRequestEvidence: Partial<CloudLogonRequestEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(cloudLogonRequestEvidence),
        "requestId": n => { cloudLogonRequestEvidence.requestId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CloudLogonSessionEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCloudLogonSessionEvidence(cloudLogonSessionEvidence: Partial<CloudLogonSessionEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(cloudLogonSessionEvidence),
        "account": n => { cloudLogonSessionEvidence.account = n.getObjectValue<UserEvidence>(createUserEvidenceFromDiscriminatorValue); },
        "browser": n => { cloudLogonSessionEvidence.browser = n.getStringValue(); },
        "deviceName": n => { cloudLogonSessionEvidence.deviceName = n.getStringValue(); },
        "operatingSystem": n => { cloudLogonSessionEvidence.operatingSystem = n.getStringValue(); },
        "previousLogonDateTime": n => { cloudLogonSessionEvidence.previousLogonDateTime = n.getDateValue(); },
        "protocol": n => { cloudLogonSessionEvidence.protocol = n.getStringValue(); },
        "sessionId": n => { cloudLogonSessionEvidence.sessionId = n.getStringValue(); },
        "startUtcDateTime": n => { cloudLogonSessionEvidence.startUtcDateTime = n.getDateValue(); },
        "userAgent": n => { cloudLogonSessionEvidence.userAgent = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceConnectorAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceConnectorAuditRecord(complianceConnectorAuditRecord: Partial<ComplianceConnectorAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceConnectorAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDLMExchangeAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDLMExchangeAuditRecord(complianceDLMExchangeAuditRecord: Partial<ComplianceDLMExchangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDLMExchangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDLMSharePointAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDLMSharePointAuditRecord(complianceDLMSharePointAuditRecord: Partial<ComplianceDLMSharePointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDLMSharePointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpApplicationsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpApplicationsAuditRecord(complianceDlpApplicationsAuditRecord: Partial<ComplianceDlpApplicationsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpApplicationsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpApplicationsClassificationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpApplicationsClassificationAuditRecord(complianceDlpApplicationsClassificationAuditRecord: Partial<ComplianceDlpApplicationsClassificationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpApplicationsClassificationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpBaseAuditRecord(complianceDlpBaseAuditRecord: Partial<ComplianceDlpBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpClassificationBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpClassificationBaseAuditRecord(complianceDlpClassificationBaseAuditRecord: Partial<ComplianceDlpClassificationBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpClassificationBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpClassificationBaseCdpRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpClassificationBaseCdpRecord(complianceDlpClassificationBaseCdpRecord: Partial<ComplianceDlpClassificationBaseCdpRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpClassificationBaseCdpRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpEndpointAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpEndpointAuditRecord(complianceDlpEndpointAuditRecord: Partial<ComplianceDlpEndpointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpEndpointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpEndpointDiscoveryAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpEndpointDiscoveryAuditRecord(complianceDlpEndpointDiscoveryAuditRecord: Partial<ComplianceDlpEndpointDiscoveryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpEndpointDiscoveryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpExchangeAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeAuditRecord(complianceDlpExchangeAuditRecord: Partial<ComplianceDlpExchangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpExchangeClassificationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeClassificationAuditRecord(complianceDlpExchangeClassificationAuditRecord: Partial<ComplianceDlpExchangeClassificationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeClassificationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpExchangeClassificationCdpRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeClassificationCdpRecord(complianceDlpExchangeClassificationCdpRecord: Partial<ComplianceDlpExchangeClassificationCdpRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeClassificationCdpRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpExchangeDiscoveryAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpExchangeDiscoveryAuditRecord(complianceDlpExchangeDiscoveryAuditRecord: Partial<ComplianceDlpExchangeDiscoveryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpExchangeDiscoveryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpSharePointAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpSharePointAuditRecord(complianceDlpSharePointAuditRecord: Partial<ComplianceDlpSharePointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpSharePointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpSharePointClassificationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpSharePointClassificationAuditRecord(complianceDlpSharePointClassificationAuditRecord: Partial<ComplianceDlpSharePointClassificationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpSharePointClassificationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceDlpSharePointClassificationExtendedAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceDlpSharePointClassificationExtendedAuditRecord(complianceDlpSharePointClassificationExtendedAuditRecord: Partial<ComplianceDlpSharePointClassificationExtendedAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceDlpSharePointClassificationExtendedAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceManagerActionRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceManagerActionRecord(complianceManagerActionRecord: Partial<ComplianceManagerActionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceManagerActionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceSupervisionBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceSupervisionBaseAuditRecord(complianceSupervisionBaseAuditRecord: Partial<ComplianceSupervisionBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceSupervisionBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ComplianceSupervisionExchangeAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoComplianceSupervisionExchangeAuditRecord(complianceSupervisionExchangeAuditRecord: Partial<ComplianceSupervisionExchangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(complianceSupervisionExchangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ConsumptionResourceAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoConsumptionResourceAuditRecord(consumptionResourceAuditRecord: Partial<ConsumptionResourceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(consumptionResourceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ContainerEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContainerEvidence(containerEvidence: Partial<ContainerEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(containerEvidence),
        "args": n => { containerEvidence.args = n.getCollectionOfPrimitiveValues<string>(); },
        "command": n => { containerEvidence.command = n.getCollectionOfPrimitiveValues<string>(); },
        "containerId": n => { containerEvidence.containerId = n.getStringValue(); },
        "image": n => { containerEvidence.image = n.getObjectValue<ContainerImageEvidence>(createContainerImageEvidenceFromDiscriminatorValue); },
        "isPrivileged": n => { containerEvidence.isPrivileged = n.getBooleanValue(); },
        "name": n => { containerEvidence.name = n.getStringValue(); },
        "pod": n => { containerEvidence.pod = n.getObjectValue<KubernetesPodEvidence>(createKubernetesPodEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ContainerImageEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContainerImageEvidence(containerImageEvidence: Partial<ContainerImageEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(containerImageEvidence),
        "digestImage": n => { containerImageEvidence.digestImage = n.getObjectValue<ContainerImageEvidence>(createContainerImageEvidenceFromDiscriminatorValue); },
        "imageId": n => { containerImageEvidence.imageId = n.getStringValue(); },
        "registry": n => { containerImageEvidence.registry = n.getObjectValue<ContainerRegistryEvidence>(createContainerRegistryEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ContainerRegistryEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoContainerRegistryEvidence(containerRegistryEvidence: Partial<ContainerRegistryEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(containerRegistryEvidence),
        "registry": n => { containerRegistryEvidence.registry = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param CopilotInteractionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCopilotInteractionAuditRecord(copilotInteractionAuditRecord: Partial<CopilotInteractionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(copilotInteractionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CoreReportingSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCoreReportingSettingsAuditRecord(coreReportingSettingsAuditRecord: Partial<CoreReportingSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(coreReportingSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CortanaBriefingAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCortanaBriefingAuditRecord(cortanaBriefingAuditRecord: Partial<CortanaBriefingAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cortanaBriefingAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CpsCommonPolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCpsCommonPolicyAuditRecord(cpsCommonPolicyAuditRecord: Partial<CpsCommonPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cpsCommonPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CpsPolicyConfigAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCpsPolicyConfigAuditRecord(cpsPolicyConfigAuditRecord: Partial<CpsPolicyConfigAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(cpsPolicyConfigAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CrmBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCrmBaseAuditRecord(crmBaseAuditRecord: Partial<CrmBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(crmBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CrmEntityOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCrmEntityOperationAuditRecord(crmEntityOperationAuditRecord: Partial<CrmEntityOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(crmEntityOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CustomerKeyServiceEncryptionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCustomerKeyServiceEncryptionAuditRecord(customerKeyServiceEncryptionAuditRecord: Partial<CustomerKeyServiceEncryptionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(customerKeyServiceEncryptionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param CvssSummary The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCvssSummary(cvssSummary: Partial<CvssSummary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { cvssSummary.backingStoreEnabled = true; },
        "@odata.type": n => { cvssSummary.odataType = n.getStringValue(); },
        "score": n => { cvssSummary.score = n.getNumberValue(); },
        "severity": n => { cvssSummary.severity = n.getEnumValue<VulnerabilitySeverity>(VulnerabilitySeverityObject); },
        "vectorString": n => { cvssSummary.vectorString = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DataCenterSecurityBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataCenterSecurityBaseAuditRecord(dataCenterSecurityBaseAuditRecord: Partial<DataCenterSecurityBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataCenterSecurityBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DataCenterSecurityCmdletAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataCenterSecurityCmdletAuditRecord(dataCenterSecurityCmdletAuditRecord: Partial<DataCenterSecurityCmdletAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataCenterSecurityCmdletAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DataGovernanceAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataGovernanceAuditRecord(dataGovernanceAuditRecord: Partial<DataGovernanceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataGovernanceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DataInsightsRestApiAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataInsightsRestApiAuditRecord(dataInsightsRestApiAuditRecord: Partial<DataInsightsRestApiAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataInsightsRestApiAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DataLakeExportOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataLakeExportOperationAuditRecord(dataLakeExportOperationAuditRecord: Partial<DataLakeExportOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataLakeExportOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DataSet The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSet(dataSet: Partial<DataSet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dataSet),
        "createdBy": n => { dataSet.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { dataSet.createdDateTime = n.getDateValue(); },
        "description": n => { dataSet.description = n.getStringValue(); },
        "displayName": n => { dataSet.displayName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DataShareOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataShareOperationAuditRecord(dataShareOperationAuditRecord: Partial<DataShareOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dataShareOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DataSource The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSource(dataSource: Partial<DataSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dataSource),
        "createdBy": n => { dataSource.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { dataSource.createdDateTime = n.getDateValue(); },
        "displayName": n => { dataSource.displayName = n.getStringValue(); },
        "holdStatus": n => { dataSource.holdStatus = n.getEnumValue<DataSourceHoldStatus>(DataSourceHoldStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param DataSourceCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSourceCollectionResponse(dataSourceCollectionResponse: Partial<DataSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(dataSourceCollectionResponse),
        "value": n => { dataSourceCollectionResponse.value = n.getCollectionOfObjectValues<DataSource>(createDataSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param DataSourceContainer The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDataSourceContainer(dataSourceContainer: Partial<DataSourceContainer> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dataSourceContainer),
        "createdDateTime": n => { dataSourceContainer.createdDateTime = n.getDateValue(); },
        "displayName": n => { dataSourceContainer.displayName = n.getStringValue(); },
        "holdStatus": n => { dataSourceContainer.holdStatus = n.getEnumValue<DataSourceHoldStatus>(DataSourceHoldStatusObject); },
        "lastModifiedDateTime": n => { dataSourceContainer.lastModifiedDateTime = n.getDateValue(); },
        "releasedDateTime": n => { dataSourceContainer.releasedDateTime = n.getDateValue(); },
        "status": n => { dataSourceContainer.status = n.getEnumValue<DataSourceContainerStatus>(DataSourceContainerStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param DefaultAuditData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDefaultAuditData(defaultAuditData: Partial<DefaultAuditData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(defaultAuditData),
    }
}
/**
 * The deserialization information for the current model
 * @param DefenderSecurityAlertBaseRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDefenderSecurityAlertBaseRecord(defenderSecurityAlertBaseRecord: Partial<DefenderSecurityAlertBaseRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(defenderSecurityAlertBaseRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DeleteCertificateRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeleteCertificateRecord(deleteCertificateRecord: Partial<DeleteCertificateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(deleteCertificateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DepartmentTemplate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDepartmentTemplate(departmentTemplate: Partial<DepartmentTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(departmentTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @param DepartmentTemplateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDepartmentTemplateCollectionResponse(departmentTemplateCollectionResponse: Partial<DepartmentTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(departmentTemplateCollectionResponse),
        "value": n => { departmentTemplateCollectionResponse.value = n.getCollectionOfObjectValues<DepartmentTemplate>(createDepartmentTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param DeploymentAccessKeyType The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeploymentAccessKeyType(deploymentAccessKeyType: Partial<DeploymentAccessKeyType> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { deploymentAccessKeyType.backingStoreEnabled = true; },
        "deploymentAccessKey": n => { deploymentAccessKeyType.deploymentAccessKey = n.getStringValue(); },
        "@odata.type": n => { deploymentAccessKeyType.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DeviceEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDeviceEvidence(deviceEvidence: Partial<DeviceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(deviceEvidence),
        "azureAdDeviceId": n => { deviceEvidence.azureAdDeviceId = n.getStringValue(); },
        "defenderAvStatus": n => { deviceEvidence.defenderAvStatus = n.getEnumValue<DefenderAvStatus>(DefenderAvStatusObject); },
        "deviceDnsName": n => { deviceEvidence.deviceDnsName = n.getStringValue(); },
        "dnsDomain": n => { deviceEvidence.dnsDomain = n.getStringValue(); },
        "firstSeenDateTime": n => { deviceEvidence.firstSeenDateTime = n.getDateValue(); },
        "healthStatus": n => { deviceEvidence.healthStatus = n.getEnumValue<DeviceHealthStatus>(DeviceHealthStatusObject); },
        "hostName": n => { deviceEvidence.hostName = n.getStringValue(); },
        "ipInterfaces": n => { deviceEvidence.ipInterfaces = n.getCollectionOfPrimitiveValues<string>(); },
        "lastExternalIpAddress": n => { deviceEvidence.lastExternalIpAddress = n.getStringValue(); },
        "lastIpAddress": n => { deviceEvidence.lastIpAddress = n.getStringValue(); },
        "loggedOnUsers": n => { deviceEvidence.loggedOnUsers = n.getCollectionOfObjectValues<LoggedOnUser>(createLoggedOnUserFromDiscriminatorValue); },
        "mdeDeviceId": n => { deviceEvidence.mdeDeviceId = n.getStringValue(); },
        "ntDomain": n => { deviceEvidence.ntDomain = n.getStringValue(); },
        "onboardingStatus": n => { deviceEvidence.onboardingStatus = n.getEnumValue<OnboardingStatus>(OnboardingStatusObject); },
        "osBuild": n => { deviceEvidence.osBuild = n.getNumberValue(); },
        "osPlatform": n => { deviceEvidence.osPlatform = n.getStringValue(); },
        "rbacGroupId": n => { deviceEvidence.rbacGroupId = n.getNumberValue(); },
        "rbacGroupName": n => { deviceEvidence.rbacGroupName = n.getStringValue(); },
        "riskScore": n => { deviceEvidence.riskScore = n.getEnumValue<DeviceRiskScore>(DeviceRiskScoreObject); },
        "version": n => { deviceEvidence.version = n.getStringValue(); },
        "vmMetadata": n => { deviceEvidence.vmMetadata = n.getObjectValue<VmMetadata>(createVmMetadataFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Dictionary The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDictionary(dictionary: Partial<Dictionary> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { dictionary.backingStoreEnabled = true; },
        "@odata.type": n => { dictionary.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DisableConsentRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDisableConsentRecord(disableConsentRecord: Partial<DisableConsentRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(disableConsentRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DiscoveryAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDiscoveryAuditRecord(discoveryAuditRecord: Partial<DiscoveryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(discoveryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DispositionReviewStage The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDispositionReviewStage(dispositionReviewStage: Partial<DispositionReviewStage> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(dispositionReviewStage),
        "name": n => { dispositionReviewStage.name = n.getStringValue(); },
        "reviewersEmailAddresses": n => { dispositionReviewStage.reviewersEmailAddresses = n.getCollectionOfPrimitiveValues<string>(); },
        "stageNumber": n => { dispositionReviewStage.stageNumber = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DispositionReviewStageCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDispositionReviewStageCollectionResponse(dispositionReviewStageCollectionResponse: Partial<DispositionReviewStageCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(dispositionReviewStageCollectionResponse),
        "value": n => { dispositionReviewStageCollectionResponse.value = n.getCollectionOfObjectValues<DispositionReviewStage>(createDispositionReviewStageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param DlpEndpointAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDlpEndpointAuditRecord(dlpEndpointAuditRecord: Partial<DlpEndpointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dlpEndpointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DlpSensitiveInformationTypeCmdletRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDlpSensitiveInformationTypeCmdletRecord(dlpSensitiveInformationTypeCmdletRecord: Partial<DlpSensitiveInformationTypeCmdletRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dlpSensitiveInformationTypeCmdletRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DlpSensitiveInformationTypeRulePackageCmdletRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDlpSensitiveInformationTypeRulePackageCmdletRecord(dlpSensitiveInformationTypeRulePackageCmdletRecord: Partial<DlpSensitiveInformationTypeRulePackageCmdletRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dlpSensitiveInformationTypeRulePackageCmdletRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param DnsEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDnsEvidence(dnsEvidence: Partial<DnsEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(dnsEvidence),
        "dnsServerIp": n => { dnsEvidence.dnsServerIp = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "domainName": n => { dnsEvidence.domainName = n.getStringValue(); },
        "hostIpAddress": n => { dnsEvidence.hostIpAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "ipAddresses": n => { dnsEvidence.ipAddresses = n.getCollectionOfObjectValues<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param DownloadCertificateRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDownloadCertificateRecord(downloadCertificateRecord: Partial<DownloadCertificateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(downloadCertificateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Dynamics365BusinessCentralAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDynamics365BusinessCentralAuditRecord(dynamics365BusinessCentralAuditRecord: Partial<Dynamics365BusinessCentralAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(dynamics365BusinessCentralAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryAddToReviewSetOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryAddToReviewSetOperation(ediscoveryAddToReviewSetOperation: Partial<EdiscoveryAddToReviewSetOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryAddToReviewSetOperation),
        "additionalDataOptions": n => { ediscoveryAddToReviewSetOperation.additionalDataOptions = n.getCollectionOfEnumValues<AdditionalDataOptions>(AdditionalDataOptionsObject); },
        "cloudAttachmentVersion": n => { ediscoveryAddToReviewSetOperation.cloudAttachmentVersion = n.getEnumValue<CloudAttachmentVersion>(CloudAttachmentVersionObject); },
        "documentVersion": n => { ediscoveryAddToReviewSetOperation.documentVersion = n.getEnumValue<DocumentVersion>(DocumentVersionObject); },
        "itemsToInclude": n => { ediscoveryAddToReviewSetOperation.itemsToInclude = n.getCollectionOfEnumValues<ItemsToInclude>(ItemsToIncludeObject); },
        "reviewSet": n => { ediscoveryAddToReviewSetOperation.reviewSet = n.getObjectValue<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
        "search": n => { ediscoveryAddToReviewSetOperation.search = n.getObjectValue<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryCase The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCase(ediscoveryCase: Partial<EdiscoveryCase> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseEscaped(ediscoveryCase),
        "closedBy": n => { ediscoveryCase.closedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "closedDateTime": n => { ediscoveryCase.closedDateTime = n.getDateValue(); },
        "custodians": n => { ediscoveryCase.custodians = n.getCollectionOfObjectValues<EdiscoveryCustodian>(createEdiscoveryCustodianFromDiscriminatorValue); },
        "externalId": n => { ediscoveryCase.externalId = n.getStringValue(); },
        "noncustodialDataSources": n => { ediscoveryCase.noncustodialDataSources = n.getCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>(createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue); },
        "operations": n => { ediscoveryCase.operations = n.getCollectionOfObjectValues<CaseOperation>(createCaseOperationFromDiscriminatorValue); },
        "reviewSets": n => { ediscoveryCase.reviewSets = n.getCollectionOfObjectValues<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
        "searches": n => { ediscoveryCase.searches = n.getCollectionOfObjectValues<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
        "settings": n => { ediscoveryCase.settings = n.getObjectValue<EdiscoveryCaseSettings>(createEdiscoveryCaseSettingsFromDiscriminatorValue); },
        "tags": n => { ediscoveryCase.tags = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryCaseCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCaseCollectionResponse(ediscoveryCaseCollectionResponse: Partial<EdiscoveryCaseCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryCaseCollectionResponse),
        "value": n => { ediscoveryCaseCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryCase>(createEdiscoveryCaseFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryCaseSettings The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCaseSettings(ediscoveryCaseSettings: Partial<EdiscoveryCaseSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(ediscoveryCaseSettings),
        "ocr": n => { ediscoveryCaseSettings.ocr = n.getObjectValue<OcrSettings>(createOcrSettingsFromDiscriminatorValue); },
        "redundancyDetection": n => { ediscoveryCaseSettings.redundancyDetection = n.getObjectValue<RedundancyDetectionSettings>(createRedundancyDetectionSettingsFromDiscriminatorValue); },
        "topicModeling": n => { ediscoveryCaseSettings.topicModeling = n.getObjectValue<TopicModelingSettings>(createTopicModelingSettingsFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryCustodian The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCustodian(ediscoveryCustodian: Partial<EdiscoveryCustodian> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSourceContainer(ediscoveryCustodian),
        "acknowledgedDateTime": n => { ediscoveryCustodian.acknowledgedDateTime = n.getDateValue(); },
        "email": n => { ediscoveryCustodian.email = n.getStringValue(); },
        "lastIndexOperation": n => { ediscoveryCustodian.lastIndexOperation = n.getObjectValue<EdiscoveryIndexOperation>(createEdiscoveryIndexOperationFromDiscriminatorValue); },
        "siteSources": n => { ediscoveryCustodian.siteSources = n.getCollectionOfObjectValues<SiteSource>(createSiteSourceFromDiscriminatorValue); },
        "unifiedGroupSources": n => { ediscoveryCustodian.unifiedGroupSources = n.getCollectionOfObjectValues<UnifiedGroupSource>(createUnifiedGroupSourceFromDiscriminatorValue); },
        "userSources": n => { ediscoveryCustodian.userSources = n.getCollectionOfObjectValues<UserSource>(createUserSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryCustodianCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryCustodianCollectionResponse(ediscoveryCustodianCollectionResponse: Partial<EdiscoveryCustodianCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryCustodianCollectionResponse),
        "value": n => { ediscoveryCustodianCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryCustodian>(createEdiscoveryCustodianFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryEstimateOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryEstimateOperation(ediscoveryEstimateOperation: Partial<EdiscoveryEstimateOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryEstimateOperation),
        "indexedItemCount": n => { ediscoveryEstimateOperation.indexedItemCount = n.getNumberValue(); },
        "indexedItemsSize": n => { ediscoveryEstimateOperation.indexedItemsSize = n.getNumberValue(); },
        "mailboxCount": n => { ediscoveryEstimateOperation.mailboxCount = n.getNumberValue(); },
        "search": n => { ediscoveryEstimateOperation.search = n.getObjectValue<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
        "siteCount": n => { ediscoveryEstimateOperation.siteCount = n.getNumberValue(); },
        "statisticsOptions": n => { ediscoveryEstimateOperation.statisticsOptions = n.getCollectionOfEnumValues<StatisticsOptions>(StatisticsOptionsObject); },
        "unindexedItemCount": n => { ediscoveryEstimateOperation.unindexedItemCount = n.getNumberValue(); },
        "unindexedItemsSize": n => { ediscoveryEstimateOperation.unindexedItemsSize = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryExportOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryExportOperation(ediscoveryExportOperation: Partial<EdiscoveryExportOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryExportOperation),
        "description": n => { ediscoveryExportOperation.description = n.getStringValue(); },
        "exportFileMetadata": n => { ediscoveryExportOperation.exportFileMetadata = n.getCollectionOfObjectValues<ExportFileMetadata>(createExportFileMetadataFromDiscriminatorValue); },
        "exportOptions": n => { ediscoveryExportOperation.exportOptions = n.getCollectionOfEnumValues<ExportOptions>(ExportOptionsObject); },
        "exportStructure": n => { ediscoveryExportOperation.exportStructure = n.getEnumValue<ExportFileStructure>(ExportFileStructureObject); },
        "outputName": n => { ediscoveryExportOperation.outputName = n.getStringValue(); },
        "reviewSet": n => { ediscoveryExportOperation.reviewSet = n.getObjectValue<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
        "reviewSetQuery": n => { ediscoveryExportOperation.reviewSetQuery = n.getObjectValue<EdiscoveryReviewSetQuery>(createEdiscoveryReviewSetQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryHoldOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryHoldOperation(ediscoveryHoldOperation: Partial<EdiscoveryHoldOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryHoldOperation),
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryIndexOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryIndexOperation(ediscoveryIndexOperation: Partial<EdiscoveryIndexOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryIndexOperation),
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryNoncustodialDataSource The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryNoncustodialDataSource(ediscoveryNoncustodialDataSource: Partial<EdiscoveryNoncustodialDataSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSourceContainer(ediscoveryNoncustodialDataSource),
        "dataSource": n => { ediscoveryNoncustodialDataSource.dataSource = n.getObjectValue<DataSource>(createDataSourceFromDiscriminatorValue); },
        "lastIndexOperation": n => { ediscoveryNoncustodialDataSource.lastIndexOperation = n.getObjectValue<EdiscoveryIndexOperation>(createEdiscoveryIndexOperationFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryNoncustodialDataSourceCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryNoncustodialDataSourceCollectionResponse(ediscoveryNoncustodialDataSourceCollectionResponse: Partial<EdiscoveryNoncustodialDataSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryNoncustodialDataSourceCollectionResponse),
        "value": n => { ediscoveryNoncustodialDataSourceCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>(createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryPurgeDataOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryPurgeDataOperation(ediscoveryPurgeDataOperation: Partial<EdiscoveryPurgeDataOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryPurgeDataOperation),
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryReviewSet The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSet(ediscoveryReviewSet: Partial<EdiscoveryReviewSet> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSet(ediscoveryReviewSet),
        "queries": n => { ediscoveryReviewSet.queries = n.getCollectionOfObjectValues<EdiscoveryReviewSetQuery>(createEdiscoveryReviewSetQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryReviewSetCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSetCollectionResponse(ediscoveryReviewSetCollectionResponse: Partial<EdiscoveryReviewSetCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryReviewSetCollectionResponse),
        "value": n => { ediscoveryReviewSetCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryReviewSet>(createEdiscoveryReviewSetFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryReviewSetQuery The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSetQuery(ediscoveryReviewSetQuery: Partial<EdiscoveryReviewSetQuery> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSearch(ediscoveryReviewSetQuery),
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryReviewSetQueryCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewSetQueryCollectionResponse(ediscoveryReviewSetQueryCollectionResponse: Partial<EdiscoveryReviewSetQueryCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryReviewSetQueryCollectionResponse),
        "value": n => { ediscoveryReviewSetQueryCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryReviewSetQuery>(createEdiscoveryReviewSetQueryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryReviewTag The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewTag(ediscoveryReviewTag: Partial<EdiscoveryReviewTag> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoTag(ediscoveryReviewTag),
        "childSelectability": n => { ediscoveryReviewTag.childSelectability = n.getEnumValue<ChildSelectability>(ChildSelectabilityObject); },
        "childTags": n => { ediscoveryReviewTag.childTags = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
        "parent": n => { ediscoveryReviewTag.parent = n.getObjectValue<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryReviewTagCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryReviewTagCollectionResponse(ediscoveryReviewTagCollectionResponse: Partial<EdiscoveryReviewTagCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoveryReviewTagCollectionResponse),
        "value": n => { ediscoveryReviewTagCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoveryReviewTag>(createEdiscoveryReviewTagFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoverySearch The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoverySearch(ediscoverySearch: Partial<EdiscoverySearch> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoSearch(ediscoverySearch),
        "additionalSources": n => { ediscoverySearch.additionalSources = n.getCollectionOfObjectValues<DataSource>(createDataSourceFromDiscriminatorValue); },
        "addToReviewSetOperation": n => { ediscoverySearch.addToReviewSetOperation = n.getObjectValue<EdiscoveryAddToReviewSetOperation>(createEdiscoveryAddToReviewSetOperationFromDiscriminatorValue); },
        "custodianSources": n => { ediscoverySearch.custodianSources = n.getCollectionOfObjectValues<DataSource>(createDataSourceFromDiscriminatorValue); },
        "dataSourceScopes": n => { ediscoverySearch.dataSourceScopes = n.getCollectionOfEnumValues<DataSourceScopes>(DataSourceScopesObject); },
        "lastEstimateStatisticsOperation": n => { ediscoverySearch.lastEstimateStatisticsOperation = n.getObjectValue<EdiscoveryEstimateOperation>(createEdiscoveryEstimateOperationFromDiscriminatorValue); },
        "noncustodialSources": n => { ediscoverySearch.noncustodialSources = n.getCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>(createEdiscoveryNoncustodialDataSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoverySearchCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoverySearchCollectionResponse(ediscoverySearchCollectionResponse: Partial<EdiscoverySearchCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(ediscoverySearchCollectionResponse),
        "value": n => { ediscoverySearchCollectionResponse.value = n.getCollectionOfObjectValues<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoverySearchExportOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoverySearchExportOperation(ediscoverySearchExportOperation: Partial<EdiscoverySearchExportOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoverySearchExportOperation),
        "additionalOptions": n => { ediscoverySearchExportOperation.additionalOptions = n.getCollectionOfEnumValues<AdditionalOptions>(AdditionalOptionsObject); },
        "cloudAttachmentVersion": n => { ediscoverySearchExportOperation.cloudAttachmentVersion = n.getEnumValue<CloudAttachmentVersion>(CloudAttachmentVersionObject); },
        "description": n => { ediscoverySearchExportOperation.description = n.getStringValue(); },
        "displayName": n => { ediscoverySearchExportOperation.displayName = n.getStringValue(); },
        "documentVersion": n => { ediscoverySearchExportOperation.documentVersion = n.getEnumValue<DocumentVersion>(DocumentVersionObject); },
        "exportCriteria": n => { ediscoverySearchExportOperation.exportCriteria = n.getCollectionOfEnumValues<ExportCriteria>(ExportCriteriaObject); },
        "exportFileMetadata": n => { ediscoverySearchExportOperation.exportFileMetadata = n.getCollectionOfObjectValues<ExportFileMetadata>(createExportFileMetadataFromDiscriminatorValue); },
        "exportFormat": n => { ediscoverySearchExportOperation.exportFormat = n.getEnumValue<ExportFormat>(ExportFormatObject); },
        "exportLocation": n => { ediscoverySearchExportOperation.exportLocation = n.getCollectionOfEnumValues<ExportLocation>(ExportLocationObject); },
        "exportSingleItems": n => { ediscoverySearchExportOperation.exportSingleItems = n.getBooleanValue(); },
        "search": n => { ediscoverySearchExportOperation.search = n.getObjectValue<EdiscoverySearch>(createEdiscoverySearchFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param EdiscoveryTagOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEdiscoveryTagOperation(ediscoveryTagOperation: Partial<EdiscoveryTagOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoCaseOperation(ediscoveryTagOperation),
    }
}
/**
 * The deserialization information for the current model
 * @param EmailSender The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEmailSender(emailSender: Partial<EmailSender> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { emailSender.backingStoreEnabled = true; },
        "displayName": n => { emailSender.displayName = n.getStringValue(); },
        "domainName": n => { emailSender.domainName = n.getStringValue(); },
        "emailAddress": n => { emailSender.emailAddress = n.getStringValue(); },
        "@odata.type": n => { emailSender.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param EnableConsentRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEnableConsentRecord(enableConsentRecord: Partial<EnableConsentRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(enableConsentRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param EpicSMSLinkRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEpicSMSLinkRecord(epicSMSLinkRecord: Partial<EpicSMSLinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(epicSMSLinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param EpicSMSSettingsUpdateRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEpicSMSSettingsUpdateRecord(epicSMSSettingsUpdateRecord: Partial<EpicSMSSettingsUpdateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(epicSMSSettingsUpdateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param EpicSMSUnlinkRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEpicSMSUnlinkRecord(epicSMSUnlinkRecord: Partial<EpicSMSUnlinkRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(epicSMSUnlinkRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param EventPropagationResult The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEventPropagationResult(eventPropagationResult: Partial<EventPropagationResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { eventPropagationResult.backingStoreEnabled = true; },
        "location": n => { eventPropagationResult.location = n.getStringValue(); },
        "@odata.type": n => { eventPropagationResult.odataType = n.getStringValue(); },
        "serviceName": n => { eventPropagationResult.serviceName = n.getStringValue(); },
        "status": n => { eventPropagationResult.status = n.getEnumValue<EventPropagationStatus>(EventPropagationStatusObject); },
        "statusInformation": n => { eventPropagationResult.statusInformation = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param EventQuery The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEventQuery(eventQuery: Partial<EventQuery> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { eventQuery.backingStoreEnabled = true; },
        "@odata.type": n => { eventQuery.odataType = n.getStringValue(); },
        "query": n => { eventQuery.query = n.getStringValue(); },
        "queryType": n => { eventQuery.queryType = n.getEnumValue<QueryType>(QueryTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param ExchangeAdminAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeAdminAuditRecord(exchangeAdminAuditRecord: Partial<ExchangeAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ExchangeAggregatedMailboxAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeAggregatedMailboxAuditRecord(exchangeAggregatedMailboxAuditRecord: Partial<ExchangeAggregatedMailboxAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeAggregatedMailboxAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ExchangeAggregatedOperationRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeAggregatedOperationRecord(exchangeAggregatedOperationRecord: Partial<ExchangeAggregatedOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeAggregatedOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ExchangeMailboxAuditBaseRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeMailboxAuditBaseRecord(exchangeMailboxAuditBaseRecord: Partial<ExchangeMailboxAuditBaseRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeMailboxAuditBaseRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ExchangeMailboxAuditGroupRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeMailboxAuditGroupRecord(exchangeMailboxAuditGroupRecord: Partial<ExchangeMailboxAuditGroupRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeMailboxAuditGroupRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ExchangeMailboxAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExchangeMailboxAuditRecord(exchangeMailboxAuditRecord: Partial<ExchangeMailboxAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(exchangeMailboxAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ExportFileMetadata The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoExportFileMetadata(exportFileMetadata: Partial<ExportFileMetadata> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { exportFileMetadata.backingStoreEnabled = true; },
        "downloadUrl": n => { exportFileMetadata.downloadUrl = n.getStringValue(); },
        "fileName": n => { exportFileMetadata.fileName = n.getStringValue(); },
        "@odata.type": n => { exportFileMetadata.odataType = n.getStringValue(); },
        "size": n => { exportFileMetadata.size = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FhirBaseUrlAddRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlAddRecord(fhirBaseUrlAddRecord: Partial<FhirBaseUrlAddRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlAddRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param FhirBaseUrlApproveRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlApproveRecord(fhirBaseUrlApproveRecord: Partial<FhirBaseUrlApproveRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlApproveRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param FhirBaseUrlDeleteRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlDeleteRecord(fhirBaseUrlDeleteRecord: Partial<FhirBaseUrlDeleteRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlDeleteRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param FhirBaseUrlUpdateRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFhirBaseUrlUpdateRecord(fhirBaseUrlUpdateRecord: Partial<FhirBaseUrlUpdateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(fhirBaseUrlUpdateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param FileDetails The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileDetails(fileDetails: Partial<FileDetails> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { fileDetails.backingStoreEnabled = true; },
        "fileName": n => { fileDetails.fileName = n.getStringValue(); },
        "filePath": n => { fileDetails.filePath = n.getStringValue(); },
        "filePublisher": n => { fileDetails.filePublisher = n.getStringValue(); },
        "fileSize": n => { fileDetails.fileSize = n.getNumberValue(); },
        "issuer": n => { fileDetails.issuer = n.getStringValue(); },
        "md5": n => { fileDetails.md5 = n.getStringValue(); },
        "@odata.type": n => { fileDetails.odataType = n.getStringValue(); },
        "sha1": n => { fileDetails.sha1 = n.getStringValue(); },
        "sha256": n => { fileDetails.sha256 = n.getStringValue(); },
        "sha256Ac": n => { fileDetails.sha256Ac = n.getStringValue(); },
        "signer": n => { fileDetails.signer = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileEvidence(fileEvidence: Partial<FileEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(fileEvidence),
        "detectionStatus": n => { fileEvidence.detectionStatus = n.getEnumValue<DetectionStatus>(DetectionStatusObject); },
        "fileDetails": n => { fileEvidence.fileDetails = n.getObjectValue<FileDetails>(createFileDetailsFromDiscriminatorValue); },
        "mdeDeviceId": n => { fileEvidence.mdeDeviceId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileHash The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileHash(fileHash: Partial<FileHash> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "algorithm": n => { fileHash.algorithm = n.getEnumValue<FileHashAlgorithm>(FileHashAlgorithmObject); },
        "backingStoreEnabled": n => { fileHash.backingStoreEnabled = true; },
        "@odata.type": n => { fileHash.odataType = n.getStringValue(); },
        "value": n => { fileHash.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FileHashEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFileHashEvidence(fileHashEvidence: Partial<FileHashEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(fileHashEvidence),
        "algorithm": n => { fileHashEvidence.algorithm = n.getEnumValue<FileHashAlgorithm>(FileHashAlgorithmObject); },
        "value": n => { fileHashEvidence.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanAppliedCategory The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanAppliedCategory(filePlanAppliedCategory: Partial<FilePlanAppliedCategory> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanAppliedCategory),
        "subcategory": n => { filePlanAppliedCategory.subcategory = n.getObjectValue<FilePlanSubcategory>(createFilePlanSubcategoryFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanAuthority The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanAuthority(filePlanAuthority: Partial<FilePlanAuthority> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanAuthority),
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanCitation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanCitation(filePlanCitation: Partial<FilePlanCitation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanCitation),
        "citationJurisdiction": n => { filePlanCitation.citationJurisdiction = n.getStringValue(); },
        "citationUrl": n => { filePlanCitation.citationUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanDepartment The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDepartment(filePlanDepartment: Partial<FilePlanDepartment> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanDepartment),
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanDescriptor The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDescriptor(filePlanDescriptor: Partial<FilePlanDescriptor> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(filePlanDescriptor),
        "authority": n => { filePlanDescriptor.authority = n.getObjectValue<FilePlanAuthority>(createFilePlanAuthorityFromDiscriminatorValue); },
        "authorityTemplate": n => { filePlanDescriptor.authorityTemplate = n.getObjectValue<AuthorityTemplate>(createAuthorityTemplateFromDiscriminatorValue); },
        "category": n => { filePlanDescriptor.category = n.getObjectValue<FilePlanAppliedCategory>(createFilePlanAppliedCategoryFromDiscriminatorValue); },
        "categoryTemplate": n => { filePlanDescriptor.categoryTemplate = n.getObjectValue<CategoryTemplate>(createCategoryTemplateFromDiscriminatorValue); },
        "citation": n => { filePlanDescriptor.citation = n.getObjectValue<FilePlanCitation>(createFilePlanCitationFromDiscriminatorValue); },
        "citationTemplate": n => { filePlanDescriptor.citationTemplate = n.getObjectValue<CitationTemplate>(createCitationTemplateFromDiscriminatorValue); },
        "department": n => { filePlanDescriptor.department = n.getObjectValue<FilePlanDepartment>(createFilePlanDepartmentFromDiscriminatorValue); },
        "departmentTemplate": n => { filePlanDescriptor.departmentTemplate = n.getObjectValue<DepartmentTemplate>(createDepartmentTemplateFromDiscriminatorValue); },
        "filePlanReference": n => { filePlanDescriptor.filePlanReference = n.getObjectValue<FilePlanReference>(createFilePlanReferenceFromDiscriminatorValue); },
        "filePlanReferenceTemplate": n => { filePlanDescriptor.filePlanReferenceTemplate = n.getObjectValue<FilePlanReferenceTemplate>(createFilePlanReferenceTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanDescriptorBase The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDescriptorBase(filePlanDescriptorBase: Partial<FilePlanDescriptorBase> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { filePlanDescriptorBase.backingStoreEnabled = true; },
        "displayName": n => { filePlanDescriptorBase.displayName = n.getStringValue(); },
        "@odata.type": n => { filePlanDescriptorBase.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanDescriptorTemplate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanDescriptorTemplate(filePlanDescriptorTemplate: Partial<FilePlanDescriptorTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(filePlanDescriptorTemplate),
        "createdBy": n => { filePlanDescriptorTemplate.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { filePlanDescriptorTemplate.createdDateTime = n.getDateValue(); },
        "displayName": n => { filePlanDescriptorTemplate.displayName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanReference The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanReference(filePlanReference: Partial<FilePlanReference> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanReference),
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanReferenceTemplate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanReferenceTemplate(filePlanReferenceTemplate: Partial<FilePlanReferenceTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(filePlanReferenceTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanReferenceTemplateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanReferenceTemplateCollectionResponse(filePlanReferenceTemplateCollectionResponse: Partial<FilePlanReferenceTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(filePlanReferenceTemplateCollectionResponse),
        "value": n => { filePlanReferenceTemplateCollectionResponse.value = n.getCollectionOfObjectValues<FilePlanReferenceTemplate>(createFilePlanReferenceTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param FilePlanSubcategory The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFilePlanSubcategory(filePlanSubcategory: Partial<FilePlanSubcategory> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorBase(filePlanSubcategory),
    }
}
/**
 * The deserialization information for the current model
 * @param FormattedContent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFormattedContent(formattedContent: Partial<FormattedContent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { formattedContent.backingStoreEnabled = true; },
        "content": n => { formattedContent.content = n.getStringValue(); },
        "format": n => { formattedContent.format = n.getEnumValue<ContentFormat>(ContentFormatObject); },
        "@odata.type": n => { formattedContent.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param GeoLocation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGeoLocation(geoLocation: Partial<GeoLocation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { geoLocation.backingStoreEnabled = true; },
        "city": n => { geoLocation.city = n.getStringValue(); },
        "countryName": n => { geoLocation.countryName = n.getStringValue(); },
        "latitude": n => { geoLocation.latitude = n.getNumberValue(); },
        "longitude": n => { geoLocation.longitude = n.getNumberValue(); },
        "@odata.type": n => { geoLocation.odataType = n.getStringValue(); },
        "state": n => { geoLocation.state = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param GitHubOrganizationEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGitHubOrganizationEvidence(gitHubOrganizationEvidence: Partial<GitHubOrganizationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(gitHubOrganizationEvidence),
        "company": n => { gitHubOrganizationEvidence.company = n.getStringValue(); },
        "displayName": n => { gitHubOrganizationEvidence.displayName = n.getStringValue(); },
        "email": n => { gitHubOrganizationEvidence.email = n.getStringValue(); },
        "login": n => { gitHubOrganizationEvidence.login = n.getStringValue(); },
        "orgId": n => { gitHubOrganizationEvidence.orgId = n.getStringValue(); },
        "webUrl": n => { gitHubOrganizationEvidence.webUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param GitHubRepoEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGitHubRepoEvidence(gitHubRepoEvidence: Partial<GitHubRepoEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(gitHubRepoEvidence),
        "baseUrl": n => { gitHubRepoEvidence.baseUrl = n.getStringValue(); },
        "login": n => { gitHubRepoEvidence.login = n.getStringValue(); },
        "owner": n => { gitHubRepoEvidence.owner = n.getStringValue(); },
        "ownerType": n => { gitHubRepoEvidence.ownerType = n.getStringValue(); },
        "repoId": n => { gitHubRepoEvidence.repoId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param GitHubUserEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGitHubUserEvidence(gitHubUserEvidence: Partial<GitHubUserEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(gitHubUserEvidence),
        "email": n => { gitHubUserEvidence.email = n.getStringValue(); },
        "login": n => { gitHubUserEvidence.login = n.getStringValue(); },
        "name": n => { gitHubUserEvidence.name = n.getStringValue(); },
        "userId": n => { gitHubUserEvidence.userId = n.getStringValue(); },
        "webUrl": n => { gitHubUserEvidence.webUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param GoogleCloudResourceEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoGoogleCloudResourceEvidence(googleCloudResourceEvidence: Partial<GoogleCloudResourceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(googleCloudResourceEvidence),
        "fullResourceName": n => { googleCloudResourceEvidence.fullResourceName = n.getStringValue(); },
        "location": n => { googleCloudResourceEvidence.location = n.getStringValue(); },
        "locationType": n => { googleCloudResourceEvidence.locationType = n.getEnumValue<GoogleCloudLocationType>(GoogleCloudLocationTypeObject); },
        "projectId": n => { googleCloudResourceEvidence.projectId = n.getStringValue(); },
        "projectNumber": n => { googleCloudResourceEvidence.projectNumber = n.getNumberValue(); },
        "resourceName": n => { googleCloudResourceEvidence.resourceName = n.getStringValue(); },
        "resourceType": n => { googleCloudResourceEvidence.resourceType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HealthcareSignalRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthcareSignalRecord(healthcareSignalRecord: Partial<HealthcareSignalRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(healthcareSignalRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param HealthIssue The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthIssue(healthIssue: Partial<HealthIssue> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(healthIssue),
        "additionalInformation": n => { healthIssue.additionalInformation = n.getCollectionOfPrimitiveValues<string>(); },
        "createdDateTime": n => { healthIssue.createdDateTime = n.getDateValue(); },
        "description": n => { healthIssue.description = n.getStringValue(); },
        "displayName": n => { healthIssue.displayName = n.getStringValue(); },
        "domainNames": n => { healthIssue.domainNames = n.getCollectionOfPrimitiveValues<string>(); },
        "healthIssueType": n => { healthIssue.healthIssueType = n.getEnumValue<HealthIssueType>(HealthIssueTypeObject); },
        "issueTypeId": n => { healthIssue.issueTypeId = n.getStringValue(); },
        "lastModifiedDateTime": n => { healthIssue.lastModifiedDateTime = n.getDateValue(); },
        "recommendations": n => { healthIssue.recommendations = n.getCollectionOfPrimitiveValues<string>(); },
        "recommendedActionCommands": n => { healthIssue.recommendedActionCommands = n.getCollectionOfPrimitiveValues<string>(); },
        "sensorDNSNames": n => { healthIssue.sensorDNSNames = n.getCollectionOfPrimitiveValues<string>(); },
        "severity": n => { healthIssue.severity = n.getEnumValue<HealthIssueSeverity>(HealthIssueSeverityObject); },
        "status": n => { healthIssue.status = n.getEnumValue<HealthIssueStatus>(HealthIssueStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param HealthIssueCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHealthIssueCollectionResponse(healthIssueCollectionResponse: Partial<HealthIssueCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(healthIssueCollectionResponse),
        "value": n => { healthIssueCollectionResponse.value = n.getCollectionOfObjectValues<HealthIssue>(createHealthIssueFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Host The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHost(host: Partial<Host> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(host),
        "childHostPairs": n => { host.childHostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "components": n => { host.components = n.getCollectionOfObjectValues<HostComponent>(createHostComponentFromDiscriminatorValue); },
        "cookies": n => { host.cookies = n.getCollectionOfObjectValues<HostCookie>(createHostCookieFromDiscriminatorValue); },
        "firstSeenDateTime": n => { host.firstSeenDateTime = n.getDateValue(); },
        "hostPairs": n => { host.hostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "lastSeenDateTime": n => { host.lastSeenDateTime = n.getDateValue(); },
        "parentHostPairs": n => { host.parentHostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "passiveDns": n => { host.passiveDns = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
        "passiveDnsReverse": n => { host.passiveDnsReverse = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
        "ports": n => { host.ports = n.getCollectionOfObjectValues<HostPort>(createHostPortFromDiscriminatorValue); },
        "reputation": n => { host.reputation = n.getObjectValue<HostReputation>(createHostReputationFromDiscriminatorValue); },
        "sslCertificates": n => { host.sslCertificates = n.getCollectionOfObjectValues<HostSslCertificate>(createHostSslCertificateFromDiscriminatorValue); },
        "subdomains": n => { host.subdomains = n.getCollectionOfObjectValues<Subdomain>(createSubdomainFromDiscriminatorValue); },
        "trackers": n => { host.trackers = n.getCollectionOfObjectValues<HostTracker>(createHostTrackerFromDiscriminatorValue); },
        "whois": n => { host.whois = n.getObjectValue<WhoisRecord>(createWhoisRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostCollectionResponse(hostCollectionResponse: Partial<HostCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostCollectionResponse),
        "value": n => { hostCollectionResponse.value = n.getCollectionOfObjectValues<Host>(createHostFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostComponent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostComponent(hostComponent: Partial<HostComponent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostComponent),
        "category": n => { hostComponent.category = n.getStringValue(); },
        "firstSeenDateTime": n => { hostComponent.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostComponent.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { hostComponent.lastSeenDateTime = n.getDateValue(); },
        "name": n => { hostComponent.name = n.getStringValue(); },
        "version": n => { hostComponent.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostComponentCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostComponentCollectionResponse(hostComponentCollectionResponse: Partial<HostComponentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostComponentCollectionResponse),
        "value": n => { hostComponentCollectionResponse.value = n.getCollectionOfObjectValues<HostComponent>(createHostComponentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostCookie The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostCookie(hostCookie: Partial<HostCookie> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostCookie),
        "domain": n => { hostCookie.domain = n.getStringValue(); },
        "firstSeenDateTime": n => { hostCookie.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostCookie.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { hostCookie.lastSeenDateTime = n.getDateValue(); },
        "name": n => { hostCookie.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostCookieCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostCookieCollectionResponse(hostCookieCollectionResponse: Partial<HostCookieCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostCookieCollectionResponse),
        "value": n => { hostCookieCollectionResponse.value = n.getCollectionOfObjectValues<HostCookie>(createHostCookieFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostedRpaAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostedRpaAuditRecord(hostedRpaAuditRecord: Partial<HostedRpaAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(hostedRpaAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param HostLogonSessionEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostLogonSessionEvidence(hostLogonSessionEvidence: Partial<HostLogonSessionEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(hostLogonSessionEvidence),
        "account": n => { hostLogonSessionEvidence.account = n.getObjectValue<UserEvidence>(createUserEvidenceFromDiscriminatorValue); },
        "endUtcDateTime": n => { hostLogonSessionEvidence.endUtcDateTime = n.getDateValue(); },
        "host": n => { hostLogonSessionEvidence.host = n.getObjectValue<DeviceEvidence>(createDeviceEvidenceFromDiscriminatorValue); },
        "sessionId": n => { hostLogonSessionEvidence.sessionId = n.getStringValue(); },
        "startUtcDateTime": n => { hostLogonSessionEvidence.startUtcDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Hostname The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostname(hostname: Partial<Hostname> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoHost(hostname),
        "registrant": n => { hostname.registrant = n.getStringValue(); },
        "registrar": n => { hostname.registrar = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostPair The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPair(hostPair: Partial<HostPair> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(hostPair),
        "childHost": n => { hostPair.childHost = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "firstSeenDateTime": n => { hostPair.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostPair.lastSeenDateTime = n.getDateValue(); },
        "linkKind": n => { hostPair.linkKind = n.getStringValue(); },
        "parentHost": n => { hostPair.parentHost = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostPairCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPairCollectionResponse(hostPairCollectionResponse: Partial<HostPairCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostPairCollectionResponse),
        "value": n => { hostPairCollectionResponse.value = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostPort The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPort(hostPort: Partial<HostPort> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(hostPort),
        "banners": n => { hostPort.banners = n.getCollectionOfObjectValues<HostPortBanner>(createHostPortBannerFromDiscriminatorValue); },
        "firstSeenDateTime": n => { hostPort.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostPort.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastScanDateTime": n => { hostPort.lastScanDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostPort.lastSeenDateTime = n.getDateValue(); },
        "mostRecentSslCertificate": n => { hostPort.mostRecentSslCertificate = n.getObjectValue<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
        "port": n => { hostPort.port = n.getNumberValue(); },
        "protocol": n => { hostPort.protocol = n.getEnumValue<HostPortProtocol>(HostPortProtocolObject); },
        "services": n => { hostPort.services = n.getCollectionOfObjectValues<HostPortComponent>(createHostPortComponentFromDiscriminatorValue); },
        "status": n => { hostPort.status = n.getEnumValue<HostPortStatus>(HostPortStatusObject); },
        "timesObserved": n => { hostPort.timesObserved = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostPortBanner The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPortBanner(hostPortBanner: Partial<HostPortBanner> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostPortBanner.backingStoreEnabled = true; },
        "banner": n => { hostPortBanner.banner = n.getStringValue(); },
        "firstSeenDateTime": n => { hostPortBanner.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostPortBanner.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { hostPortBanner.odataType = n.getStringValue(); },
        "scanProtocol": n => { hostPortBanner.scanProtocol = n.getStringValue(); },
        "timesObserved": n => { hostPortBanner.timesObserved = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostPortCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPortCollectionResponse(hostPortCollectionResponse: Partial<HostPortCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostPortCollectionResponse),
        "value": n => { hostPortCollectionResponse.value = n.getCollectionOfObjectValues<HostPort>(createHostPortFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostPortComponent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostPortComponent(hostPortComponent: Partial<HostPortComponent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostPortComponent.backingStoreEnabled = true; },
        "component": n => { hostPortComponent.component = n.getObjectValue<HostComponent>(createHostComponentFromDiscriminatorValue); },
        "firstSeenDateTime": n => { hostPortComponent.firstSeenDateTime = n.getDateValue(); },
        "isRecent": n => { hostPortComponent.isRecent = n.getBooleanValue(); },
        "lastSeenDateTime": n => { hostPortComponent.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { hostPortComponent.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostReputation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostReputation(hostReputation: Partial<HostReputation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(hostReputation),
        "classification": n => { hostReputation.classification = n.getEnumValue<HostReputationClassification>(HostReputationClassificationObject); },
        "rules": n => { hostReputation.rules = n.getCollectionOfObjectValues<HostReputationRule>(createHostReputationRuleFromDiscriminatorValue); },
        "score": n => { hostReputation.score = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostReputationRule The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostReputationRule(hostReputationRule: Partial<HostReputationRule> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostReputationRule.backingStoreEnabled = true; },
        "description": n => { hostReputationRule.description = n.getStringValue(); },
        "name": n => { hostReputationRule.name = n.getStringValue(); },
        "@odata.type": n => { hostReputationRule.odataType = n.getStringValue(); },
        "relatedDetailsUrl": n => { hostReputationRule.relatedDetailsUrl = n.getStringValue(); },
        "severity": n => { hostReputationRule.severity = n.getEnumValue<HostReputationRuleSeverity>(HostReputationRuleSeverityObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostSslCertificate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostSslCertificate(hostSslCertificate: Partial<HostSslCertificate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostSslCertificate),
        "firstSeenDateTime": n => { hostSslCertificate.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostSslCertificate.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { hostSslCertificate.lastSeenDateTime = n.getDateValue(); },
        "ports": n => { hostSslCertificate.ports = n.getCollectionOfObjectValues<HostSslCertificatePort>(createHostSslCertificatePortFromDiscriminatorValue); },
        "sslCertificate": n => { hostSslCertificate.sslCertificate = n.getObjectValue<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostSslCertificateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostSslCertificateCollectionResponse(hostSslCertificateCollectionResponse: Partial<HostSslCertificateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostSslCertificateCollectionResponse),
        "value": n => { hostSslCertificateCollectionResponse.value = n.getCollectionOfObjectValues<HostSslCertificate>(createHostSslCertificateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostSslCertificatePort The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostSslCertificatePort(hostSslCertificatePort: Partial<HostSslCertificatePort> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hostSslCertificatePort.backingStoreEnabled = true; },
        "firstSeenDateTime": n => { hostSslCertificatePort.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { hostSslCertificatePort.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { hostSslCertificatePort.odataType = n.getStringValue(); },
        "port": n => { hostSslCertificatePort.port = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostTracker The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostTracker(hostTracker: Partial<HostTracker> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(hostTracker),
        "firstSeenDateTime": n => { hostTracker.firstSeenDateTime = n.getDateValue(); },
        "host": n => { hostTracker.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "kind": n => { hostTracker.kind = n.getStringValue(); },
        "lastSeenDateTime": n => { hostTracker.lastSeenDateTime = n.getDateValue(); },
        "value": n => { hostTracker.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HostTrackerCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHostTrackerCollectionResponse(hostTrackerCollectionResponse: Partial<HostTrackerCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(hostTrackerCollectionResponse),
        "value": n => { hostTrackerCollectionResponse.value = n.getCollectionOfObjectValues<HostTracker>(createHostTrackerFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HrSignalAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHrSignalAuditRecord(hrSignalAuditRecord: Partial<HrSignalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(hrSignalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param HuntingQueryResults The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHuntingQueryResults(huntingQueryResults: Partial<HuntingQueryResults> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { huntingQueryResults.backingStoreEnabled = true; },
        "@odata.type": n => { huntingQueryResults.odataType = n.getStringValue(); },
        "results": n => { huntingQueryResults.results = n.getCollectionOfObjectValues<HuntingRowResult>(createHuntingRowResultFromDiscriminatorValue); },
        "schema": n => { huntingQueryResults.schema = n.getCollectionOfObjectValues<SinglePropertySchema>(createSinglePropertySchemaFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param HuntingRowResult The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHuntingRowResult(huntingRowResult: Partial<HuntingRowResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { huntingRowResult.backingStoreEnabled = true; },
        "@odata.type": n => { huntingRowResult.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param HygieneEventRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHygieneEventRecord(hygieneEventRecord: Partial<HygieneEventRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(hygieneEventRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Hyperlink The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoHyperlink(hyperlink: Partial<Hyperlink> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hyperlink.backingStoreEnabled = true; },
        "name": n => { hyperlink.name = n.getStringValue(); },
        "@odata.type": n => { hyperlink.odataType = n.getStringValue(); },
        "url": n => { hyperlink.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param IdentityContainer The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIdentityContainer(identityContainer: Partial<IdentityContainer> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(identityContainer),
        "healthIssues": n => { identityContainer.healthIssues = n.getCollectionOfObjectValues<HealthIssue>(createHealthIssueFromDiscriminatorValue); },
        "sensors": n => { identityContainer.sensors = n.getCollectionOfObjectValues<Sensor>(createSensorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Incident The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIncident(incident: Partial<Incident> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(incident),
        "alerts": n => { incident.alerts = n.getCollectionOfObjectValues<Alert>(createAlertFromDiscriminatorValue); },
        "assignedTo": n => { incident.assignedTo = n.getStringValue(); },
        "classification": n => { incident.classification = n.getEnumValue<AlertClassification>(AlertClassificationObject); },
        "comments": n => { incident.comments = n.getCollectionOfObjectValues<AlertComment>(createAlertCommentFromDiscriminatorValue); },
        "createdDateTime": n => { incident.createdDateTime = n.getDateValue(); },
        "customTags": n => { incident.customTags = n.getCollectionOfPrimitiveValues<string>(); },
        "description": n => { incident.description = n.getStringValue(); },
        "determination": n => { incident.determination = n.getEnumValue<AlertDetermination>(AlertDeterminationObject); },
        "displayName": n => { incident.displayName = n.getStringValue(); },
        "incidentWebUrl": n => { incident.incidentWebUrl = n.getStringValue(); },
        "lastModifiedBy": n => { incident.lastModifiedBy = n.getStringValue(); },
        "lastUpdateDateTime": n => { incident.lastUpdateDateTime = n.getDateValue(); },
        "redirectIncidentId": n => { incident.redirectIncidentId = n.getStringValue(); },
        "resolvingComment": n => { incident.resolvingComment = n.getStringValue(); },
        "severity": n => { incident.severity = n.getEnumValue<AlertSeverity>(AlertSeverityObject); },
        "status": n => { incident.status = n.getEnumValue<IncidentStatus>(IncidentStatusObject); },
        "summary": n => { incident.summary = n.getStringValue(); },
        "systemTags": n => { incident.systemTags = n.getCollectionOfPrimitiveValues<string>(); },
        "tenantId": n => { incident.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param IncidentCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIncidentCollectionResponse(incidentCollectionResponse: Partial<IncidentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(incidentCollectionResponse),
        "value": n => { incidentCollectionResponse.value = n.getCollectionOfObjectValues<Incident>(createIncidentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Indicator The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIndicator(indicator: Partial<Indicator> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(indicator),
        "artifact": n => { indicator.artifact = n.getObjectValue<Artifact>(createArtifactFromDiscriminatorValue); },
        "source": n => { indicator.source = n.getEnumValue<IndicatorSource>(IndicatorSourceObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param InformationBarrierPolicyApplicationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInformationBarrierPolicyApplicationAuditRecord(informationBarrierPolicyApplicationAuditRecord: Partial<InformationBarrierPolicyApplicationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(informationBarrierPolicyApplicationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param InformationWorkerProtectionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInformationWorkerProtectionAuditRecord(informationWorkerProtectionAuditRecord: Partial<InformationWorkerProtectionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(informationWorkerProtectionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param InsiderRiskScopedUserInsightsRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInsiderRiskScopedUserInsightsRecord(insiderRiskScopedUserInsightsRecord: Partial<InsiderRiskScopedUserInsightsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(insiderRiskScopedUserInsightsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param InsiderRiskScopedUsersRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInsiderRiskScopedUsersRecord(insiderRiskScopedUsersRecord: Partial<InsiderRiskScopedUsersRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(insiderRiskScopedUsersRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param IntelligenceProfile The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfile(intelligenceProfile: Partial<IntelligenceProfile> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(intelligenceProfile),
        "aliases": n => { intelligenceProfile.aliases = n.getCollectionOfPrimitiveValues<string>(); },
        "countriesOrRegionsOfOrigin": n => { intelligenceProfile.countriesOrRegionsOfOrigin = n.getCollectionOfObjectValues<IntelligenceProfileCountryOrRegionOfOrigin>(createIntelligenceProfileCountryOrRegionOfOriginFromDiscriminatorValue); },
        "description": n => { intelligenceProfile.description = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "firstActiveDateTime": n => { intelligenceProfile.firstActiveDateTime = n.getDateValue(); },
        "indicators": n => { intelligenceProfile.indicators = n.getCollectionOfObjectValues<IntelligenceProfileIndicator>(createIntelligenceProfileIndicatorFromDiscriminatorValue); },
        "kind": n => { intelligenceProfile.kind = n.getEnumValue<IntelligenceProfileKind>(IntelligenceProfileKindObject); },
        "summary": n => { intelligenceProfile.summary = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "targets": n => { intelligenceProfile.targets = n.getCollectionOfPrimitiveValues<string>(); },
        "title": n => { intelligenceProfile.title = n.getStringValue(); },
        "tradecraft": n => { intelligenceProfile.tradecraft = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param IntelligenceProfileCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileCollectionResponse(intelligenceProfileCollectionResponse: Partial<IntelligenceProfileCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(intelligenceProfileCollectionResponse),
        "value": n => { intelligenceProfileCollectionResponse.value = n.getCollectionOfObjectValues<IntelligenceProfile>(createIntelligenceProfileFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param IntelligenceProfileCountryOrRegionOfOrigin The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileCountryOrRegionOfOrigin(intelligenceProfileCountryOrRegionOfOrigin: Partial<IntelligenceProfileCountryOrRegionOfOrigin> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { intelligenceProfileCountryOrRegionOfOrigin.backingStoreEnabled = true; },
        "code": n => { intelligenceProfileCountryOrRegionOfOrigin.code = n.getStringValue(); },
        "label": n => { intelligenceProfileCountryOrRegionOfOrigin.label = n.getStringValue(); },
        "@odata.type": n => { intelligenceProfileCountryOrRegionOfOrigin.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param IntelligenceProfileIndicator The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileIndicator(intelligenceProfileIndicator: Partial<IntelligenceProfileIndicator> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIndicator(intelligenceProfileIndicator),
        "firstSeenDateTime": n => { intelligenceProfileIndicator.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { intelligenceProfileIndicator.lastSeenDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param IntelligenceProfileIndicatorCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIntelligenceProfileIndicatorCollectionResponse(intelligenceProfileIndicatorCollectionResponse: Partial<IntelligenceProfileIndicatorCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(intelligenceProfileIndicatorCollectionResponse),
        "value": n => { intelligenceProfileIndicatorCollectionResponse.value = n.getCollectionOfObjectValues<IntelligenceProfileIndicator>(createIntelligenceProfileIndicatorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param IoTDeviceEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIoTDeviceEvidence(ioTDeviceEvidence: Partial<IoTDeviceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(ioTDeviceEvidence),
        "deviceId": n => { ioTDeviceEvidence.deviceId = n.getStringValue(); },
        "deviceName": n => { ioTDeviceEvidence.deviceName = n.getStringValue(); },
        "devicePageLink": n => { ioTDeviceEvidence.devicePageLink = n.getStringValue(); },
        "deviceSubType": n => { ioTDeviceEvidence.deviceSubType = n.getStringValue(); },
        "deviceType": n => { ioTDeviceEvidence.deviceType = n.getStringValue(); },
        "importance": n => { ioTDeviceEvidence.importance = n.getEnumValue<IoTDeviceImportanceType>(IoTDeviceImportanceTypeObject); },
        "ioTHub": n => { ioTDeviceEvidence.ioTHub = n.getObjectValue<AzureResourceEvidence>(createAzureResourceEvidenceFromDiscriminatorValue); },
        "ioTSecurityAgentId": n => { ioTDeviceEvidence.ioTSecurityAgentId = n.getStringValue(); },
        "ipAddress": n => { ioTDeviceEvidence.ipAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "isAuthorized": n => { ioTDeviceEvidence.isAuthorized = n.getBooleanValue(); },
        "isProgramming": n => { ioTDeviceEvidence.isProgramming = n.getBooleanValue(); },
        "isScanner": n => { ioTDeviceEvidence.isScanner = n.getBooleanValue(); },
        "macAddress": n => { ioTDeviceEvidence.macAddress = n.getStringValue(); },
        "manufacturer": n => { ioTDeviceEvidence.manufacturer = n.getStringValue(); },
        "model": n => { ioTDeviceEvidence.model = n.getStringValue(); },
        "nics": n => { ioTDeviceEvidence.nics = n.getCollectionOfObjectValues<NicEvidence>(createNicEvidenceFromDiscriminatorValue); },
        "operatingSystem": n => { ioTDeviceEvidence.operatingSystem = n.getStringValue(); },
        "owners": n => { ioTDeviceEvidence.owners = n.getCollectionOfPrimitiveValues<string>(); },
        "protocols": n => { ioTDeviceEvidence.protocols = n.getCollectionOfPrimitiveValues<string>(); },
        "purdueLayer": n => { ioTDeviceEvidence.purdueLayer = n.getStringValue(); },
        "sensor": n => { ioTDeviceEvidence.sensor = n.getStringValue(); },
        "serialNumber": n => { ioTDeviceEvidence.serialNumber = n.getStringValue(); },
        "site": n => { ioTDeviceEvidence.site = n.getStringValue(); },
        "source": n => { ioTDeviceEvidence.source = n.getStringValue(); },
        "sourceRef": n => { ioTDeviceEvidence.sourceRef = n.getObjectValue<UrlEvidence>(createUrlEvidenceFromDiscriminatorValue); },
        "zone": n => { ioTDeviceEvidence.zone = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param IpAddress The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIpAddress(ipAddress: Partial<IpAddress> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoHost(ipAddress),
        "autonomousSystem": n => { ipAddress.autonomousSystem = n.getObjectValue<AutonomousSystem>(createAutonomousSystemFromDiscriminatorValue); },
        "countryOrRegion": n => { ipAddress.countryOrRegion = n.getStringValue(); },
        "hostingProvider": n => { ipAddress.hostingProvider = n.getStringValue(); },
        "netblock": n => { ipAddress.netblock = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param IpEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIpEvidence(ipEvidence: Partial<IpEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(ipEvidence),
        "countryLetterCode": n => { ipEvidence.countryLetterCode = n.getStringValue(); },
        "ipAddress": n => { ipEvidence.ipAddress = n.getStringValue(); },
        "location": n => { ipEvidence.location = n.getObjectValue<GeoLocation>(createGeoLocationFromDiscriminatorValue); },
        "stream": n => { ipEvidence.stream = n.getObjectValue<Stream>(createStreamFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param IrmSecurityAlertRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIrmSecurityAlertRecord(irmSecurityAlertRecord: Partial<IrmSecurityAlertRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(irmSecurityAlertRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param IrmUserDefinedDetectionRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIrmUserDefinedDetectionRecord(irmUserDefinedDetectionRecord: Partial<IrmUserDefinedDetectionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(irmUserDefinedDetectionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param KaizalaAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKaizalaAuditRecord(kaizalaAuditRecord: Partial<KaizalaAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(kaizalaAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesClusterEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesClusterEvidence(kubernetesClusterEvidence: Partial<KubernetesClusterEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesClusterEvidence),
        "cloudResource": n => { kubernetesClusterEvidence.cloudResource = n.getObjectValue<AlertEvidence>(createAlertEvidenceFromDiscriminatorValue); },
        "distribution": n => { kubernetesClusterEvidence.distribution = n.getStringValue(); },
        "name": n => { kubernetesClusterEvidence.name = n.getStringValue(); },
        "platform": n => { kubernetesClusterEvidence.platform = n.getEnumValue<KubernetesPlatform>(KubernetesPlatformObject); },
        "version": n => { kubernetesClusterEvidence.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesControllerEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesControllerEvidence(kubernetesControllerEvidence: Partial<KubernetesControllerEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesControllerEvidence),
        "labels": n => { kubernetesControllerEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesControllerEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesControllerEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "type": n => { kubernetesControllerEvidence.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesNamespaceEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesNamespaceEvidence(kubernetesNamespaceEvidence: Partial<KubernetesNamespaceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesNamespaceEvidence),
        "cluster": n => { kubernetesNamespaceEvidence.cluster = n.getObjectValue<KubernetesClusterEvidence>(createKubernetesClusterEvidenceFromDiscriminatorValue); },
        "labels": n => { kubernetesNamespaceEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesNamespaceEvidence.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesPodEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesPodEvidence(kubernetesPodEvidence: Partial<KubernetesPodEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesPodEvidence),
        "containers": n => { kubernetesPodEvidence.containers = n.getCollectionOfObjectValues<ContainerEvidence>(createContainerEvidenceFromDiscriminatorValue); },
        "controller": n => { kubernetesPodEvidence.controller = n.getObjectValue<KubernetesControllerEvidence>(createKubernetesControllerEvidenceFromDiscriminatorValue); },
        "ephemeralContainers": n => { kubernetesPodEvidence.ephemeralContainers = n.getCollectionOfObjectValues<ContainerEvidence>(createContainerEvidenceFromDiscriminatorValue); },
        "initContainers": n => { kubernetesPodEvidence.initContainers = n.getCollectionOfObjectValues<ContainerEvidence>(createContainerEvidenceFromDiscriminatorValue); },
        "labels": n => { kubernetesPodEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesPodEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesPodEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "podIp": n => { kubernetesPodEvidence.podIp = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "serviceAccount": n => { kubernetesPodEvidence.serviceAccount = n.getObjectValue<KubernetesServiceAccountEvidence>(createKubernetesServiceAccountEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesSecretEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesSecretEvidence(kubernetesSecretEvidence: Partial<KubernetesSecretEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesSecretEvidence),
        "name": n => { kubernetesSecretEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesSecretEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "secretType": n => { kubernetesSecretEvidence.secretType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesServiceAccountEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesServiceAccountEvidence(kubernetesServiceAccountEvidence: Partial<KubernetesServiceAccountEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesServiceAccountEvidence),
        "name": n => { kubernetesServiceAccountEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesServiceAccountEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesServiceEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesServiceEvidence(kubernetesServiceEvidence: Partial<KubernetesServiceEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(kubernetesServiceEvidence),
        "clusterIP": n => { kubernetesServiceEvidence.clusterIP = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "externalIPs": n => { kubernetesServiceEvidence.externalIPs = n.getCollectionOfObjectValues<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "labels": n => { kubernetesServiceEvidence.labels = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "name": n => { kubernetesServiceEvidence.name = n.getStringValue(); },
        "namespace": n => { kubernetesServiceEvidence.namespace = n.getObjectValue<KubernetesNamespaceEvidence>(createKubernetesNamespaceEvidenceFromDiscriminatorValue); },
        "selector": n => { kubernetesServiceEvidence.selector = n.getObjectValue<Dictionary>(createDictionaryFromDiscriminatorValue); },
        "servicePorts": n => { kubernetesServiceEvidence.servicePorts = n.getCollectionOfObjectValues<KubernetesServicePort>(createKubernetesServicePortFromDiscriminatorValue); },
        "serviceType": n => { kubernetesServiceEvidence.serviceType = n.getEnumValue<KubernetesServiceType>(KubernetesServiceTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param KubernetesServicePort The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesServicePort(kubernetesServicePort: Partial<KubernetesServicePort> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "appProtocol": n => { kubernetesServicePort.appProtocol = n.getStringValue(); },
        "backingStoreEnabled": n => { kubernetesServicePort.backingStoreEnabled = true; },
        "name": n => { kubernetesServicePort.name = n.getStringValue(); },
        "nodePort": n => { kubernetesServicePort.nodePort = n.getNumberValue(); },
        "@odata.type": n => { kubernetesServicePort.odataType = n.getStringValue(); },
        "port": n => { kubernetesServicePort.port = n.getNumberValue(); },
        "protocol": n => { kubernetesServicePort.protocol = n.getEnumValue<ContainerPortProtocol>(ContainerPortProtocolObject); },
        "targetPort": n => { kubernetesServicePort.targetPort = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param LabelAnalyticsAggregateAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelAnalyticsAggregateAuditRecord(labelAnalyticsAggregateAuditRecord: Partial<LabelAnalyticsAggregateAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(labelAnalyticsAggregateAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param LabelContentExplorerAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelContentExplorerAuditRecord(labelContentExplorerAuditRecord: Partial<LabelContentExplorerAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(labelContentExplorerAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param LabelsRoot The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLabelsRoot(labelsRoot: Partial<LabelsRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(labelsRoot),
        "authorities": n => { labelsRoot.authorities = n.getCollectionOfObjectValues<AuthorityTemplate>(createAuthorityTemplateFromDiscriminatorValue); },
        "categories": n => { labelsRoot.categories = n.getCollectionOfObjectValues<CategoryTemplate>(createCategoryTemplateFromDiscriminatorValue); },
        "citations": n => { labelsRoot.citations = n.getCollectionOfObjectValues<CitationTemplate>(createCitationTemplateFromDiscriminatorValue); },
        "departments": n => { labelsRoot.departments = n.getCollectionOfObjectValues<DepartmentTemplate>(createDepartmentTemplateFromDiscriminatorValue); },
        "filePlanReferences": n => { labelsRoot.filePlanReferences = n.getCollectionOfObjectValues<FilePlanReferenceTemplate>(createFilePlanReferenceTemplateFromDiscriminatorValue); },
        "retentionLabels": n => { labelsRoot.retentionLabels = n.getCollectionOfObjectValues<RetentionLabel>(createRetentionLabelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param LargeContentMetadataAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLargeContentMetadataAuditRecord(largeContentMetadataAuditRecord: Partial<LargeContentMetadataAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(largeContentMetadataAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param LoggedOnUser The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoggedOnUser(loggedOnUser: Partial<LoggedOnUser> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountName": n => { loggedOnUser.accountName = n.getStringValue(); },
        "backingStoreEnabled": n => { loggedOnUser.backingStoreEnabled = true; },
        "domainName": n => { loggedOnUser.domainName = n.getStringValue(); },
        "@odata.type": n => { loggedOnUser.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param M365ComplianceConnectorAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoM365ComplianceConnectorAuditRecord(m365ComplianceConnectorAuditRecord: Partial<M365ComplianceConnectorAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(m365ComplianceConnectorAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param M365DAADAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoM365DAADAuditRecord(m365DAADAuditRecord: Partial<M365DAADAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(m365DAADAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MailboxConfigurationEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailboxConfigurationEvidence(mailboxConfigurationEvidence: Partial<MailboxConfigurationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(mailboxConfigurationEvidence),
        "configurationId": n => { mailboxConfigurationEvidence.configurationId = n.getStringValue(); },
        "configurationType": n => { mailboxConfigurationEvidence.configurationType = n.getEnumValue<MailboxConfigurationType>(MailboxConfigurationTypeObject); },
        "displayName": n => { mailboxConfigurationEvidence.displayName = n.getStringValue(); },
        "externalDirectoryObjectId": n => { mailboxConfigurationEvidence.externalDirectoryObjectId = n.getGuidValue(); },
        "mailboxPrimaryAddress": n => { mailboxConfigurationEvidence.mailboxPrimaryAddress = n.getStringValue(); },
        "upn": n => { mailboxConfigurationEvidence.upn = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param MailboxEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailboxEvidence(mailboxEvidence: Partial<MailboxEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(mailboxEvidence),
        "displayName": n => { mailboxEvidence.displayName = n.getStringValue(); },
        "primaryAddress": n => { mailboxEvidence.primaryAddress = n.getStringValue(); },
        "upn": n => { mailboxEvidence.upn = n.getStringValue(); },
        "userAccount": n => { mailboxEvidence.userAccount = n.getObjectValue<UserAccount>(createUserAccountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param MailClusterEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailClusterEvidence(mailClusterEvidence: Partial<MailClusterEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(mailClusterEvidence),
        "clusterBy": n => { mailClusterEvidence.clusterBy = n.getStringValue(); },
        "clusterByValue": n => { mailClusterEvidence.clusterByValue = n.getStringValue(); },
        "emailCount": n => { mailClusterEvidence.emailCount = n.getNumberValue(); },
        "networkMessageIds": n => { mailClusterEvidence.networkMessageIds = n.getCollectionOfPrimitiveValues<string>(); },
        "query": n => { mailClusterEvidence.query = n.getStringValue(); },
        "urn": n => { mailClusterEvidence.urn = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param MailSubmissionData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMailSubmissionData(mailSubmissionData: Partial<MailSubmissionData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mailSubmissionData),
    }
}
/**
 * The deserialization information for the current model
 * @param MalwareEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMalwareEvidence(malwareEvidence: Partial<MalwareEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(malwareEvidence),
        "category": n => { malwareEvidence.category = n.getStringValue(); },
        "files": n => { malwareEvidence.files = n.getCollectionOfObjectValues<FileEvidence>(createFileEvidenceFromDiscriminatorValue); },
        "name": n => { malwareEvidence.name = n.getStringValue(); },
        "processes": n => { malwareEvidence.processes = n.getCollectionOfObjectValues<ProcessEvidence>(createProcessEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ManagedServicesAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedServicesAuditRecord(managedServicesAuditRecord: Partial<ManagedServicesAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(managedServicesAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ManagedTenantsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoManagedTenantsAuditRecord(managedTenantsAuditRecord: Partial<ManagedTenantsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(managedTenantsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MapgAlertsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMapgAlertsAuditRecord(mapgAlertsAuditRecord: Partial<MapgAlertsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mapgAlertsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MapgOnboardAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMapgOnboardAuditRecord(mapgOnboardAuditRecord: Partial<MapgOnboardAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mapgOnboardAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MapgPolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMapgPolicyAuditRecord(mapgPolicyAuditRecord: Partial<MapgPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mapgPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param McasAlertsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMcasAlertsAuditRecord(mcasAlertsAuditRecord: Partial<McasAlertsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mcasAlertsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MdaDataSecuritySignalRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdaDataSecuritySignalRecord(mdaDataSecuritySignalRecord: Partial<MdaDataSecuritySignalRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdaDataSecuritySignalRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MdatpAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdatpAuditRecord(mdatpAuditRecord: Partial<MdatpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdatpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MdcEventsRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdcEventsRecord(mdcEventsRecord: Partial<MdcEventsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdcEventsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MdiAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMdiAuditRecord(mdiAuditRecord: Partial<MdiAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mdiAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MeshWorldsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMeshWorldsAuditRecord(meshWorldsAuditRecord: Partial<MeshWorldsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(meshWorldsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Microsoft365BackupBackupItemAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupBackupItemAuditRecord(microsoft365BackupBackupItemAuditRecord: Partial<Microsoft365BackupBackupItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupBackupItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Microsoft365BackupBackupPolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupBackupPolicyAuditRecord(microsoft365BackupBackupPolicyAuditRecord: Partial<Microsoft365BackupBackupPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupBackupPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Microsoft365BackupRestoreItemAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupRestoreItemAuditRecord(microsoft365BackupRestoreItemAuditRecord: Partial<Microsoft365BackupRestoreItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupRestoreItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Microsoft365BackupRestoreTaskAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoft365BackupRestoreTaskAuditRecord(microsoft365BackupRestoreTaskAuditRecord: Partial<Microsoft365BackupRestoreTaskAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoft365BackupRestoreTaskAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftDefenderExpertsBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftDefenderExpertsBaseAuditRecord(microsoftDefenderExpertsBaseAuditRecord: Partial<MicrosoftDefenderExpertsBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftDefenderExpertsBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftDefenderExpertsXDRAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftDefenderExpertsXDRAuditRecord(microsoftDefenderExpertsXDRAuditRecord: Partial<MicrosoftDefenderExpertsXDRAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftDefenderExpertsXDRAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftFlowAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftFlowAuditRecord(microsoftFlowAuditRecord: Partial<MicrosoftFlowAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftFlowAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftFormsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftFormsAuditRecord(microsoftFormsAuditRecord: Partial<MicrosoftFormsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftFormsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftGraphDataConnectConsent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftGraphDataConnectConsent(microsoftGraphDataConnectConsent: Partial<MicrosoftGraphDataConnectConsent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftGraphDataConnectConsent),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftGraphDataConnectOperation The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftGraphDataConnectOperation(microsoftGraphDataConnectOperation: Partial<MicrosoftGraphDataConnectOperation> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftGraphDataConnectOperation),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftPurviewDataMapOperationRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewDataMapOperationRecord(microsoftPurviewDataMapOperationRecord: Partial<MicrosoftPurviewDataMapOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewDataMapOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftPurviewMetadataPolicyOperationRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewMetadataPolicyOperationRecord(microsoftPurviewMetadataPolicyOperationRecord: Partial<MicrosoftPurviewMetadataPolicyOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewMetadataPolicyOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftPurviewPolicyOperationRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewPolicyOperationRecord(microsoftPurviewPolicyOperationRecord: Partial<MicrosoftPurviewPolicyOperationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewPolicyOperationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftPurviewPrivacyAuditEvent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftPurviewPrivacyAuditEvent(microsoftPurviewPrivacyAuditEvent: Partial<MicrosoftPurviewPrivacyAuditEvent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftPurviewPrivacyAuditEvent),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftStreamAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftStreamAuditRecord(microsoftStreamAuditRecord: Partial<MicrosoftStreamAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftStreamAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftTeamsAdminAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsAdminAuditRecord(microsoftTeamsAdminAuditRecord: Partial<MicrosoftTeamsAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftTeamsAnalyticsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsAnalyticsAuditRecord(microsoftTeamsAnalyticsAuditRecord: Partial<MicrosoftTeamsAnalyticsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsAnalyticsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftTeamsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsAuditRecord(microsoftTeamsAuditRecord: Partial<MicrosoftTeamsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftTeamsDeviceAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsDeviceAuditRecord(microsoftTeamsDeviceAuditRecord: Partial<MicrosoftTeamsDeviceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsDeviceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftTeamsRetentionLabelActionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsRetentionLabelActionAuditRecord(microsoftTeamsRetentionLabelActionAuditRecord: Partial<MicrosoftTeamsRetentionLabelActionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsRetentionLabelActionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftTeamsSensitivityLabelActionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsSensitivityLabelActionAuditRecord(microsoftTeamsSensitivityLabelActionAuditRecord: Partial<MicrosoftTeamsSensitivityLabelActionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsSensitivityLabelActionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MicrosoftTeamsShiftsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMicrosoftTeamsShiftsAuditRecord(microsoftTeamsShiftsAuditRecord: Partial<MicrosoftTeamsShiftsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(microsoftTeamsShiftsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelExchangeItemAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelExchangeItemAuditRecord(mipAutoLabelExchangeItemAuditRecord: Partial<MipAutoLabelExchangeItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelExchangeItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelItemAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelItemAuditRecord(mipAutoLabelItemAuditRecord: Partial<MipAutoLabelItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelPolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelPolicyAuditRecord(mipAutoLabelPolicyAuditRecord: Partial<MipAutoLabelPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelProgressFeedbackAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelProgressFeedbackAuditRecord(mipAutoLabelProgressFeedbackAuditRecord: Partial<MipAutoLabelProgressFeedbackAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelProgressFeedbackAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelSharePointItemAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSharePointItemAuditRecord(mipAutoLabelSharePointItemAuditRecord: Partial<MipAutoLabelSharePointItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSharePointItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelSharePointPolicyLocationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSharePointPolicyLocationAuditRecord(mipAutoLabelSharePointPolicyLocationAuditRecord: Partial<MipAutoLabelSharePointPolicyLocationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSharePointPolicyLocationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelSimulationSharePointCompletionRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationSharePointCompletionRecord(mipAutoLabelSimulationSharePointCompletionRecord: Partial<MipAutoLabelSimulationSharePointCompletionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationSharePointCompletionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelSimulationSharePointProgressRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationSharePointProgressRecord(mipAutoLabelSimulationSharePointProgressRecord: Partial<MipAutoLabelSimulationSharePointProgressRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationSharePointProgressRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelSimulationStatisticsRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationStatisticsRecord(mipAutoLabelSimulationStatisticsRecord: Partial<MipAutoLabelSimulationStatisticsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationStatisticsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipAutoLabelSimulationStatusRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipAutoLabelSimulationStatusRecord(mipAutoLabelSimulationStatusRecord: Partial<MipAutoLabelSimulationStatusRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipAutoLabelSimulationStatusRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipExactDataMatchAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipExactDataMatchAuditRecord(mipExactDataMatchAuditRecord: Partial<MipExactDataMatchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipExactDataMatchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipLabelAnalyticsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipLabelAnalyticsAuditRecord(mipLabelAnalyticsAuditRecord: Partial<MipLabelAnalyticsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipLabelAnalyticsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MipLabelAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMipLabelAuditRecord(mipLabelAuditRecord: Partial<MipLabelAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mipLabelAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MS365DCustomDetectionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMS365DCustomDetectionAuditRecord(mS365DCustomDetectionAuditRecord: Partial<MS365DCustomDetectionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mS365DCustomDetectionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MS365DIncidentAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMS365DIncidentAuditRecord(mS365DIncidentAuditRecord: Partial<MS365DIncidentAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mS365DIncidentAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MS365DSuppressionRuleAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMS365DSuppressionRuleAuditRecord(mS365DSuppressionRuleAuditRecord: Partial<MS365DSuppressionRuleAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(mS365DSuppressionRuleAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MsdeGeneralSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeGeneralSettingsAuditRecord(msdeGeneralSettingsAuditRecord: Partial<MsdeGeneralSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeGeneralSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MsdeIndicatorsSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeIndicatorsSettingsAuditRecord(msdeIndicatorsSettingsAuditRecord: Partial<MsdeIndicatorsSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeIndicatorsSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MsdeResponseActionsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeResponseActionsAuditRecord(msdeResponseActionsAuditRecord: Partial<MsdeResponseActionsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeResponseActionsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MsdeRolesSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsdeRolesSettingsAuditRecord(msdeRolesSettingsAuditRecord: Partial<MsdeRolesSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msdeRolesSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MsticNationStateNotificationRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMsticNationStateNotificationRecord(msticNationStateNotificationRecord: Partial<MsticNationStateNotificationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(msticNationStateNotificationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MultiStageDispositionAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMultiStageDispositionAuditRecord(multiStageDispositionAuditRecord: Partial<MultiStageDispositionAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(multiStageDispositionAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param MyAnalyticsSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoMyAnalyticsSettingsAuditRecord(myAnalyticsSettingsAuditRecord: Partial<MyAnalyticsSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(myAnalyticsSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param NetworkAdapter The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNetworkAdapter(networkAdapter: Partial<NetworkAdapter> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(networkAdapter),
        "isEnabled": n => { networkAdapter.isEnabled = n.getBooleanValue(); },
        "name": n => { networkAdapter.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param NetworkConnectionEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNetworkConnectionEvidence(networkConnectionEvidence: Partial<NetworkConnectionEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(networkConnectionEvidence),
        "destinationAddress": n => { networkConnectionEvidence.destinationAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "destinationPort": n => { networkConnectionEvidence.destinationPort = n.getNumberValue(); },
        "protocol": n => { networkConnectionEvidence.protocol = n.getEnumValue<ProtocolType>(ProtocolTypeObject); },
        "sourceAddress": n => { networkConnectionEvidence.sourceAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "sourcePort": n => { networkConnectionEvidence.sourcePort = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param NicEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNicEvidence(nicEvidence: Partial<NicEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(nicEvidence),
        "ipAddress": n => { nicEvidence.ipAddress = n.getObjectValue<IpEvidence>(createIpEvidenceFromDiscriminatorValue); },
        "macAddress": n => { nicEvidence.macAddress = n.getStringValue(); },
        "vlans": n => { nicEvidence.vlans = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @param OauthApplicationEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOauthApplicationEvidence(oauthApplicationEvidence: Partial<OauthApplicationEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(oauthApplicationEvidence),
        "appId": n => { oauthApplicationEvidence.appId = n.getStringValue(); },
        "displayName": n => { oauthApplicationEvidence.displayName = n.getStringValue(); },
        "objectId": n => { oauthApplicationEvidence.objectId = n.getStringValue(); },
        "publisher": n => { oauthApplicationEvidence.publisher = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param OcrSettings The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOcrSettings(ocrSettings: Partial<OcrSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { ocrSettings.backingStoreEnabled = true; },
        "isEnabled": n => { ocrSettings.isEnabled = n.getBooleanValue(); },
        "maxImageSize": n => { ocrSettings.maxImageSize = n.getNumberValue(); },
        "@odata.type": n => { ocrSettings.odataType = n.getStringValue(); },
        "timeout": n => { ocrSettings.timeout = n.getDurationValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param OfficeNativeAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOfficeNativeAuditRecord(officeNativeAuditRecord: Partial<OfficeNativeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(officeNativeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param OmePortalAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOmePortalAuditRecord(omePortalAuditRecord: Partial<OmePortalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(omePortalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param OneDriveAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOneDriveAuditRecord(oneDriveAuditRecord: Partial<OneDriveAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(oneDriveAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param OnPremisesFileShareScannerDlpAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOnPremisesFileShareScannerDlpAuditRecord(onPremisesFileShareScannerDlpAuditRecord: Partial<OnPremisesFileShareScannerDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(onPremisesFileShareScannerDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param OnPremisesScannerDlpAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOnPremisesScannerDlpAuditRecord(onPremisesScannerDlpAuditRecord: Partial<OnPremisesScannerDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(onPremisesScannerDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param OnPremisesSharePointScannerDlpAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOnPremisesSharePointScannerDlpAuditRecord(onPremisesSharePointScannerDlpAuditRecord: Partial<OnPremisesSharePointScannerDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(onPremisesSharePointScannerDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param OwaGetAccessTokenForResourceAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoOwaGetAccessTokenForResourceAuditRecord(owaGetAccessTokenForResourceAuditRecord: Partial<OwaGetAccessTokenForResourceAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(owaGetAccessTokenForResourceAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PassiveDnsRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPassiveDnsRecord(passiveDnsRecord: Partial<PassiveDnsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(passiveDnsRecord),
        "artifact": n => { passiveDnsRecord.artifact = n.getObjectValue<Artifact>(createArtifactFromDiscriminatorValue); },
        "collectedDateTime": n => { passiveDnsRecord.collectedDateTime = n.getDateValue(); },
        "firstSeenDateTime": n => { passiveDnsRecord.firstSeenDateTime = n.getDateValue(); },
        "lastSeenDateTime": n => { passiveDnsRecord.lastSeenDateTime = n.getDateValue(); },
        "parentHost": n => { passiveDnsRecord.parentHost = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "recordType": n => { passiveDnsRecord.recordType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param PassiveDnsRecordCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPassiveDnsRecordCollectionResponse(passiveDnsRecordCollectionResponse: Partial<PassiveDnsRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(passiveDnsRecordCollectionResponse),
        "value": n => { passiveDnsRecordCollectionResponse.value = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param PeopleAdminSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPeopleAdminSettingsAuditRecord(peopleAdminSettingsAuditRecord: Partial<PeopleAdminSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(peopleAdminSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PhysicalBadgingSignalAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPhysicalBadgingSignalAuditRecord(physicalBadgingSignalAuditRecord: Partial<PhysicalBadgingSignalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(physicalBadgingSignalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerCopyPlanAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerCopyPlanAuditRecord(plannerCopyPlanAuditRecord: Partial<PlannerCopyPlanAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerCopyPlanAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerPlanAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerPlanAuditRecord(plannerPlanAuditRecord: Partial<PlannerPlanAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerPlanAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerPlanListAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerPlanListAuditRecord(plannerPlanListAuditRecord: Partial<PlannerPlanListAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerPlanListAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerRosterAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerRosterAuditRecord(plannerRosterAuditRecord: Partial<PlannerRosterAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerRosterAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerRosterSensitivityLabelAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerRosterSensitivityLabelAuditRecord(plannerRosterSensitivityLabelAuditRecord: Partial<PlannerRosterSensitivityLabelAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerRosterSensitivityLabelAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerTaskAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerTaskAuditRecord(plannerTaskAuditRecord: Partial<PlannerTaskAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerTaskAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerTaskListAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerTaskListAuditRecord(plannerTaskListAuditRecord: Partial<PlannerTaskListAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerTaskListAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PlannerTenantSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPlannerTenantSettingsAuditRecord(plannerTenantSettingsAuditRecord: Partial<PlannerTenantSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(plannerTenantSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerAppsAuditAppRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerAppsAuditAppRecord(powerAppsAuditAppRecord: Partial<PowerAppsAuditAppRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerAppsAuditAppRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerAppsAuditPlanRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerAppsAuditPlanRecord(powerAppsAuditPlanRecord: Partial<PowerAppsAuditPlanRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerAppsAuditPlanRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerAppsAuditResourceRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerAppsAuditResourceRecord(powerAppsAuditResourceRecord: Partial<PowerAppsAuditResourceRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerAppsAuditResourceRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerBiAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerBiAuditRecord(powerBiAuditRecord: Partial<PowerBiAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerBiAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerBiDlpAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerBiDlpAuditRecord(powerBiDlpAuditRecord: Partial<PowerBiDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerBiDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerPagesSiteAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPagesSiteAuditRecord(powerPagesSiteAuditRecord: Partial<PowerPagesSiteAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPagesSiteAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerPlatformAdminDlpAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformAdminDlpAuditRecord(powerPlatformAdminDlpAuditRecord: Partial<PowerPlatformAdminDlpAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformAdminDlpAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerPlatformAdminEnvironmentAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformAdminEnvironmentAuditRecord(powerPlatformAdminEnvironmentAuditRecord: Partial<PowerPlatformAdminEnvironmentAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformAdminEnvironmentAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerPlatformAdministratorActivityRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformAdministratorActivityRecord(powerPlatformAdministratorActivityRecord: Partial<PowerPlatformAdministratorActivityRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformAdministratorActivityRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerPlatformLockboxResourceAccessRequestAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformLockboxResourceAccessRequestAuditRecord(powerPlatformLockboxResourceAccessRequestAuditRecord: Partial<PowerPlatformLockboxResourceAccessRequestAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformLockboxResourceAccessRequestAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerPlatformLockboxResourceCommandAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformLockboxResourceCommandAuditRecord(powerPlatformLockboxResourceCommandAuditRecord: Partial<PowerPlatformLockboxResourceCommandAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformLockboxResourceCommandAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PowerPlatformServiceActivityAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPowerPlatformServiceActivityAuditRecord(powerPlatformServiceActivityAuditRecord: Partial<PowerPlatformServiceActivityAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(powerPlatformServiceActivityAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyDataMatchAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyDataMatchAuditRecord(privacyDataMatchAuditRecord: Partial<PrivacyDataMatchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyDataMatchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyDataMinimizationRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyDataMinimizationRecord(privacyDataMinimizationRecord: Partial<PrivacyDataMinimizationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyDataMinimizationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyDigestEmailRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyDigestEmailRecord(privacyDigestEmailRecord: Partial<PrivacyDigestEmailRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyDigestEmailRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyOpenAccessAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyOpenAccessAuditRecord(privacyOpenAccessAuditRecord: Partial<PrivacyOpenAccessAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyOpenAccessAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyPortalAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyPortalAuditRecord(privacyPortalAuditRecord: Partial<PrivacyPortalAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyPortalAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyRemediationActionRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyRemediationActionRecord(privacyRemediationActionRecord: Partial<PrivacyRemediationActionRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyRemediationActionRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyRemediationRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyRemediationRecord(privacyRemediationRecord: Partial<PrivacyRemediationRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyRemediationRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PrivacyTenantAuditHistoryRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPrivacyTenantAuditHistoryRecord(privacyTenantAuditHistoryRecord: Partial<PrivacyTenantAuditHistoryRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(privacyTenantAuditHistoryRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProcessEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProcessEvidence(processEvidence: Partial<ProcessEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(processEvidence),
        "detectionStatus": n => { processEvidence.detectionStatus = n.getEnumValue<DetectionStatus>(DetectionStatusObject); },
        "imageFile": n => { processEvidence.imageFile = n.getObjectValue<FileDetails>(createFileDetailsFromDiscriminatorValue); },
        "mdeDeviceId": n => { processEvidence.mdeDeviceId = n.getStringValue(); },
        "parentProcessCreationDateTime": n => { processEvidence.parentProcessCreationDateTime = n.getDateValue(); },
        "parentProcessId": n => { processEvidence.parentProcessId = n.getNumberValue(); },
        "parentProcessImageFile": n => { processEvidence.parentProcessImageFile = n.getObjectValue<FileDetails>(createFileDetailsFromDiscriminatorValue); },
        "processCommandLine": n => { processEvidence.processCommandLine = n.getStringValue(); },
        "processCreationDateTime": n => { processEvidence.processCreationDateTime = n.getDateValue(); },
        "processId": n => { processEvidence.processId = n.getNumberValue(); },
        "userAccount": n => { processEvidence.userAccount = n.getObjectValue<UserAccount>(createUserAccountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectAuditRecord(projectAuditRecord: Partial<ProjectAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectForTheWebAssignedToMeSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebAssignedToMeSettingsAuditRecord(projectForTheWebAssignedToMeSettingsAuditRecord: Partial<ProjectForTheWebAssignedToMeSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebAssignedToMeSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectForTheWebProjectAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebProjectAuditRecord(projectForTheWebProjectAuditRecord: Partial<ProjectForTheWebProjectAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebProjectAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectForTheWebProjectSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebProjectSettingsAuditRecord(projectForTheWebProjectSettingsAuditRecord: Partial<ProjectForTheWebProjectSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebProjectSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectForTheWebRoadmapAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebRoadmapAuditRecord(projectForTheWebRoadmapAuditRecord: Partial<ProjectForTheWebRoadmapAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebRoadmapAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectForTheWebRoadmapItemAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebRoadmapItemAuditRecord(projectForTheWebRoadmapItemAuditRecord: Partial<ProjectForTheWebRoadmapItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebRoadmapItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectForTheWebRoadmapSettingsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebRoadmapSettingsAuditRecord(projectForTheWebRoadmapSettingsAuditRecord: Partial<ProjectForTheWebRoadmapSettingsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebRoadmapSettingsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ProjectForTheWebTaskAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoProjectForTheWebTaskAuditRecord(projectForTheWebTaskAuditRecord: Partial<ProjectForTheWebTaskAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(projectForTheWebTaskAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PublicFolderAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPublicFolderAuditRecord(publicFolderAuditRecord: Partial<PublicFolderAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(publicFolderAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PurviewInsiderRiskAlertsRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPurviewInsiderRiskAlertsRecord(purviewInsiderRiskAlertsRecord: Partial<PurviewInsiderRiskAlertsRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(purviewInsiderRiskAlertsRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param PurviewInsiderRiskCasesRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPurviewInsiderRiskCasesRecord(purviewInsiderRiskCasesRecord: Partial<PurviewInsiderRiskCasesRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(purviewInsiderRiskCasesRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param QuarantineAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoQuarantineAuditRecord(quarantineAuditRecord: Partial<QuarantineAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(quarantineAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param RecordsManagementAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecordsManagementAuditRecord(recordsManagementAuditRecord: Partial<RecordsManagementAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(recordsManagementAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param RedundancyDetectionSettings The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRedundancyDetectionSettings(redundancyDetectionSettings: Partial<RedundancyDetectionSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { redundancyDetectionSettings.backingStoreEnabled = true; },
        "isEnabled": n => { redundancyDetectionSettings.isEnabled = n.getBooleanValue(); },
        "maxWords": n => { redundancyDetectionSettings.maxWords = n.getNumberValue(); },
        "minWords": n => { redundancyDetectionSettings.minWords = n.getNumberValue(); },
        "@odata.type": n => { redundancyDetectionSettings.odataType = n.getStringValue(); },
        "similarityThreshold": n => { redundancyDetectionSettings.similarityThreshold = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RegistryKeyEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegistryKeyEvidence(registryKeyEvidence: Partial<RegistryKeyEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(registryKeyEvidence),
        "registryHive": n => { registryKeyEvidence.registryHive = n.getStringValue(); },
        "registryKey": n => { registryKeyEvidence.registryKey = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RegistryValueEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegistryValueEvidence(registryValueEvidence: Partial<RegistryValueEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(registryValueEvidence),
        "mdeDeviceId": n => { registryValueEvidence.mdeDeviceId = n.getStringValue(); },
        "registryHive": n => { registryValueEvidence.registryHive = n.getStringValue(); },
        "registryKey": n => { registryValueEvidence.registryKey = n.getStringValue(); },
        "registryValue": n => { registryValueEvidence.registryValue = n.getStringValue(); },
        "registryValueName": n => { registryValueEvidence.registryValueName = n.getStringValue(); },
        "registryValueType": n => { registryValueEvidence.registryValueType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionDuration The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionDuration(retentionDuration: Partial<RetentionDuration> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retentionDuration.backingStoreEnabled = true; },
        "@odata.type": n => { retentionDuration.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionDurationForever The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionDurationForever(retentionDurationForever: Partial<RetentionDurationForever> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoRetentionDuration(retentionDurationForever),
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionDurationInDays The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionDurationInDays(retentionDurationInDays: Partial<RetentionDurationInDays> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoRetentionDuration(retentionDurationInDays),
        "days": n => { retentionDurationInDays.days = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionEvent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEvent(retentionEvent: Partial<RetentionEvent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(retentionEvent),
        "createdBy": n => { retentionEvent.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { retentionEvent.createdDateTime = n.getDateValue(); },
        "description": n => { retentionEvent.description = n.getStringValue(); },
        "displayName": n => { retentionEvent.displayName = n.getStringValue(); },
        "eventPropagationResults": n => { retentionEvent.eventPropagationResults = n.getCollectionOfObjectValues<EventPropagationResult>(createEventPropagationResultFromDiscriminatorValue); },
        "eventQueries": n => { retentionEvent.eventQueries = n.getCollectionOfObjectValues<EventQuery>(createEventQueryFromDiscriminatorValue); },
        "eventStatus": n => { retentionEvent.eventStatus = n.getObjectValue<RetentionEventStatus>(createRetentionEventStatusFromDiscriminatorValue); },
        "eventTriggerDateTime": n => { retentionEvent.eventTriggerDateTime = n.getDateValue(); },
        "lastModifiedBy": n => { retentionEvent.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { retentionEvent.lastModifiedDateTime = n.getDateValue(); },
        "lastStatusUpdateDateTime": n => { retentionEvent.lastStatusUpdateDateTime = n.getDateValue(); },
        "retentionEventType": n => { retentionEvent.retentionEventType = n.getObjectValue<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionEventCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventCollectionResponse(retentionEventCollectionResponse: Partial<RetentionEventCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(retentionEventCollectionResponse),
        "value": n => { retentionEventCollectionResponse.value = n.getCollectionOfObjectValues<RetentionEvent>(createRetentionEventFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionEventStatus The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventStatus(retentionEventStatus: Partial<RetentionEventStatus> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { retentionEventStatus.backingStoreEnabled = true; },
        "error": n => { retentionEventStatus.errorEscaped = n.getObjectValue<PublicError>(createPublicErrorFromDiscriminatorValue); },
        "@odata.type": n => { retentionEventStatus.odataType = n.getStringValue(); },
        "status": n => { retentionEventStatus.status = n.getEnumValue<EventStatusType>(EventStatusTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionEventType The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventType(retentionEventType: Partial<RetentionEventType> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(retentionEventType),
        "createdBy": n => { retentionEventType.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { retentionEventType.createdDateTime = n.getDateValue(); },
        "description": n => { retentionEventType.description = n.getStringValue(); },
        "displayName": n => { retentionEventType.displayName = n.getStringValue(); },
        "lastModifiedBy": n => { retentionEventType.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { retentionEventType.lastModifiedDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionEventTypeCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionEventTypeCollectionResponse(retentionEventTypeCollectionResponse: Partial<RetentionEventTypeCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(retentionEventTypeCollectionResponse),
        "value": n => { retentionEventTypeCollectionResponse.value = n.getCollectionOfObjectValues<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionLabel The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionLabel(retentionLabel: Partial<RetentionLabel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(retentionLabel),
        "actionAfterRetentionPeriod": n => { retentionLabel.actionAfterRetentionPeriod = n.getEnumValue<ActionAfterRetentionPeriod>(ActionAfterRetentionPeriodObject); },
        "behaviorDuringRetentionPeriod": n => { retentionLabel.behaviorDuringRetentionPeriod = n.getEnumValue<BehaviorDuringRetentionPeriod>(BehaviorDuringRetentionPeriodObject); },
        "createdBy": n => { retentionLabel.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { retentionLabel.createdDateTime = n.getDateValue(); },
        "defaultRecordBehavior": n => { retentionLabel.defaultRecordBehavior = n.getEnumValue<DefaultRecordBehavior>(DefaultRecordBehaviorObject); },
        "descriptionForAdmins": n => { retentionLabel.descriptionForAdmins = n.getStringValue(); },
        "descriptionForUsers": n => { retentionLabel.descriptionForUsers = n.getStringValue(); },
        "descriptors": n => { retentionLabel.descriptors = n.getObjectValue<FilePlanDescriptor>(createFilePlanDescriptorFromDiscriminatorValue); },
        "displayName": n => { retentionLabel.displayName = n.getStringValue(); },
        "dispositionReviewStages": n => { retentionLabel.dispositionReviewStages = n.getCollectionOfObjectValues<DispositionReviewStage>(createDispositionReviewStageFromDiscriminatorValue); },
        "isInUse": n => { retentionLabel.isInUse = n.getBooleanValue(); },
        "labelToBeApplied": n => { retentionLabel.labelToBeApplied = n.getStringValue(); },
        "lastModifiedBy": n => { retentionLabel.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { retentionLabel.lastModifiedDateTime = n.getDateValue(); },
        "retentionDuration": n => { retentionLabel.retentionDuration = n.getObjectValue<RetentionDuration>(createRetentionDurationFromDiscriminatorValue); },
        "retentionEventType": n => { retentionLabel.retentionEventType = n.getObjectValue<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
        "retentionTrigger": n => { retentionLabel.retentionTrigger = n.getEnumValue<RetentionTrigger>(RetentionTriggerObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionLabelCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionLabelCollectionResponse(retentionLabelCollectionResponse: Partial<RetentionLabelCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(retentionLabelCollectionResponse),
        "value": n => { retentionLabelCollectionResponse.value = n.getCollectionOfObjectValues<RetentionLabel>(createRetentionLabelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param RetentionPolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRetentionPolicyAuditRecord(retentionPolicyAuditRecord: Partial<RetentionPolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(retentionPolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SasTokenEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSasTokenEvidence(sasTokenEvidence: Partial<SasTokenEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(sasTokenEvidence),
        "allowedIpAddresses": n => { sasTokenEvidence.allowedIpAddresses = n.getStringValue(); },
        "allowedResourceTypes": n => { sasTokenEvidence.allowedResourceTypes = n.getCollectionOfPrimitiveValues<string>(); },
        "allowedServices": n => { sasTokenEvidence.allowedServices = n.getCollectionOfPrimitiveValues<string>(); },
        "expiryDateTime": n => { sasTokenEvidence.expiryDateTime = n.getDateValue(); },
        "permissions": n => { sasTokenEvidence.permissions = n.getCollectionOfPrimitiveValues<string>(); },
        "protocol": n => { sasTokenEvidence.protocol = n.getStringValue(); },
        "signatureHash": n => { sasTokenEvidence.signatureHash = n.getStringValue(); },
        "signedWith": n => { sasTokenEvidence.signedWith = n.getStringValue(); },
        "startDateTime": n => { sasTokenEvidence.startDateTime = n.getDateValue(); },
        "storageResource": n => { sasTokenEvidence.storageResource = n.getObjectValue<AzureResourceEvidence>(createAzureResourceEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ScoreEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoScoreEvidence(scoreEvidence: Partial<ScoreEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(scoreEvidence),
    }
}
/**
 * The deserialization information for the current model
 * @param ScorePlatformGenericAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoScorePlatformGenericAuditRecord(scorePlatformGenericAuditRecord: Partial<ScorePlatformGenericAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(scorePlatformGenericAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ScriptRunAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoScriptRunAuditRecord(scriptRunAuditRecord: Partial<ScriptRunAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(scriptRunAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Search The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearch(search: Partial<Search> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(search),
        "contentQuery": n => { search.contentQuery = n.getStringValue(); },
        "createdBy": n => { search.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "createdDateTime": n => { search.createdDateTime = n.getDateValue(); },
        "description": n => { search.description = n.getStringValue(); },
        "displayName": n => { search.displayName = n.getStringValue(); },
        "lastModifiedBy": n => { search.lastModifiedBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "lastModifiedDateTime": n => { search.lastModifiedDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SearchAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSearchAuditRecord(searchAuditRecord: Partial<SearchAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(searchAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SecurityComplianceAlertRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceAlertRecord(securityComplianceAlertRecord: Partial<SecurityComplianceAlertRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceAlertRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SecurityComplianceCenterEOPCmdletAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceCenterEOPCmdletAuditRecord(securityComplianceCenterEOPCmdletAuditRecord: Partial<SecurityComplianceCenterEOPCmdletAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceCenterEOPCmdletAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SecurityComplianceInsightsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceInsightsAuditRecord(securityComplianceInsightsAuditRecord: Partial<SecurityComplianceInsightsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceInsightsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SecurityComplianceRBACAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceRBACAuditRecord(securityComplianceRBACAuditRecord: Partial<SecurityComplianceRBACAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceRBACAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SecurityComplianceUserChangeAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityComplianceUserChangeAuditRecord(securityComplianceUserChangeAuditRecord: Partial<SecurityComplianceUserChangeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(securityComplianceUserChangeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SecurityGroupEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecurityGroupEvidence(securityGroupEvidence: Partial<SecurityGroupEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(securityGroupEvidence),
        "displayName": n => { securityGroupEvidence.displayName = n.getStringValue(); },
        "securityGroupId": n => { securityGroupEvidence.securityGroupId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Sensor The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensor(sensor: Partial<Sensor> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(sensor),
        "createdDateTime": n => { sensor.createdDateTime = n.getDateValue(); },
        "deploymentStatus": n => { sensor.deploymentStatus = n.getEnumValue<DeploymentStatus>(DeploymentStatusObject); },
        "displayName": n => { sensor.displayName = n.getStringValue(); },
        "domainName": n => { sensor.domainName = n.getStringValue(); },
        "healthIssues": n => { sensor.healthIssues = n.getCollectionOfObjectValues<HealthIssue>(createHealthIssueFromDiscriminatorValue); },
        "healthStatus": n => { sensor.healthStatus = n.getEnumValue<SensorHealthStatus>(SensorHealthStatusObject); },
        "openHealthIssuesCount": n => { sensor.openHealthIssuesCount = n.getNumberValue(); },
        "sensorType": n => { sensor.sensorType = n.getEnumValue<SensorType>(SensorTypeObject); },
        "settings": n => { sensor.settings = n.getObjectValue<SensorSettings>(createSensorSettingsFromDiscriminatorValue); },
        "version": n => { sensor.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SensorCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensorCollectionResponse(sensorCollectionResponse: Partial<SensorCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sensorCollectionResponse),
        "value": n => { sensorCollectionResponse.value = n.getCollectionOfObjectValues<Sensor>(createSensorFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SensorDeploymentPackage The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensorDeploymentPackage(sensorDeploymentPackage: Partial<SensorDeploymentPackage> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { sensorDeploymentPackage.backingStoreEnabled = true; },
        "downloadUrl": n => { sensorDeploymentPackage.downloadUrl = n.getStringValue(); },
        "@odata.type": n => { sensorDeploymentPackage.odataType = n.getStringValue(); },
        "version": n => { sensorDeploymentPackage.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SensorSettings The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSensorSettings(sensorSettings: Partial<SensorSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { sensorSettings.backingStoreEnabled = true; },
        "description": n => { sensorSettings.description = n.getStringValue(); },
        "domainControllerDnsNames": n => { sensorSettings.domainControllerDnsNames = n.getCollectionOfPrimitiveValues<string>(); },
        "isDelayedDeploymentEnabled": n => { sensorSettings.isDelayedDeploymentEnabled = n.getBooleanValue(); },
        "networkAdapters": n => { sensorSettings.networkAdapters = n.getCollectionOfObjectValues<NetworkAdapter>(createNetworkAdapterFromDiscriminatorValue); },
        "@odata.type": n => { sensorSettings.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ServicePrincipalEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServicePrincipalEvidence(servicePrincipalEvidence: Partial<ServicePrincipalEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(servicePrincipalEvidence),
        "appId": n => { servicePrincipalEvidence.appId = n.getStringValue(); },
        "appOwnerTenantId": n => { servicePrincipalEvidence.appOwnerTenantId = n.getStringValue(); },
        "servicePrincipalName": n => { servicePrincipalEvidence.servicePrincipalName = n.getStringValue(); },
        "servicePrincipalObjectId": n => { servicePrincipalEvidence.servicePrincipalObjectId = n.getStringValue(); },
        "servicePrincipalType": n => { servicePrincipalEvidence.servicePrincipalType = n.getEnumValue<ServicePrincipalType>(ServicePrincipalTypeObject); },
        "tenantId": n => { servicePrincipalEvidence.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointAppPermissionOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointAppPermissionOperationAuditRecord(sharePointAppPermissionOperationAuditRecord: Partial<SharePointAppPermissionOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointAppPermissionOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointAuditRecord(sharePointAuditRecord: Partial<SharePointAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointCommentOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointCommentOperationAuditRecord(sharePointCommentOperationAuditRecord: Partial<SharePointCommentOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointCommentOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointContentTypeOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointContentTypeOperationAuditRecord(sharePointContentTypeOperationAuditRecord: Partial<SharePointContentTypeOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointContentTypeOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointESignatureAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointESignatureAuditRecord(sharePointESignatureAuditRecord: Partial<SharePointESignatureAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointESignatureAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointFieldOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointFieldOperationAuditRecord(sharePointFieldOperationAuditRecord: Partial<SharePointFieldOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointFieldOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointFileOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointFileOperationAuditRecord(sharePointFileOperationAuditRecord: Partial<SharePointFileOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointFileOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointListOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointListOperationAuditRecord(sharePointListOperationAuditRecord: Partial<SharePointListOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointListOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SharePointSharingOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSharePointSharingOperationAuditRecord(sharePointSharingOperationAuditRecord: Partial<SharePointSharingOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(sharePointSharingOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SinglePropertySchema The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSinglePropertySchema(singlePropertySchema: Partial<SinglePropertySchema> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { singlePropertySchema.backingStoreEnabled = true; },
        "name": n => { singlePropertySchema.name = n.getStringValue(); },
        "@odata.type": n => { singlePropertySchema.odataType = n.getStringValue(); },
        "type": n => { singlePropertySchema.type = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SiteSource The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSiteSource(siteSource: Partial<SiteSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSource(siteSource),
        "site": n => { siteSource.site = n.getObjectValue<Site>(createSiteFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SiteSourceCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSiteSourceCollectionResponse(siteSourceCollectionResponse: Partial<SiteSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(siteSourceCollectionResponse),
        "value": n => { siteSourceCollectionResponse.value = n.getCollectionOfObjectValues<SiteSource>(createSiteSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SkypeForBusinessBaseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessBaseAuditRecord(skypeForBusinessBaseAuditRecord: Partial<SkypeForBusinessBaseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessBaseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SkypeForBusinessCmdletsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessCmdletsAuditRecord(skypeForBusinessCmdletsAuditRecord: Partial<SkypeForBusinessCmdletsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessCmdletsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SkypeForBusinessPSTNUsageAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessPSTNUsageAuditRecord(skypeForBusinessPSTNUsageAuditRecord: Partial<SkypeForBusinessPSTNUsageAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessPSTNUsageAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SkypeForBusinessUsersBlockedAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSkypeForBusinessUsersBlockedAuditRecord(skypeForBusinessUsersBlockedAuditRecord: Partial<SkypeForBusinessUsersBlockedAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(skypeForBusinessUsersBlockedAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SmsCreatePhoneNumberRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSmsCreatePhoneNumberRecord(smsCreatePhoneNumberRecord: Partial<SmsCreatePhoneNumberRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(smsCreatePhoneNumberRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SmsDeletePhoneNumberRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSmsDeletePhoneNumberRecord(smsDeletePhoneNumberRecord: Partial<SmsDeletePhoneNumberRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(smsDeletePhoneNumberRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SslCertificate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSslCertificate(sslCertificate: Partial<SslCertificate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(sslCertificate),
        "expirationDateTime": n => { sslCertificate.expirationDateTime = n.getDateValue(); },
        "fingerprint": n => { sslCertificate.fingerprint = n.getStringValue(); },
        "firstSeenDateTime": n => { sslCertificate.firstSeenDateTime = n.getDateValue(); },
        "issueDateTime": n => { sslCertificate.issueDateTime = n.getDateValue(); },
        "issuer": n => { sslCertificate.issuer = n.getObjectValue<SslCertificateEntity>(createSslCertificateEntityFromDiscriminatorValue); },
        "lastSeenDateTime": n => { sslCertificate.lastSeenDateTime = n.getDateValue(); },
        "relatedHosts": n => { sslCertificate.relatedHosts = n.getCollectionOfObjectValues<Host>(createHostFromDiscriminatorValue); },
        "serialNumber": n => { sslCertificate.serialNumber = n.getStringValue(); },
        "sha1": n => { sslCertificate.sha1 = n.getStringValue(); },
        "subject": n => { sslCertificate.subject = n.getObjectValue<SslCertificateEntity>(createSslCertificateEntityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SslCertificateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSslCertificateCollectionResponse(sslCertificateCollectionResponse: Partial<SslCertificateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(sslCertificateCollectionResponse),
        "value": n => { sslCertificateCollectionResponse.value = n.getCollectionOfObjectValues<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SslCertificateEntity The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSslCertificateEntity(sslCertificateEntity: Partial<SslCertificateEntity> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "address": n => { sslCertificateEntity.address = n.getObjectValue<PhysicalAddress>(createPhysicalAddressFromDiscriminatorValue); },
        "alternateNames": n => { sslCertificateEntity.alternateNames = n.getCollectionOfPrimitiveValues<string>(); },
        "backingStoreEnabled": n => { sslCertificateEntity.backingStoreEnabled = true; },
        "commonName": n => { sslCertificateEntity.commonName = n.getStringValue(); },
        "email": n => { sslCertificateEntity.email = n.getStringValue(); },
        "givenName": n => { sslCertificateEntity.givenName = n.getStringValue(); },
        "@odata.type": n => { sslCertificateEntity.odataType = n.getStringValue(); },
        "organizationName": n => { sslCertificateEntity.organizationName = n.getStringValue(); },
        "organizationUnitName": n => { sslCertificateEntity.organizationUnitName = n.getStringValue(); },
        "serialNumber": n => { sslCertificateEntity.serialNumber = n.getStringValue(); },
        "surname": n => { sslCertificateEntity.surname = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Stream The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoStream(stream: Partial<Stream> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { stream.backingStoreEnabled = true; },
        "name": n => { stream.name = n.getStringValue(); },
        "@odata.type": n => { stream.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SubcategoryTemplate The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubcategoryTemplate(subcategoryTemplate: Partial<SubcategoryTemplate> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoFilePlanDescriptorTemplate(subcategoryTemplate),
    }
}
/**
 * The deserialization information for the current model
 * @param SubcategoryTemplateCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubcategoryTemplateCollectionResponse(subcategoryTemplateCollectionResponse: Partial<SubcategoryTemplateCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(subcategoryTemplateCollectionResponse),
        "value": n => { subcategoryTemplateCollectionResponse.value = n.getCollectionOfObjectValues<SubcategoryTemplate>(createSubcategoryTemplateFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Subdomain The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubdomain(subdomain: Partial<Subdomain> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(subdomain),
        "firstSeenDateTime": n => { subdomain.firstSeenDateTime = n.getDateValue(); },
        "host": n => { subdomain.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SubdomainCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubdomainCollectionResponse(subdomainCollectionResponse: Partial<SubdomainCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(subdomainCollectionResponse),
        "value": n => { subdomainCollectionResponse.value = n.getCollectionOfObjectValues<Subdomain>(createSubdomainFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SubmissionMailEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSubmissionMailEvidence(submissionMailEvidence: Partial<SubmissionMailEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(submissionMailEvidence),
        "networkMessageId": n => { submissionMailEvidence.networkMessageId = n.getStringValue(); },
        "recipient": n => { submissionMailEvidence.recipient = n.getStringValue(); },
        "reportType": n => { submissionMailEvidence.reportType = n.getStringValue(); },
        "sender": n => { submissionMailEvidence.sender = n.getStringValue(); },
        "senderIp": n => { submissionMailEvidence.senderIp = n.getStringValue(); },
        "subject": n => { submissionMailEvidence.subject = n.getStringValue(); },
        "submissionDateTime": n => { submissionMailEvidence.submissionDateTime = n.getDateValue(); },
        "submissionId": n => { submissionMailEvidence.submissionId = n.getStringValue(); },
        "submitter": n => { submissionMailEvidence.submitter = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param SupervisoryReviewDayXInsightsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSupervisoryReviewDayXInsightsAuditRecord(supervisoryReviewDayXInsightsAuditRecord: Partial<SupervisoryReviewDayXInsightsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(supervisoryReviewDayXInsightsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param SyntheticProbeAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSyntheticProbeAuditRecord(syntheticProbeAuditRecord: Partial<SyntheticProbeAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(syntheticProbeAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param Tag The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTag(tag: Partial<Tag> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(tag),
        "createdBy": n => { tag.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "description": n => { tag.description = n.getStringValue(); },
        "displayName": n => { tag.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { tag.lastModifiedDateTime = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsEasyApprovalsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsEasyApprovalsAuditRecord(teamsEasyApprovalsAuditRecord: Partial<TeamsEasyApprovalsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(teamsEasyApprovalsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsHealthcareAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsHealthcareAuditRecord(teamsHealthcareAuditRecord: Partial<TeamsHealthcareAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(teamsHealthcareAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsMessageEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsMessageEvidence(teamsMessageEvidence: Partial<TeamsMessageEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(teamsMessageEvidence),
        "campaignId": n => { teamsMessageEvidence.campaignId = n.getStringValue(); },
        "channelId": n => { teamsMessageEvidence.channelId = n.getStringValue(); },
        "deliveryAction": n => { teamsMessageEvidence.deliveryAction = n.getEnumValue<TeamsMessageDeliveryAction>(TeamsMessageDeliveryActionObject); },
        "deliveryLocation": n => { teamsMessageEvidence.deliveryLocation = n.getEnumValue<TeamsDeliveryLocation>(TeamsDeliveryLocationObject); },
        "files": n => { teamsMessageEvidence.files = n.getCollectionOfObjectValues<FileEvidence>(createFileEvidenceFromDiscriminatorValue); },
        "groupId": n => { teamsMessageEvidence.groupId = n.getStringValue(); },
        "isExternal": n => { teamsMessageEvidence.isExternal = n.getBooleanValue(); },
        "isOwned": n => { teamsMessageEvidence.isOwned = n.getBooleanValue(); },
        "lastModifiedDateTime": n => { teamsMessageEvidence.lastModifiedDateTime = n.getDateValue(); },
        "messageDirection": n => { teamsMessageEvidence.messageDirection = n.getEnumValue<AntispamTeamsDirection>(AntispamTeamsDirectionObject); },
        "messageId": n => { teamsMessageEvidence.messageId = n.getStringValue(); },
        "owningTenantId": n => { teamsMessageEvidence.owningTenantId = n.getGuidValue(); },
        "parentMessageId": n => { teamsMessageEvidence.parentMessageId = n.getStringValue(); },
        "receivedDateTime": n => { teamsMessageEvidence.receivedDateTime = n.getDateValue(); },
        "recipients": n => { teamsMessageEvidence.recipients = n.getCollectionOfPrimitiveValues<string>(); },
        "senderFromAddress": n => { teamsMessageEvidence.senderFromAddress = n.getStringValue(); },
        "senderIP": n => { teamsMessageEvidence.senderIP = n.getStringValue(); },
        "sourceAppName": n => { teamsMessageEvidence.sourceAppName = n.getStringValue(); },
        "sourceId": n => { teamsMessageEvidence.sourceId = n.getStringValue(); },
        "subject": n => { teamsMessageEvidence.subject = n.getStringValue(); },
        "suspiciousRecipients": n => { teamsMessageEvidence.suspiciousRecipients = n.getCollectionOfPrimitiveValues<string>(); },
        "threadId": n => { teamsMessageEvidence.threadId = n.getStringValue(); },
        "threadType": n => { teamsMessageEvidence.threadType = n.getStringValue(); },
        "urls": n => { teamsMessageEvidence.urls = n.getCollectionOfObjectValues<UrlEvidence>(createUrlEvidenceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param TeamsUpdatesAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTeamsUpdatesAuditRecord(teamsUpdatesAuditRecord: Partial<TeamsUpdatesAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(teamsUpdatesAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param TenantAllowBlockListAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTenantAllowBlockListAuditRecord(tenantAllowBlockListAuditRecord: Partial<TenantAllowBlockListAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(tenantAllowBlockListAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ThreatFinderAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatFinderAuditRecord(threatFinderAuditRecord: Partial<ThreatFinderAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatFinderAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param ThreatIntelligence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligence(threatIntelligence: Partial<ThreatIntelligence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(threatIntelligence),
        "articleIndicators": n => { threatIntelligence.articleIndicators = n.getCollectionOfObjectValues<ArticleIndicator>(createArticleIndicatorFromDiscriminatorValue); },
        "articles": n => { threatIntelligence.articles = n.getCollectionOfObjectValues<Article>(createArticleFromDiscriminatorValue); },
        "hostComponents": n => { threatIntelligence.hostComponents = n.getCollectionOfObjectValues<HostComponent>(createHostComponentFromDiscriminatorValue); },
        "hostCookies": n => { threatIntelligence.hostCookies = n.getCollectionOfObjectValues<HostCookie>(createHostCookieFromDiscriminatorValue); },
        "hostPairs": n => { threatIntelligence.hostPairs = n.getCollectionOfObjectValues<HostPair>(createHostPairFromDiscriminatorValue); },
        "hostPorts": n => { threatIntelligence.hostPorts = n.getCollectionOfObjectValues<HostPort>(createHostPortFromDiscriminatorValue); },
        "hosts": n => { threatIntelligence.hosts = n.getCollectionOfObjectValues<Host>(createHostFromDiscriminatorValue); },
        "hostSslCertificates": n => { threatIntelligence.hostSslCertificates = n.getCollectionOfObjectValues<HostSslCertificate>(createHostSslCertificateFromDiscriminatorValue); },
        "hostTrackers": n => { threatIntelligence.hostTrackers = n.getCollectionOfObjectValues<HostTracker>(createHostTrackerFromDiscriminatorValue); },
        "intelligenceProfileIndicators": n => { threatIntelligence.intelligenceProfileIndicators = n.getCollectionOfObjectValues<IntelligenceProfileIndicator>(createIntelligenceProfileIndicatorFromDiscriminatorValue); },
        "intelProfiles": n => { threatIntelligence.intelProfiles = n.getCollectionOfObjectValues<IntelligenceProfile>(createIntelligenceProfileFromDiscriminatorValue); },
        "passiveDnsRecords": n => { threatIntelligence.passiveDnsRecords = n.getCollectionOfObjectValues<PassiveDnsRecord>(createPassiveDnsRecordFromDiscriminatorValue); },
        "sslCertificates": n => { threatIntelligence.sslCertificates = n.getCollectionOfObjectValues<SslCertificate>(createSslCertificateFromDiscriminatorValue); },
        "subdomains": n => { threatIntelligence.subdomains = n.getCollectionOfObjectValues<Subdomain>(createSubdomainFromDiscriminatorValue); },
        "vulnerabilities": n => { threatIntelligence.vulnerabilities = n.getCollectionOfObjectValues<Vulnerability>(createVulnerabilityFromDiscriminatorValue); },
        "whoisHistoryRecords": n => { threatIntelligence.whoisHistoryRecords = n.getCollectionOfObjectValues<WhoisHistoryRecord>(createWhoisHistoryRecordFromDiscriminatorValue); },
        "whoisRecords": n => { threatIntelligence.whoisRecords = n.getCollectionOfObjectValues<WhoisRecord>(createWhoisRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param ThreatIntelligenceAtpContentData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligenceAtpContentData(threatIntelligenceAtpContentData: Partial<ThreatIntelligenceAtpContentData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatIntelligenceAtpContentData),
    }
}
/**
 * The deserialization information for the current model
 * @param ThreatIntelligenceMailData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligenceMailData(threatIntelligenceMailData: Partial<ThreatIntelligenceMailData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatIntelligenceMailData),
    }
}
/**
 * The deserialization information for the current model
 * @param ThreatIntelligenceUrlClickData The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoThreatIntelligenceUrlClickData(threatIntelligenceUrlClickData: Partial<ThreatIntelligenceUrlClickData> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(threatIntelligenceUrlClickData),
    }
}
/**
 * The deserialization information for the current model
 * @param TodoAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTodoAuditRecord(todoAuditRecord: Partial<TodoAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(todoAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param TopicModelingSettings The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTopicModelingSettings(topicModelingSettings: Partial<TopicModelingSettings> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { topicModelingSettings.backingStoreEnabled = true; },
        "dynamicallyAdjustTopicCount": n => { topicModelingSettings.dynamicallyAdjustTopicCount = n.getBooleanValue(); },
        "ignoreNumbers": n => { topicModelingSettings.ignoreNumbers = n.getBooleanValue(); },
        "isEnabled": n => { topicModelingSettings.isEnabled = n.getBooleanValue(); },
        "@odata.type": n => { topicModelingSettings.odataType = n.getStringValue(); },
        "topicCount": n => { topicModelingSettings.topicCount = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param TriggersRoot The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTriggersRoot(triggersRoot: Partial<TriggersRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(triggersRoot),
        "retentionEvents": n => { triggersRoot.retentionEvents = n.getCollectionOfObjectValues<RetentionEvent>(createRetentionEventFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param TriggerTypesRoot The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTriggerTypesRoot(triggerTypesRoot: Partial<TriggerTypesRoot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(triggerTypesRoot),
        "retentionEventTypes": n => { triggerTypesRoot.retentionEventTypes = n.getCollectionOfObjectValues<RetentionEventType>(createRetentionEventTypeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param UamOperationAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUamOperationAuditRecord(uamOperationAuditRecord: Partial<UamOperationAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(uamOperationAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UnclassifiedArtifact The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnclassifiedArtifact(unclassifiedArtifact: Partial<UnclassifiedArtifact> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoArtifact(unclassifiedArtifact),
        "kind": n => { unclassifiedArtifact.kind = n.getStringValue(); },
        "value": n => { unclassifiedArtifact.value = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UnifiedGroupAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedGroupAuditRecord(unifiedGroupAuditRecord: Partial<UnifiedGroupAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(unifiedGroupAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UnifiedGroupSource The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedGroupSource(unifiedGroupSource: Partial<UnifiedGroupSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSource(unifiedGroupSource),
        "group": n => { unifiedGroupSource.group = n.getObjectValue<Group>(createGroupFromDiscriminatorValue); },
        "includedSources": n => { unifiedGroupSource.includedSources = n.getCollectionOfEnumValues<SourceType>(SourceTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param UnifiedGroupSourceCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedGroupSourceCollectionResponse(unifiedGroupSourceCollectionResponse: Partial<UnifiedGroupSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(unifiedGroupSourceCollectionResponse),
        "value": n => { unifiedGroupSourceCollectionResponse.value = n.getCollectionOfObjectValues<UnifiedGroupSource>(createUnifiedGroupSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param UnifiedSimulationMatchedItemAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedSimulationMatchedItemAuditRecord(unifiedSimulationMatchedItemAuditRecord: Partial<UnifiedSimulationMatchedItemAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(unifiedSimulationMatchedItemAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UnifiedSimulationSummaryAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUnifiedSimulationSummaryAuditRecord(unifiedSimulationSummaryAuditRecord: Partial<UnifiedSimulationSummaryAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(unifiedSimulationSummaryAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UploadCertificateRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUploadCertificateRecord(uploadCertificateRecord: Partial<UploadCertificateRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(uploadCertificateRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UrbacAssignmentAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrbacAssignmentAuditRecord(urbacAssignmentAuditRecord: Partial<UrbacAssignmentAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(urbacAssignmentAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UrbacEnableStateAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrbacEnableStateAuditRecord(urbacEnableStateAuditRecord: Partial<UrbacEnableStateAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(urbacEnableStateAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UrbacRoleAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrbacRoleAuditRecord(urbacRoleAuditRecord: Partial<UrbacRoleAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(urbacRoleAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param UrlEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUrlEvidence(urlEvidence: Partial<UrlEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(urlEvidence),
        "url": n => { urlEvidence.url = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserAccount The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserAccount(userAccount: Partial<UserAccount> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accountName": n => { userAccount.accountName = n.getStringValue(); },
        "azureAdUserId": n => { userAccount.azureAdUserId = n.getStringValue(); },
        "backingStoreEnabled": n => { userAccount.backingStoreEnabled = true; },
        "displayName": n => { userAccount.displayName = n.getStringValue(); },
        "domainName": n => { userAccount.domainName = n.getStringValue(); },
        "@odata.type": n => { userAccount.odataType = n.getStringValue(); },
        "userPrincipalName": n => { userAccount.userPrincipalName = n.getStringValue(); },
        "userSid": n => { userAccount.userSid = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserEvidence The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserEvidence(userEvidence: Partial<UserEvidence> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAlertEvidence(userEvidence),
        "stream": n => { userEvidence.stream = n.getObjectValue<Stream>(createStreamFromDiscriminatorValue); },
        "userAccount": n => { userEvidence.userAccount = n.getObjectValue<UserAccount>(createUserAccountFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserSource The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserSource(userSource: Partial<UserSource> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoDataSource(userSource),
        "email": n => { userSource.email = n.getStringValue(); },
        "includedSources": n => { userSource.includedSources = n.getCollectionOfEnumValues<SourceType>(SourceTypeObject); },
        "siteWebUrl": n => { userSource.siteWebUrl = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserSourceCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserSourceCollectionResponse(userSourceCollectionResponse: Partial<UserSourceCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(userSourceCollectionResponse),
        "value": n => { userSourceCollectionResponse.value = n.getCollectionOfObjectValues<UserSource>(createUserSourceFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param UserTrainingAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserTrainingAuditRecord(userTrainingAuditRecord: Partial<UserTrainingAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(userTrainingAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VfamBasePolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamBasePolicyAuditRecord(vfamBasePolicyAuditRecord: Partial<VfamBasePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamBasePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VfamCreatePolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamCreatePolicyAuditRecord(vfamCreatePolicyAuditRecord: Partial<VfamCreatePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamCreatePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VfamDeletePolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamDeletePolicyAuditRecord(vfamDeletePolicyAuditRecord: Partial<VfamDeletePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamDeletePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VfamUpdatePolicyAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVfamUpdatePolicyAuditRecord(vfamUpdatePolicyAuditRecord: Partial<VfamUpdatePolicyAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vfamUpdatePolicyAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VivaGoalsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaGoalsAuditRecord(vivaGoalsAuditRecord: Partial<VivaGoalsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaGoalsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VivaLearningAdminAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaLearningAdminAuditRecord(vivaLearningAdminAuditRecord: Partial<VivaLearningAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaLearningAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VivaLearningAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaLearningAuditRecord(vivaLearningAuditRecord: Partial<VivaLearningAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaLearningAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VivaPulseAdminAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseAdminAuditRecord(vivaPulseAdminAuditRecord: Partial<VivaPulseAdminAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseAdminAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VivaPulseOrganizerAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseOrganizerAuditRecord(vivaPulseOrganizerAuditRecord: Partial<VivaPulseOrganizerAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseOrganizerAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VivaPulseReportAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseReportAuditRecord(vivaPulseReportAuditRecord: Partial<VivaPulseReportAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseReportAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VivaPulseResponseAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVivaPulseResponseAuditRecord(vivaPulseResponseAuditRecord: Partial<VivaPulseResponseAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(vivaPulseResponseAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param VmMetadata The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVmMetadata(vmMetadata: Partial<VmMetadata> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { vmMetadata.backingStoreEnabled = true; },
        "cloudProvider": n => { vmMetadata.cloudProvider = n.getEnumValue<VmCloudProvider>(VmCloudProviderObject); },
        "@odata.type": n => { vmMetadata.odataType = n.getStringValue(); },
        "resourceId": n => { vmMetadata.resourceId = n.getStringValue(); },
        "subscriptionId": n => { vmMetadata.subscriptionId = n.getStringValue(); },
        "vmId": n => { vmMetadata.vmId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param Vulnerability The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerability(vulnerability: Partial<Vulnerability> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(vulnerability),
        "activeExploitsObserved": n => { vulnerability.activeExploitsObserved = n.getBooleanValue(); },
        "articles": n => { vulnerability.articles = n.getCollectionOfObjectValues<Article>(createArticleFromDiscriminatorValue); },
        "commonWeaknessEnumerationIds": n => { vulnerability.commonWeaknessEnumerationIds = n.getCollectionOfPrimitiveValues<string>(); },
        "components": n => { vulnerability.components = n.getCollectionOfObjectValues<VulnerabilityComponent>(createVulnerabilityComponentFromDiscriminatorValue); },
        "createdDateTime": n => { vulnerability.createdDateTime = n.getDateValue(); },
        "cvss2Summary": n => { vulnerability.cvss2Summary = n.getObjectValue<CvssSummary>(createCvssSummaryFromDiscriminatorValue); },
        "cvss3Summary": n => { vulnerability.cvss3Summary = n.getObjectValue<CvssSummary>(createCvssSummaryFromDiscriminatorValue); },
        "description": n => { vulnerability.description = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "exploits": n => { vulnerability.exploits = n.getCollectionOfObjectValues<Hyperlink>(createHyperlinkFromDiscriminatorValue); },
        "exploitsAvailable": n => { vulnerability.exploitsAvailable = n.getBooleanValue(); },
        "hasChatter": n => { vulnerability.hasChatter = n.getBooleanValue(); },
        "lastModifiedDateTime": n => { vulnerability.lastModifiedDateTime = n.getDateValue(); },
        "priorityScore": n => { vulnerability.priorityScore = n.getNumberValue(); },
        "publishedDateTime": n => { vulnerability.publishedDateTime = n.getDateValue(); },
        "references": n => { vulnerability.references = n.getCollectionOfObjectValues<Hyperlink>(createHyperlinkFromDiscriminatorValue); },
        "remediation": n => { vulnerability.remediation = n.getObjectValue<FormattedContent>(createFormattedContentFromDiscriminatorValue); },
        "severity": n => { vulnerability.severity = n.getEnumValue<VulnerabilitySeverity>(VulnerabilitySeverityObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param VulnerabilityCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerabilityCollectionResponse(vulnerabilityCollectionResponse: Partial<VulnerabilityCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(vulnerabilityCollectionResponse),
        "value": n => { vulnerabilityCollectionResponse.value = n.getCollectionOfObjectValues<Vulnerability>(createVulnerabilityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param VulnerabilityComponent The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerabilityComponent(vulnerabilityComponent: Partial<VulnerabilityComponent> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(vulnerabilityComponent),
        "name": n => { vulnerabilityComponent.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param VulnerabilityComponentCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVulnerabilityComponentCollectionResponse(vulnerabilityComponentCollectionResponse: Partial<VulnerabilityComponentCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(vulnerabilityComponentCollectionResponse),
        "value": n => { vulnerabilityComponentCollectionResponse.value = n.getCollectionOfObjectValues<VulnerabilityComponent>(createVulnerabilityComponentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WdatpAlertsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWdatpAlertsAuditRecord(wdatpAlertsAuditRecord: Partial<WdatpAlertsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(wdatpAlertsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param WhoisBaseRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisBaseRecord(whoisBaseRecord: Partial<WhoisBaseRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(whoisBaseRecord),
        "abuse": n => { whoisBaseRecord.abuse = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "admin": n => { whoisBaseRecord.admin = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "billing": n => { whoisBaseRecord.billing = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "domainStatus": n => { whoisBaseRecord.domainStatus = n.getStringValue(); },
        "expirationDateTime": n => { whoisBaseRecord.expirationDateTime = n.getDateValue(); },
        "firstSeenDateTime": n => { whoisBaseRecord.firstSeenDateTime = n.getDateValue(); },
        "host": n => { whoisBaseRecord.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { whoisBaseRecord.lastSeenDateTime = n.getDateValue(); },
        "lastUpdateDateTime": n => { whoisBaseRecord.lastUpdateDateTime = n.getDateValue(); },
        "nameservers": n => { whoisBaseRecord.nameservers = n.getCollectionOfObjectValues<WhoisNameserver>(createWhoisNameserverFromDiscriminatorValue); },
        "noc": n => { whoisBaseRecord.noc = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "rawWhoisText": n => { whoisBaseRecord.rawWhoisText = n.getStringValue(); },
        "registrant": n => { whoisBaseRecord.registrant = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "registrar": n => { whoisBaseRecord.registrar = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "registrationDateTime": n => { whoisBaseRecord.registrationDateTime = n.getDateValue(); },
        "technical": n => { whoisBaseRecord.technical = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
        "whoisServer": n => { whoisBaseRecord.whoisServer = n.getStringValue(); },
        "zone": n => { whoisBaseRecord.zone = n.getObjectValue<WhoisContact>(createWhoisContactFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WhoisContact The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisContact(whoisContact: Partial<WhoisContact> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "address": n => { whoisContact.address = n.getObjectValue<PhysicalAddress>(createPhysicalAddressFromDiscriminatorValue); },
        "backingStoreEnabled": n => { whoisContact.backingStoreEnabled = true; },
        "email": n => { whoisContact.email = n.getStringValue(); },
        "fax": n => { whoisContact.fax = n.getStringValue(); },
        "name": n => { whoisContact.name = n.getStringValue(); },
        "@odata.type": n => { whoisContact.odataType = n.getStringValue(); },
        "organization": n => { whoisContact.organization = n.getStringValue(); },
        "telephone": n => { whoisContact.telephone = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WhoisHistoryRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisHistoryRecord(whoisHistoryRecord: Partial<WhoisHistoryRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWhoisBaseRecord(whoisHistoryRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param WhoisHistoryRecordCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisHistoryRecordCollectionResponse(whoisHistoryRecordCollectionResponse: Partial<WhoisHistoryRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(whoisHistoryRecordCollectionResponse),
        "value": n => { whoisHistoryRecordCollectionResponse.value = n.getCollectionOfObjectValues<WhoisHistoryRecord>(createWhoisHistoryRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WhoisNameserver The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisNameserver(whoisNameserver: Partial<WhoisNameserver> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { whoisNameserver.backingStoreEnabled = true; },
        "firstSeenDateTime": n => { whoisNameserver.firstSeenDateTime = n.getDateValue(); },
        "host": n => { whoisNameserver.host = n.getObjectValue<Host>(createHostFromDiscriminatorValue); },
        "lastSeenDateTime": n => { whoisNameserver.lastSeenDateTime = n.getDateValue(); },
        "@odata.type": n => { whoisNameserver.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param WhoisRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisRecord(whoisRecord: Partial<WhoisRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoWhoisBaseRecord(whoisRecord),
        "history": n => { whoisRecord.history = n.getCollectionOfObjectValues<WhoisHistoryRecord>(createWhoisHistoryRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WhoisRecordCollectionResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWhoisRecordCollectionResponse(whoisRecordCollectionResponse: Partial<WhoisRecordCollectionResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(whoisRecordCollectionResponse),
        "value": n => { whoisRecordCollectionResponse.value = n.getCollectionOfObjectValues<WhoisRecord>(createWhoisRecordFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Windows365CustomerLockboxAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWindows365CustomerLockboxAuditRecord(windows365CustomerLockboxAuditRecord: Partial<Windows365CustomerLockboxAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(windows365CustomerLockboxAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param WorkplaceAnalyticsAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWorkplaceAnalyticsAuditRecord(workplaceAnalyticsAuditRecord: Partial<WorkplaceAnalyticsAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(workplaceAnalyticsAuditRecord),
    }
}
/**
 * The deserialization information for the current model
 * @param YammerAuditRecord The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoYammerAuditRecord(yammerAuditRecord: Partial<YammerAuditRecord> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAuditData(yammerAuditRecord),
    }
}
export type DetectionSource = (typeof DetectionSourceObject)[keyof typeof DetectionSourceObject];
export type DetectionStatus = (typeof DetectionStatusObject)[keyof typeof DetectionStatusObject];
export interface DeviceEvidence extends AlertEvidence, Parsable {
    /**
     * A unique identifier assigned to a device by Microsoft Entra ID when device is Microsoft Entra joined.
     */
    azureAdDeviceId?: string | null;
    /**
     * State of the Defender AntiMalware engine. The possible values are: notReporting, disabled, notUpdated, updated, unknown, notSupported, unknownFutureValue.
     */
    defenderAvStatus?: DefenderAvStatus | null;
    /**
     * The fully qualified domain name (FQDN) for the device.
     */
    deviceDnsName?: string | null;
    /**
     * The DNS domain that this computer belongs to. A sequence of labels separated by dots.
     */
    dnsDomain?: string | null;
    /**
     * The date and time when the device was first seen.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The health state of the device. The possible values are: active, inactive, impairedCommunication, noSensorData, noSensorDataImpairedCommunication, unknown, unknownFutureValue.
     */
    healthStatus?: DeviceHealthStatus | null;
    /**
     * The hostname without the domain suffix.
     */
    hostName?: string | null;
    /**
     * Ip interfaces of the device during the time of the alert.
     */
    ipInterfaces?: string[] | null;
    /**
     * The lastExternalIpAddress property
     */
    lastExternalIpAddress?: string | null;
    /**
     * The lastIpAddress property
     */
    lastIpAddress?: string | null;
    /**
     * Users that were logged on the machine during the time of the alert.
     */
    loggedOnUsers?: LoggedOnUser[] | null;
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
    /**
     * A logical grouping of computers within a Microsoft Windows network.
     */
    ntDomain?: string | null;
    /**
     * The status of the machine onboarding to Microsoft Defender for Endpoint. The possible values are: insufficientInfo, onboarded, canBeOnboarded, unsupported, unknownFutureValue.
     */
    onboardingStatus?: OnboardingStatus | null;
    /**
     * The build version for the operating system the device is running.
     */
    osBuild?: number | null;
    /**
     * The operating system platform the device is running.
     */
    osPlatform?: string | null;
    /**
     * The ID of the role-based access control (RBAC) device group.
     */
    rbacGroupId?: number | null;
    /**
     * The name of the RBAC device group.
     */
    rbacGroupName?: string | null;
    /**
     * Risk score as evaluated by Microsoft Defender for Endpoint. The possible values are: none, informational, low, medium, high, unknownFutureValue.
     */
    riskScore?: DeviceRiskScore | null;
    /**
     * The version of the operating system platform.
     */
    version?: string | null;
    /**
     * Metadata of the virtual machine (VM) on which Microsoft Defender for Endpoint is running.
     */
    vmMetadata?: VmMetadata | null;
}
export type DeviceHealthStatus = (typeof DeviceHealthStatusObject)[keyof typeof DeviceHealthStatusObject];
export type DeviceRiskScore = (typeof DeviceRiskScoreObject)[keyof typeof DeviceRiskScoreObject];
export interface Dictionary extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface DisableConsentRecord extends AuditData, Parsable {
}
export interface DiscoveryAuditRecord extends AuditData, Parsable {
}
export interface DispositionReviewStage extends Entity, Parsable {
    /**
     * Name representing each stage within a collection.
     */
    name?: string | null;
    /**
     * A collection of reviewers at each stage.
     */
    reviewersEmailAddresses?: string[] | null;
    /**
     * The unique sequence number for each stage of the disposition review.
     */
    stageNumber?: string | null;
}
export interface DispositionReviewStageCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: DispositionReviewStage[] | null;
}
export interface DlpEndpointAuditRecord extends AuditData, Parsable {
}
export interface DlpSensitiveInformationTypeCmdletRecord extends AuditData, Parsable {
}
export interface DlpSensitiveInformationTypeRulePackageCmdletRecord extends AuditData, Parsable {
}
export interface DnsEvidence extends AlertEvidence, Parsable {
    /**
     * The dnsServerIp property
     */
    dnsServerIp?: IpEvidence | null;
    /**
     * The domainName property
     */
    domainName?: string | null;
    /**
     * The hostIpAddress property
     */
    hostIpAddress?: IpEvidence | null;
    /**
     * The ipAddresses property
     */
    ipAddresses?: IpEvidence[] | null;
}
export type DocumentVersion = (typeof DocumentVersionObject)[keyof typeof DocumentVersionObject];
export interface DownloadCertificateRecord extends AuditData, Parsable {
}
export interface Dynamics365BusinessCentralAuditRecord extends AuditData, Parsable {
}
export interface EdiscoveryAddToReviewSetOperation extends CaseOperation, Parsable {
    /**
     * The additionalDataOptions property
     */
    additionalDataOptions?: AdditionalDataOptions[] | null;
    /**
     * The cloudAttachmentVersion property
     */
    cloudAttachmentVersion?: CloudAttachmentVersion | null;
    /**
     * The documentVersion property
     */
    documentVersion?: DocumentVersion | null;
    /**
     * The itemsToInclude property
     */
    itemsToInclude?: ItemsToInclude[] | null;
    /**
     * eDiscovery review set to which items matching source collection query gets added.
     */
    reviewSet?: EdiscoveryReviewSet | null;
    /**
     * eDiscovery search that gets added to review set.
     */
    search?: EdiscoverySearch | null;
}
export interface EdiscoveryCase extends CaseEscaped, Parsable {
    /**
     * The user who closed the case.
     */
    closedBy?: IdentitySet | null;
    /**
     * The date and time when the case was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z
     */
    closedDateTime?: Date | null;
    /**
     * Returns a list of case ediscoveryCustodian objects for this case.
     */
    custodians?: EdiscoveryCustodian[] | null;
    /**
     * The external case number for customer reference.
     */
    externalId?: string | null;
    /**
     * Returns a list of case ediscoveryNoncustodialDataSource objects for this case.
     */
    noncustodialDataSources?: EdiscoveryNoncustodialDataSource[] | null;
    /**
     * Returns a list of case caseOperation objects for this case.
     */
    operations?: CaseOperation[] | null;
    /**
     * Returns a list of eDiscoveryReviewSet objects in the case.
     */
    reviewSets?: EdiscoveryReviewSet[] | null;
    /**
     * Returns a list of eDiscoverySearch objects associated with this case.
     */
    searches?: EdiscoverySearch[] | null;
    /**
     * Returns a list of eDIscoverySettings objects in the case.
     */
    settings?: EdiscoveryCaseSettings | null;
    /**
     * Returns a list of ediscoveryReviewTag objects associated to this case.
     */
    tags?: EdiscoveryReviewTag[] | null;
}
export interface EdiscoveryCaseCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryCase[] | null;
}
export interface EdiscoveryCaseSettings extends Entity, Parsable {
    /**
     * The OCR (Optical Character Recognition) settings for the case.
     */
    ocr?: OcrSettings | null;
    /**
     * The redundancy (near duplicate and email threading) detection settings for the case.
     */
    redundancyDetection?: RedundancyDetectionSettings | null;
    /**
     * The Topic Modeling (Themes) settings for the case.
     */
    topicModeling?: TopicModelingSettings | null;
}
export interface EdiscoveryCustodian extends DataSourceContainer, Parsable {
    /**
     * Date and time the custodian acknowledged a hold notification.
     */
    acknowledgedDateTime?: Date | null;
    /**
     * Email address of the custodian.
     */
    email?: string | null;
    /**
     * Operation entity that represents the latest indexing for the custodian.
     */
    lastIndexOperation?: EdiscoveryIndexOperation | null;
    /**
     * Data source entity for SharePoint sites associated with the custodian.
     */
    siteSources?: SiteSource[] | null;
    /**
     * Data source entity for groups associated with the custodian.
     */
    unifiedGroupSources?: UnifiedGroupSource[] | null;
    /**
     * Data source entity for a the custodian. This is the container for a custodian's mailbox and OneDrive for Business site.
     */
    userSources?: UserSource[] | null;
}
export interface EdiscoveryCustodianCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryCustodian[] | null;
}
export interface EdiscoveryEstimateOperation extends CaseOperation, Parsable {
    /**
     * The estimated count of items for the search that matched the content query.
     */
    indexedItemCount?: number | null;
    /**
     * The estimated size of items for the search that matched the content query.
     */
    indexedItemsSize?: number | null;
    /**
     * The number of mailboxes that had search hits.
     */
    mailboxCount?: number | null;
    /**
     * eDiscovery search.
     */
    search?: EdiscoverySearch | null;
    /**
     * The number of mailboxes that had search hits.
     */
    siteCount?: number | null;
    /**
     * The statisticsOptions property
     */
    statisticsOptions?: StatisticsOptions[] | null;
    /**
     * The estimated count of unindexed items for the collection.
     */
    unindexedItemCount?: number | null;
    /**
     * The estimated size of unindexed items for the collection.
     */
    unindexedItemsSize?: number | null;
}
export interface EdiscoveryExportOperation extends CaseOperation, Parsable {
    /**
     * The description provided for the export.
     */
    description?: string | null;
    /**
     * Contains the properties for an export file metadata, including downloadUrl, fileName, and size.
     */
    exportFileMetadata?: ExportFileMetadata[] | null;
    /**
     * The options provided for the export. For more information, see reviewSet: export. Possible values are: originalFiles, text, pdfReplacement,  tags.
     */
    exportOptions?: ExportOptions[] | null;
    /**
     * The options that specify the structure of the export. For more information, see reviewSet: export. Possible values are: none, directory, pst.
     */
    exportStructure?: ExportFileStructure | null;
    /**
     * The name provided for the export.
     */
    outputName?: string | null;
    /**
     * Review set from where documents are exported.
     */
    reviewSet?: EdiscoveryReviewSet | null;
    /**
     * The review set query that is used to filter the documents for export.
     */
    reviewSetQuery?: EdiscoveryReviewSetQuery | null;
}
export interface EdiscoveryHoldOperation extends CaseOperation, Parsable {
}
export interface EdiscoveryIndexOperation extends CaseOperation, Parsable {
}
export interface EdiscoveryNoncustodialDataSource extends DataSourceContainer, Parsable {
    /**
     * User source or SharePoint site data source as noncustodial data source.
     */
    dataSource?: DataSource | null;
    /**
     * Operation entity that represents the latest indexing for the noncustodial data source.
     */
    lastIndexOperation?: EdiscoveryIndexOperation | null;
}
export interface EdiscoveryNoncustodialDataSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryNoncustodialDataSource[] | null;
}
export interface EdiscoveryPurgeDataOperation extends CaseOperation, Parsable {
}
export interface EdiscoveryReviewSet extends DataSet, Parsable {
    /**
     * Represents queries within the review set.
     */
    queries?: EdiscoveryReviewSetQuery[] | null;
}
export interface EdiscoveryReviewSetCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryReviewSet[] | null;
}
export interface EdiscoveryReviewSetQuery extends Parsable, Search {
}
export interface EdiscoveryReviewSetQueryCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryReviewSetQuery[] | null;
}
export interface EdiscoveryReviewTag extends Parsable, Tag {
    /**
     * Indicates whether a single or multiple child tags can be associated with a document. Possible values are: One, Many.  This value controls whether the UX presents the tags as checkboxes or a radio button group.
     */
    childSelectability?: ChildSelectability | null;
    /**
     * Returns the tags that are a child of a tag.
     */
    childTags?: EdiscoveryReviewTag[] | null;
    /**
     * Returns the parent tag of the specified tag.
     */
    parent?: EdiscoveryReviewTag | null;
}
export interface EdiscoveryReviewTagCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoveryReviewTag[] | null;
}
export interface EdiscoverySearch extends Parsable, Search {
    /**
     * Adds an additional source to the eDiscovery search.
     */
    additionalSources?: DataSource[] | null;
    /**
     * Adds the results of the eDiscovery search to the specified reviewSet.
     */
    addToReviewSetOperation?: EdiscoveryAddToReviewSetOperation | null;
    /**
     * Custodian sources that are included in the eDiscovery search.
     */
    custodianSources?: DataSource[] | null;
    /**
     * When specified, the collection spans across a service for an entire workload. Possible values are: none, allTenantMailboxes, allTenantSites, allCaseCustodians, allCaseNoncustodialDataSources.
     */
    dataSourceScopes?: DataSourceScopes[] | null;
    /**
     * The last estimate operation associated with the eDiscovery search.
     */
    lastEstimateStatisticsOperation?: EdiscoveryEstimateOperation | null;
    /**
     * noncustodialDataSource sources that are included in the eDiscovery search
     */
    noncustodialSources?: EdiscoveryNoncustodialDataSource[] | null;
}
export interface EdiscoverySearchCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: EdiscoverySearch[] | null;
}
export interface EdiscoverySearchExportOperation extends CaseOperation, Parsable {
    /**
     * The additional items to include in the export. The possible values are: none, teamsAndYammerConversations, cloudAttachments, allDocumentVersions, subfolderContents, listAttachments, unknownFutureValue.
     */
    additionalOptions?: AdditionalOptions[] | null;
    /**
     * The cloudAttachmentVersion property
     */
    cloudAttachmentVersion?: CloudAttachmentVersion | null;
    /**
     * The description of the export by the user.
     */
    description?: string | null;
    /**
     * The name of export provided by the user.
     */
    displayName?: string | null;
    /**
     * The documentVersion property
     */
    documentVersion?: DocumentVersion | null;
    /**
     * Items to be included in the export. The possible values are: searchHits, partiallyIndexed, unknownFutureValue.
     */
    exportCriteria?: ExportCriteria[] | null;
    /**
     * Contains the properties for an export file metadata, including downloadUrl, fileName, and size.
     */
    exportFileMetadata?: ExportFileMetadata[] | null;
    /**
     * Format of the emails of the export. The possible values are: pst, msg, eml, unknownFutureValue.
     */
    exportFormat?: ExportFormat | null;
    /**
     * Location scope for partially indexed items. You can choose to include partially indexed items only in responsive locations with search hits or in all targeted locations. The possible values are: responsiveLocations, nonresponsiveLocations, unknownFutureValue.
     */
    exportLocation?: ExportLocation[] | null;
    /**
     * Indicates whether to export single items.
     */
    exportSingleItems?: boolean | null;
    /**
     * The eDiscovery searches under each case.
     */
    search?: EdiscoverySearch | null;
}
export interface EdiscoveryTagOperation extends CaseOperation, Parsable {
}
export interface EmailSender extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the sender.
     */
    displayName?: string | null;
    /**
     * Sender domain.
     */
    domainName?: string | null;
    /**
     * Sender email address.
     */
    emailAddress?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface EnableConsentRecord extends AuditData, Parsable {
}
export interface EpicSMSLinkRecord extends AuditData, Parsable {
}
export interface EpicSMSSettingsUpdateRecord extends AuditData, Parsable {
}
export interface EpicSMSUnlinkRecord extends AuditData, Parsable {
}
export interface EventPropagationResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the specific location in the workload associated with the event.
     */
    location?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The name of the workload associated with the event.
     */
    serviceName?: string | null;
    /**
     * Indicates the status of the event creation request. The possible values are: none, inProcessing, failed, success, unknownFutureValue.
     */
    status?: EventPropagationStatus | null;
    /**
     * Additional information about the status of the event creation request.
     */
    statusInformation?: string | null;
}
export type EventPropagationStatus = (typeof EventPropagationStatusObject)[keyof typeof EventPropagationStatusObject];
export interface EventQuery extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Represents unique identification for the  query. 'Asset ID' for SharePoint Online and OneDrive for Business, 'keywords' for Exchange Online.
     */
    query?: string | null;
    /**
     * Represents the type of query associated with an event. 'files' for SPO and ODB and 'messages' for EXO.The possible values are: files, messages, unknownFutureValue.
     */
    queryType?: QueryType | null;
}
export type EventStatusType = (typeof EventStatusTypeObject)[keyof typeof EventStatusTypeObject];
export type EvidenceRemediationStatus = (typeof EvidenceRemediationStatusObject)[keyof typeof EvidenceRemediationStatusObject];
export type EvidenceRole = (typeof EvidenceRoleObject)[keyof typeof EvidenceRoleObject];
export type EvidenceVerdict = (typeof EvidenceVerdictObject)[keyof typeof EvidenceVerdictObject];
export interface ExchangeAdminAuditRecord extends AuditData, Parsable {
}
export interface ExchangeAggregatedMailboxAuditRecord extends AuditData, Parsable {
}
export interface ExchangeAggregatedOperationRecord extends AuditData, Parsable {
}
export interface ExchangeMailboxAuditBaseRecord extends AuditData, Parsable {
}
export interface ExchangeMailboxAuditGroupRecord extends AuditData, Parsable {
}
export interface ExchangeMailboxAuditRecord extends AuditData, Parsable {
}
export type ExportCriteria = (typeof ExportCriteriaObject)[keyof typeof ExportCriteriaObject];
export interface ExportFileMetadata extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The downloadUrl property
     */
    downloadUrl?: string | null;
    /**
     * The fileName property
     */
    fileName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The size property
     */
    size?: number | null;
}
export type ExportFileStructure = (typeof ExportFileStructureObject)[keyof typeof ExportFileStructureObject];
export type ExportFormat = (typeof ExportFormatObject)[keyof typeof ExportFormatObject];
export type ExportLocation = (typeof ExportLocationObject)[keyof typeof ExportLocationObject];
export type ExportOptions = (typeof ExportOptionsObject)[keyof typeof ExportOptionsObject];
export interface FhirBaseUrlAddRecord extends AuditData, Parsable {
}
export interface FhirBaseUrlApproveRecord extends AuditData, Parsable {
}
export interface FhirBaseUrlDeleteRecord extends AuditData, Parsable {
}
export interface FhirBaseUrlUpdateRecord extends AuditData, Parsable {
}
export interface FileDetails extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the file.
     */
    fileName?: string | null;
    /**
     * The file path (location) of the file instance.
     */
    filePath?: string | null;
    /**
     * The publisher of the file.
     */
    filePublisher?: string | null;
    /**
     * The size of the file in bytes.
     */
    fileSize?: number | null;
    /**
     * The certificate authority (CA) that issued the certificate.
     */
    issuer?: string | null;
    /**
     * The Md5 cryptographic hash of the file content.
     */
    md5?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The Sha1 cryptographic hash of the file content.
     */
    sha1?: string | null;
    /**
     * The Sha256 cryptographic hash of the file content.
     */
    sha256?: string | null;
    /**
     * The sha256Ac property
     */
    sha256Ac?: string | null;
    /**
     * The signer of the signed file.
     */
    signer?: string | null;
}
export interface FileEvidence extends AlertEvidence, Parsable {
    /**
     * The status of the detection.The possible values are: detected, blocked, prevented, unknownFutureValue.
     */
    detectionStatus?: DetectionStatus | null;
    /**
     * The file details.
     */
    fileDetails?: FileDetails | null;
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
}
export interface FileHash extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The algorithm property
     */
    algorithm?: FileHashAlgorithm | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The hash value.
     */
    value?: string | null;
}
export type FileHashAlgorithm = (typeof FileHashAlgorithmObject)[keyof typeof FileHashAlgorithmObject];
export interface FileHashEvidence extends AlertEvidence, Parsable {
    /**
     * The algorithm property
     */
    algorithm?: FileHashAlgorithm | null;
    /**
     * The value property
     */
    value?: string | null;
}
export interface FilePlanAppliedCategory extends FilePlanDescriptorBase, Parsable {
    /**
     * Represents the file plan descriptor for a subcategory under a specific category, which has been assigned to a particular retention label.
     */
    subcategory?: FilePlanSubcategory | null;
}
export interface FilePlanAuthority extends FilePlanDescriptorBase, Parsable {
}
export interface FilePlanCitation extends FilePlanDescriptorBase, Parsable {
    /**
     * Represents the jurisdiction or agency that published the filePlanCitation.
     */
    citationJurisdiction?: string | null;
    /**
     * Represents the URL to the published filePlanCitation.
     */
    citationUrl?: string | null;
}
export interface FilePlanDepartment extends FilePlanDescriptorBase, Parsable {
}
export interface FilePlanDescriptor extends Entity, Parsable {
    /**
     * Represents the file plan descriptor of type authority applied to a particular retention label.
     */
    authority?: FilePlanAuthority | null;
    /**
     * Specifies the underlying authority that describes the type of content to be retained and its retention schedule.
     */
    authorityTemplate?: AuthorityTemplate | null;
    /**
     * The category property
     */
    category?: FilePlanAppliedCategory | null;
    /**
     * Specifies a group of similar types of content in a particular department.
     */
    categoryTemplate?: CategoryTemplate | null;
    /**
     * Represents the file plan descriptor of type citation applied to a particular retention label.
     */
    citation?: FilePlanCitation | null;
    /**
     * The specific rule or regulation created by a jurisdiction used to determine whether certain labels and content should be retained or deleted.
     */
    citationTemplate?: CitationTemplate | null;
    /**
     * Represents the file plan descriptor of type department applied to a particular retention label.
     */
    department?: FilePlanDepartment | null;
    /**
     * Specifies the  department or business unit of an organization to which a label belongs.
     */
    departmentTemplate?: DepartmentTemplate | null;
    /**
     * Represents the file plan descriptor of type filePlanReference applied to a particular retention label.
     */
    filePlanReference?: FilePlanReference | null;
    /**
     * Specifies a unique alpha-numeric identifier for an organization’s retention schedule.
     */
    filePlanReferenceTemplate?: FilePlanReferenceTemplate | null;
}
export interface FilePlanDescriptorBase extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Unique string that defines the name for the file plan descriptor associated with a particular retention label.
     */
    displayName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface FilePlanDescriptorTemplate extends Entity, Parsable {
    /**
     * Represents the user who created the filePlanDescriptorTemplate column.
     */
    createdBy?: IdentitySet | null;
    /**
     * Represents the date and time in which the filePlanDescriptorTemplate is created.
     */
    createdDateTime?: Date | null;
    /**
     * Unique string that defines a filePlanDescriptorTemplate name.
     */
    displayName?: string | null;
}
export interface FilePlanReference extends FilePlanDescriptorBase, Parsable {
}
export interface FilePlanReferenceTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface FilePlanReferenceTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: FilePlanReferenceTemplate[] | null;
}
export interface FilePlanSubcategory extends FilePlanDescriptorBase, Parsable {
}
export interface FormattedContent extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The content of this formattedContent.
     */
    content?: string | null;
    /**
     * The format of the content. The possible values are: text, html, markdown, unknownFutureValue.
     */
    format?: ContentFormat | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface GeoLocation extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The city property
     */
    city?: string | null;
    /**
     * The countryName property
     */
    countryName?: string | null;
    /**
     * The latitude property
     */
    latitude?: number | null;
    /**
     * The longitude property
     */
    longitude?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The state property
     */
    state?: string | null;
}
export interface GitHubOrganizationEvidence extends AlertEvidence, Parsable {
    /**
     * The company property
     */
    company?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The login property
     */
    login?: string | null;
    /**
     * The orgId property
     */
    orgId?: string | null;
    /**
     * The webUrl property
     */
    webUrl?: string | null;
}
export interface GitHubRepoEvidence extends AlertEvidence, Parsable {
    /**
     * The baseUrl property
     */
    baseUrl?: string | null;
    /**
     * The login property
     */
    login?: string | null;
    /**
     * The owner property
     */
    owner?: string | null;
    /**
     * The ownerType property
     */
    ownerType?: string | null;
    /**
     * The repoId property
     */
    repoId?: string | null;
}
export interface GitHubUserEvidence extends AlertEvidence, Parsable {
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The login property
     */
    login?: string | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The userId property
     */
    userId?: string | null;
    /**
     * The webUrl property
     */
    webUrl?: string | null;
}
export type GoogleCloudLocationType = (typeof GoogleCloudLocationTypeObject)[keyof typeof GoogleCloudLocationTypeObject];
export interface GoogleCloudResourceEvidence extends AlertEvidence, Parsable {
    /**
     * The fullResourceName property
     */
    fullResourceName?: string | null;
    /**
     * The zone or region where the resource is located.
     */
    location?: string | null;
    /**
     * The type of location. Possible values are: unknown, regional, zonal, global, unknownFutureValue.
     */
    locationType?: GoogleCloudLocationType | null;
    /**
     * The Google project ID as defined by the user.
     */
    projectId?: string | null;
    /**
     * The project number assigned by Google.
     */
    projectNumber?: number | null;
    /**
     * The name of the resource.
     */
    resourceName?: string | null;
    /**
     * The type of the resource.
     */
    resourceType?: string | null;
}
export interface HealthcareSignalRecord extends AuditData, Parsable {
}
export interface HealthIssue extends Entity, Parsable {
    /**
     * Contains additional information about the issue, such as a list of items to fix.
     */
    additionalInformation?: string[] | null;
    /**
     * The date and time when the health issue was generated. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * Contains more detailed information about the health issue.
     */
    description?: string | null;
    /**
     * The display name of the health issue.
     */
    displayName?: string | null;
    /**
     * A list of the fully qualified domain names of the domains or the sensors the health issue is related to.
     */
    domainNames?: string[] | null;
    /**
     * The type of the health issue. The possible values are: sensor, global, unknownFutureValue. For a list of all health issues and their identifiers, see Microsoft Defender for Identity health issues.
     */
    healthIssueType?: HealthIssueType | null;
    /**
     * The type identifier of the health issue. For a list of all health issues and their identifiers, see Microsoft Defender for Identity health issues.
     */
    issueTypeId?: string | null;
    /**
     * The date and time when the health issue was last updated. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * A list of recommended actions that can be taken to resolve the issue effectively and efficiently. These actions might include instructions for further investigation and aren't limited to prewritten responses.
     */
    recommendations?: string[] | null;
    /**
     * A list of commands from the PowerShell module for the product that can be used to resolve the issue, if available. If no commands can be used to solve the issue, this property is empty. The commands, if present, provide a quick and efficient way to address the issue. These commands run in sequence for the single recommended fix.
     */
    recommendedActionCommands?: string[] | null;
    /**
     * A list of the DNS names of the sensors the health issue is related to.
     */
    sensorDNSNames?: string[] | null;
    /**
     * The severity of the health issue. The possible values are: low, medium, high, unknownFutureValue.
     */
    severity?: HealthIssueSeverity | null;
    /**
     * The status of the health issue. The possible values are: open, closed, suppressed, unknownFutureValue.
     */
    status?: HealthIssueStatus | null;
}
export interface HealthIssueCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HealthIssue[] | null;
}
export type HealthIssueSeverity = (typeof HealthIssueSeverityObject)[keyof typeof HealthIssueSeverityObject];
export type HealthIssueStatus = (typeof HealthIssueStatusObject)[keyof typeof HealthIssueStatusObject];
export type HealthIssueType = (typeof HealthIssueTypeObject)[keyof typeof HealthIssueTypeObject];
export interface Host extends Artifact, Parsable {
    /**
     * The hostPairs that are resources associated with a host, where that host is the parentHost and has an outgoing pairing to a childHost.
     */
    childHostPairs?: HostPair[] | null;
    /**
     * The hostComponents that are associated with this host.
     */
    components?: HostComponent[] | null;
    /**
     * The hostCookies that are associated with this host.
     */
    cookies?: HostCookie[] | null;
    /**
     * The first date and time when this host was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The hostPairs that are associated with this host, where this host is either the parentHost or childHost.
     */
    hostPairs?: HostPair[] | null;
    /**
     * The most recent date and time when this host was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The hostPairs that are associated with a host, where that host is the childHost and has an incoming pairing with a parentHost.
     */
    parentHostPairs?: HostPair[] | null;
    /**
     * Passive DNS retrieval about this host.
     */
    passiveDns?: PassiveDnsRecord[] | null;
    /**
     * Reverse passive DNS retrieval about this host.
     */
    passiveDnsReverse?: PassiveDnsRecord[] | null;
    /**
     * The hostPorts associated with a host.
     */
    ports?: HostPort[] | null;
    /**
     * Represents a calculated reputation of this host.
     */
    reputation?: HostReputation | null;
    /**
     * The hostSslCertificates that are associated with this host.
     */
    sslCertificates?: HostSslCertificate[] | null;
    /**
     * The subdomains that are associated with this host.
     */
    subdomains?: Subdomain[] | null;
    /**
     * The hostTrackers that are associated with this host.
     */
    trackers?: HostTracker[] | null;
    /**
     * The most recent whoisRecord for this host.
     */
    whois?: WhoisRecord | null;
}
export interface HostCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Host[] | null;
}
export interface HostComponent extends Artifact, Parsable {
    /**
     * The type of component that was detected (for example, Operating System, Framework, Remote Access, or Server).
     */
    category?: string | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed this web component. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The most recent date and time when Microsoft Defender Threat Intelligence observed this web component. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * A name running on the artifact, for example, Microsoft IIS.
     */
    name?: string | null;
    /**
     * The component version running on the artifact, for example, v8.5. This shouldn't be assumed to be strictly numerical.
     */
    version?: string | null;
}
export interface HostComponentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostComponent[] | null;
}
export interface HostCookie extends Artifact, Parsable {
    /**
     * The URI for which the cookie is valid.
     */
    domain?: string | null;
    /**
     * The first date and time when this hostCookie was observed by Microsoft Defender Threat Intelligence. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The most recent date and time when this hostCookie was observed by Microsoft Defender Threat Intelligence. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The name of the cookie, for example, JSESSIONID or SEARCH_NAMESITE.
     */
    name?: string | null;
}
export interface HostCookieCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostCookie[] | null;
}
export interface HostedRpaAuditRecord extends AuditData, Parsable {
}
export interface HostLogonSessionEvidence extends AlertEvidence, Parsable {
    /**
     * The account property
     */
    account?: UserEvidence | null;
    /**
     * The endUtcDateTime property
     */
    endUtcDateTime?: Date | null;
    /**
     * The host property
     */
    host?: DeviceEvidence | null;
    /**
     * The sessionId property
     */
    sessionId?: string | null;
    /**
     * The startUtcDateTime property
     */
    startUtcDateTime?: Date | null;
}
export interface Hostname extends Host, Parsable {
    /**
     * The company or individual who registered this hostname, from WHOIS data.
     */
    registrant?: string | null;
    /**
     * The registrar for this hostname, from WHOIS data.
     */
    registrar?: string | null;
}
export interface HostPair extends Entity, Parsable {
    /**
     * The childHost property
     */
    childHost?: Host | null;
    /**
     * The date and time when Microsoft Defender Threat Intelligence first observed the hostPair. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The date and time when Microsoft Defender Threat Intelligence last observed the hostPair. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The reason that two hosts are identified as hostPair.
     */
    linkKind?: string | null;
    /**
     * The parentHost property
     */
    parentHost?: Host | null;
}
export interface HostPairCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostPair[] | null;
}
export interface HostPort extends Entity, Parsable {
    /**
     * The hostPortBanners retrieved from scanning the port.
     */
    banners?: HostPortBanner[] | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the hostPort. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence scanned the hostPort. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastScanDateTime?: Date | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence observed the hostPort. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The most recent sslCertificate used to communicate on the port.
     */
    mostRecentSslCertificate?: SslCertificate | null;
    /**
     * The numerical identifier of the port which is standardized across the internet.
     */
    port?: number | null;
    /**
     * The general protocol used to scan the port. The possible values are: tcp, udp, unknownFutureValue.
     */
    protocol?: HostPortProtocol | null;
    /**
     * The hostPortComponents retrieved from scanning the port.
     */
    services?: HostPortComponent[] | null;
    /**
     * The status of the port. The possible values are: open, filtered, closed, unknownFutureValue.
     */
    status?: HostPortStatus | null;
    /**
     * The total amount of times that Microsoft Defender Threat Intelligence has observed the hostPort in all its scans.
     */
    timesObserved?: number | null;
}
export interface HostPortBanner extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The text response received from a web component when scanning a hostPort.
     */
    banner?: string | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the hostPortBanner. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence observed the hostPortBanner. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The specific protocol used to scan the hostPort.
     */
    scanProtocol?: string | null;
    /**
     * The total amount of times that Microsoft Defender Threat Intelligence has observed the hostPortBanner in all its scans.
     */
    timesObserved?: number | null;
}
export interface HostPortCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostPort[] | null;
}
export interface HostPortComponent extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The component property
     */
    component?: HostComponent | null;
    /**
     * The first date and time when Microsoft Defender Threat Intelligence observed the hostPortComponent. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * Indicates whether this hostPortComponent is recent, which is determined by whether the hostPortComponent was observed either at the same time or after the latest hostPortBanner in the scan history, or within two days of the latest scan of the hostPort when there are no hostPortBanners in the scan history.
     */
    isRecent?: boolean | null;
    /**
     * The last date and time when Microsoft Defender Threat Intelligence observed the hostPortComponent. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type HostPortProtocol = (typeof HostPortProtocolObject)[keyof typeof HostPortProtocolObject];
export type HostPortStatus = (typeof HostPortStatusObject)[keyof typeof HostPortStatusObject];
export interface HostReputation extends Entity, Parsable {
    /**
     * The classification property
     */
    classification?: HostReputationClassification | null;
    /**
     * A collection of rules that have been used to calculate the classification and score.
     */
    rules?: HostReputationRule[] | null;
    /**
     * The calculated score (0-100) of the requested host. A higher value indicates that this host is more likely to be suspicious or malicious.
     */
    score?: number | null;
}
export type HostReputationClassification = (typeof HostReputationClassificationObject)[keyof typeof HostReputationClassificationObject];
export interface HostReputationRule extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The description of the rule that gives more context.
     */
    description?: string | null;
    /**
     * The name of the rule.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Link to a web page with details related to this rule.
     */
    relatedDetailsUrl?: string | null;
    /**
     * The severity property
     */
    severity?: HostReputationRuleSeverity | null;
}
export type HostReputationRuleSeverity = (typeof HostReputationRuleSeverityObject)[keyof typeof HostReputationRuleSeverityObject];
export interface HostSslCertificate extends Artifact, Parsable {
    /**
     * The first date and time when this hostSslCertificate was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host for this hostSslCertificate.
     */
    host?: Host | null;
    /**
     * The most recent date and time when this hostSslCertificate was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The ports related with this hostSslCertificate.
     */
    ports?: HostSslCertificatePort[] | null;
    /**
     * The sslCertificate for this hostSslCertificate.
     */
    sslCertificate?: SslCertificate | null;
}
export interface HostSslCertificateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostSslCertificate[] | null;
}
export interface HostSslCertificatePort extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The first date and time when this port was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The most recent date and time when this port was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The port number.
     */
    port?: number | null;
}
export interface HostTracker extends Artifact, Parsable {
    /**
     * The first date and time when this hostTracker was observed by Microsoft Defender Threat Intelligence. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The kind of hostTracker that was detected. For example, GoogleAnalyticsID or JarmHash.
     */
    kind?: string | null;
    /**
     * The most recent date and time when this hostTracker was observed by Microsoft Defender Threat Intelligence. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The identification value for the hostTracker.
     */
    value?: string | null;
}
export interface HostTrackerCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: HostTracker[] | null;
}
export interface HrSignalAuditRecord extends AuditData, Parsable {
}
export interface HuntingQueryResults extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The results of the hunting query.
     */
    results?: HuntingRowResult[] | null;
    /**
     * The schema for the response.
     */
    schema?: SinglePropertySchema[] | null;
}
export interface HuntingRowResult extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface HygieneEventRecord extends AuditData, Parsable {
}
export interface Hyperlink extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name for this hyperlink.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The URL for this hyperlink.
     */
    url?: string | null;
}
export interface IdentityContainer extends Entity, Parsable {
    /**
     * Represents potential issues identified by Microsoft Defender for Identity within a customer's Microsoft Defender for Identity configuration.
     */
    healthIssues?: HealthIssue[] | null;
    /**
     * Represents a customer's Microsoft Defender for Identity sensors.
     */
    sensors?: Sensor[] | null;
}
export interface Incident extends Entity, Parsable {
    /**
     * The list of related alerts. Supports $expand.
     */
    alerts?: Alert[] | null;
    /**
     * Owner of the incident, or null if no owner is assigned. Free editable text.
     */
    assignedTo?: string | null;
    /**
     * The specification for the incident. Possible values are: unknown, falsePositive, truePositive, informationalExpectedActivity, unknownFutureValue.
     */
    classification?: AlertClassification | null;
    /**
     * Array of comments created by the Security Operations (SecOps) team when the incident is managed.
     */
    comments?: AlertComment[] | null;
    /**
     * Time when the incident was first created.
     */
    createdDateTime?: Date | null;
    /**
     * Array of custom tags associated with an incident.
     */
    customTags?: string[] | null;
    /**
     * Description of the incident.
     */
    description?: string | null;
    /**
     * Specifies the determination of the incident. Possible values are: unknown, apt, malware, securityPersonnel, securityTesting, unwantedSoftware, other, multiStagedAttack, compromisedUser, phishing, maliciousUserActivity, clean, insufficientData, confirmedUserActivity, lineOfBusinessApplication, unknownFutureValue.
     */
    determination?: AlertDetermination | null;
    /**
     * The incident name.
     */
    displayName?: string | null;
    /**
     * The URL for the incident page in the Microsoft 365 Defender portal.
     */
    incidentWebUrl?: string | null;
    /**
     * The identity that last modified the incident.
     */
    lastModifiedBy?: string | null;
    /**
     * Time when the incident was last updated.
     */
    lastUpdateDateTime?: Date | null;
    /**
     * Only populated in case an incident is grouped with another incident, as part of the logic that processes incidents. In such a case, the status property is redirected.
     */
    redirectIncidentId?: string | null;
    /**
     * User input that explains the resolution of the incident and the classification choice. This property contains free editable text.
     */
    resolvingComment?: string | null;
    /**
     * The severity property
     */
    severity?: AlertSeverity | null;
    /**
     * The status property
     */
    status?: IncidentStatus | null;
    /**
     * The overview of an attack. When applicable, the summary contains details of what occurred, impacted assets, and the type of attack.
     */
    summary?: string | null;
    /**
     * The system tags associated with the incident.
     */
    systemTags?: string[] | null;
    /**
     * The Microsoft Entra tenant in which the alert was created.
     */
    tenantId?: string | null;
}
export interface IncidentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Incident[] | null;
}
export type IncidentStatus = (typeof IncidentStatusObject)[keyof typeof IncidentStatusObject];
export interface Indicator extends Entity, Parsable {
    /**
     * The artifact property
     */
    artifact?: Artifact | null;
    /**
     * The source property
     */
    source?: IndicatorSource | null;
}
export type IndicatorSource = (typeof IndicatorSourceObject)[keyof typeof IndicatorSourceObject];
export interface InformationBarrierPolicyApplicationAuditRecord extends AuditData, Parsable {
}
export interface InformationWorkerProtectionAuditRecord extends AuditData, Parsable {
}
export interface InsiderRiskScopedUserInsightsRecord extends AuditData, Parsable {
}
export interface InsiderRiskScopedUsersRecord extends AuditData, Parsable {
}
export interface IntelligenceProfile extends Entity, Parsable {
    /**
     * A list of commonly-known aliases for the threat intelligence included in the intelligenceProfile.
     */
    aliases?: string[] | null;
    /**
     * The country/region of origin for the given actor or threat associated with this intelligenceProfile.
     */
    countriesOrRegionsOfOrigin?: IntelligenceProfileCountryOrRegionOfOrigin[] | null;
    /**
     * The description property
     */
    description?: FormattedContent | null;
    /**
     * The date and time when this intelligenceProfile was first active. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstActiveDateTime?: Date | null;
    /**
     * Includes an assemblage of high-fidelity network indicators of compromise.
     */
    indicators?: IntelligenceProfileIndicator[] | null;
    /**
     * The kind property
     */
    kind?: IntelligenceProfileKind | null;
    /**
     * The summary property
     */
    summary?: FormattedContent | null;
    /**
     * Known targets related to this intelligenceProfile.
     */
    targets?: string[] | null;
    /**
     * The title of this intelligenceProfile.
     */
    title?: string | null;
    /**
     * Formatted information featuring a description of the distinctive tactics, techniques, and procedures (TTP) of the group, followed by a list of all known custom, commodity, and publicly available implants used by the group.
     */
    tradecraft?: FormattedContent | null;
}
export interface IntelligenceProfileCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: IntelligenceProfile[] | null;
}
export interface IntelligenceProfileCountryOrRegionOfOrigin extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * A codified representation for this country/region of origin.
     */
    code?: string | null;
    /**
     * A display label for this ountry/region of origin.
     */
    label?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface IntelligenceProfileIndicator extends Indicator, Parsable {
    /**
     * Designate when an artifact was first used actively in an attack, when a particular sample was compiled, or if neither of those could be ascertained when the file was first seen in public repositories (for example, VirusTotal, ANY.RUN, Hybrid Analysis) or reported publicly.
     */
    firstSeenDateTime?: Date | null;
    /**
     * Designate when an artifact was most recently used actively in an attack, when a particular sample was compiled, or if neither of those could be ascertained when the file was first seen in public repositories (for example, VirusTotal, ANY.RUN, Hybrid Analysis) or reported publicly.
     */
    lastSeenDateTime?: Date | null;
}
export interface IntelligenceProfileIndicatorCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: IntelligenceProfileIndicator[] | null;
}
export type IntelligenceProfileKind = (typeof IntelligenceProfileKindObject)[keyof typeof IntelligenceProfileKindObject];
export interface IoTDeviceEvidence extends AlertEvidence, Parsable {
    /**
     * The device ID.
     */
    deviceId?: string | null;
    /**
     * The friendly name of the device.
     */
    deviceName?: string | null;
    /**
     * The URL to the device page in the IoT Defender portal.
     */
    devicePageLink?: string | null;
    /**
     * The device subtype.
     */
    deviceSubType?: string | null;
    /**
     * The type of the device. For example, 'temperature sensor,' 'freezer,' 'wind turbine,' and so on.
     */
    deviceType?: string | null;
    /**
     * The importance level for the IoT device. Possible values are low, normal, high, and unknownFutureValue.
     */
    importance?: IoTDeviceImportanceType | null;
    /**
     * The azureResourceEvidence entity that represents the IoT Hub that the device belongs to.
     */
    ioTHub?: AzureResourceEvidence | null;
    /**
     * The ID of the Azure Security Center for the IoT agent that is running on the device.
     */
    ioTSecurityAgentId?: string | null;
    /**
     * The current IP address of the device.
     */
    ipAddress?: IpEvidence | null;
    /**
     * Indicates whether the device classified as an authorized device.
     */
    isAuthorized?: boolean | null;
    /**
     * Indicates whether the device classified as a programming device.
     */
    isProgramming?: boolean | null;
    /**
     * Indicates whether the device classified as a scanner.
     */
    isScanner?: boolean | null;
    /**
     * The MAC address of the device.
     */
    macAddress?: string | null;
    /**
     * The manufacturer of the device.
     */
    manufacturer?: string | null;
    /**
     * The model of the device.
     */
    model?: string | null;
    /**
     * The current network interface controllers on the device.
     */
    nics?: NicEvidence[] | null;
    /**
     * The operating system the device is running.
     */
    operatingSystem?: string | null;
    /**
     * The owners for the device.
     */
    owners?: string[] | null;
    /**
     * The list of protocols that the device supports.
     */
    protocols?: string[] | null;
    /**
     * The Purdue Layer of the device.
     */
    purdueLayer?: string | null;
    /**
     * The sensor that monitors the device.
     */
    sensor?: string | null;
    /**
     * The serial number of the device.
     */
    serialNumber?: string | null;
    /**
     * The site location of the device.
     */
    site?: string | null;
    /**
     * The source (microsoft/vendor) of the device entity.
     */
    source?: string | null;
    /**
     * A URL reference to the source item where the device is managed.
     */
    sourceRef?: UrlEvidence | null;
    /**
     * The zone location of the device within a site.
     */
    zone?: string | null;
}
export type IoTDeviceImportanceType = (typeof IoTDeviceImportanceTypeObject)[keyof typeof IoTDeviceImportanceTypeObject];
export interface IpAddress extends Host, Parsable {
    /**
     * The details about the autonomous system to which this IP address belongs.
     */
    autonomousSystem?: AutonomousSystem | null;
    /**
     * The country/region for this IP address.
     */
    countryOrRegion?: string | null;
    /**
     * The hosting company listed for this host.
     */
    hostingProvider?: string | null;
    /**
     * The block of IP addresses this IP address belongs to.
     */
    netblock?: string | null;
}
export interface IpEvidence extends AlertEvidence, Parsable {
    /**
     * The two-letter country code according to ISO 3166 format, for example: US, UK, CA, etc.
     */
    countryLetterCode?: string | null;
    /**
     * The value of the IP Address, can be either in V4 address or V6 address format.
     */
    ipAddress?: string | null;
    /**
     * The location property
     */
    location?: GeoLocation | null;
    /**
     * The stream property
     */
    stream?: Stream | null;
}
export interface IrmSecurityAlertRecord extends AuditData, Parsable {
}
export interface IrmUserDefinedDetectionRecord extends AuditData, Parsable {
}
export type ItemsToInclude = (typeof ItemsToIncludeObject)[keyof typeof ItemsToIncludeObject];
export interface KaizalaAuditRecord extends AuditData, Parsable {
}
export interface KubernetesClusterEvidence extends AlertEvidence, Parsable {
    /**
     * The cloud identifier of the cluster. Can be either an amazonResourceEvidence, azureResourceEvidence, or googleCloudResourceEvidence object.
     */
    cloudResource?: AlertEvidence | null;
    /**
     * The distribution type of the cluster.
     */
    distribution?: string | null;
    /**
     * The cluster name.
     */
    name?: string | null;
    /**
     * The platform the cluster runs on. Possible values are: unknown, aks, eks, gke, arc, unknownFutureValue.
     */
    platform?: KubernetesPlatform | null;
    /**
     * The kubernetes version of the cluster.
     */
    version?: string | null;
}
export interface KubernetesControllerEvidence extends AlertEvidence, Parsable {
    /**
     * The labels for the Kubernetes pod.
     */
    labels?: Dictionary | null;
    /**
     * The controller name.
     */
    name?: string | null;
    /**
     * The service account namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The controller type.
     */
    type?: string | null;
}
export interface KubernetesNamespaceEvidence extends AlertEvidence, Parsable {
    /**
     * The namespace cluster.
     */
    cluster?: KubernetesClusterEvidence | null;
    /**
     * The labels for the Kubernetes pod.
     */
    labels?: Dictionary | null;
    /**
     * The namespace name.
     */
    name?: string | null;
}
export type KubernetesPlatform = (typeof KubernetesPlatformObject)[keyof typeof KubernetesPlatformObject];
export interface KubernetesPodEvidence extends AlertEvidence, Parsable {
    /**
     * The list of pod containers which are not init or ephemeral containers.
     */
    containers?: ContainerEvidence[] | null;
    /**
     * The pod controller.
     */
    controller?: KubernetesControllerEvidence | null;
    /**
     * The list of pod ephemeral containers.
     */
    ephemeralContainers?: ContainerEvidence[] | null;
    /**
     * The list of pod init containers.
     */
    initContainers?: ContainerEvidence[] | null;
    /**
     * The pod labels.
     */
    labels?: Dictionary | null;
    /**
     * The pod name.
     */
    name?: string | null;
    /**
     * The pod namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The pod IP.
     */
    podIp?: IpEvidence | null;
    /**
     * The pod service account.
     */
    serviceAccount?: KubernetesServiceAccountEvidence | null;
}
export interface KubernetesSecretEvidence extends AlertEvidence, Parsable {
    /**
     * The secret name.
     */
    name?: string | null;
    /**
     * The secret namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The secret type can include both built-in types and custom ones. Examples of built-in types are: Opaque, kubernetes.io/service-account-token, kubernetes.io/dockercfg, kubernetes.io/dockerconfigjson, kubernetes.io/basic-auth, kubernetes.io/ssh-auth, kubernetes.io/tls, bootstrap.kubernetes.io/token.
     */
    secretType?: string | null;
}
export interface KubernetesServiceAccountEvidence extends AlertEvidence, Parsable {
    /**
     * The service account name.
     */
    name?: string | null;
    /**
     * The service account namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
}
export interface KubernetesServiceEvidence extends AlertEvidence, Parsable {
    /**
     * The service cluster IP.
     */
    clusterIP?: IpEvidence | null;
    /**
     * The service external IPs.
     */
    externalIPs?: IpEvidence[] | null;
    /**
     * The service labels.
     */
    labels?: Dictionary | null;
    /**
     * The service name.
     */
    name?: string | null;
    /**
     * The service namespace.
     */
    namespace?: KubernetesNamespaceEvidence | null;
    /**
     * The service selector.
     */
    selector?: Dictionary | null;
    /**
     * The list of service ports.
     */
    servicePorts?: KubernetesServicePort[] | null;
    /**
     * The serviceType property
     */
    serviceType?: KubernetesServiceType | null;
}
export interface KubernetesServicePort extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The application protocol for this port.
     */
    appProtocol?: string | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of this port within the service.
     */
    name?: string | null;
    /**
     * The port on each node on which this service is exposed when the type is either NodePort or LoadBalancer.
     */
    nodePort?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The port that this service exposes.
     */
    port?: number | null;
    /**
     * The protocol name. Possible values are: udp, tcp, sctp, unknownFutureValue.
     */
    protocol?: ContainerPortProtocol | null;
    /**
     * The name or number of the port to access on the pods targeted by the service. The port number must be in the range 1 to 65535. The name must be an IANASVCNAME.
     */
    targetPort?: string | null;
}
export type KubernetesServiceType = (typeof KubernetesServiceTypeObject)[keyof typeof KubernetesServiceTypeObject];
export interface LabelAnalyticsAggregateAuditRecord extends AuditData, Parsable {
}
export interface LabelContentExplorerAuditRecord extends AuditData, Parsable {
}
export interface LabelsRoot extends Entity, Parsable {
    /**
     * Specifies the underlying authority that describes the type of content to be retained and its retention schedule.
     */
    authorities?: AuthorityTemplate[] | null;
    /**
     * Specifies a group of similar types of content in a particular department.
     */
    categories?: CategoryTemplate[] | null;
    /**
     * The specific rule or regulation created by a jurisdiction used to determine whether certain labels and content should be retained or deleted.
     */
    citations?: CitationTemplate[] | null;
    /**
     * Specifies the department or business unit of an organization to which a label belongs.
     */
    departments?: DepartmentTemplate[] | null;
    /**
     * Specifies a unique alpha-numeric identifier for an organization’s retention schedule.
     */
    filePlanReferences?: FilePlanReferenceTemplate[] | null;
    /**
     * Represents how customers can manage their data, whether and for how long to retain or delete it.
     */
    retentionLabels?: RetentionLabel[] | null;
}
export interface LargeContentMetadataAuditRecord extends AuditData, Parsable {
}
export interface LoggedOnUser extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * User account name of the logged-on user.
     */
    accountName?: string | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * User account domain of the logged-on user.
     */
    domainName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface M365ComplianceConnectorAuditRecord extends AuditData, Parsable {
}
export interface M365DAADAuditRecord extends AuditData, Parsable {
}
export interface MailboxConfigurationEvidence extends AlertEvidence, Parsable {
    /**
     * The configurationId property
     */
    configurationId?: string | null;
    /**
     * The configurationType property
     */
    configurationType?: MailboxConfigurationType | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The externalDirectoryObjectId property
     */
    externalDirectoryObjectId?: Guid | null;
    /**
     * The mailboxPrimaryAddress property
     */
    mailboxPrimaryAddress?: string | null;
    /**
     * The upn property
     */
    upn?: string | null;
}
export type MailboxConfigurationType = (typeof MailboxConfigurationTypeObject)[keyof typeof MailboxConfigurationTypeObject];
export interface MailboxEvidence extends AlertEvidence, Parsable {
    /**
     * The name associated with the mailbox.
     */
    displayName?: string | null;
    /**
     * The primary email address of the mailbox.
     */
    primaryAddress?: string | null;
    /**
     * The user principal name of the mailbox.
     */
    upn?: string | null;
    /**
     * The user account of the mailbox.
     */
    userAccount?: UserAccount | null;
}
export interface MailClusterEvidence extends AlertEvidence, Parsable {
    /**
     * The clustering logic of the emails inside the cluster.
     */
    clusterBy?: string | null;
    /**
     * The value utilized to cluster the similar emails.
     */
    clusterByValue?: string | null;
    /**
     * Count of emails in the email cluster.
     */
    emailCount?: number | null;
    /**
     * Unique identifiers for the emails in the cluster, generated by Microsoft 365.
     */
    networkMessageIds?: string[] | null;
    /**
     * The query used to identify the email cluster.
     */
    query?: string | null;
    /**
     * Uniform resource name (URN) of the automated investigation where the cluster was identified.
     */
    urn?: string | null;
}
export interface MailSubmissionData extends AuditData, Parsable {
}
export interface MalwareEvidence extends AlertEvidence, Parsable {
    /**
     * The category property
     */
    category?: string | null;
    /**
     * The files property
     */
    files?: FileEvidence[] | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The processes property
     */
    processes?: ProcessEvidence[] | null;
}
export interface ManagedServicesAuditRecord extends AuditData, Parsable {
}
export interface ManagedTenantsAuditRecord extends AuditData, Parsable {
}
export interface MapgAlertsAuditRecord extends AuditData, Parsable {
}
export interface MapgOnboardAuditRecord extends AuditData, Parsable {
}
export interface MapgPolicyAuditRecord extends AuditData, Parsable {
}
export interface McasAlertsAuditRecord extends AuditData, Parsable {
}
export interface MdaDataSecuritySignalRecord extends AuditData, Parsable {
}
export interface MdatpAuditRecord extends AuditData, Parsable {
}
export interface MdcEventsRecord extends AuditData, Parsable {
}
export interface MdiAuditRecord extends AuditData, Parsable {
}
export interface MeshWorldsAuditRecord extends AuditData, Parsable {
}
export interface Microsoft365BackupBackupItemAuditRecord extends AuditData, Parsable {
}
export interface Microsoft365BackupBackupPolicyAuditRecord extends AuditData, Parsable {
}
export interface Microsoft365BackupRestoreItemAuditRecord extends AuditData, Parsable {
}
export interface Microsoft365BackupRestoreTaskAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftDefenderExpertsBaseAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftDefenderExpertsXDRAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftFlowAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftFormsAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftGraphDataConnectConsent extends AuditData, Parsable {
}
export interface MicrosoftGraphDataConnectOperation extends AuditData, Parsable {
}
export interface MicrosoftPurviewDataMapOperationRecord extends AuditData, Parsable {
}
export interface MicrosoftPurviewMetadataPolicyOperationRecord extends AuditData, Parsable {
}
export interface MicrosoftPurviewPolicyOperationRecord extends AuditData, Parsable {
}
export interface MicrosoftPurviewPrivacyAuditEvent extends AuditData, Parsable {
}
export interface MicrosoftStreamAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsAdminAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsAnalyticsAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsDeviceAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsRetentionLabelActionAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsSensitivityLabelActionAuditRecord extends AuditData, Parsable {
}
export interface MicrosoftTeamsShiftsAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelExchangeItemAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelItemAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelPolicyAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelProgressFeedbackAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSharePointItemAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSharePointPolicyLocationAuditRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationSharePointCompletionRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationSharePointProgressRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationStatisticsRecord extends AuditData, Parsable {
}
export interface MipAutoLabelSimulationStatusRecord extends AuditData, Parsable {
}
export interface MipExactDataMatchAuditRecord extends AuditData, Parsable {
}
export interface MipLabelAnalyticsAuditRecord extends AuditData, Parsable {
}
export interface MipLabelAuditRecord extends AuditData, Parsable {
}
export interface MS365DCustomDetectionAuditRecord extends AuditData, Parsable {
}
export interface MS365DIncidentAuditRecord extends AuditData, Parsable {
}
export interface MS365DSuppressionRuleAuditRecord extends AuditData, Parsable {
}
export interface MsdeGeneralSettingsAuditRecord extends AuditData, Parsable {
}
export interface MsdeIndicatorsSettingsAuditRecord extends AuditData, Parsable {
}
export interface MsdeResponseActionsAuditRecord extends AuditData, Parsable {
}
export interface MsdeRolesSettingsAuditRecord extends AuditData, Parsable {
}
export interface MsticNationStateNotificationRecord extends AuditData, Parsable {
}
export interface MultiStageDispositionAuditRecord extends AuditData, Parsable {
}
export interface MyAnalyticsSettingsAuditRecord extends AuditData, Parsable {
}
export interface NetworkAdapter extends Entity, Parsable {
    /**
     * Indicates whether the network adapter is selected for capturing and analyzing network traffic.
     */
    isEnabled?: boolean | null;
    /**
     * The name of the network adapter.
     */
    name?: string | null;
}
export interface NetworkConnectionEvidence extends AlertEvidence, Parsable {
    /**
     * The destinationAddress property
     */
    destinationAddress?: IpEvidence | null;
    /**
     * The destinationPort property
     */
    destinationPort?: number | null;
    /**
     * The protocol property
     */
    protocol?: ProtocolType | null;
    /**
     * The sourceAddress property
     */
    sourceAddress?: IpEvidence | null;
    /**
     * The sourcePort property
     */
    sourcePort?: number | null;
}
export interface NicEvidence extends AlertEvidence, Parsable {
    /**
     * The current IP address of the NIC.
     */
    ipAddress?: IpEvidence | null;
    /**
     * The MAC address of the NIC.
     */
    macAddress?: string | null;
    /**
     * The current virtual local area networks of the NIC.
     */
    vlans?: string[] | null;
}
export interface OauthApplicationEvidence extends AlertEvidence, Parsable {
    /**
     * Unique identifier of the application.
     */
    appId?: string | null;
    /**
     * Name of the application.
     */
    displayName?: string | null;
    /**
     * The unique identifier of the application object in Azure AD.
     */
    objectId?: string | null;
    /**
     * The name of the application publisher.
     */
    publisher?: string | null;
}
export interface OcrSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether or not OCR is enabled for the case.
     */
    isEnabled?: boolean | null;
    /**
     * Maximum image size that will be processed in KB).
     */
    maxImageSize?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The timeout duration for the OCR engine. A longer timeout might increase success of OCR, but might add to the total processing time.
     */
    timeout?: Duration | null;
}
export interface OfficeNativeAuditRecord extends AuditData, Parsable {
}
export interface OmePortalAuditRecord extends AuditData, Parsable {
}
export type OnboardingStatus = (typeof OnboardingStatusObject)[keyof typeof OnboardingStatusObject];
export interface OneDriveAuditRecord extends AuditData, Parsable {
}
export interface OnPremisesFileShareScannerDlpAuditRecord extends AuditData, Parsable {
}
export interface OnPremisesScannerDlpAuditRecord extends AuditData, Parsable {
}
export interface OnPremisesSharePointScannerDlpAuditRecord extends AuditData, Parsable {
}
export interface OwaGetAccessTokenForResourceAuditRecord extends AuditData, Parsable {
}
export interface PassiveDnsRecord extends Artifact, Parsable {
    /**
     * The artifact property
     */
    artifact?: Artifact | null;
    /**
     * The date and time that this passiveDnsRecord entry was collected by Microsoft. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    collectedDateTime?: Date | null;
    /**
     * The date and time when this passiveDnsRecord entry was first seen. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The date and time when this passiveDnsRecord entry was most recently seen. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The parentHost property
     */
    parentHost?: Host | null;
    /**
     * The DNS record type for this passiveDnsRecord entry.
     */
    recordType?: string | null;
}
export interface PassiveDnsRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: PassiveDnsRecord[] | null;
}
export interface PeopleAdminSettingsAuditRecord extends AuditData, Parsable {
}
export interface PhysicalBadgingSignalAuditRecord extends AuditData, Parsable {
}
export interface PlannerCopyPlanAuditRecord extends AuditData, Parsable {
}
export interface PlannerPlanAuditRecord extends AuditData, Parsable {
}
export interface PlannerPlanListAuditRecord extends AuditData, Parsable {
}
export interface PlannerRosterAuditRecord extends AuditData, Parsable {
}
export interface PlannerRosterSensitivityLabelAuditRecord extends AuditData, Parsable {
}
export interface PlannerTaskAuditRecord extends AuditData, Parsable {
}
export interface PlannerTaskListAuditRecord extends AuditData, Parsable {
}
export interface PlannerTenantSettingsAuditRecord extends AuditData, Parsable {
}
export interface PowerAppsAuditAppRecord extends AuditData, Parsable {
}
export interface PowerAppsAuditPlanRecord extends AuditData, Parsable {
}
export interface PowerAppsAuditResourceRecord extends AuditData, Parsable {
}
export interface PowerBiAuditRecord extends AuditData, Parsable {
}
export interface PowerBiDlpAuditRecord extends AuditData, Parsable {
}
export interface PowerPagesSiteAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformAdminDlpAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformAdminEnvironmentAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformAdministratorActivityRecord extends AuditData, Parsable {
}
export interface PowerPlatformLockboxResourceAccessRequestAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformLockboxResourceCommandAuditRecord extends AuditData, Parsable {
}
export interface PowerPlatformServiceActivityAuditRecord extends AuditData, Parsable {
}
export interface PrivacyDataMatchAuditRecord extends AuditData, Parsable {
}
export interface PrivacyDataMinimizationRecord extends AuditData, Parsable {
}
export interface PrivacyDigestEmailRecord extends AuditData, Parsable {
}
export interface PrivacyOpenAccessAuditRecord extends AuditData, Parsable {
}
export interface PrivacyPortalAuditRecord extends AuditData, Parsable {
}
export interface PrivacyRemediationActionRecord extends AuditData, Parsable {
}
export interface PrivacyRemediationRecord extends AuditData, Parsable {
}
export interface PrivacyTenantAuditHistoryRecord extends AuditData, Parsable {
}
export interface ProcessEvidence extends AlertEvidence, Parsable {
    /**
     * The status of the detection.The possible values are: detected, blocked, prevented, unknownFutureValue.
     */
    detectionStatus?: DetectionStatus | null;
    /**
     * Image file details.
     */
    imageFile?: FileDetails | null;
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
    /**
     * Date and time when the parent of the process was created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    parentProcessCreationDateTime?: Date | null;
    /**
     * Process ID (PID) of the parent process that spawned the process.
     */
    parentProcessId?: number | null;
    /**
     * Parent process image file details.
     */
    parentProcessImageFile?: FileDetails | null;
    /**
     * Command line used to create the new process.
     */
    processCommandLine?: string | null;
    /**
     * Date and time when the process was created. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    processCreationDateTime?: Date | null;
    /**
     * Process ID (PID) of the newly created process.
     */
    processId?: number | null;
    /**
     * User details of the user that ran the process.
     */
    userAccount?: UserAccount | null;
}
export interface ProjectAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebAssignedToMeSettingsAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebProjectAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebProjectSettingsAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebRoadmapAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebRoadmapItemAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebRoadmapSettingsAuditRecord extends AuditData, Parsable {
}
export interface ProjectForTheWebTaskAuditRecord extends AuditData, Parsable {
}
export type ProtocolType = (typeof ProtocolTypeObject)[keyof typeof ProtocolTypeObject];
export interface PublicFolderAuditRecord extends AuditData, Parsable {
}
export type PurgeAreas = (typeof PurgeAreasObject)[keyof typeof PurgeAreasObject];
export type PurgeType = (typeof PurgeTypeObject)[keyof typeof PurgeTypeObject];
export interface PurviewInsiderRiskAlertsRecord extends AuditData, Parsable {
}
export interface PurviewInsiderRiskCasesRecord extends AuditData, Parsable {
}
export interface QuarantineAuditRecord extends AuditData, Parsable {
}
export type QueryType = (typeof QueryTypeObject)[keyof typeof QueryTypeObject];
export interface RecordsManagementAuditRecord extends AuditData, Parsable {
}
export interface RedundancyDetectionSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether email threading and near duplicate detection are enabled.
     */
    isEnabled?: boolean | null;
    /**
     * Specifies the maximum number of words used for email threading and near duplicate detection. To learn more, see Minimum/maximum number of words.
     */
    maxWords?: number | null;
    /**
     * Specifies the minimum number of words used for email threading and near duplicate detection. To learn more, see Minimum/maximum number of words.
     */
    minWords?: number | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Specifies the similarity level for documents to be put in the same near duplicate set. To learn more, see Document and email similarity threshold.
     */
    similarityThreshold?: number | null;
}
export interface RegistryKeyEvidence extends AlertEvidence, Parsable {
    /**
     * Registry hive of the key that the recorded action was applied to.
     */
    registryHive?: string | null;
    /**
     * Registry key that the recorded action was applied to.
     */
    registryKey?: string | null;
}
export interface RegistryValueEvidence extends AlertEvidence, Parsable {
    /**
     * A unique identifier assigned to a device by Microsoft Defender for Endpoint.
     */
    mdeDeviceId?: string | null;
    /**
     * Registry hive of the key that the recorded action was applied to.
     */
    registryHive?: string | null;
    /**
     * Registry key that the recorded action was applied to.
     */
    registryKey?: string | null;
    /**
     * Data of the registry value that the recorded action was applied to.
     */
    registryValue?: string | null;
    /**
     * Name of the registry value that the recorded action was applied to.
     */
    registryValueName?: string | null;
    /**
     * Data type, such as binary or string, of the registry value that the recorded action was applied to.
     */
    registryValueType?: string | null;
}
export interface RetentionDuration extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface RetentionDurationForever extends Parsable, RetentionDuration {
}
export interface RetentionDurationInDays extends Parsable, RetentionDuration {
    /**
     * Specifies the time period in days for which an item with the applied retention label will be retained for.
     */
    days?: number | null;
}
export interface RetentionEvent extends Entity, Parsable {
    /**
     * The user who created the retentionEvent.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date time when the retentionEvent was created.
     */
    createdDateTime?: Date | null;
    /**
     * Optional information about the event.
     */
    description?: string | null;
    /**
     * Name of the event.
     */
    displayName?: string | null;
    /**
     * Represents the success status of a created event and additional information.
     */
    eventPropagationResults?: EventPropagationResult[] | null;
    /**
     * Represents the workload (SharePoint Online, OneDrive for Business, Exchange Online) and identification information associated with a retention event.
     */
    eventQueries?: EventQuery[] | null;
    /**
     * Status of event propogation to the scoped locations after the event has been created.
     */
    eventStatus?: RetentionEventStatus | null;
    /**
     * Optional time when the event should be triggered.
     */
    eventTriggerDateTime?: Date | null;
    /**
     * The user who last modified the retentionEvent.
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The latest date time when the retentionEvent was modified.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * Last time the status of the event was updated.
     */
    lastStatusUpdateDateTime?: Date | null;
    /**
     * Specifies the event that will start the retention period for labels that use this event type when an event is created.
     */
    retentionEventType?: RetentionEventType | null;
}
export interface RetentionEventCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RetentionEvent[] | null;
}
export interface RetentionEventStatus extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The error if the status isn't successful.
     */
    errorEscaped?: PublicError | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The status of the distribution. The possible values are: pending, error, success, notAvaliable.
     */
    status?: EventStatusType | null;
}
export interface RetentionEventType extends Entity, Parsable {
    /**
     * The user who created the retentionEventType.
     */
    createdBy?: IdentitySet | null;
    /**
     * The date time when the retentionEventType was created.
     */
    createdDateTime?: Date | null;
    /**
     * Optional information about the event type.
     */
    description?: string | null;
    /**
     * Name of the event type.
     */
    displayName?: string | null;
    /**
     * The user who last modified the retentionEventType.
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The latest date time when the retentionEventType was modified.
     */
    lastModifiedDateTime?: Date | null;
}
export interface RetentionEventTypeCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RetentionEventType[] | null;
}
export interface RetentionLabel extends Entity, Parsable {
    /**
     * Specifies the action to take on the labeled document after the period specified by the retentionDuration property expires. The possible values are: none, delete, startDispositionReview, unknownFutureValue.
     */
    actionAfterRetentionPeriod?: ActionAfterRetentionPeriod | null;
    /**
     * Specifies how the behavior of a document with this label should be during the retention period. The possible values are: doNotRetain, retain, retainAsRecord, retainAsRegulatoryRecord, unknownFutureValue.
     */
    behaviorDuringRetentionPeriod?: BehaviorDuringRetentionPeriod | null;
    /**
     * Represents the user who created the retentionLabel.
     */
    createdBy?: IdentitySet | null;
    /**
     * Represents the date and time in which the retentionLabel is created.
     */
    createdDateTime?: Date | null;
    /**
     * Specifies the locked or unlocked state of a record label when it is created.The possible values are: startLocked, startUnlocked, unknownFutureValue.
     */
    defaultRecordBehavior?: DefaultRecordBehavior | null;
    /**
     * Provides label information for the admin. Optional.
     */
    descriptionForAdmins?: string | null;
    /**
     * Provides the label information for the user. Optional.
     */
    descriptionForUsers?: string | null;
    /**
     * Represents out-of-the-box values that provide more options to improve the manageability and organization of the content you need to label.
     */
    descriptors?: FilePlanDescriptor | null;
    /**
     * Unique string that defines a label name.
     */
    displayName?: string | null;
    /**
     * When action at the end of retention is chosen as 'dispositionReview', dispositionReviewStages specifies a sequential set of stages with at least one reviewer in each stage.
     */
    dispositionReviewStages?: DispositionReviewStage[] | null;
    /**
     * Specifies whether the label is currently being used.
     */
    isInUse?: boolean | null;
    /**
     * Specifies the replacement label to be applied automatically after the retention period of the current label ends.
     */
    labelToBeApplied?: string | null;
    /**
     * The user who last modified the retentionLabel.
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The latest date time when the retentionLabel was modified.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * Specifies the number of days to retain the content.
     */
    retentionDuration?: RetentionDuration | null;
    /**
     * Represents the type associated with a retention event.
     */
    retentionEventType?: RetentionEventType | null;
    /**
     * Specifies whether the retention duration is calculated from the content creation date, labeled date, or last modification date. The possible values are: dateLabeled, dateCreated, dateModified, dateOfEvent, unknownFutureValue.
     */
    retentionTrigger?: RetentionTrigger | null;
}
export interface RetentionLabelCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: RetentionLabel[] | null;
}
export interface RetentionPolicyAuditRecord extends AuditData, Parsable {
}
export type RetentionTrigger = (typeof RetentionTriggerObject)[keyof typeof RetentionTriggerObject];
export interface SasTokenEvidence extends AlertEvidence, Parsable {
    /**
     * The allowedIpAddresses property
     */
    allowedIpAddresses?: string | null;
    /**
     * The allowedResourceTypes property
     */
    allowedResourceTypes?: string[] | null;
    /**
     * The allowedServices property
     */
    allowedServices?: string[] | null;
    /**
     * The expiryDateTime property
     */
    expiryDateTime?: Date | null;
    /**
     * The permissions property
     */
    permissions?: string[] | null;
    /**
     * The protocol property
     */
    protocol?: string | null;
    /**
     * The signatureHash property
     */
    signatureHash?: string | null;
    /**
     * The signedWith property
     */
    signedWith?: string | null;
    /**
     * The startDateTime property
     */
    startDateTime?: Date | null;
    /**
     * The storageResource property
     */
    storageResource?: AzureResourceEvidence | null;
}
export interface ScoreEvidence extends AuditData, Parsable {
}
export interface ScorePlatformGenericAuditRecord extends AuditData, Parsable {
}
export interface ScriptRunAuditRecord extends AuditData, Parsable {
}
export interface Search extends Entity, Parsable {
    /**
     * The contentQuery property
     */
    contentQuery?: string | null;
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet | null;
    /**
     * The createdDateTime property
     */
    createdDateTime?: Date | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedBy property
     */
    lastModifiedBy?: IdentitySet | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
}
export interface SearchAuditRecord extends AuditData, Parsable {
}
export interface SecurityComplianceAlertRecord extends AuditData, Parsable {
}
export interface SecurityComplianceCenterEOPCmdletAuditRecord extends AuditData, Parsable {
}
export interface SecurityComplianceInsightsAuditRecord extends AuditData, Parsable {
}
export interface SecurityComplianceRBACAuditRecord extends AuditData, Parsable {
}
export interface SecurityComplianceUserChangeAuditRecord extends AuditData, Parsable {
}
export interface SecurityGroupEvidence extends AlertEvidence, Parsable {
    /**
     * The name of the security group.
     */
    displayName?: string | null;
    /**
     * Unique identifier of the security group.
     */
    securityGroupId?: string | null;
}
export interface Sensor extends Entity, Parsable {
    /**
     * The date and time when the sensor was generated. The Timestamp represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    createdDateTime?: Date | null;
    /**
     * The deploymentStatus property
     */
    deploymentStatus?: DeploymentStatus | null;
    /**
     * The display name of the sensor.
     */
    displayName?: string | null;
    /**
     * The fully qualified domain name of the sensor.
     */
    domainName?: string | null;
    /**
     * Represents potential issues within a customer's Microsoft Defender for Identity configuration that Microsoft Defender for Identity identified related to the sensor.
     */
    healthIssues?: HealthIssue[] | null;
    /**
     * The healthStatus property
     */
    healthStatus?: SensorHealthStatus | null;
    /**
     * This field displays the count of health issues related to this sensor.
     */
    openHealthIssuesCount?: number | null;
    /**
     * The sensorType property
     */
    sensorType?: SensorType | null;
    /**
     * The settings property
     */
    settings?: SensorSettings | null;
    /**
     * The version of the sensor.
     */
    version?: string | null;
}
export interface SensorCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Sensor[] | null;
}
export interface SensorDeploymentPackage extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * URL to download the sensor deployment package.
     */
    downloadUrl?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Version of the sensor.
     */
    version?: string | null;
}
export type SensorHealthStatus = (typeof SensorHealthStatusObject)[keyof typeof SensorHealthStatusObject];
export interface SensorSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Description of the sensor.
     */
    description?: string | null;
    /**
     * DNS names for the domain controller
     */
    domainControllerDnsNames?: string[] | null;
    /**
     * Indicates whether to delay updates for the sensor.
     */
    isDelayedDeploymentEnabled?: boolean | null;
    /**
     * The networkAdapters property
     */
    networkAdapters?: NetworkAdapter[] | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export type SensorType = (typeof SensorTypeObject)[keyof typeof SensorTypeObject];
/**
 * Serializes information the current object
 * @param AadRiskDetectionAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAadRiskDetectionAuditRecord(writer: SerializationWriter, aadRiskDetectionAuditRecord: Partial<AadRiskDetectionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aadRiskDetectionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aadRiskDetectionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AedAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAedAuditRecord(writer: SerializationWriter, aedAuditRecord: Partial<AedAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aedAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aedAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AiAppInteractionAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAiAppInteractionAuditRecord(writer: SerializationWriter, aiAppInteractionAuditRecord: Partial<AiAppInteractionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aiAppInteractionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aiAppInteractionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AipFileDeleted The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipFileDeleted(writer: SerializationWriter, aipFileDeleted: Partial<AipFileDeleted> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aipFileDeleted || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aipFileDeleted, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AipHeartBeat The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipHeartBeat(writer: SerializationWriter, aipHeartBeat: Partial<AipHeartBeat> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aipHeartBeat || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aipHeartBeat, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AipProtectionActionLogRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipProtectionActionLogRequest(writer: SerializationWriter, aipProtectionActionLogRequest: Partial<AipProtectionActionLogRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aipProtectionActionLogRequest || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aipProtectionActionLogRequest, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AipScannerDiscoverEvent The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipScannerDiscoverEvent(writer: SerializationWriter, aipScannerDiscoverEvent: Partial<AipScannerDiscoverEvent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aipScannerDiscoverEvent || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aipScannerDiscoverEvent, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AipSensitivityLabelActionLogRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAipSensitivityLabelActionLogRequest(writer: SerializationWriter, aipSensitivityLabelActionLogRequest: Partial<AipSensitivityLabelActionLogRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!aipSensitivityLabelActionLogRequest || isSerializingDerivedType) { return; }
    serializeAuditData(writer, aipSensitivityLabelActionLogRequest, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AirAdminActionInvestigationData The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAirAdminActionInvestigationData(writer: SerializationWriter, airAdminActionInvestigationData: Partial<AirAdminActionInvestigationData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!airAdminActionInvestigationData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, airAdminActionInvestigationData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AirInvestigationData The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAirInvestigationData(writer: SerializationWriter, airInvestigationData: Partial<AirInvestigationData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!airInvestigationData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, airInvestigationData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AirManualInvestigationData The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAirManualInvestigationData(writer: SerializationWriter, airManualInvestigationData: Partial<AirManualInvestigationData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!airManualInvestigationData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, airManualInvestigationData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param Alert The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlert(writer: SerializationWriter, alert: Partial<Alert> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!alert || isSerializingDerivedType) { return; }
    serializeEntity(writer, alert, isSerializingDerivedType)
    writer.writeStringValue("actorDisplayName", alert.actorDisplayName);
    writer.writeObjectValue<Dictionary>("additionalData", alert.additionalDataProperty, serializeDictionary);
    writer.writeStringValue("alertPolicyId", alert.alertPolicyId);
    writer.writeStringValue("alertWebUrl", alert.alertWebUrl);
    writer.writeStringValue("assignedTo", alert.assignedTo);
    writer.writeStringValue("category", alert.category);
    writer.writeEnumValue<AlertClassification>("classification", alert.classification);
    writer.writeCollectionOfObjectValues<AlertComment>("comments", alert.comments, serializeAlertComment);
    writer.writeDateValue("createdDateTime", alert.createdDateTime);
    writer.writeObjectValue<Dictionary>("customDetails", alert.customDetails, serializeDictionary);
    writer.writeStringValue("description", alert.description);
    writer.writeEnumValue<DetectionSource>("detectionSource", alert.detectionSource);
    writer.writeStringValue("detectorId", alert.detectorId);
    writer.writeEnumValue<AlertDetermination>("determination", alert.determination);
    writer.writeCollectionOfObjectValues<AlertEvidence>("evidence", alert.evidence, serializeAlertEvidence);
    writer.writeDateValue("firstActivityDateTime", alert.firstActivityDateTime);
    writer.writeStringValue("incidentId", alert.incidentId);
    writer.writeStringValue("incidentWebUrl", alert.incidentWebUrl);
    writer.writeDateValue("lastActivityDateTime", alert.lastActivityDateTime);
    writer.writeDateValue("lastUpdateDateTime", alert.lastUpdateDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("mitreTechniques", alert.mitreTechniques);
    writer.writeStringValue("productName", alert.productName);
    writer.writeStringValue("providerAlertId", alert.providerAlertId);
    writer.writeStringValue("recommendedActions", alert.recommendedActions);
    writer.writeDateValue("resolvedDateTime", alert.resolvedDateTime);
    writer.writeEnumValue<ServiceSource>("serviceSource", alert.serviceSource);
    writer.writeEnumValue<AlertSeverity>("severity", alert.severity);
    writer.writeEnumValue<AlertStatus>("status", alert.status);
    writer.writeCollectionOfPrimitiveValues<string>("systemTags", alert.systemTags);
    writer.writeStringValue("tenantId", alert.tenantId);
    writer.writeStringValue("threatDisplayName", alert.threatDisplayName);
    writer.writeStringValue("threatFamilyName", alert.threatFamilyName);
    writer.writeStringValue("title", alert.title);
}
/**
 * Serializes information the current object
 * @param AlertCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertCollectionResponse(writer: SerializationWriter, alertCollectionResponse: Partial<AlertCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!alertCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, alertCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Alert>("value", alertCollectionResponse.value, serializeAlert);
}
/**
 * Serializes information the current object
 * @param AlertComment The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertComment(writer: SerializationWriter, alertComment: Partial<AlertComment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!alertComment || isSerializingDerivedType) { return; }
    writer.writeStringValue("comment", alertComment.comment);
    writer.writeStringValue("createdByDisplayName", alertComment.createdByDisplayName);
    writer.writeDateValue("createdDateTime", alertComment.createdDateTime);
    writer.writeStringValue("@odata.type", alertComment.odataType);
    writer.writeAdditionalData(alertComment.additionalData);
}
/**
 * Serializes information the current object
 * @param AlertEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAlertEvidence(writer: SerializationWriter, alertEvidence: Partial<AlertEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!alertEvidence || isSerializingDerivedType) { return; }
    writer.writeDateValue("createdDateTime", alertEvidence.createdDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("detailedRoles", alertEvidence.detailedRoles);
    writer.writeStringValue("@odata.type", alertEvidence.odataType);
    writer.writeEnumValue<EvidenceRemediationStatus>("remediationStatus", alertEvidence.remediationStatus);
    writer.writeStringValue("remediationStatusDetails", alertEvidence.remediationStatusDetails);
    if(alertEvidence.roles)
    writer.writeCollectionOfEnumValues<EvidenceRole>("roles", alertEvidence.roles);
    writer.writeCollectionOfPrimitiveValues<string>("tags", alertEvidence.tags);
    writer.writeEnumValue<EvidenceVerdict>("verdict", alertEvidence.verdict);
    writer.writeAdditionalData(alertEvidence.additionalData);
    switch (alertEvidence.odataType) {
        case "#microsoft.graph.security.amazonResourceEvidence":
            serializeAmazonResourceEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.analyzedMessageEvidence":
            serializeAnalyzedMessageEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.azureResourceEvidence":
            serializeAzureResourceEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.blobContainerEvidence":
            serializeBlobContainerEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.blobEvidence":
            serializeBlobEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.cloudApplicationEvidence":
            serializeCloudApplicationEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.cloudLogonRequestEvidence":
            serializeCloudLogonRequestEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.cloudLogonSessionEvidence":
            serializeCloudLogonSessionEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.containerEvidence":
            serializeContainerEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.containerImageEvidence":
            serializeContainerImageEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.containerRegistryEvidence":
            serializeContainerRegistryEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.deviceEvidence":
            serializeDeviceEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.dnsEvidence":
            serializeDnsEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.fileEvidence":
            serializeFileEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.fileHashEvidence":
            serializeFileHashEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.gitHubOrganizationEvidence":
            serializeGitHubOrganizationEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.gitHubRepoEvidence":
            serializeGitHubRepoEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.gitHubUserEvidence":
            serializeGitHubUserEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.googleCloudResourceEvidence":
            serializeGoogleCloudResourceEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.hostLogonSessionEvidence":
            serializeHostLogonSessionEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.ioTDeviceEvidence":
            serializeIoTDeviceEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.ipEvidence":
            serializeIpEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.kubernetesClusterEvidence":
            serializeKubernetesClusterEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.kubernetesControllerEvidence":
            serializeKubernetesControllerEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.kubernetesNamespaceEvidence":
            serializeKubernetesNamespaceEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.kubernetesPodEvidence":
            serializeKubernetesPodEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.kubernetesSecretEvidence":
            serializeKubernetesSecretEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.kubernetesServiceAccountEvidence":
            serializeKubernetesServiceAccountEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.kubernetesServiceEvidence":
            serializeKubernetesServiceEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.mailboxConfigurationEvidence":
            serializeMailboxConfigurationEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.mailboxEvidence":
            serializeMailboxEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.mailClusterEvidence":
            serializeMailClusterEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.malwareEvidence":
            serializeMalwareEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.networkConnectionEvidence":
            serializeNetworkConnectionEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.nicEvidence":
            serializeNicEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.oauthApplicationEvidence":
            serializeOauthApplicationEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.processEvidence":
            serializeProcessEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.registryKeyEvidence":
            serializeRegistryKeyEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.registryValueEvidence":
            serializeRegistryValueEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.sasTokenEvidence":
            serializeSasTokenEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.securityGroupEvidence":
            serializeSecurityGroupEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.servicePrincipalEvidence":
            serializeServicePrincipalEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.submissionMailEvidence":
            serializeSubmissionMailEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.teamsMessageEvidence":
            serializeTeamsMessageEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.urlEvidence":
            serializeUrlEvidence(writer, alertEvidence, true);
        break;
        case "#microsoft.graph.security.userEvidence":
            serializeUserEvidence(writer, alertEvidence, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param AmazonResourceEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAmazonResourceEvidence(writer: SerializationWriter, amazonResourceEvidence: Partial<AmazonResourceEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!amazonResourceEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, amazonResourceEvidence, isSerializingDerivedType)
    writer.writeStringValue("amazonAccountId", amazonResourceEvidence.amazonAccountId);
    writer.writeStringValue("amazonResourceId", amazonResourceEvidence.amazonResourceId);
    writer.writeStringValue("resourceName", amazonResourceEvidence.resourceName);
    writer.writeStringValue("resourceType", amazonResourceEvidence.resourceType);
}
/**
 * Serializes information the current object
 * @param AnalyzedMessageEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAnalyzedMessageEvidence(writer: SerializationWriter, analyzedMessageEvidence: Partial<AnalyzedMessageEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!analyzedMessageEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, analyzedMessageEvidence, isSerializingDerivedType)
    writer.writeStringValue("antiSpamDirection", analyzedMessageEvidence.antiSpamDirection);
    writer.writeNumberValue("attachmentsCount", analyzedMessageEvidence.attachmentsCount);
    writer.writeStringValue("deliveryAction", analyzedMessageEvidence.deliveryAction);
    writer.writeStringValue("deliveryLocation", analyzedMessageEvidence.deliveryLocation);
    writer.writeStringValue("internetMessageId", analyzedMessageEvidence.internetMessageId);
    writer.writeStringValue("language", analyzedMessageEvidence.language);
    writer.writeStringValue("networkMessageId", analyzedMessageEvidence.networkMessageId);
    writer.writeObjectValue<EmailSender>("p1Sender", analyzedMessageEvidence.p1Sender, serializeEmailSender);
    writer.writeObjectValue<EmailSender>("p2Sender", analyzedMessageEvidence.p2Sender, serializeEmailSender);
    writer.writeDateValue("receivedDateTime", analyzedMessageEvidence.receivedDateTime);
    writer.writeStringValue("recipientEmailAddress", analyzedMessageEvidence.recipientEmailAddress);
    writer.writeStringValue("senderIp", analyzedMessageEvidence.senderIp);
    writer.writeStringValue("subject", analyzedMessageEvidence.subject);
    writer.writeCollectionOfPrimitiveValues<string>("threatDetectionMethods", analyzedMessageEvidence.threatDetectionMethods);
    writer.writeCollectionOfPrimitiveValues<string>("threats", analyzedMessageEvidence.threats);
    writer.writeNumberValue("urlCount", analyzedMessageEvidence.urlCount);
    writer.writeCollectionOfPrimitiveValues<string>("urls", analyzedMessageEvidence.urls);
    writer.writeStringValue("urn", analyzedMessageEvidence.urn);
}
/**
 * Serializes information the current object
 * @param Article The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticle(writer: SerializationWriter, article: Partial<Article> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!article || isSerializingDerivedType) { return; }
    serializeEntity(writer, article, isSerializingDerivedType)
    writer.writeObjectValue<FormattedContent>("body", article.body, serializeFormattedContent);
    writer.writeDateValue("createdDateTime", article.createdDateTime);
    writer.writeStringValue("imageUrl", article.imageUrl);
    writer.writeCollectionOfObjectValues<ArticleIndicator>("indicators", article.indicators, serializeArticleIndicator);
    writer.writeBooleanValue("isFeatured", article.isFeatured);
    writer.writeDateValue("lastUpdatedDateTime", article.lastUpdatedDateTime);
    writer.writeObjectValue<FormattedContent>("summary", article.summary, serializeFormattedContent);
    writer.writeCollectionOfPrimitiveValues<string>("tags", article.tags);
    writer.writeStringValue("title", article.title);
}
/**
 * Serializes information the current object
 * @param ArticleCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticleCollectionResponse(writer: SerializationWriter, articleCollectionResponse: Partial<ArticleCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!articleCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, articleCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Article>("value", articleCollectionResponse.value, serializeArticle);
}
/**
 * Serializes information the current object
 * @param ArticleIndicator The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticleIndicator(writer: SerializationWriter, articleIndicator: Partial<ArticleIndicator> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!articleIndicator || isSerializingDerivedType) { return; }
    serializeIndicator(writer, articleIndicator, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ArticleIndicatorCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArticleIndicatorCollectionResponse(writer: SerializationWriter, articleIndicatorCollectionResponse: Partial<ArticleIndicatorCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!articleIndicatorCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, articleIndicatorCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<ArticleIndicator>("value", articleIndicatorCollectionResponse.value, serializeArticleIndicator);
}
/**
 * Serializes information the current object
 * @param Artifact The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeArtifact(writer: SerializationWriter, artifact: Partial<Artifact> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!artifact || isSerializingDerivedType) { return; }
    serializeEntity(writer, artifact, isSerializingDerivedType)
    switch (artifact.odataType) {
        case "#microsoft.graph.security.host":
            serializeHost(writer, artifact, true);
        break;
        case "#microsoft.graph.security.hostComponent":
            serializeHostComponent(writer, artifact, true);
        break;
        case "#microsoft.graph.security.hostCookie":
            serializeHostCookie(writer, artifact, true);
        break;
        case "#microsoft.graph.security.hostname":
            serializeHostname(writer, artifact, true);
        break;
        case "#microsoft.graph.security.hostSslCertificate":
            serializeHostSslCertificate(writer, artifact, true);
        break;
        case "#microsoft.graph.security.hostTracker":
            serializeHostTracker(writer, artifact, true);
        break;
        case "#microsoft.graph.security.ipAddress":
            serializeIpAddress(writer, artifact, true);
        break;
        case "#microsoft.graph.security.passiveDnsRecord":
            serializePassiveDnsRecord(writer, artifact, true);
        break;
        case "#microsoft.graph.security.sslCertificate":
            serializeSslCertificate(writer, artifact, true);
        break;
        case "#microsoft.graph.security.unclassifiedArtifact":
            serializeUnclassifiedArtifact(writer, artifact, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param AttackSimAdminAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAttackSimAdminAuditRecord(writer: SerializationWriter, attackSimAdminAuditRecord: Partial<AttackSimAdminAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!attackSimAdminAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, attackSimAdminAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AuditCoreRoot The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditCoreRoot(writer: SerializationWriter, auditCoreRoot: Partial<AuditCoreRoot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!auditCoreRoot || isSerializingDerivedType) { return; }
    serializeEntity(writer, auditCoreRoot, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<AuditLogQuery>("queries", auditCoreRoot.queries, serializeAuditLogQuery);
}
/**
 * Serializes information the current object
 * @param AuditData The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditData(writer: SerializationWriter, auditData: Partial<AuditData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!auditData || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", auditData.odataType);
    writer.writeAdditionalData(auditData.additionalData);
    switch (auditData.odataType) {
        case "#microsoft.graph.security.aadRiskDetectionAuditRecord":
            serializeAadRiskDetectionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.aedAuditRecord":
            serializeAedAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.aiAppInteractionAuditRecord":
            serializeAiAppInteractionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.aipFileDeleted":
            serializeAipFileDeleted(writer, auditData, true);
        break;
        case "#microsoft.graph.security.aipHeartBeat":
            serializeAipHeartBeat(writer, auditData, true);
        break;
        case "#microsoft.graph.security.aipProtectionActionLogRequest":
            serializeAipProtectionActionLogRequest(writer, auditData, true);
        break;
        case "#microsoft.graph.security.aipScannerDiscoverEvent":
            serializeAipScannerDiscoverEvent(writer, auditData, true);
        break;
        case "#microsoft.graph.security.aipSensitivityLabelActionLogRequest":
            serializeAipSensitivityLabelActionLogRequest(writer, auditData, true);
        break;
        case "#microsoft.graph.security.airAdminActionInvestigationData":
            serializeAirAdminActionInvestigationData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.airInvestigationData":
            serializeAirInvestigationData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.airManualInvestigationData":
            serializeAirManualInvestigationData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.attackSimAdminAuditRecord":
            serializeAttackSimAdminAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.auditSearchAuditRecord":
            serializeAuditSearchAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.azureActiveDirectoryAccountLogonAuditRecord":
            serializeAzureActiveDirectoryAccountLogonAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.azureActiveDirectoryAuditRecord":
            serializeAzureActiveDirectoryAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.azureActiveDirectoryBaseAuditRecord":
            serializeAzureActiveDirectoryBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.azureActiveDirectoryStsLogonAuditRecord":
            serializeAzureActiveDirectoryStsLogonAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.campaignAuditRecord":
            serializeCampaignAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.caseAuditRecord":
            serializeCaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.caseInvestigation":
            serializeCaseInvestigation(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cdpColdCrawlStatusRecord":
            serializeCdpColdCrawlStatusRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cdpContentExplorerAggregateRecord":
            serializeCdpContentExplorerAggregateRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cdpDlpSensitiveAuditRecord":
            serializeCdpDlpSensitiveAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cdpDlpSensitiveEndpointAuditRecord":
            serializeCdpDlpSensitiveEndpointAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cdpLogRecord":
            serializeCdpLogRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cdpOcrBillingRecord":
            serializeCdpOcrBillingRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cdpResourceScopeChangeEventRecord":
            serializeCdpResourceScopeChangeEventRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cernerSMSLinkRecord":
            serializeCernerSMSLinkRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cernerSMSSettingsUpdateRecord":
            serializeCernerSMSSettingsUpdateRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cernerSMSUnlinkRecord":
            serializeCernerSMSUnlinkRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceConnectorAuditRecord":
            serializeComplianceConnectorAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDLMExchangeAuditRecord":
            serializeComplianceDLMExchangeAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDLMSharePointAuditRecord":
            serializeComplianceDLMSharePointAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpApplicationsAuditRecord":
            serializeComplianceDlpApplicationsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpApplicationsClassificationAuditRecord":
            serializeComplianceDlpApplicationsClassificationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpBaseAuditRecord":
            serializeComplianceDlpBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpClassificationBaseAuditRecord":
            serializeComplianceDlpClassificationBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpClassificationBaseCdpRecord":
            serializeComplianceDlpClassificationBaseCdpRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpEndpointAuditRecord":
            serializeComplianceDlpEndpointAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpEndpointDiscoveryAuditRecord":
            serializeComplianceDlpEndpointDiscoveryAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpExchangeAuditRecord":
            serializeComplianceDlpExchangeAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpExchangeClassificationAuditRecord":
            serializeComplianceDlpExchangeClassificationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpExchangeClassificationCdpRecord":
            serializeComplianceDlpExchangeClassificationCdpRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpExchangeDiscoveryAuditRecord":
            serializeComplianceDlpExchangeDiscoveryAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpSharePointAuditRecord":
            serializeComplianceDlpSharePointAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpSharePointClassificationAuditRecord":
            serializeComplianceDlpSharePointClassificationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceDlpSharePointClassificationExtendedAuditRecord":
            serializeComplianceDlpSharePointClassificationExtendedAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceManagerActionRecord":
            serializeComplianceManagerActionRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceSupervisionBaseAuditRecord":
            serializeComplianceSupervisionBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.complianceSupervisionExchangeAuditRecord":
            serializeComplianceSupervisionExchangeAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.consumptionResourceAuditRecord":
            serializeConsumptionResourceAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.copilotInteractionAuditRecord":
            serializeCopilotInteractionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.coreReportingSettingsAuditRecord":
            serializeCoreReportingSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cortanaBriefingAuditRecord":
            serializeCortanaBriefingAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cpsCommonPolicyAuditRecord":
            serializeCpsCommonPolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.cpsPolicyConfigAuditRecord":
            serializeCpsPolicyConfigAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.crmBaseAuditRecord":
            serializeCrmBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.crmEntityOperationAuditRecord":
            serializeCrmEntityOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.customerKeyServiceEncryptionAuditRecord":
            serializeCustomerKeyServiceEncryptionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dataCenterSecurityBaseAuditRecord":
            serializeDataCenterSecurityBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dataCenterSecurityCmdletAuditRecord":
            serializeDataCenterSecurityCmdletAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dataGovernanceAuditRecord":
            serializeDataGovernanceAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dataInsightsRestApiAuditRecord":
            serializeDataInsightsRestApiAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dataLakeExportOperationAuditRecord":
            serializeDataLakeExportOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dataShareOperationAuditRecord":
            serializeDataShareOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.defaultAuditData":
            serializeDefaultAuditData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.defenderSecurityAlertBaseRecord":
            serializeDefenderSecurityAlertBaseRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.deleteCertificateRecord":
            serializeDeleteCertificateRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.disableConsentRecord":
            serializeDisableConsentRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.discoveryAuditRecord":
            serializeDiscoveryAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dlpEndpointAuditRecord":
            serializeDlpEndpointAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dlpSensitiveInformationTypeCmdletRecord":
            serializeDlpSensitiveInformationTypeCmdletRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dlpSensitiveInformationTypeRulePackageCmdletRecord":
            serializeDlpSensitiveInformationTypeRulePackageCmdletRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.downloadCertificateRecord":
            serializeDownloadCertificateRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.dynamics365BusinessCentralAuditRecord":
            serializeDynamics365BusinessCentralAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.enableConsentRecord":
            serializeEnableConsentRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.epicSMSLinkRecord":
            serializeEpicSMSLinkRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.epicSMSSettingsUpdateRecord":
            serializeEpicSMSSettingsUpdateRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.epicSMSUnlinkRecord":
            serializeEpicSMSUnlinkRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.exchangeAdminAuditRecord":
            serializeExchangeAdminAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.exchangeAggregatedMailboxAuditRecord":
            serializeExchangeAggregatedMailboxAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.exchangeAggregatedOperationRecord":
            serializeExchangeAggregatedOperationRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.exchangeMailboxAuditBaseRecord":
            serializeExchangeMailboxAuditBaseRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.exchangeMailboxAuditGroupRecord":
            serializeExchangeMailboxAuditGroupRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.exchangeMailboxAuditRecord":
            serializeExchangeMailboxAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.fhirBaseUrlAddRecord":
            serializeFhirBaseUrlAddRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.fhirBaseUrlApproveRecord":
            serializeFhirBaseUrlApproveRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.fhirBaseUrlDeleteRecord":
            serializeFhirBaseUrlDeleteRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.fhirBaseUrlUpdateRecord":
            serializeFhirBaseUrlUpdateRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.healthcareSignalRecord":
            serializeHealthcareSignalRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.hostedRpaAuditRecord":
            serializeHostedRpaAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.hrSignalAuditRecord":
            serializeHrSignalAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.hygieneEventRecord":
            serializeHygieneEventRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.informationBarrierPolicyApplicationAuditRecord":
            serializeInformationBarrierPolicyApplicationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.informationWorkerProtectionAuditRecord":
            serializeInformationWorkerProtectionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.insiderRiskScopedUserInsightsRecord":
            serializeInsiderRiskScopedUserInsightsRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.insiderRiskScopedUsersRecord":
            serializeInsiderRiskScopedUsersRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.irmSecurityAlertRecord":
            serializeIrmSecurityAlertRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.irmUserDefinedDetectionRecord":
            serializeIrmUserDefinedDetectionRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.kaizalaAuditRecord":
            serializeKaizalaAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.labelAnalyticsAggregateAuditRecord":
            serializeLabelAnalyticsAggregateAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.labelContentExplorerAuditRecord":
            serializeLabelContentExplorerAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.largeContentMetadataAuditRecord":
            serializeLargeContentMetadataAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.m365ComplianceConnectorAuditRecord":
            serializeM365ComplianceConnectorAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.m365DAADAuditRecord":
            serializeM365DAADAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mailSubmissionData":
            serializeMailSubmissionData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.managedServicesAuditRecord":
            serializeManagedServicesAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.managedTenantsAuditRecord":
            serializeManagedTenantsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mapgAlertsAuditRecord":
            serializeMapgAlertsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mapgOnboardAuditRecord":
            serializeMapgOnboardAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mapgPolicyAuditRecord":
            serializeMapgPolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mcasAlertsAuditRecord":
            serializeMcasAlertsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mdaDataSecuritySignalRecord":
            serializeMdaDataSecuritySignalRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mdatpAuditRecord":
            serializeMdatpAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mdcEventsRecord":
            serializeMdcEventsRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mdiAuditRecord":
            serializeMdiAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.meshWorldsAuditRecord":
            serializeMeshWorldsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoft365BackupBackupItemAuditRecord":
            serializeMicrosoft365BackupBackupItemAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoft365BackupBackupPolicyAuditRecord":
            serializeMicrosoft365BackupBackupPolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoft365BackupRestoreItemAuditRecord":
            serializeMicrosoft365BackupRestoreItemAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoft365BackupRestoreTaskAuditRecord":
            serializeMicrosoft365BackupRestoreTaskAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftDefenderExpertsBaseAuditRecord":
            serializeMicrosoftDefenderExpertsBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftDefenderExpertsXDRAuditRecord":
            serializeMicrosoftDefenderExpertsXDRAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftFlowAuditRecord":
            serializeMicrosoftFlowAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftFormsAuditRecord":
            serializeMicrosoftFormsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftGraphDataConnectConsent":
            serializeMicrosoftGraphDataConnectConsent(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftGraphDataConnectOperation":
            serializeMicrosoftGraphDataConnectOperation(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftPurviewDataMapOperationRecord":
            serializeMicrosoftPurviewDataMapOperationRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftPurviewMetadataPolicyOperationRecord":
            serializeMicrosoftPurviewMetadataPolicyOperationRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftPurviewPolicyOperationRecord":
            serializeMicrosoftPurviewPolicyOperationRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftPurviewPrivacyAuditEvent":
            serializeMicrosoftPurviewPrivacyAuditEvent(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftStreamAuditRecord":
            serializeMicrosoftStreamAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftTeamsAdminAuditRecord":
            serializeMicrosoftTeamsAdminAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftTeamsAnalyticsAuditRecord":
            serializeMicrosoftTeamsAnalyticsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftTeamsAuditRecord":
            serializeMicrosoftTeamsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftTeamsDeviceAuditRecord":
            serializeMicrosoftTeamsDeviceAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftTeamsRetentionLabelActionAuditRecord":
            serializeMicrosoftTeamsRetentionLabelActionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftTeamsSensitivityLabelActionAuditRecord":
            serializeMicrosoftTeamsSensitivityLabelActionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.microsoftTeamsShiftsAuditRecord":
            serializeMicrosoftTeamsShiftsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelExchangeItemAuditRecord":
            serializeMipAutoLabelExchangeItemAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelItemAuditRecord":
            serializeMipAutoLabelItemAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelPolicyAuditRecord":
            serializeMipAutoLabelPolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelProgressFeedbackAuditRecord":
            serializeMipAutoLabelProgressFeedbackAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelSharePointItemAuditRecord":
            serializeMipAutoLabelSharePointItemAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelSharePointPolicyLocationAuditRecord":
            serializeMipAutoLabelSharePointPolicyLocationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelSimulationSharePointCompletionRecord":
            serializeMipAutoLabelSimulationSharePointCompletionRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelSimulationSharePointProgressRecord":
            serializeMipAutoLabelSimulationSharePointProgressRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelSimulationStatisticsRecord":
            serializeMipAutoLabelSimulationStatisticsRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipAutoLabelSimulationStatusRecord":
            serializeMipAutoLabelSimulationStatusRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipExactDataMatchAuditRecord":
            serializeMipExactDataMatchAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipLabelAnalyticsAuditRecord":
            serializeMipLabelAnalyticsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mipLabelAuditRecord":
            serializeMipLabelAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mS365DCustomDetectionAuditRecord":
            serializeMS365DCustomDetectionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mS365DIncidentAuditRecord":
            serializeMS365DIncidentAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.mS365DSuppressionRuleAuditRecord":
            serializeMS365DSuppressionRuleAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.msdeGeneralSettingsAuditRecord":
            serializeMsdeGeneralSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.msdeIndicatorsSettingsAuditRecord":
            serializeMsdeIndicatorsSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.msdeResponseActionsAuditRecord":
            serializeMsdeResponseActionsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.msdeRolesSettingsAuditRecord":
            serializeMsdeRolesSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.msticNationStateNotificationRecord":
            serializeMsticNationStateNotificationRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.multiStageDispositionAuditRecord":
            serializeMultiStageDispositionAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.myAnalyticsSettingsAuditRecord":
            serializeMyAnalyticsSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.officeNativeAuditRecord":
            serializeOfficeNativeAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.omePortalAuditRecord":
            serializeOmePortalAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.oneDriveAuditRecord":
            serializeOneDriveAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.onPremisesFileShareScannerDlpAuditRecord":
            serializeOnPremisesFileShareScannerDlpAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.onPremisesScannerDlpAuditRecord":
            serializeOnPremisesScannerDlpAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.onPremisesSharePointScannerDlpAuditRecord":
            serializeOnPremisesSharePointScannerDlpAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.owaGetAccessTokenForResourceAuditRecord":
            serializeOwaGetAccessTokenForResourceAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.peopleAdminSettingsAuditRecord":
            serializePeopleAdminSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.physicalBadgingSignalAuditRecord":
            serializePhysicalBadgingSignalAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerCopyPlanAuditRecord":
            serializePlannerCopyPlanAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerPlanAuditRecord":
            serializePlannerPlanAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerPlanListAuditRecord":
            serializePlannerPlanListAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerRosterAuditRecord":
            serializePlannerRosterAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerRosterSensitivityLabelAuditRecord":
            serializePlannerRosterSensitivityLabelAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerTaskAuditRecord":
            serializePlannerTaskAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerTaskListAuditRecord":
            serializePlannerTaskListAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.plannerTenantSettingsAuditRecord":
            serializePlannerTenantSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerAppsAuditAppRecord":
            serializePowerAppsAuditAppRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerAppsAuditPlanRecord":
            serializePowerAppsAuditPlanRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerAppsAuditResourceRecord":
            serializePowerAppsAuditResourceRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerBiAuditRecord":
            serializePowerBiAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerBiDlpAuditRecord":
            serializePowerBiDlpAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerPagesSiteAuditRecord":
            serializePowerPagesSiteAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerPlatformAdminDlpAuditRecord":
            serializePowerPlatformAdminDlpAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerPlatformAdminEnvironmentAuditRecord":
            serializePowerPlatformAdminEnvironmentAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerPlatformAdministratorActivityRecord":
            serializePowerPlatformAdministratorActivityRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerPlatformLockboxResourceAccessRequestAuditRecord":
            serializePowerPlatformLockboxResourceAccessRequestAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerPlatformLockboxResourceCommandAuditRecord":
            serializePowerPlatformLockboxResourceCommandAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.powerPlatformServiceActivityAuditRecord":
            serializePowerPlatformServiceActivityAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyDataMatchAuditRecord":
            serializePrivacyDataMatchAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyDataMinimizationRecord":
            serializePrivacyDataMinimizationRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyDigestEmailRecord":
            serializePrivacyDigestEmailRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyOpenAccessAuditRecord":
            serializePrivacyOpenAccessAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyPortalAuditRecord":
            serializePrivacyPortalAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyRemediationActionRecord":
            serializePrivacyRemediationActionRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyRemediationRecord":
            serializePrivacyRemediationRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.privacyTenantAuditHistoryRecord":
            serializePrivacyTenantAuditHistoryRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectAuditRecord":
            serializeProjectAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectForTheWebAssignedToMeSettingsAuditRecord":
            serializeProjectForTheWebAssignedToMeSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectForTheWebProjectAuditRecord":
            serializeProjectForTheWebProjectAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectForTheWebProjectSettingsAuditRecord":
            serializeProjectForTheWebProjectSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectForTheWebRoadmapAuditRecord":
            serializeProjectForTheWebRoadmapAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectForTheWebRoadmapItemAuditRecord":
            serializeProjectForTheWebRoadmapItemAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectForTheWebRoadmapSettingsAuditRecord":
            serializeProjectForTheWebRoadmapSettingsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.projectForTheWebTaskAuditRecord":
            serializeProjectForTheWebTaskAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.publicFolderAuditRecord":
            serializePublicFolderAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.purviewInsiderRiskAlertsRecord":
            serializePurviewInsiderRiskAlertsRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.purviewInsiderRiskCasesRecord":
            serializePurviewInsiderRiskCasesRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.quarantineAuditRecord":
            serializeQuarantineAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.recordsManagementAuditRecord":
            serializeRecordsManagementAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.retentionPolicyAuditRecord":
            serializeRetentionPolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.scoreEvidence":
            serializeScoreEvidence(writer, auditData, true);
        break;
        case "#microsoft.graph.security.scorePlatformGenericAuditRecord":
            serializeScorePlatformGenericAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.scriptRunAuditRecord":
            serializeScriptRunAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.searchAuditRecord":
            serializeSearchAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.securityComplianceAlertRecord":
            serializeSecurityComplianceAlertRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.securityComplianceCenterEOPCmdletAuditRecord":
            serializeSecurityComplianceCenterEOPCmdletAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.securityComplianceInsightsAuditRecord":
            serializeSecurityComplianceInsightsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.securityComplianceRBACAuditRecord":
            serializeSecurityComplianceRBACAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.securityComplianceUserChangeAuditRecord":
            serializeSecurityComplianceUserChangeAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointAppPermissionOperationAuditRecord":
            serializeSharePointAppPermissionOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointAuditRecord":
            serializeSharePointAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointCommentOperationAuditRecord":
            serializeSharePointCommentOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointContentTypeOperationAuditRecord":
            serializeSharePointContentTypeOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointESignatureAuditRecord":
            serializeSharePointESignatureAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointFieldOperationAuditRecord":
            serializeSharePointFieldOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointFileOperationAuditRecord":
            serializeSharePointFileOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointListOperationAuditRecord":
            serializeSharePointListOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.sharePointSharingOperationAuditRecord":
            serializeSharePointSharingOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.skypeForBusinessBaseAuditRecord":
            serializeSkypeForBusinessBaseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.skypeForBusinessCmdletsAuditRecord":
            serializeSkypeForBusinessCmdletsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.skypeForBusinessPSTNUsageAuditRecord":
            serializeSkypeForBusinessPSTNUsageAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.skypeForBusinessUsersBlockedAuditRecord":
            serializeSkypeForBusinessUsersBlockedAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.smsCreatePhoneNumberRecord":
            serializeSmsCreatePhoneNumberRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.smsDeletePhoneNumberRecord":
            serializeSmsDeletePhoneNumberRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.supervisoryReviewDayXInsightsAuditRecord":
            serializeSupervisoryReviewDayXInsightsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.syntheticProbeAuditRecord":
            serializeSyntheticProbeAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.teamsEasyApprovalsAuditRecord":
            serializeTeamsEasyApprovalsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.teamsHealthcareAuditRecord":
            serializeTeamsHealthcareAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.teamsUpdatesAuditRecord":
            serializeTeamsUpdatesAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.tenantAllowBlockListAuditRecord":
            serializeTenantAllowBlockListAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.threatFinderAuditRecord":
            serializeThreatFinderAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.threatIntelligenceAtpContentData":
            serializeThreatIntelligenceAtpContentData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.threatIntelligenceMailData":
            serializeThreatIntelligenceMailData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.threatIntelligenceUrlClickData":
            serializeThreatIntelligenceUrlClickData(writer, auditData, true);
        break;
        case "#microsoft.graph.security.todoAuditRecord":
            serializeTodoAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.uamOperationAuditRecord":
            serializeUamOperationAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.unifiedGroupAuditRecord":
            serializeUnifiedGroupAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.unifiedSimulationMatchedItemAuditRecord":
            serializeUnifiedSimulationMatchedItemAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.unifiedSimulationSummaryAuditRecord":
            serializeUnifiedSimulationSummaryAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.uploadCertificateRecord":
            serializeUploadCertificateRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.urbacAssignmentAuditRecord":
            serializeUrbacAssignmentAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.urbacEnableStateAuditRecord":
            serializeUrbacEnableStateAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.urbacRoleAuditRecord":
            serializeUrbacRoleAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.userTrainingAuditRecord":
            serializeUserTrainingAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vfamBasePolicyAuditRecord":
            serializeVfamBasePolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vfamCreatePolicyAuditRecord":
            serializeVfamCreatePolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vfamDeletePolicyAuditRecord":
            serializeVfamDeletePolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vfamUpdatePolicyAuditRecord":
            serializeVfamUpdatePolicyAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vivaGoalsAuditRecord":
            serializeVivaGoalsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vivaLearningAdminAuditRecord":
            serializeVivaLearningAdminAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vivaLearningAuditRecord":
            serializeVivaLearningAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vivaPulseAdminAuditRecord":
            serializeVivaPulseAdminAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vivaPulseOrganizerAuditRecord":
            serializeVivaPulseOrganizerAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vivaPulseReportAuditRecord":
            serializeVivaPulseReportAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.vivaPulseResponseAuditRecord":
            serializeVivaPulseResponseAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.wdatpAlertsAuditRecord":
            serializeWdatpAlertsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.windows365CustomerLockboxAuditRecord":
            serializeWindows365CustomerLockboxAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.workplaceAnalyticsAuditRecord":
            serializeWorkplaceAnalyticsAuditRecord(writer, auditData, true);
        break;
        case "#microsoft.graph.security.yammerAuditRecord":
            serializeYammerAuditRecord(writer, auditData, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param AuditLogQuery The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogQuery(writer: SerializationWriter, auditLogQuery: Partial<AuditLogQuery> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!auditLogQuery || isSerializingDerivedType) { return; }
    serializeEntity(writer, auditLogQuery, isSerializingDerivedType)
    writer.writeCollectionOfPrimitiveValues<string>("administrativeUnitIdFilters", auditLogQuery.administrativeUnitIdFilters);
    writer.writeStringValue("displayName", auditLogQuery.displayName);
    writer.writeDateValue("filterEndDateTime", auditLogQuery.filterEndDateTime);
    writer.writeDateValue("filterStartDateTime", auditLogQuery.filterStartDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("ipAddressFilters", auditLogQuery.ipAddressFilters);
    writer.writeStringValue("keywordFilter", auditLogQuery.keywordFilter);
    writer.writeCollectionOfPrimitiveValues<string>("objectIdFilters", auditLogQuery.objectIdFilters);
    writer.writeCollectionOfPrimitiveValues<string>("operationFilters", auditLogQuery.operationFilters);
    writer.writeCollectionOfObjectValues<AuditLogRecord>("records", auditLogQuery.records, serializeAuditLogRecord);
    if(auditLogQuery.recordTypeFilters)
    writer.writeCollectionOfEnumValues<AuditLogRecordType>("recordTypeFilters", auditLogQuery.recordTypeFilters);
    writer.writeCollectionOfPrimitiveValues<string>("serviceFilters", auditLogQuery.serviceFilters);
    writer.writeEnumValue<AuditLogQueryStatus>("status", auditLogQuery.status);
    writer.writeCollectionOfPrimitiveValues<string>("userPrincipalNameFilters", auditLogQuery.userPrincipalNameFilters);
}
/**
 * Serializes information the current object
 * @param AuditLogQueryCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogQueryCollectionResponse(writer: SerializationWriter, auditLogQueryCollectionResponse: Partial<AuditLogQueryCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!auditLogQueryCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, auditLogQueryCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<AuditLogQuery>("value", auditLogQueryCollectionResponse.value, serializeAuditLogQuery);
}
/**
 * Serializes information the current object
 * @param AuditLogRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogRecord(writer: SerializationWriter, auditLogRecord: Partial<AuditLogRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!auditLogRecord || isSerializingDerivedType) { return; }
    serializeEntity(writer, auditLogRecord, isSerializingDerivedType)
    writer.writeCollectionOfPrimitiveValues<string>("administrativeUnits", auditLogRecord.administrativeUnits);
    writer.writeObjectValue<AuditData>("auditData", auditLogRecord.auditData, serializeAuditData);
    writer.writeEnumValue<AuditLogRecordType>("auditLogRecordType", auditLogRecord.auditLogRecordType);
    writer.writeStringValue("clientIp", auditLogRecord.clientIp);
    writer.writeDateValue("createdDateTime", auditLogRecord.createdDateTime);
    writer.writeStringValue("objectId", auditLogRecord.objectId);
    writer.writeStringValue("operation", auditLogRecord.operation);
    writer.writeStringValue("organizationId", auditLogRecord.organizationId);
    writer.writeStringValue("service", auditLogRecord.service);
    writer.writeStringValue("userId", auditLogRecord.userId);
    writer.writeStringValue("userPrincipalName", auditLogRecord.userPrincipalName);
    writer.writeEnumValue<AuditLogUserType>("userType", auditLogRecord.userType);
}
/**
 * Serializes information the current object
 * @param AuditLogRecordCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditLogRecordCollectionResponse(writer: SerializationWriter, auditLogRecordCollectionResponse: Partial<AuditLogRecordCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!auditLogRecordCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, auditLogRecordCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<AuditLogRecord>("value", auditLogRecordCollectionResponse.value, serializeAuditLogRecord);
}
/**
 * Serializes information the current object
 * @param AuditSearchAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuditSearchAuditRecord(writer: SerializationWriter, auditSearchAuditRecord: Partial<AuditSearchAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!auditSearchAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, auditSearchAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AuthorityTemplate The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuthorityTemplate(writer: SerializationWriter, authorityTemplate: Partial<AuthorityTemplate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!authorityTemplate || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorTemplate(writer, authorityTemplate, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AuthorityTemplateCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAuthorityTemplateCollectionResponse(writer: SerializationWriter, authorityTemplateCollectionResponse: Partial<AuthorityTemplateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!authorityTemplateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, authorityTemplateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<AuthorityTemplate>("value", authorityTemplateCollectionResponse.value, serializeAuthorityTemplate);
}
/**
 * Serializes information the current object
 * @param AutonomousSystem The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAutonomousSystem(writer: SerializationWriter, autonomousSystem: Partial<AutonomousSystem> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!autonomousSystem || isSerializingDerivedType) { return; }
    writer.writeStringValue("name", autonomousSystem.name);
    writer.writeNumberValue("number", autonomousSystem.number);
    writer.writeStringValue("@odata.type", autonomousSystem.odataType);
    writer.writeStringValue("organization", autonomousSystem.organization);
    writer.writeStringValue("value", autonomousSystem.value);
    writer.writeAdditionalData(autonomousSystem.additionalData);
}
/**
 * Serializes information the current object
 * @param AzureActiveDirectoryAccountLogonAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryAccountLogonAuditRecord(writer: SerializationWriter, azureActiveDirectoryAccountLogonAuditRecord: Partial<AzureActiveDirectoryAccountLogonAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!azureActiveDirectoryAccountLogonAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, azureActiveDirectoryAccountLogonAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AzureActiveDirectoryAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryAuditRecord(writer: SerializationWriter, azureActiveDirectoryAuditRecord: Partial<AzureActiveDirectoryAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!azureActiveDirectoryAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, azureActiveDirectoryAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AzureActiveDirectoryBaseAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryBaseAuditRecord(writer: SerializationWriter, azureActiveDirectoryBaseAuditRecord: Partial<AzureActiveDirectoryBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!azureActiveDirectoryBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, azureActiveDirectoryBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AzureActiveDirectoryStsLogonAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureActiveDirectoryStsLogonAuditRecord(writer: SerializationWriter, azureActiveDirectoryStsLogonAuditRecord: Partial<AzureActiveDirectoryStsLogonAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!azureActiveDirectoryStsLogonAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, azureActiveDirectoryStsLogonAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param AzureResourceEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAzureResourceEvidence(writer: SerializationWriter, azureResourceEvidence: Partial<AzureResourceEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!azureResourceEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, azureResourceEvidence, isSerializingDerivedType)
    writer.writeStringValue("resourceId", azureResourceEvidence.resourceId);
    writer.writeStringValue("resourceName", azureResourceEvidence.resourceName);
    writer.writeStringValue("resourceType", azureResourceEvidence.resourceType);
}
/**
 * Serializes information the current object
 * @param BlobContainerEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBlobContainerEvidence(writer: SerializationWriter, blobContainerEvidence: Partial<BlobContainerEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!blobContainerEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, blobContainerEvidence, isSerializingDerivedType)
    writer.writeStringValue("name", blobContainerEvidence.name);
    writer.writeObjectValue<AzureResourceEvidence>("storageResource", blobContainerEvidence.storageResource, serializeAzureResourceEvidence);
    writer.writeStringValue("url", blobContainerEvidence.url);
}
/**
 * Serializes information the current object
 * @param BlobEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBlobEvidence(writer: SerializationWriter, blobEvidence: Partial<BlobEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!blobEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, blobEvidence, isSerializingDerivedType)
    writer.writeObjectValue<BlobContainerEvidence>("blobContainer", blobEvidence.blobContainer, serializeBlobContainerEvidence);
    writer.writeStringValue("etag", blobEvidence.etag);
    writer.writeCollectionOfObjectValues<FileHash>("fileHashes", blobEvidence.fileHashes, serializeFileHash);
    writer.writeStringValue("name", blobEvidence.name);
    writer.writeStringValue("url", blobEvidence.url);
}
/**
 * Serializes information the current object
 * @param CampaignAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCampaignAuditRecord(writer: SerializationWriter, campaignAuditRecord: Partial<CampaignAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!campaignAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, campaignAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CaseAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseAuditRecord(writer: SerializationWriter, caseAuditRecord: Partial<CaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!caseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, caseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CaseEscaped The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseEscaped(writer: SerializationWriter, caseEscaped: Partial<CaseEscaped> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!caseEscaped || isSerializingDerivedType) { return; }
    serializeEntity(writer, caseEscaped, isSerializingDerivedType)
    writer.writeDateValue("createdDateTime", caseEscaped.createdDateTime);
    writer.writeStringValue("description", caseEscaped.description);
    writer.writeStringValue("displayName", caseEscaped.displayName);
    writer.writeObjectValue<IdentitySet>("lastModifiedBy", caseEscaped.lastModifiedBy, serializeIdentitySet);
    writer.writeDateValue("lastModifiedDateTime", caseEscaped.lastModifiedDateTime);
    writer.writeEnumValue<CaseStatus>("status", caseEscaped.status);
    switch (caseEscaped.odataType) {
        case "#microsoft.graph.security.ediscoveryCase":
            serializeEdiscoveryCase(writer, caseEscaped, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param CaseInvestigation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseInvestigation(writer: SerializationWriter, caseInvestigation: Partial<CaseInvestigation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!caseInvestigation || isSerializingDerivedType) { return; }
    serializeAuditData(writer, caseInvestigation, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CaseOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseOperation(writer: SerializationWriter, caseOperation: Partial<CaseOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!caseOperation || isSerializingDerivedType) { return; }
    serializeEntity(writer, caseOperation, isSerializingDerivedType)
    writer.writeEnumValue<CaseAction>("action", caseOperation.action);
    writer.writeDateValue("completedDateTime", caseOperation.completedDateTime);
    writer.writeObjectValue<IdentitySet>("createdBy", caseOperation.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", caseOperation.createdDateTime);
    writer.writeNumberValue("percentProgress", caseOperation.percentProgress);
    writer.writeObjectValue<ResultInfo>("resultInfo", caseOperation.resultInfo, serializeResultInfo);
    writer.writeEnumValue<CaseOperationStatus>("status", caseOperation.status);
    switch (caseOperation.odataType) {
        case "#microsoft.graph.security.ediscoveryAddToReviewSetOperation":
            serializeEdiscoveryAddToReviewSetOperation(writer, caseOperation, true);
        break;
        case "#microsoft.graph.security.ediscoveryEstimateOperation":
            serializeEdiscoveryEstimateOperation(writer, caseOperation, true);
        break;
        case "#microsoft.graph.security.ediscoveryExportOperation":
            serializeEdiscoveryExportOperation(writer, caseOperation, true);
        break;
        case "#microsoft.graph.security.ediscoveryHoldOperation":
            serializeEdiscoveryHoldOperation(writer, caseOperation, true);
        break;
        case "#microsoft.graph.security.ediscoveryIndexOperation":
            serializeEdiscoveryIndexOperation(writer, caseOperation, true);
        break;
        case "#microsoft.graph.security.ediscoveryPurgeDataOperation":
            serializeEdiscoveryPurgeDataOperation(writer, caseOperation, true);
        break;
        case "#microsoft.graph.security.ediscoverySearchExportOperation":
            serializeEdiscoverySearchExportOperation(writer, caseOperation, true);
        break;
        case "#microsoft.graph.security.ediscoveryTagOperation":
            serializeEdiscoveryTagOperation(writer, caseOperation, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param CaseOperationCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaseOperationCollectionResponse(writer: SerializationWriter, caseOperationCollectionResponse: Partial<CaseOperationCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!caseOperationCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, caseOperationCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<CaseOperation>("value", caseOperationCollectionResponse.value, serializeCaseOperation);
}
/**
 * Serializes information the current object
 * @param CasesRoot The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCasesRoot(writer: SerializationWriter, casesRoot: Partial<CasesRoot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!casesRoot || isSerializingDerivedType) { return; }
    serializeEntity(writer, casesRoot, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryCase>("ediscoveryCases", casesRoot.ediscoveryCases, serializeEdiscoveryCase);
}
/**
 * Serializes information the current object
 * @param CategoryTemplate The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCategoryTemplate(writer: SerializationWriter, categoryTemplate: Partial<CategoryTemplate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!categoryTemplate || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorTemplate(writer, categoryTemplate, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<SubcategoryTemplate>("subcategories", categoryTemplate.subcategories, serializeSubcategoryTemplate);
}
/**
 * Serializes information the current object
 * @param CategoryTemplateCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCategoryTemplateCollectionResponse(writer: SerializationWriter, categoryTemplateCollectionResponse: Partial<CategoryTemplateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!categoryTemplateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, categoryTemplateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<CategoryTemplate>("value", categoryTemplateCollectionResponse.value, serializeCategoryTemplate);
}
/**
 * Serializes information the current object
 * @param CdpColdCrawlStatusRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpColdCrawlStatusRecord(writer: SerializationWriter, cdpColdCrawlStatusRecord: Partial<CdpColdCrawlStatusRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cdpColdCrawlStatusRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cdpColdCrawlStatusRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CdpContentExplorerAggregateRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpContentExplorerAggregateRecord(writer: SerializationWriter, cdpContentExplorerAggregateRecord: Partial<CdpContentExplorerAggregateRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cdpContentExplorerAggregateRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cdpContentExplorerAggregateRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CdpDlpSensitiveAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpDlpSensitiveAuditRecord(writer: SerializationWriter, cdpDlpSensitiveAuditRecord: Partial<CdpDlpSensitiveAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cdpDlpSensitiveAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cdpDlpSensitiveAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CdpDlpSensitiveEndpointAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpDlpSensitiveEndpointAuditRecord(writer: SerializationWriter, cdpDlpSensitiveEndpointAuditRecord: Partial<CdpDlpSensitiveEndpointAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cdpDlpSensitiveEndpointAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cdpDlpSensitiveEndpointAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CdpLogRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpLogRecord(writer: SerializationWriter, cdpLogRecord: Partial<CdpLogRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cdpLogRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cdpLogRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CdpOcrBillingRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpOcrBillingRecord(writer: SerializationWriter, cdpOcrBillingRecord: Partial<CdpOcrBillingRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cdpOcrBillingRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cdpOcrBillingRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CdpResourceScopeChangeEventRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCdpResourceScopeChangeEventRecord(writer: SerializationWriter, cdpResourceScopeChangeEventRecord: Partial<CdpResourceScopeChangeEventRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cdpResourceScopeChangeEventRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cdpResourceScopeChangeEventRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CernerSMSLinkRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCernerSMSLinkRecord(writer: SerializationWriter, cernerSMSLinkRecord: Partial<CernerSMSLinkRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cernerSMSLinkRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cernerSMSLinkRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CernerSMSSettingsUpdateRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCernerSMSSettingsUpdateRecord(writer: SerializationWriter, cernerSMSSettingsUpdateRecord: Partial<CernerSMSSettingsUpdateRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cernerSMSSettingsUpdateRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cernerSMSSettingsUpdateRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CernerSMSUnlinkRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCernerSMSUnlinkRecord(writer: SerializationWriter, cernerSMSUnlinkRecord: Partial<CernerSMSUnlinkRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cernerSMSUnlinkRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cernerSMSUnlinkRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CitationTemplate The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCitationTemplate(writer: SerializationWriter, citationTemplate: Partial<CitationTemplate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!citationTemplate || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorTemplate(writer, citationTemplate, isSerializingDerivedType)
    writer.writeStringValue("citationJurisdiction", citationTemplate.citationJurisdiction);
    writer.writeStringValue("citationUrl", citationTemplate.citationUrl);
}
/**
 * Serializes information the current object
 * @param CitationTemplateCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCitationTemplateCollectionResponse(writer: SerializationWriter, citationTemplateCollectionResponse: Partial<CitationTemplateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!citationTemplateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, citationTemplateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<CitationTemplate>("value", citationTemplateCollectionResponse.value, serializeCitationTemplate);
}
/**
 * Serializes information the current object
 * @param CloudApplicationEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudApplicationEvidence(writer: SerializationWriter, cloudApplicationEvidence: Partial<CloudApplicationEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cloudApplicationEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, cloudApplicationEvidence, isSerializingDerivedType)
    writer.writeNumberValue("appId", cloudApplicationEvidence.appId);
    writer.writeStringValue("displayName", cloudApplicationEvidence.displayName);
    writer.writeNumberValue("instanceId", cloudApplicationEvidence.instanceId);
    writer.writeStringValue("instanceName", cloudApplicationEvidence.instanceName);
    writer.writeNumberValue("saasAppId", cloudApplicationEvidence.saasAppId);
    writer.writeObjectValue<Stream>("stream", cloudApplicationEvidence.stream, serializeStream);
}
/**
 * Serializes information the current object
 * @param CloudLogonRequestEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudLogonRequestEvidence(writer: SerializationWriter, cloudLogonRequestEvidence: Partial<CloudLogonRequestEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cloudLogonRequestEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, cloudLogonRequestEvidence, isSerializingDerivedType)
    writer.writeStringValue("requestId", cloudLogonRequestEvidence.requestId);
}
/**
 * Serializes information the current object
 * @param CloudLogonSessionEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCloudLogonSessionEvidence(writer: SerializationWriter, cloudLogonSessionEvidence: Partial<CloudLogonSessionEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cloudLogonSessionEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, cloudLogonSessionEvidence, isSerializingDerivedType)
    writer.writeObjectValue<UserEvidence>("account", cloudLogonSessionEvidence.account, serializeUserEvidence);
    writer.writeStringValue("browser", cloudLogonSessionEvidence.browser);
    writer.writeStringValue("deviceName", cloudLogonSessionEvidence.deviceName);
    writer.writeStringValue("operatingSystem", cloudLogonSessionEvidence.operatingSystem);
    writer.writeDateValue("previousLogonDateTime", cloudLogonSessionEvidence.previousLogonDateTime);
    writer.writeStringValue("protocol", cloudLogonSessionEvidence.protocol);
    writer.writeStringValue("sessionId", cloudLogonSessionEvidence.sessionId);
    writer.writeDateValue("startUtcDateTime", cloudLogonSessionEvidence.startUtcDateTime);
    writer.writeStringValue("userAgent", cloudLogonSessionEvidence.userAgent);
}
/**
 * Serializes information the current object
 * @param ComplianceConnectorAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceConnectorAuditRecord(writer: SerializationWriter, complianceConnectorAuditRecord: Partial<ComplianceConnectorAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceConnectorAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceConnectorAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDLMExchangeAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDLMExchangeAuditRecord(writer: SerializationWriter, complianceDLMExchangeAuditRecord: Partial<ComplianceDLMExchangeAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDLMExchangeAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDLMExchangeAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDLMSharePointAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDLMSharePointAuditRecord(writer: SerializationWriter, complianceDLMSharePointAuditRecord: Partial<ComplianceDLMSharePointAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDLMSharePointAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDLMSharePointAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpApplicationsAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpApplicationsAuditRecord(writer: SerializationWriter, complianceDlpApplicationsAuditRecord: Partial<ComplianceDlpApplicationsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpApplicationsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpApplicationsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpApplicationsClassificationAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpApplicationsClassificationAuditRecord(writer: SerializationWriter, complianceDlpApplicationsClassificationAuditRecord: Partial<ComplianceDlpApplicationsClassificationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpApplicationsClassificationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpApplicationsClassificationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpBaseAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpBaseAuditRecord(writer: SerializationWriter, complianceDlpBaseAuditRecord: Partial<ComplianceDlpBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpClassificationBaseAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpClassificationBaseAuditRecord(writer: SerializationWriter, complianceDlpClassificationBaseAuditRecord: Partial<ComplianceDlpClassificationBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpClassificationBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpClassificationBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpClassificationBaseCdpRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpClassificationBaseCdpRecord(writer: SerializationWriter, complianceDlpClassificationBaseCdpRecord: Partial<ComplianceDlpClassificationBaseCdpRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpClassificationBaseCdpRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpClassificationBaseCdpRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpEndpointAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpEndpointAuditRecord(writer: SerializationWriter, complianceDlpEndpointAuditRecord: Partial<ComplianceDlpEndpointAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpEndpointAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpEndpointAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpEndpointDiscoveryAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpEndpointDiscoveryAuditRecord(writer: SerializationWriter, complianceDlpEndpointDiscoveryAuditRecord: Partial<ComplianceDlpEndpointDiscoveryAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpEndpointDiscoveryAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpEndpointDiscoveryAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpExchangeAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeAuditRecord(writer: SerializationWriter, complianceDlpExchangeAuditRecord: Partial<ComplianceDlpExchangeAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpExchangeAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpExchangeAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpExchangeClassificationAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeClassificationAuditRecord(writer: SerializationWriter, complianceDlpExchangeClassificationAuditRecord: Partial<ComplianceDlpExchangeClassificationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpExchangeClassificationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpExchangeClassificationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpExchangeClassificationCdpRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeClassificationCdpRecord(writer: SerializationWriter, complianceDlpExchangeClassificationCdpRecord: Partial<ComplianceDlpExchangeClassificationCdpRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpExchangeClassificationCdpRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpExchangeClassificationCdpRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpExchangeDiscoveryAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpExchangeDiscoveryAuditRecord(writer: SerializationWriter, complianceDlpExchangeDiscoveryAuditRecord: Partial<ComplianceDlpExchangeDiscoveryAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpExchangeDiscoveryAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpExchangeDiscoveryAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpSharePointAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpSharePointAuditRecord(writer: SerializationWriter, complianceDlpSharePointAuditRecord: Partial<ComplianceDlpSharePointAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpSharePointAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpSharePointAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpSharePointClassificationAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpSharePointClassificationAuditRecord(writer: SerializationWriter, complianceDlpSharePointClassificationAuditRecord: Partial<ComplianceDlpSharePointClassificationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpSharePointClassificationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpSharePointClassificationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceDlpSharePointClassificationExtendedAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceDlpSharePointClassificationExtendedAuditRecord(writer: SerializationWriter, complianceDlpSharePointClassificationExtendedAuditRecord: Partial<ComplianceDlpSharePointClassificationExtendedAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceDlpSharePointClassificationExtendedAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceDlpSharePointClassificationExtendedAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceManagerActionRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceManagerActionRecord(writer: SerializationWriter, complianceManagerActionRecord: Partial<ComplianceManagerActionRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceManagerActionRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceManagerActionRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceSupervisionBaseAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceSupervisionBaseAuditRecord(writer: SerializationWriter, complianceSupervisionBaseAuditRecord: Partial<ComplianceSupervisionBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceSupervisionBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceSupervisionBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ComplianceSupervisionExchangeAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeComplianceSupervisionExchangeAuditRecord(writer: SerializationWriter, complianceSupervisionExchangeAuditRecord: Partial<ComplianceSupervisionExchangeAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!complianceSupervisionExchangeAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, complianceSupervisionExchangeAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ConsumptionResourceAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeConsumptionResourceAuditRecord(writer: SerializationWriter, consumptionResourceAuditRecord: Partial<ConsumptionResourceAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!consumptionResourceAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, consumptionResourceAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ContainerEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContainerEvidence(writer: SerializationWriter, containerEvidence: Partial<ContainerEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!containerEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, containerEvidence, isSerializingDerivedType)
    writer.writeCollectionOfPrimitiveValues<string>("args", containerEvidence.args);
    writer.writeCollectionOfPrimitiveValues<string>("command", containerEvidence.command);
    writer.writeStringValue("containerId", containerEvidence.containerId);
    writer.writeObjectValue<ContainerImageEvidence>("image", containerEvidence.image, serializeContainerImageEvidence);
    writer.writeBooleanValue("isPrivileged", containerEvidence.isPrivileged);
    writer.writeStringValue("name", containerEvidence.name);
    writer.writeObjectValue<KubernetesPodEvidence>("pod", containerEvidence.pod, serializeKubernetesPodEvidence);
}
/**
 * Serializes information the current object
 * @param ContainerImageEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContainerImageEvidence(writer: SerializationWriter, containerImageEvidence: Partial<ContainerImageEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!containerImageEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, containerImageEvidence, isSerializingDerivedType)
    writer.writeObjectValue<ContainerImageEvidence>("digestImage", containerImageEvidence.digestImage, serializeContainerImageEvidence);
    writer.writeStringValue("imageId", containerImageEvidence.imageId);
    writer.writeObjectValue<ContainerRegistryEvidence>("registry", containerImageEvidence.registry, serializeContainerRegistryEvidence);
}
/**
 * Serializes information the current object
 * @param ContainerRegistryEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeContainerRegistryEvidence(writer: SerializationWriter, containerRegistryEvidence: Partial<ContainerRegistryEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!containerRegistryEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, containerRegistryEvidence, isSerializingDerivedType)
    writer.writeStringValue("registry", containerRegistryEvidence.registry);
}
/**
 * Serializes information the current object
 * @param CopilotInteractionAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCopilotInteractionAuditRecord(writer: SerializationWriter, copilotInteractionAuditRecord: Partial<CopilotInteractionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!copilotInteractionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, copilotInteractionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CoreReportingSettingsAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCoreReportingSettingsAuditRecord(writer: SerializationWriter, coreReportingSettingsAuditRecord: Partial<CoreReportingSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!coreReportingSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, coreReportingSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CortanaBriefingAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCortanaBriefingAuditRecord(writer: SerializationWriter, cortanaBriefingAuditRecord: Partial<CortanaBriefingAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cortanaBriefingAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cortanaBriefingAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CpsCommonPolicyAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCpsCommonPolicyAuditRecord(writer: SerializationWriter, cpsCommonPolicyAuditRecord: Partial<CpsCommonPolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cpsCommonPolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cpsCommonPolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CpsPolicyConfigAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCpsPolicyConfigAuditRecord(writer: SerializationWriter, cpsPolicyConfigAuditRecord: Partial<CpsPolicyConfigAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cpsPolicyConfigAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, cpsPolicyConfigAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CrmBaseAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCrmBaseAuditRecord(writer: SerializationWriter, crmBaseAuditRecord: Partial<CrmBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!crmBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, crmBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CrmEntityOperationAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCrmEntityOperationAuditRecord(writer: SerializationWriter, crmEntityOperationAuditRecord: Partial<CrmEntityOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!crmEntityOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, crmEntityOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CustomerKeyServiceEncryptionAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCustomerKeyServiceEncryptionAuditRecord(writer: SerializationWriter, customerKeyServiceEncryptionAuditRecord: Partial<CustomerKeyServiceEncryptionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!customerKeyServiceEncryptionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, customerKeyServiceEncryptionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param CvssSummary The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCvssSummary(writer: SerializationWriter, cvssSummary: Partial<CvssSummary> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!cvssSummary || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", cvssSummary.odataType);
    writer.writeNumberValue("score", cvssSummary.score);
    writer.writeEnumValue<VulnerabilitySeverity>("severity", cvssSummary.severity);
    writer.writeStringValue("vectorString", cvssSummary.vectorString);
    writer.writeAdditionalData(cvssSummary.additionalData);
}
/**
 * Serializes information the current object
 * @param DataCenterSecurityBaseAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataCenterSecurityBaseAuditRecord(writer: SerializationWriter, dataCenterSecurityBaseAuditRecord: Partial<DataCenterSecurityBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataCenterSecurityBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dataCenterSecurityBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DataCenterSecurityCmdletAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataCenterSecurityCmdletAuditRecord(writer: SerializationWriter, dataCenterSecurityCmdletAuditRecord: Partial<DataCenterSecurityCmdletAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataCenterSecurityCmdletAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dataCenterSecurityCmdletAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DataGovernanceAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataGovernanceAuditRecord(writer: SerializationWriter, dataGovernanceAuditRecord: Partial<DataGovernanceAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataGovernanceAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dataGovernanceAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DataInsightsRestApiAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataInsightsRestApiAuditRecord(writer: SerializationWriter, dataInsightsRestApiAuditRecord: Partial<DataInsightsRestApiAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataInsightsRestApiAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dataInsightsRestApiAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DataLakeExportOperationAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataLakeExportOperationAuditRecord(writer: SerializationWriter, dataLakeExportOperationAuditRecord: Partial<DataLakeExportOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataLakeExportOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dataLakeExportOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DataSet The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSet(writer: SerializationWriter, dataSet: Partial<DataSet> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataSet || isSerializingDerivedType) { return; }
    serializeEntity(writer, dataSet, isSerializingDerivedType)
    writer.writeObjectValue<IdentitySet>("createdBy", dataSet.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", dataSet.createdDateTime);
    writer.writeStringValue("description", dataSet.description);
    writer.writeStringValue("displayName", dataSet.displayName);
    switch (dataSet.odataType) {
        case "#microsoft.graph.security.ediscoveryReviewSet":
            serializeEdiscoveryReviewSet(writer, dataSet, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param DataShareOperationAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataShareOperationAuditRecord(writer: SerializationWriter, dataShareOperationAuditRecord: Partial<DataShareOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataShareOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dataShareOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DataSource The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSource(writer: SerializationWriter, dataSource: Partial<DataSource> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataSource || isSerializingDerivedType) { return; }
    serializeEntity(writer, dataSource, isSerializingDerivedType)
    writer.writeObjectValue<IdentitySet>("createdBy", dataSource.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", dataSource.createdDateTime);
    writer.writeStringValue("displayName", dataSource.displayName);
    writer.writeEnumValue<DataSourceHoldStatus>("holdStatus", dataSource.holdStatus);
    switch (dataSource.odataType) {
        case "#microsoft.graph.security.siteSource":
            serializeSiteSource(writer, dataSource, true);
        break;
        case "#microsoft.graph.security.unifiedGroupSource":
            serializeUnifiedGroupSource(writer, dataSource, true);
        break;
        case "#microsoft.graph.security.userSource":
            serializeUserSource(writer, dataSource, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param DataSourceCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSourceCollectionResponse(writer: SerializationWriter, dataSourceCollectionResponse: Partial<DataSourceCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataSourceCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, dataSourceCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<DataSource>("value", dataSourceCollectionResponse.value, serializeDataSource);
}
/**
 * Serializes information the current object
 * @param DataSourceContainer The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDataSourceContainer(writer: SerializationWriter, dataSourceContainer: Partial<DataSourceContainer> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dataSourceContainer || isSerializingDerivedType) { return; }
    serializeEntity(writer, dataSourceContainer, isSerializingDerivedType)
    writer.writeDateValue("createdDateTime", dataSourceContainer.createdDateTime);
    writer.writeStringValue("displayName", dataSourceContainer.displayName);
    writer.writeEnumValue<DataSourceHoldStatus>("holdStatus", dataSourceContainer.holdStatus);
    writer.writeDateValue("lastModifiedDateTime", dataSourceContainer.lastModifiedDateTime);
    writer.writeDateValue("releasedDateTime", dataSourceContainer.releasedDateTime);
    writer.writeEnumValue<DataSourceContainerStatus>("status", dataSourceContainer.status);
    switch (dataSourceContainer.odataType) {
        case "#microsoft.graph.security.ediscoveryCustodian":
            serializeEdiscoveryCustodian(writer, dataSourceContainer, true);
        break;
        case "#microsoft.graph.security.ediscoveryNoncustodialDataSource":
            serializeEdiscoveryNoncustodialDataSource(writer, dataSourceContainer, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param DefaultAuditData The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDefaultAuditData(writer: SerializationWriter, defaultAuditData: Partial<DefaultAuditData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!defaultAuditData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, defaultAuditData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DefenderSecurityAlertBaseRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDefenderSecurityAlertBaseRecord(writer: SerializationWriter, defenderSecurityAlertBaseRecord: Partial<DefenderSecurityAlertBaseRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!defenderSecurityAlertBaseRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, defenderSecurityAlertBaseRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DeleteCertificateRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeleteCertificateRecord(writer: SerializationWriter, deleteCertificateRecord: Partial<DeleteCertificateRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!deleteCertificateRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, deleteCertificateRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DepartmentTemplate The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDepartmentTemplate(writer: SerializationWriter, departmentTemplate: Partial<DepartmentTemplate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!departmentTemplate || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorTemplate(writer, departmentTemplate, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DepartmentTemplateCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDepartmentTemplateCollectionResponse(writer: SerializationWriter, departmentTemplateCollectionResponse: Partial<DepartmentTemplateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!departmentTemplateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, departmentTemplateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<DepartmentTemplate>("value", departmentTemplateCollectionResponse.value, serializeDepartmentTemplate);
}
/**
 * Serializes information the current object
 * @param DeploymentAccessKeyType The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeploymentAccessKeyType(writer: SerializationWriter, deploymentAccessKeyType: Partial<DeploymentAccessKeyType> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!deploymentAccessKeyType || isSerializingDerivedType) { return; }
    writer.writeStringValue("deploymentAccessKey", deploymentAccessKeyType.deploymentAccessKey);
    writer.writeStringValue("@odata.type", deploymentAccessKeyType.odataType);
    writer.writeAdditionalData(deploymentAccessKeyType.additionalData);
}
/**
 * Serializes information the current object
 * @param DeviceEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDeviceEvidence(writer: SerializationWriter, deviceEvidence: Partial<DeviceEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!deviceEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, deviceEvidence, isSerializingDerivedType)
    writer.writeStringValue("azureAdDeviceId", deviceEvidence.azureAdDeviceId);
    writer.writeEnumValue<DefenderAvStatus>("defenderAvStatus", deviceEvidence.defenderAvStatus);
    writer.writeStringValue("deviceDnsName", deviceEvidence.deviceDnsName);
    writer.writeStringValue("dnsDomain", deviceEvidence.dnsDomain);
    writer.writeDateValue("firstSeenDateTime", deviceEvidence.firstSeenDateTime);
    writer.writeEnumValue<DeviceHealthStatus>("healthStatus", deviceEvidence.healthStatus);
    writer.writeStringValue("hostName", deviceEvidence.hostName);
    writer.writeCollectionOfPrimitiveValues<string>("ipInterfaces", deviceEvidence.ipInterfaces);
    writer.writeStringValue("lastExternalIpAddress", deviceEvidence.lastExternalIpAddress);
    writer.writeStringValue("lastIpAddress", deviceEvidence.lastIpAddress);
    writer.writeCollectionOfObjectValues<LoggedOnUser>("loggedOnUsers", deviceEvidence.loggedOnUsers, serializeLoggedOnUser);
    writer.writeStringValue("mdeDeviceId", deviceEvidence.mdeDeviceId);
    writer.writeStringValue("ntDomain", deviceEvidence.ntDomain);
    writer.writeEnumValue<OnboardingStatus>("onboardingStatus", deviceEvidence.onboardingStatus);
    writer.writeNumberValue("osBuild", deviceEvidence.osBuild);
    writer.writeStringValue("osPlatform", deviceEvidence.osPlatform);
    writer.writeNumberValue("rbacGroupId", deviceEvidence.rbacGroupId);
    writer.writeStringValue("rbacGroupName", deviceEvidence.rbacGroupName);
    writer.writeEnumValue<DeviceRiskScore>("riskScore", deviceEvidence.riskScore);
    writer.writeStringValue("version", deviceEvidence.version);
    writer.writeObjectValue<VmMetadata>("vmMetadata", deviceEvidence.vmMetadata, serializeVmMetadata);
}
/**
 * Serializes information the current object
 * @param Dictionary The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDictionary(writer: SerializationWriter, dictionary: Partial<Dictionary> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dictionary || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", dictionary.odataType);
    writer.writeAdditionalData(dictionary.additionalData);
}
/**
 * Serializes information the current object
 * @param DisableConsentRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDisableConsentRecord(writer: SerializationWriter, disableConsentRecord: Partial<DisableConsentRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!disableConsentRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, disableConsentRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DiscoveryAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDiscoveryAuditRecord(writer: SerializationWriter, discoveryAuditRecord: Partial<DiscoveryAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!discoveryAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, discoveryAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DispositionReviewStage The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDispositionReviewStage(writer: SerializationWriter, dispositionReviewStage: Partial<DispositionReviewStage> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dispositionReviewStage || isSerializingDerivedType) { return; }
    serializeEntity(writer, dispositionReviewStage, isSerializingDerivedType)
    writer.writeStringValue("name", dispositionReviewStage.name);
    writer.writeCollectionOfPrimitiveValues<string>("reviewersEmailAddresses", dispositionReviewStage.reviewersEmailAddresses);
    writer.writeStringValue("stageNumber", dispositionReviewStage.stageNumber);
}
/**
 * Serializes information the current object
 * @param DispositionReviewStageCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDispositionReviewStageCollectionResponse(writer: SerializationWriter, dispositionReviewStageCollectionResponse: Partial<DispositionReviewStageCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dispositionReviewStageCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, dispositionReviewStageCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<DispositionReviewStage>("value", dispositionReviewStageCollectionResponse.value, serializeDispositionReviewStage);
}
/**
 * Serializes information the current object
 * @param DlpEndpointAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDlpEndpointAuditRecord(writer: SerializationWriter, dlpEndpointAuditRecord: Partial<DlpEndpointAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dlpEndpointAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dlpEndpointAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DlpSensitiveInformationTypeCmdletRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDlpSensitiveInformationTypeCmdletRecord(writer: SerializationWriter, dlpSensitiveInformationTypeCmdletRecord: Partial<DlpSensitiveInformationTypeCmdletRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dlpSensitiveInformationTypeCmdletRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dlpSensitiveInformationTypeCmdletRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DlpSensitiveInformationTypeRulePackageCmdletRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDlpSensitiveInformationTypeRulePackageCmdletRecord(writer: SerializationWriter, dlpSensitiveInformationTypeRulePackageCmdletRecord: Partial<DlpSensitiveInformationTypeRulePackageCmdletRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dlpSensitiveInformationTypeRulePackageCmdletRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dlpSensitiveInformationTypeRulePackageCmdletRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param DnsEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDnsEvidence(writer: SerializationWriter, dnsEvidence: Partial<DnsEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dnsEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, dnsEvidence, isSerializingDerivedType)
    writer.writeObjectValue<IpEvidence>("dnsServerIp", dnsEvidence.dnsServerIp, serializeIpEvidence);
    writer.writeStringValue("domainName", dnsEvidence.domainName);
    writer.writeObjectValue<IpEvidence>("hostIpAddress", dnsEvidence.hostIpAddress, serializeIpEvidence);
    writer.writeCollectionOfObjectValues<IpEvidence>("ipAddresses", dnsEvidence.ipAddresses, serializeIpEvidence);
}
/**
 * Serializes information the current object
 * @param DownloadCertificateRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDownloadCertificateRecord(writer: SerializationWriter, downloadCertificateRecord: Partial<DownloadCertificateRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!downloadCertificateRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, downloadCertificateRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param Dynamics365BusinessCentralAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDynamics365BusinessCentralAuditRecord(writer: SerializationWriter, dynamics365BusinessCentralAuditRecord: Partial<Dynamics365BusinessCentralAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dynamics365BusinessCentralAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, dynamics365BusinessCentralAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EdiscoveryAddToReviewSetOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryAddToReviewSetOperation(writer: SerializationWriter, ediscoveryAddToReviewSetOperation: Partial<EdiscoveryAddToReviewSetOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryAddToReviewSetOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoveryAddToReviewSetOperation, isSerializingDerivedType)
    writer.writeEnumValue<AdditionalDataOptions[]>("additionalDataOptions", ediscoveryAddToReviewSetOperation.additionalDataOptions);
    writer.writeEnumValue<CloudAttachmentVersion>("cloudAttachmentVersion", ediscoveryAddToReviewSetOperation.cloudAttachmentVersion);
    writer.writeEnumValue<DocumentVersion>("documentVersion", ediscoveryAddToReviewSetOperation.documentVersion);
    writer.writeEnumValue<ItemsToInclude[]>("itemsToInclude", ediscoveryAddToReviewSetOperation.itemsToInclude);
    writer.writeObjectValue<EdiscoveryReviewSet>("reviewSet", ediscoveryAddToReviewSetOperation.reviewSet, serializeEdiscoveryReviewSet);
    writer.writeObjectValue<EdiscoverySearch>("search", ediscoveryAddToReviewSetOperation.search, serializeEdiscoverySearch);
}
/**
 * Serializes information the current object
 * @param EdiscoveryCase The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCase(writer: SerializationWriter, ediscoveryCase: Partial<EdiscoveryCase> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryCase || isSerializingDerivedType) { return; }
    serializeCaseEscaped(writer, ediscoveryCase, isSerializingDerivedType)
    writer.writeObjectValue<IdentitySet>("closedBy", ediscoveryCase.closedBy, serializeIdentitySet);
    writer.writeDateValue("closedDateTime", ediscoveryCase.closedDateTime);
    writer.writeCollectionOfObjectValues<EdiscoveryCustodian>("custodians", ediscoveryCase.custodians, serializeEdiscoveryCustodian);
    writer.writeStringValue("externalId", ediscoveryCase.externalId);
    writer.writeCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>("noncustodialDataSources", ediscoveryCase.noncustodialDataSources, serializeEdiscoveryNoncustodialDataSource);
    writer.writeCollectionOfObjectValues<CaseOperation>("operations", ediscoveryCase.operations, serializeCaseOperation);
    writer.writeCollectionOfObjectValues<EdiscoveryReviewSet>("reviewSets", ediscoveryCase.reviewSets, serializeEdiscoveryReviewSet);
    writer.writeCollectionOfObjectValues<EdiscoverySearch>("searches", ediscoveryCase.searches, serializeEdiscoverySearch);
    writer.writeObjectValue<EdiscoveryCaseSettings>("settings", ediscoveryCase.settings, serializeEdiscoveryCaseSettings);
    writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("tags", ediscoveryCase.tags, serializeEdiscoveryReviewTag);
}
/**
 * Serializes information the current object
 * @param EdiscoveryCaseCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCaseCollectionResponse(writer: SerializationWriter, ediscoveryCaseCollectionResponse: Partial<EdiscoveryCaseCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryCaseCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, ediscoveryCaseCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryCase>("value", ediscoveryCaseCollectionResponse.value, serializeEdiscoveryCase);
}
/**
 * Serializes information the current object
 * @param EdiscoveryCaseSettings The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCaseSettings(writer: SerializationWriter, ediscoveryCaseSettings: Partial<EdiscoveryCaseSettings> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryCaseSettings || isSerializingDerivedType) { return; }
    serializeEntity(writer, ediscoveryCaseSettings, isSerializingDerivedType)
    writer.writeObjectValue<OcrSettings>("ocr", ediscoveryCaseSettings.ocr, serializeOcrSettings);
    writer.writeObjectValue<RedundancyDetectionSettings>("redundancyDetection", ediscoveryCaseSettings.redundancyDetection, serializeRedundancyDetectionSettings);
    writer.writeObjectValue<TopicModelingSettings>("topicModeling", ediscoveryCaseSettings.topicModeling, serializeTopicModelingSettings);
}
/**
 * Serializes information the current object
 * @param EdiscoveryCustodian The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCustodian(writer: SerializationWriter, ediscoveryCustodian: Partial<EdiscoveryCustodian> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryCustodian || isSerializingDerivedType) { return; }
    serializeDataSourceContainer(writer, ediscoveryCustodian, isSerializingDerivedType)
    writer.writeDateValue("acknowledgedDateTime", ediscoveryCustodian.acknowledgedDateTime);
    writer.writeStringValue("email", ediscoveryCustodian.email);
    writer.writeObjectValue<EdiscoveryIndexOperation>("lastIndexOperation", ediscoveryCustodian.lastIndexOperation, serializeEdiscoveryIndexOperation);
    writer.writeCollectionOfObjectValues<SiteSource>("siteSources", ediscoveryCustodian.siteSources, serializeSiteSource);
    writer.writeCollectionOfObjectValues<UnifiedGroupSource>("unifiedGroupSources", ediscoveryCustodian.unifiedGroupSources, serializeUnifiedGroupSource);
    writer.writeCollectionOfObjectValues<UserSource>("userSources", ediscoveryCustodian.userSources, serializeUserSource);
}
/**
 * Serializes information the current object
 * @param EdiscoveryCustodianCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryCustodianCollectionResponse(writer: SerializationWriter, ediscoveryCustodianCollectionResponse: Partial<EdiscoveryCustodianCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryCustodianCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, ediscoveryCustodianCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryCustodian>("value", ediscoveryCustodianCollectionResponse.value, serializeEdiscoveryCustodian);
}
/**
 * Serializes information the current object
 * @param EdiscoveryEstimateOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryEstimateOperation(writer: SerializationWriter, ediscoveryEstimateOperation: Partial<EdiscoveryEstimateOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryEstimateOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoveryEstimateOperation, isSerializingDerivedType)
    writer.writeNumberValue("indexedItemCount", ediscoveryEstimateOperation.indexedItemCount);
    writer.writeNumberValue("indexedItemsSize", ediscoveryEstimateOperation.indexedItemsSize);
    writer.writeNumberValue("mailboxCount", ediscoveryEstimateOperation.mailboxCount);
    writer.writeObjectValue<EdiscoverySearch>("search", ediscoveryEstimateOperation.search, serializeEdiscoverySearch);
    writer.writeNumberValue("siteCount", ediscoveryEstimateOperation.siteCount);
    writer.writeEnumValue<StatisticsOptions[]>("statisticsOptions", ediscoveryEstimateOperation.statisticsOptions);
    writer.writeNumberValue("unindexedItemCount", ediscoveryEstimateOperation.unindexedItemCount);
    writer.writeNumberValue("unindexedItemsSize", ediscoveryEstimateOperation.unindexedItemsSize);
}
/**
 * Serializes information the current object
 * @param EdiscoveryExportOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryExportOperation(writer: SerializationWriter, ediscoveryExportOperation: Partial<EdiscoveryExportOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryExportOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoveryExportOperation, isSerializingDerivedType)
    writer.writeStringValue("description", ediscoveryExportOperation.description);
    writer.writeCollectionOfObjectValues<ExportFileMetadata>("exportFileMetadata", ediscoveryExportOperation.exportFileMetadata, serializeExportFileMetadata);
    writer.writeEnumValue<ExportOptions[]>("exportOptions", ediscoveryExportOperation.exportOptions);
    writer.writeEnumValue<ExportFileStructure>("exportStructure", ediscoveryExportOperation.exportStructure);
    writer.writeStringValue("outputName", ediscoveryExportOperation.outputName);
    writer.writeObjectValue<EdiscoveryReviewSet>("reviewSet", ediscoveryExportOperation.reviewSet, serializeEdiscoveryReviewSet);
    writer.writeObjectValue<EdiscoveryReviewSetQuery>("reviewSetQuery", ediscoveryExportOperation.reviewSetQuery, serializeEdiscoveryReviewSetQuery);
}
/**
 * Serializes information the current object
 * @param EdiscoveryHoldOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryHoldOperation(writer: SerializationWriter, ediscoveryHoldOperation: Partial<EdiscoveryHoldOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryHoldOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoveryHoldOperation, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EdiscoveryIndexOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryIndexOperation(writer: SerializationWriter, ediscoveryIndexOperation: Partial<EdiscoveryIndexOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryIndexOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoveryIndexOperation, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EdiscoveryNoncustodialDataSource The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryNoncustodialDataSource(writer: SerializationWriter, ediscoveryNoncustodialDataSource: Partial<EdiscoveryNoncustodialDataSource> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryNoncustodialDataSource || isSerializingDerivedType) { return; }
    serializeDataSourceContainer(writer, ediscoveryNoncustodialDataSource, isSerializingDerivedType)
    writer.writeObjectValue<DataSource>("dataSource", ediscoveryNoncustodialDataSource.dataSource, serializeDataSource);
    writer.writeObjectValue<EdiscoveryIndexOperation>("lastIndexOperation", ediscoveryNoncustodialDataSource.lastIndexOperation, serializeEdiscoveryIndexOperation);
}
/**
 * Serializes information the current object
 * @param EdiscoveryNoncustodialDataSourceCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryNoncustodialDataSourceCollectionResponse(writer: SerializationWriter, ediscoveryNoncustodialDataSourceCollectionResponse: Partial<EdiscoveryNoncustodialDataSourceCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryNoncustodialDataSourceCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, ediscoveryNoncustodialDataSourceCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>("value", ediscoveryNoncustodialDataSourceCollectionResponse.value, serializeEdiscoveryNoncustodialDataSource);
}
/**
 * Serializes information the current object
 * @param EdiscoveryPurgeDataOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryPurgeDataOperation(writer: SerializationWriter, ediscoveryPurgeDataOperation: Partial<EdiscoveryPurgeDataOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryPurgeDataOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoveryPurgeDataOperation, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EdiscoveryReviewSet The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSet(writer: SerializationWriter, ediscoveryReviewSet: Partial<EdiscoveryReviewSet> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryReviewSet || isSerializingDerivedType) { return; }
    serializeDataSet(writer, ediscoveryReviewSet, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryReviewSetQuery>("queries", ediscoveryReviewSet.queries, serializeEdiscoveryReviewSetQuery);
}
/**
 * Serializes information the current object
 * @param EdiscoveryReviewSetCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSetCollectionResponse(writer: SerializationWriter, ediscoveryReviewSetCollectionResponse: Partial<EdiscoveryReviewSetCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryReviewSetCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, ediscoveryReviewSetCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryReviewSet>("value", ediscoveryReviewSetCollectionResponse.value, serializeEdiscoveryReviewSet);
}
/**
 * Serializes information the current object
 * @param EdiscoveryReviewSetQuery The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSetQuery(writer: SerializationWriter, ediscoveryReviewSetQuery: Partial<EdiscoveryReviewSetQuery> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryReviewSetQuery || isSerializingDerivedType) { return; }
    serializeSearch(writer, ediscoveryReviewSetQuery, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EdiscoveryReviewSetQueryCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewSetQueryCollectionResponse(writer: SerializationWriter, ediscoveryReviewSetQueryCollectionResponse: Partial<EdiscoveryReviewSetQueryCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryReviewSetQueryCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, ediscoveryReviewSetQueryCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryReviewSetQuery>("value", ediscoveryReviewSetQueryCollectionResponse.value, serializeEdiscoveryReviewSetQuery);
}
/**
 * Serializes information the current object
 * @param EdiscoveryReviewTag The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewTag(writer: SerializationWriter, ediscoveryReviewTag: Partial<EdiscoveryReviewTag> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryReviewTag || isSerializingDerivedType) { return; }
    serializeTag(writer, ediscoveryReviewTag, isSerializingDerivedType)
    writer.writeEnumValue<ChildSelectability>("childSelectability", ediscoveryReviewTag.childSelectability);
    writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("childTags", ediscoveryReviewTag.childTags, serializeEdiscoveryReviewTag);
    writer.writeObjectValue<EdiscoveryReviewTag>("parent", ediscoveryReviewTag.parent, serializeEdiscoveryReviewTag);
}
/**
 * Serializes information the current object
 * @param EdiscoveryReviewTagCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryReviewTagCollectionResponse(writer: SerializationWriter, ediscoveryReviewTagCollectionResponse: Partial<EdiscoveryReviewTagCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryReviewTagCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, ediscoveryReviewTagCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoveryReviewTag>("value", ediscoveryReviewTagCollectionResponse.value, serializeEdiscoveryReviewTag);
}
/**
 * Serializes information the current object
 * @param EdiscoverySearch The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoverySearch(writer: SerializationWriter, ediscoverySearch: Partial<EdiscoverySearch> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoverySearch || isSerializingDerivedType) { return; }
    serializeSearch(writer, ediscoverySearch, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<DataSource>("additionalSources", ediscoverySearch.additionalSources, serializeDataSource);
    writer.writeObjectValue<EdiscoveryAddToReviewSetOperation>("addToReviewSetOperation", ediscoverySearch.addToReviewSetOperation, serializeEdiscoveryAddToReviewSetOperation);
    writer.writeCollectionOfObjectValues<DataSource>("custodianSources", ediscoverySearch.custodianSources, serializeDataSource);
    writer.writeEnumValue<DataSourceScopes[]>("dataSourceScopes", ediscoverySearch.dataSourceScopes);
    writer.writeObjectValue<EdiscoveryEstimateOperation>("lastEstimateStatisticsOperation", ediscoverySearch.lastEstimateStatisticsOperation, serializeEdiscoveryEstimateOperation);
    writer.writeCollectionOfObjectValues<EdiscoveryNoncustodialDataSource>("noncustodialSources", ediscoverySearch.noncustodialSources, serializeEdiscoveryNoncustodialDataSource);
}
/**
 * Serializes information the current object
 * @param EdiscoverySearchCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoverySearchCollectionResponse(writer: SerializationWriter, ediscoverySearchCollectionResponse: Partial<EdiscoverySearchCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoverySearchCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, ediscoverySearchCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<EdiscoverySearch>("value", ediscoverySearchCollectionResponse.value, serializeEdiscoverySearch);
}
/**
 * Serializes information the current object
 * @param EdiscoverySearchExportOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoverySearchExportOperation(writer: SerializationWriter, ediscoverySearchExportOperation: Partial<EdiscoverySearchExportOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoverySearchExportOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoverySearchExportOperation, isSerializingDerivedType)
    writer.writeEnumValue<AdditionalOptions[]>("additionalOptions", ediscoverySearchExportOperation.additionalOptions);
    writer.writeEnumValue<CloudAttachmentVersion>("cloudAttachmentVersion", ediscoverySearchExportOperation.cloudAttachmentVersion);
    writer.writeStringValue("description", ediscoverySearchExportOperation.description);
    writer.writeStringValue("displayName", ediscoverySearchExportOperation.displayName);
    writer.writeEnumValue<DocumentVersion>("documentVersion", ediscoverySearchExportOperation.documentVersion);
    writer.writeEnumValue<ExportCriteria[]>("exportCriteria", ediscoverySearchExportOperation.exportCriteria);
    writer.writeCollectionOfObjectValues<ExportFileMetadata>("exportFileMetadata", ediscoverySearchExportOperation.exportFileMetadata, serializeExportFileMetadata);
    writer.writeEnumValue<ExportFormat>("exportFormat", ediscoverySearchExportOperation.exportFormat);
    writer.writeEnumValue<ExportLocation[]>("exportLocation", ediscoverySearchExportOperation.exportLocation);
    writer.writeBooleanValue("exportSingleItems", ediscoverySearchExportOperation.exportSingleItems);
    writer.writeObjectValue<EdiscoverySearch>("search", ediscoverySearchExportOperation.search, serializeEdiscoverySearch);
}
/**
 * Serializes information the current object
 * @param EdiscoveryTagOperation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEdiscoveryTagOperation(writer: SerializationWriter, ediscoveryTagOperation: Partial<EdiscoveryTagOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ediscoveryTagOperation || isSerializingDerivedType) { return; }
    serializeCaseOperation(writer, ediscoveryTagOperation, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EmailSender The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEmailSender(writer: SerializationWriter, emailSender: Partial<EmailSender> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!emailSender || isSerializingDerivedType) { return; }
    writer.writeStringValue("displayName", emailSender.displayName);
    writer.writeStringValue("domainName", emailSender.domainName);
    writer.writeStringValue("emailAddress", emailSender.emailAddress);
    writer.writeStringValue("@odata.type", emailSender.odataType);
    writer.writeAdditionalData(emailSender.additionalData);
}
/**
 * Serializes information the current object
 * @param EnableConsentRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEnableConsentRecord(writer: SerializationWriter, enableConsentRecord: Partial<EnableConsentRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!enableConsentRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, enableConsentRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EpicSMSLinkRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEpicSMSLinkRecord(writer: SerializationWriter, epicSMSLinkRecord: Partial<EpicSMSLinkRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!epicSMSLinkRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, epicSMSLinkRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EpicSMSSettingsUpdateRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEpicSMSSettingsUpdateRecord(writer: SerializationWriter, epicSMSSettingsUpdateRecord: Partial<EpicSMSSettingsUpdateRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!epicSMSSettingsUpdateRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, epicSMSSettingsUpdateRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EpicSMSUnlinkRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEpicSMSUnlinkRecord(writer: SerializationWriter, epicSMSUnlinkRecord: Partial<EpicSMSUnlinkRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!epicSMSUnlinkRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, epicSMSUnlinkRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param EventPropagationResult The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEventPropagationResult(writer: SerializationWriter, eventPropagationResult: Partial<EventPropagationResult> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!eventPropagationResult || isSerializingDerivedType) { return; }
    writer.writeStringValue("location", eventPropagationResult.location);
    writer.writeStringValue("@odata.type", eventPropagationResult.odataType);
    writer.writeStringValue("serviceName", eventPropagationResult.serviceName);
    writer.writeEnumValue<EventPropagationStatus>("status", eventPropagationResult.status);
    writer.writeStringValue("statusInformation", eventPropagationResult.statusInformation);
    writer.writeAdditionalData(eventPropagationResult.additionalData);
}
/**
 * Serializes information the current object
 * @param EventQuery The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEventQuery(writer: SerializationWriter, eventQuery: Partial<EventQuery> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!eventQuery || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", eventQuery.odataType);
    writer.writeStringValue("query", eventQuery.query);
    writer.writeEnumValue<QueryType>("queryType", eventQuery.queryType);
    writer.writeAdditionalData(eventQuery.additionalData);
}
/**
 * Serializes information the current object
 * @param ExchangeAdminAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeAdminAuditRecord(writer: SerializationWriter, exchangeAdminAuditRecord: Partial<ExchangeAdminAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!exchangeAdminAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, exchangeAdminAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ExchangeAggregatedMailboxAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeAggregatedMailboxAuditRecord(writer: SerializationWriter, exchangeAggregatedMailboxAuditRecord: Partial<ExchangeAggregatedMailboxAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!exchangeAggregatedMailboxAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, exchangeAggregatedMailboxAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ExchangeAggregatedOperationRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeAggregatedOperationRecord(writer: SerializationWriter, exchangeAggregatedOperationRecord: Partial<ExchangeAggregatedOperationRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!exchangeAggregatedOperationRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, exchangeAggregatedOperationRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ExchangeMailboxAuditBaseRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeMailboxAuditBaseRecord(writer: SerializationWriter, exchangeMailboxAuditBaseRecord: Partial<ExchangeMailboxAuditBaseRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!exchangeMailboxAuditBaseRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, exchangeMailboxAuditBaseRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ExchangeMailboxAuditGroupRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeMailboxAuditGroupRecord(writer: SerializationWriter, exchangeMailboxAuditGroupRecord: Partial<ExchangeMailboxAuditGroupRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!exchangeMailboxAuditGroupRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, exchangeMailboxAuditGroupRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ExchangeMailboxAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExchangeMailboxAuditRecord(writer: SerializationWriter, exchangeMailboxAuditRecord: Partial<ExchangeMailboxAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!exchangeMailboxAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, exchangeMailboxAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param ExportFileMetadata The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeExportFileMetadata(writer: SerializationWriter, exportFileMetadata: Partial<ExportFileMetadata> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!exportFileMetadata || isSerializingDerivedType) { return; }
    writer.writeStringValue("downloadUrl", exportFileMetadata.downloadUrl);
    writer.writeStringValue("fileName", exportFileMetadata.fileName);
    writer.writeStringValue("@odata.type", exportFileMetadata.odataType);
    writer.writeNumberValue("size", exportFileMetadata.size);
    writer.writeAdditionalData(exportFileMetadata.additionalData);
}
/**
 * Serializes information the current object
 * @param FhirBaseUrlAddRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlAddRecord(writer: SerializationWriter, fhirBaseUrlAddRecord: Partial<FhirBaseUrlAddRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fhirBaseUrlAddRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, fhirBaseUrlAddRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FhirBaseUrlApproveRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlApproveRecord(writer: SerializationWriter, fhirBaseUrlApproveRecord: Partial<FhirBaseUrlApproveRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fhirBaseUrlApproveRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, fhirBaseUrlApproveRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FhirBaseUrlDeleteRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlDeleteRecord(writer: SerializationWriter, fhirBaseUrlDeleteRecord: Partial<FhirBaseUrlDeleteRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fhirBaseUrlDeleteRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, fhirBaseUrlDeleteRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FhirBaseUrlUpdateRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFhirBaseUrlUpdateRecord(writer: SerializationWriter, fhirBaseUrlUpdateRecord: Partial<FhirBaseUrlUpdateRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fhirBaseUrlUpdateRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, fhirBaseUrlUpdateRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FileDetails The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileDetails(writer: SerializationWriter, fileDetails: Partial<FileDetails> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileDetails || isSerializingDerivedType) { return; }
    writer.writeStringValue("fileName", fileDetails.fileName);
    writer.writeStringValue("filePath", fileDetails.filePath);
    writer.writeStringValue("filePublisher", fileDetails.filePublisher);
    writer.writeNumberValue("fileSize", fileDetails.fileSize);
    writer.writeStringValue("issuer", fileDetails.issuer);
    writer.writeStringValue("md5", fileDetails.md5);
    writer.writeStringValue("@odata.type", fileDetails.odataType);
    writer.writeStringValue("sha1", fileDetails.sha1);
    writer.writeStringValue("sha256", fileDetails.sha256);
    writer.writeStringValue("sha256Ac", fileDetails.sha256Ac);
    writer.writeStringValue("signer", fileDetails.signer);
    writer.writeAdditionalData(fileDetails.additionalData);
}
/**
 * Serializes information the current object
 * @param FileEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileEvidence(writer: SerializationWriter, fileEvidence: Partial<FileEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, fileEvidence, isSerializingDerivedType)
    writer.writeEnumValue<DetectionStatus>("detectionStatus", fileEvidence.detectionStatus);
    writer.writeObjectValue<FileDetails>("fileDetails", fileEvidence.fileDetails, serializeFileDetails);
    writer.writeStringValue("mdeDeviceId", fileEvidence.mdeDeviceId);
}
/**
 * Serializes information the current object
 * @param FileHash The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileHash(writer: SerializationWriter, fileHash: Partial<FileHash> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileHash || isSerializingDerivedType) { return; }
    writer.writeEnumValue<FileHashAlgorithm>("algorithm", fileHash.algorithm);
    writer.writeStringValue("@odata.type", fileHash.odataType);
    writer.writeStringValue("value", fileHash.value);
    writer.writeAdditionalData(fileHash.additionalData);
}
/**
 * Serializes information the current object
 * @param FileHashEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFileHashEvidence(writer: SerializationWriter, fileHashEvidence: Partial<FileHashEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!fileHashEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, fileHashEvidence, isSerializingDerivedType)
    writer.writeEnumValue<FileHashAlgorithm>("algorithm", fileHashEvidence.algorithm);
    writer.writeStringValue("value", fileHashEvidence.value);
}
/**
 * Serializes information the current object
 * @param FilePlanAppliedCategory The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanAppliedCategory(writer: SerializationWriter, filePlanAppliedCategory: Partial<FilePlanAppliedCategory> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanAppliedCategory || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorBase(writer, filePlanAppliedCategory, isSerializingDerivedType)
    writer.writeObjectValue<FilePlanSubcategory>("subcategory", filePlanAppliedCategory.subcategory, serializeFilePlanSubcategory);
}
/**
 * Serializes information the current object
 * @param FilePlanAuthority The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanAuthority(writer: SerializationWriter, filePlanAuthority: Partial<FilePlanAuthority> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanAuthority || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorBase(writer, filePlanAuthority, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FilePlanCitation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanCitation(writer: SerializationWriter, filePlanCitation: Partial<FilePlanCitation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanCitation || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorBase(writer, filePlanCitation, isSerializingDerivedType)
    writer.writeStringValue("citationJurisdiction", filePlanCitation.citationJurisdiction);
    writer.writeStringValue("citationUrl", filePlanCitation.citationUrl);
}
/**
 * Serializes information the current object
 * @param FilePlanDepartment The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDepartment(writer: SerializationWriter, filePlanDepartment: Partial<FilePlanDepartment> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanDepartment || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorBase(writer, filePlanDepartment, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FilePlanDescriptor The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDescriptor(writer: SerializationWriter, filePlanDescriptor: Partial<FilePlanDescriptor> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanDescriptor || isSerializingDerivedType) { return; }
    serializeEntity(writer, filePlanDescriptor, isSerializingDerivedType)
    writer.writeObjectValue<FilePlanAuthority>("authority", filePlanDescriptor.authority, serializeFilePlanAuthority);
    writer.writeObjectValue<AuthorityTemplate>("authorityTemplate", filePlanDescriptor.authorityTemplate, serializeAuthorityTemplate);
    writer.writeObjectValue<FilePlanAppliedCategory>("category", filePlanDescriptor.category, serializeFilePlanAppliedCategory);
    writer.writeObjectValue<CategoryTemplate>("categoryTemplate", filePlanDescriptor.categoryTemplate, serializeCategoryTemplate);
    writer.writeObjectValue<FilePlanCitation>("citation", filePlanDescriptor.citation, serializeFilePlanCitation);
    writer.writeObjectValue<CitationTemplate>("citationTemplate", filePlanDescriptor.citationTemplate, serializeCitationTemplate);
    writer.writeObjectValue<FilePlanDepartment>("department", filePlanDescriptor.department, serializeFilePlanDepartment);
    writer.writeObjectValue<DepartmentTemplate>("departmentTemplate", filePlanDescriptor.departmentTemplate, serializeDepartmentTemplate);
    writer.writeObjectValue<FilePlanReference>("filePlanReference", filePlanDescriptor.filePlanReference, serializeFilePlanReference);
    writer.writeObjectValue<FilePlanReferenceTemplate>("filePlanReferenceTemplate", filePlanDescriptor.filePlanReferenceTemplate, serializeFilePlanReferenceTemplate);
}
/**
 * Serializes information the current object
 * @param FilePlanDescriptorBase The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDescriptorBase(writer: SerializationWriter, filePlanDescriptorBase: Partial<FilePlanDescriptorBase> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanDescriptorBase || isSerializingDerivedType) { return; }
    writer.writeStringValue("displayName", filePlanDescriptorBase.displayName);
    writer.writeStringValue("@odata.type", filePlanDescriptorBase.odataType);
    writer.writeAdditionalData(filePlanDescriptorBase.additionalData);
    switch (filePlanDescriptorBase.odataType) {
        case "#microsoft.graph.security.filePlanAppliedCategory":
            serializeFilePlanAppliedCategory(writer, filePlanDescriptorBase, true);
        break;
        case "#microsoft.graph.security.filePlanAuthority":
            serializeFilePlanAuthority(writer, filePlanDescriptorBase, true);
        break;
        case "#microsoft.graph.security.filePlanCitation":
            serializeFilePlanCitation(writer, filePlanDescriptorBase, true);
        break;
        case "#microsoft.graph.security.filePlanDepartment":
            serializeFilePlanDepartment(writer, filePlanDescriptorBase, true);
        break;
        case "#microsoft.graph.security.filePlanReference":
            serializeFilePlanReference(writer, filePlanDescriptorBase, true);
        break;
        case "#microsoft.graph.security.filePlanSubcategory":
            serializeFilePlanSubcategory(writer, filePlanDescriptorBase, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param FilePlanDescriptorTemplate The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanDescriptorTemplate(writer: SerializationWriter, filePlanDescriptorTemplate: Partial<FilePlanDescriptorTemplate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanDescriptorTemplate || isSerializingDerivedType) { return; }
    serializeEntity(writer, filePlanDescriptorTemplate, isSerializingDerivedType)
    writer.writeObjectValue<IdentitySet>("createdBy", filePlanDescriptorTemplate.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", filePlanDescriptorTemplate.createdDateTime);
    writer.writeStringValue("displayName", filePlanDescriptorTemplate.displayName);
    switch (filePlanDescriptorTemplate.odataType) {
        case "#microsoft.graph.security.authorityTemplate":
            serializeAuthorityTemplate(writer, filePlanDescriptorTemplate, true);
        break;
        case "#microsoft.graph.security.categoryTemplate":
            serializeCategoryTemplate(writer, filePlanDescriptorTemplate, true);
        break;
        case "#microsoft.graph.security.citationTemplate":
            serializeCitationTemplate(writer, filePlanDescriptorTemplate, true);
        break;
        case "#microsoft.graph.security.departmentTemplate":
            serializeDepartmentTemplate(writer, filePlanDescriptorTemplate, true);
        break;
        case "#microsoft.graph.security.filePlanReferenceTemplate":
            serializeFilePlanReferenceTemplate(writer, filePlanDescriptorTemplate, true);
        break;
        case "#microsoft.graph.security.subcategoryTemplate":
            serializeSubcategoryTemplate(writer, filePlanDescriptorTemplate, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param FilePlanReference The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanReference(writer: SerializationWriter, filePlanReference: Partial<FilePlanReference> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanReference || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorBase(writer, filePlanReference, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FilePlanReferenceTemplate The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanReferenceTemplate(writer: SerializationWriter, filePlanReferenceTemplate: Partial<FilePlanReferenceTemplate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanReferenceTemplate || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorTemplate(writer, filePlanReferenceTemplate, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FilePlanReferenceTemplateCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanReferenceTemplateCollectionResponse(writer: SerializationWriter, filePlanReferenceTemplateCollectionResponse: Partial<FilePlanReferenceTemplateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanReferenceTemplateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, filePlanReferenceTemplateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<FilePlanReferenceTemplate>("value", filePlanReferenceTemplateCollectionResponse.value, serializeFilePlanReferenceTemplate);
}
/**
 * Serializes information the current object
 * @param FilePlanSubcategory The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFilePlanSubcategory(writer: SerializationWriter, filePlanSubcategory: Partial<FilePlanSubcategory> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!filePlanSubcategory || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorBase(writer, filePlanSubcategory, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param FormattedContent The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFormattedContent(writer: SerializationWriter, formattedContent: Partial<FormattedContent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!formattedContent || isSerializingDerivedType) { return; }
    writer.writeStringValue("content", formattedContent.content);
    writer.writeEnumValue<ContentFormat>("format", formattedContent.format);
    writer.writeStringValue("@odata.type", formattedContent.odataType);
    writer.writeAdditionalData(formattedContent.additionalData);
}
/**
 * Serializes information the current object
 * @param GeoLocation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGeoLocation(writer: SerializationWriter, geoLocation: Partial<GeoLocation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!geoLocation || isSerializingDerivedType) { return; }
    writer.writeStringValue("city", geoLocation.city);
    writer.writeStringValue("countryName", geoLocation.countryName);
    writer.writeNumberValue("latitude", geoLocation.latitude);
    writer.writeNumberValue("longitude", geoLocation.longitude);
    writer.writeStringValue("@odata.type", geoLocation.odataType);
    writer.writeStringValue("state", geoLocation.state);
    writer.writeAdditionalData(geoLocation.additionalData);
}
/**
 * Serializes information the current object
 * @param GitHubOrganizationEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGitHubOrganizationEvidence(writer: SerializationWriter, gitHubOrganizationEvidence: Partial<GitHubOrganizationEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!gitHubOrganizationEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, gitHubOrganizationEvidence, isSerializingDerivedType)
    writer.writeStringValue("company", gitHubOrganizationEvidence.company);
    writer.writeStringValue("displayName", gitHubOrganizationEvidence.displayName);
    writer.writeStringValue("email", gitHubOrganizationEvidence.email);
    writer.writeStringValue("login", gitHubOrganizationEvidence.login);
    writer.writeStringValue("orgId", gitHubOrganizationEvidence.orgId);
    writer.writeStringValue("webUrl", gitHubOrganizationEvidence.webUrl);
}
/**
 * Serializes information the current object
 * @param GitHubRepoEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGitHubRepoEvidence(writer: SerializationWriter, gitHubRepoEvidence: Partial<GitHubRepoEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!gitHubRepoEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, gitHubRepoEvidence, isSerializingDerivedType)
    writer.writeStringValue("baseUrl", gitHubRepoEvidence.baseUrl);
    writer.writeStringValue("login", gitHubRepoEvidence.login);
    writer.writeStringValue("owner", gitHubRepoEvidence.owner);
    writer.writeStringValue("ownerType", gitHubRepoEvidence.ownerType);
    writer.writeStringValue("repoId", gitHubRepoEvidence.repoId);
}
/**
 * Serializes information the current object
 * @param GitHubUserEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGitHubUserEvidence(writer: SerializationWriter, gitHubUserEvidence: Partial<GitHubUserEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!gitHubUserEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, gitHubUserEvidence, isSerializingDerivedType)
    writer.writeStringValue("email", gitHubUserEvidence.email);
    writer.writeStringValue("login", gitHubUserEvidence.login);
    writer.writeStringValue("name", gitHubUserEvidence.name);
    writer.writeStringValue("userId", gitHubUserEvidence.userId);
    writer.writeStringValue("webUrl", gitHubUserEvidence.webUrl);
}
/**
 * Serializes information the current object
 * @param GoogleCloudResourceEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeGoogleCloudResourceEvidence(writer: SerializationWriter, googleCloudResourceEvidence: Partial<GoogleCloudResourceEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!googleCloudResourceEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, googleCloudResourceEvidence, isSerializingDerivedType)
    writer.writeStringValue("fullResourceName", googleCloudResourceEvidence.fullResourceName);
    writer.writeStringValue("location", googleCloudResourceEvidence.location);
    writer.writeEnumValue<GoogleCloudLocationType>("locationType", googleCloudResourceEvidence.locationType);
    writer.writeStringValue("projectId", googleCloudResourceEvidence.projectId);
    writer.writeNumberValue("projectNumber", googleCloudResourceEvidence.projectNumber);
    writer.writeStringValue("resourceName", googleCloudResourceEvidence.resourceName);
    writer.writeStringValue("resourceType", googleCloudResourceEvidence.resourceType);
}
/**
 * Serializes information the current object
 * @param HealthcareSignalRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthcareSignalRecord(writer: SerializationWriter, healthcareSignalRecord: Partial<HealthcareSignalRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!healthcareSignalRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, healthcareSignalRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param HealthIssue The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthIssue(writer: SerializationWriter, healthIssue: Partial<HealthIssue> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!healthIssue || isSerializingDerivedType) { return; }
    serializeEntity(writer, healthIssue, isSerializingDerivedType)
    writer.writeCollectionOfPrimitiveValues<string>("additionalInformation", healthIssue.additionalInformation);
    writer.writeDateValue("createdDateTime", healthIssue.createdDateTime);
    writer.writeStringValue("description", healthIssue.description);
    writer.writeStringValue("displayName", healthIssue.displayName);
    writer.writeCollectionOfPrimitiveValues<string>("domainNames", healthIssue.domainNames);
    writer.writeEnumValue<HealthIssueType>("healthIssueType", healthIssue.healthIssueType);
    writer.writeStringValue("issueTypeId", healthIssue.issueTypeId);
    writer.writeDateValue("lastModifiedDateTime", healthIssue.lastModifiedDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("recommendations", healthIssue.recommendations);
    writer.writeCollectionOfPrimitiveValues<string>("recommendedActionCommands", healthIssue.recommendedActionCommands);
    writer.writeCollectionOfPrimitiveValues<string>("sensorDNSNames", healthIssue.sensorDNSNames);
    writer.writeEnumValue<HealthIssueSeverity>("severity", healthIssue.severity);
    writer.writeEnumValue<HealthIssueStatus>("status", healthIssue.status);
}
/**
 * Serializes information the current object
 * @param HealthIssueCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHealthIssueCollectionResponse(writer: SerializationWriter, healthIssueCollectionResponse: Partial<HealthIssueCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!healthIssueCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, healthIssueCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HealthIssue>("value", healthIssueCollectionResponse.value, serializeHealthIssue);
}
/**
 * Serializes information the current object
 * @param Host The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHost(writer: SerializationWriter, host: Partial<Host> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!host || isSerializingDerivedType) { return; }
    serializeArtifact(writer, host, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostPair>("childHostPairs", host.childHostPairs, serializeHostPair);
    writer.writeCollectionOfObjectValues<HostComponent>("components", host.components, serializeHostComponent);
    writer.writeCollectionOfObjectValues<HostCookie>("cookies", host.cookies, serializeHostCookie);
    writer.writeDateValue("firstSeenDateTime", host.firstSeenDateTime);
    writer.writeCollectionOfObjectValues<HostPair>("hostPairs", host.hostPairs, serializeHostPair);
    writer.writeDateValue("lastSeenDateTime", host.lastSeenDateTime);
    writer.writeCollectionOfObjectValues<HostPair>("parentHostPairs", host.parentHostPairs, serializeHostPair);
    writer.writeCollectionOfObjectValues<PassiveDnsRecord>("passiveDns", host.passiveDns, serializePassiveDnsRecord);
    writer.writeCollectionOfObjectValues<PassiveDnsRecord>("passiveDnsReverse", host.passiveDnsReverse, serializePassiveDnsRecord);
    writer.writeCollectionOfObjectValues<HostPort>("ports", host.ports, serializeHostPort);
    writer.writeObjectValue<HostReputation>("reputation", host.reputation, serializeHostReputation);
    writer.writeCollectionOfObjectValues<HostSslCertificate>("sslCertificates", host.sslCertificates, serializeHostSslCertificate);
    writer.writeCollectionOfObjectValues<Subdomain>("subdomains", host.subdomains, serializeSubdomain);
    writer.writeCollectionOfObjectValues<HostTracker>("trackers", host.trackers, serializeHostTracker);
    writer.writeObjectValue<WhoisRecord>("whois", host.whois, serializeWhoisRecord);
    switch (host.odataType) {
        case "#microsoft.graph.security.hostname":
            serializeHostname(writer, host, true);
        break;
        case "#microsoft.graph.security.ipAddress":
            serializeIpAddress(writer, host, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param HostCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostCollectionResponse(writer: SerializationWriter, hostCollectionResponse: Partial<HostCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, hostCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Host>("value", hostCollectionResponse.value, serializeHost);
}
/**
 * Serializes information the current object
 * @param HostComponent The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostComponent(writer: SerializationWriter, hostComponent: Partial<HostComponent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostComponent || isSerializingDerivedType) { return; }
    serializeArtifact(writer, hostComponent, isSerializingDerivedType)
    writer.writeStringValue("category", hostComponent.category);
    writer.writeDateValue("firstSeenDateTime", hostComponent.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", hostComponent.host, serializeHost);
    writer.writeDateValue("lastSeenDateTime", hostComponent.lastSeenDateTime);
    writer.writeStringValue("name", hostComponent.name);
    writer.writeStringValue("version", hostComponent.version);
}
/**
 * Serializes information the current object
 * @param HostComponentCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostComponentCollectionResponse(writer: SerializationWriter, hostComponentCollectionResponse: Partial<HostComponentCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostComponentCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, hostComponentCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostComponent>("value", hostComponentCollectionResponse.value, serializeHostComponent);
}
/**
 * Serializes information the current object
 * @param HostCookie The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostCookie(writer: SerializationWriter, hostCookie: Partial<HostCookie> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostCookie || isSerializingDerivedType) { return; }
    serializeArtifact(writer, hostCookie, isSerializingDerivedType)
    writer.writeStringValue("domain", hostCookie.domain);
    writer.writeDateValue("firstSeenDateTime", hostCookie.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", hostCookie.host, serializeHost);
    writer.writeDateValue("lastSeenDateTime", hostCookie.lastSeenDateTime);
    writer.writeStringValue("name", hostCookie.name);
}
/**
 * Serializes information the current object
 * @param HostCookieCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostCookieCollectionResponse(writer: SerializationWriter, hostCookieCollectionResponse: Partial<HostCookieCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostCookieCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, hostCookieCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostCookie>("value", hostCookieCollectionResponse.value, serializeHostCookie);
}
/**
 * Serializes information the current object
 * @param HostedRpaAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostedRpaAuditRecord(writer: SerializationWriter, hostedRpaAuditRecord: Partial<HostedRpaAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostedRpaAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, hostedRpaAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param HostLogonSessionEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostLogonSessionEvidence(writer: SerializationWriter, hostLogonSessionEvidence: Partial<HostLogonSessionEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostLogonSessionEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, hostLogonSessionEvidence, isSerializingDerivedType)
    writer.writeObjectValue<UserEvidence>("account", hostLogonSessionEvidence.account, serializeUserEvidence);
    writer.writeDateValue("endUtcDateTime", hostLogonSessionEvidence.endUtcDateTime);
    writer.writeObjectValue<DeviceEvidence>("host", hostLogonSessionEvidence.host, serializeDeviceEvidence);
    writer.writeStringValue("sessionId", hostLogonSessionEvidence.sessionId);
    writer.writeDateValue("startUtcDateTime", hostLogonSessionEvidence.startUtcDateTime);
}
/**
 * Serializes information the current object
 * @param Hostname The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostname(writer: SerializationWriter, hostname: Partial<Hostname> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostname || isSerializingDerivedType) { return; }
    serializeHost(writer, hostname, isSerializingDerivedType)
    writer.writeStringValue("registrant", hostname.registrant);
    writer.writeStringValue("registrar", hostname.registrar);
}
/**
 * Serializes information the current object
 * @param HostPair The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPair(writer: SerializationWriter, hostPair: Partial<HostPair> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostPair || isSerializingDerivedType) { return; }
    serializeEntity(writer, hostPair, isSerializingDerivedType)
    writer.writeObjectValue<Host>("childHost", hostPair.childHost, serializeHost);
    writer.writeDateValue("firstSeenDateTime", hostPair.firstSeenDateTime);
    writer.writeDateValue("lastSeenDateTime", hostPair.lastSeenDateTime);
    writer.writeStringValue("linkKind", hostPair.linkKind);
    writer.writeObjectValue<Host>("parentHost", hostPair.parentHost, serializeHost);
}
/**
 * Serializes information the current object
 * @param HostPairCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPairCollectionResponse(writer: SerializationWriter, hostPairCollectionResponse: Partial<HostPairCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostPairCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, hostPairCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostPair>("value", hostPairCollectionResponse.value, serializeHostPair);
}
/**
 * Serializes information the current object
 * @param HostPort The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPort(writer: SerializationWriter, hostPort: Partial<HostPort> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostPort || isSerializingDerivedType) { return; }
    serializeEntity(writer, hostPort, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostPortBanner>("banners", hostPort.banners, serializeHostPortBanner);
    writer.writeDateValue("firstSeenDateTime", hostPort.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", hostPort.host, serializeHost);
    writer.writeDateValue("lastScanDateTime", hostPort.lastScanDateTime);
    writer.writeDateValue("lastSeenDateTime", hostPort.lastSeenDateTime);
    writer.writeObjectValue<SslCertificate>("mostRecentSslCertificate", hostPort.mostRecentSslCertificate, serializeSslCertificate);
    writer.writeNumberValue("port", hostPort.port);
    writer.writeEnumValue<HostPortProtocol>("protocol", hostPort.protocol);
    writer.writeCollectionOfObjectValues<HostPortComponent>("services", hostPort.services, serializeHostPortComponent);
    writer.writeEnumValue<HostPortStatus>("status", hostPort.status);
    writer.writeNumberValue("timesObserved", hostPort.timesObserved);
}
/**
 * Serializes information the current object
 * @param HostPortBanner The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPortBanner(writer: SerializationWriter, hostPortBanner: Partial<HostPortBanner> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostPortBanner || isSerializingDerivedType) { return; }
    writer.writeStringValue("banner", hostPortBanner.banner);
    writer.writeDateValue("firstSeenDateTime", hostPortBanner.firstSeenDateTime);
    writer.writeDateValue("lastSeenDateTime", hostPortBanner.lastSeenDateTime);
    writer.writeStringValue("@odata.type", hostPortBanner.odataType);
    writer.writeStringValue("scanProtocol", hostPortBanner.scanProtocol);
    writer.writeNumberValue("timesObserved", hostPortBanner.timesObserved);
    writer.writeAdditionalData(hostPortBanner.additionalData);
}
/**
 * Serializes information the current object
 * @param HostPortCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPortCollectionResponse(writer: SerializationWriter, hostPortCollectionResponse: Partial<HostPortCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostPortCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, hostPortCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostPort>("value", hostPortCollectionResponse.value, serializeHostPort);
}
/**
 * Serializes information the current object
 * @param HostPortComponent The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostPortComponent(writer: SerializationWriter, hostPortComponent: Partial<HostPortComponent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostPortComponent || isSerializingDerivedType) { return; }
    writer.writeObjectValue<HostComponent>("component", hostPortComponent.component, serializeHostComponent);
    writer.writeDateValue("firstSeenDateTime", hostPortComponent.firstSeenDateTime);
    writer.writeBooleanValue("isRecent", hostPortComponent.isRecent);
    writer.writeDateValue("lastSeenDateTime", hostPortComponent.lastSeenDateTime);
    writer.writeStringValue("@odata.type", hostPortComponent.odataType);
    writer.writeAdditionalData(hostPortComponent.additionalData);
}
/**
 * Serializes information the current object
 * @param HostReputation The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostReputation(writer: SerializationWriter, hostReputation: Partial<HostReputation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostReputation || isSerializingDerivedType) { return; }
    serializeEntity(writer, hostReputation, isSerializingDerivedType)
    writer.writeEnumValue<HostReputationClassification>("classification", hostReputation.classification);
    writer.writeCollectionOfObjectValues<HostReputationRule>("rules", hostReputation.rules, serializeHostReputationRule);
    writer.writeNumberValue("score", hostReputation.score);
}
/**
 * Serializes information the current object
 * @param HostReputationRule The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostReputationRule(writer: SerializationWriter, hostReputationRule: Partial<HostReputationRule> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostReputationRule || isSerializingDerivedType) { return; }
    writer.writeStringValue("description", hostReputationRule.description);
    writer.writeStringValue("name", hostReputationRule.name);
    writer.writeStringValue("@odata.type", hostReputationRule.odataType);
    writer.writeStringValue("relatedDetailsUrl", hostReputationRule.relatedDetailsUrl);
    writer.writeEnumValue<HostReputationRuleSeverity>("severity", hostReputationRule.severity);
    writer.writeAdditionalData(hostReputationRule.additionalData);
}
/**
 * Serializes information the current object
 * @param HostSslCertificate The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostSslCertificate(writer: SerializationWriter, hostSslCertificate: Partial<HostSslCertificate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostSslCertificate || isSerializingDerivedType) { return; }
    serializeArtifact(writer, hostSslCertificate, isSerializingDerivedType)
    writer.writeDateValue("firstSeenDateTime", hostSslCertificate.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", hostSslCertificate.host, serializeHost);
    writer.writeDateValue("lastSeenDateTime", hostSslCertificate.lastSeenDateTime);
    writer.writeCollectionOfObjectValues<HostSslCertificatePort>("ports", hostSslCertificate.ports, serializeHostSslCertificatePort);
    writer.writeObjectValue<SslCertificate>("sslCertificate", hostSslCertificate.sslCertificate, serializeSslCertificate);
}
/**
 * Serializes information the current object
 * @param HostSslCertificateCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostSslCertificateCollectionResponse(writer: SerializationWriter, hostSslCertificateCollectionResponse: Partial<HostSslCertificateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostSslCertificateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, hostSslCertificateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostSslCertificate>("value", hostSslCertificateCollectionResponse.value, serializeHostSslCertificate);
}
/**
 * Serializes information the current object
 * @param HostSslCertificatePort The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostSslCertificatePort(writer: SerializationWriter, hostSslCertificatePort: Partial<HostSslCertificatePort> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostSslCertificatePort || isSerializingDerivedType) { return; }
    writer.writeDateValue("firstSeenDateTime", hostSslCertificatePort.firstSeenDateTime);
    writer.writeDateValue("lastSeenDateTime", hostSslCertificatePort.lastSeenDateTime);
    writer.writeStringValue("@odata.type", hostSslCertificatePort.odataType);
    writer.writeNumberValue("port", hostSslCertificatePort.port);
    writer.writeAdditionalData(hostSslCertificatePort.additionalData);
}
/**
 * Serializes information the current object
 * @param HostTracker The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostTracker(writer: SerializationWriter, hostTracker: Partial<HostTracker> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostTracker || isSerializingDerivedType) { return; }
    serializeArtifact(writer, hostTracker, isSerializingDerivedType)
    writer.writeDateValue("firstSeenDateTime", hostTracker.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", hostTracker.host, serializeHost);
    writer.writeStringValue("kind", hostTracker.kind);
    writer.writeDateValue("lastSeenDateTime", hostTracker.lastSeenDateTime);
    writer.writeStringValue("value", hostTracker.value);
}
/**
 * Serializes information the current object
 * @param HostTrackerCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHostTrackerCollectionResponse(writer: SerializationWriter, hostTrackerCollectionResponse: Partial<HostTrackerCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hostTrackerCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, hostTrackerCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HostTracker>("value", hostTrackerCollectionResponse.value, serializeHostTracker);
}
/**
 * Serializes information the current object
 * @param HrSignalAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHrSignalAuditRecord(writer: SerializationWriter, hrSignalAuditRecord: Partial<HrSignalAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hrSignalAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, hrSignalAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param HuntingQueryResults The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHuntingQueryResults(writer: SerializationWriter, huntingQueryResults: Partial<HuntingQueryResults> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!huntingQueryResults || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", huntingQueryResults.odataType);
    writer.writeCollectionOfObjectValues<HuntingRowResult>("results", huntingQueryResults.results, serializeHuntingRowResult);
    writer.writeCollectionOfObjectValues<SinglePropertySchema>("schema", huntingQueryResults.schema, serializeSinglePropertySchema);
    writer.writeAdditionalData(huntingQueryResults.additionalData);
}
/**
 * Serializes information the current object
 * @param HuntingRowResult The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHuntingRowResult(writer: SerializationWriter, huntingRowResult: Partial<HuntingRowResult> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!huntingRowResult || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", huntingRowResult.odataType);
    writer.writeAdditionalData(huntingRowResult.additionalData);
}
/**
 * Serializes information the current object
 * @param HygieneEventRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHygieneEventRecord(writer: SerializationWriter, hygieneEventRecord: Partial<HygieneEventRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hygieneEventRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, hygieneEventRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param Hyperlink The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeHyperlink(writer: SerializationWriter, hyperlink: Partial<Hyperlink> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!hyperlink || isSerializingDerivedType) { return; }
    writer.writeStringValue("name", hyperlink.name);
    writer.writeStringValue("@odata.type", hyperlink.odataType);
    writer.writeStringValue("url", hyperlink.url);
    writer.writeAdditionalData(hyperlink.additionalData);
}
/**
 * Serializes information the current object
 * @param IdentityContainer The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIdentityContainer(writer: SerializationWriter, identityContainer: Partial<IdentityContainer> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!identityContainer || isSerializingDerivedType) { return; }
    serializeEntity(writer, identityContainer, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<HealthIssue>("healthIssues", identityContainer.healthIssues, serializeHealthIssue);
    writer.writeCollectionOfObjectValues<Sensor>("sensors", identityContainer.sensors, serializeSensor);
}
/**
 * Serializes information the current object
 * @param Incident The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIncident(writer: SerializationWriter, incident: Partial<Incident> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!incident || isSerializingDerivedType) { return; }
    serializeEntity(writer, incident, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Alert>("alerts", incident.alerts, serializeAlert);
    writer.writeStringValue("assignedTo", incident.assignedTo);
    writer.writeEnumValue<AlertClassification>("classification", incident.classification);
    writer.writeCollectionOfObjectValues<AlertComment>("comments", incident.comments, serializeAlertComment);
    writer.writeDateValue("createdDateTime", incident.createdDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("customTags", incident.customTags);
    writer.writeStringValue("description", incident.description);
    writer.writeEnumValue<AlertDetermination>("determination", incident.determination);
    writer.writeStringValue("displayName", incident.displayName);
    writer.writeStringValue("incidentWebUrl", incident.incidentWebUrl);
    writer.writeStringValue("lastModifiedBy", incident.lastModifiedBy);
    writer.writeDateValue("lastUpdateDateTime", incident.lastUpdateDateTime);
    writer.writeStringValue("redirectIncidentId", incident.redirectIncidentId);
    writer.writeStringValue("resolvingComment", incident.resolvingComment);
    writer.writeEnumValue<AlertSeverity>("severity", incident.severity);
    writer.writeEnumValue<IncidentStatus>("status", incident.status);
    writer.writeStringValue("summary", incident.summary);
    writer.writeCollectionOfPrimitiveValues<string>("systemTags", incident.systemTags);
    writer.writeStringValue("tenantId", incident.tenantId);
}
/**
 * Serializes information the current object
 * @param IncidentCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIncidentCollectionResponse(writer: SerializationWriter, incidentCollectionResponse: Partial<IncidentCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!incidentCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, incidentCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Incident>("value", incidentCollectionResponse.value, serializeIncident);
}
/**
 * Serializes information the current object
 * @param Indicator The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIndicator(writer: SerializationWriter, indicator: Partial<Indicator> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!indicator || isSerializingDerivedType) { return; }
    serializeEntity(writer, indicator, isSerializingDerivedType)
    writer.writeObjectValue<Artifact>("artifact", indicator.artifact, serializeArtifact);
    writer.writeEnumValue<IndicatorSource>("source", indicator.source);
    switch (indicator.odataType) {
        case "#microsoft.graph.security.articleIndicator":
            serializeArticleIndicator(writer, indicator, true);
        break;
        case "#microsoft.graph.security.intelligenceProfileIndicator":
            serializeIntelligenceProfileIndicator(writer, indicator, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param InformationBarrierPolicyApplicationAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInformationBarrierPolicyApplicationAuditRecord(writer: SerializationWriter, informationBarrierPolicyApplicationAuditRecord: Partial<InformationBarrierPolicyApplicationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!informationBarrierPolicyApplicationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, informationBarrierPolicyApplicationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param InformationWorkerProtectionAuditRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInformationWorkerProtectionAuditRecord(writer: SerializationWriter, informationWorkerProtectionAuditRecord: Partial<InformationWorkerProtectionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!informationWorkerProtectionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, informationWorkerProtectionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param InsiderRiskScopedUserInsightsRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInsiderRiskScopedUserInsightsRecord(writer: SerializationWriter, insiderRiskScopedUserInsightsRecord: Partial<InsiderRiskScopedUserInsightsRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!insiderRiskScopedUserInsightsRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, insiderRiskScopedUserInsightsRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param InsiderRiskScopedUsersRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInsiderRiskScopedUsersRecord(writer: SerializationWriter, insiderRiskScopedUsersRecord: Partial<InsiderRiskScopedUsersRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!insiderRiskScopedUsersRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, insiderRiskScopedUsersRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param IntelligenceProfile The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfile(writer: SerializationWriter, intelligenceProfile: Partial<IntelligenceProfile> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!intelligenceProfile || isSerializingDerivedType) { return; }
    serializeEntity(writer, intelligenceProfile, isSerializingDerivedType)
    writer.writeCollectionOfPrimitiveValues<string>("aliases", intelligenceProfile.aliases);
    writer.writeCollectionOfObjectValues<IntelligenceProfileCountryOrRegionOfOrigin>("countriesOrRegionsOfOrigin", intelligenceProfile.countriesOrRegionsOfOrigin, serializeIntelligenceProfileCountryOrRegionOfOrigin);
    writer.writeObjectValue<FormattedContent>("description", intelligenceProfile.description, serializeFormattedContent);
    writer.writeDateValue("firstActiveDateTime", intelligenceProfile.firstActiveDateTime);
    writer.writeCollectionOfObjectValues<IntelligenceProfileIndicator>("indicators", intelligenceProfile.indicators, serializeIntelligenceProfileIndicator);
    writer.writeEnumValue<IntelligenceProfileKind>("kind", intelligenceProfile.kind);
    writer.writeObjectValue<FormattedContent>("summary", intelligenceProfile.summary, serializeFormattedContent);
    writer.writeCollectionOfPrimitiveValues<string>("targets", intelligenceProfile.targets);
    writer.writeStringValue("title", intelligenceProfile.title);
    writer.writeObjectValue<FormattedContent>("tradecraft", intelligenceProfile.tradecraft, serializeFormattedContent);
}
/**
 * Serializes information the current object
 * @param IntelligenceProfileCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileCollectionResponse(writer: SerializationWriter, intelligenceProfileCollectionResponse: Partial<IntelligenceProfileCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!intelligenceProfileCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, intelligenceProfileCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<IntelligenceProfile>("value", intelligenceProfileCollectionResponse.value, serializeIntelligenceProfile);
}
/**
 * Serializes information the current object
 * @param IntelligenceProfileCountryOrRegionOfOrigin The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileCountryOrRegionOfOrigin(writer: SerializationWriter, intelligenceProfileCountryOrRegionOfOrigin: Partial<IntelligenceProfileCountryOrRegionOfOrigin> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!intelligenceProfileCountryOrRegionOfOrigin || isSerializingDerivedType) { return; }
    writer.writeStringValue("code", intelligenceProfileCountryOrRegionOfOrigin.code);
    writer.writeStringValue("label", intelligenceProfileCountryOrRegionOfOrigin.label);
    writer.writeStringValue("@odata.type", intelligenceProfileCountryOrRegionOfOrigin.odataType);
    writer.writeAdditionalData(intelligenceProfileCountryOrRegionOfOrigin.additionalData);
}
/**
 * Serializes information the current object
 * @param IntelligenceProfileIndicator The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileIndicator(writer: SerializationWriter, intelligenceProfileIndicator: Partial<IntelligenceProfileIndicator> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!intelligenceProfileIndicator || isSerializingDerivedType) { return; }
    serializeIndicator(writer, intelligenceProfileIndicator, isSerializingDerivedType)
    writer.writeDateValue("firstSeenDateTime", intelligenceProfileIndicator.firstSeenDateTime);
    writer.writeDateValue("lastSeenDateTime", intelligenceProfileIndicator.lastSeenDateTime);
}
/**
 * Serializes information the current object
 * @param IntelligenceProfileIndicatorCollectionResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIntelligenceProfileIndicatorCollectionResponse(writer: SerializationWriter, intelligenceProfileIndicatorCollectionResponse: Partial<IntelligenceProfileIndicatorCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!intelligenceProfileIndicatorCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, intelligenceProfileIndicatorCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<IntelligenceProfileIndicator>("value", intelligenceProfileIndicatorCollectionResponse.value, serializeIntelligenceProfileIndicator);
}
/**
 * Serializes information the current object
 * @param IoTDeviceEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIoTDeviceEvidence(writer: SerializationWriter, ioTDeviceEvidence: Partial<IoTDeviceEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ioTDeviceEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, ioTDeviceEvidence, isSerializingDerivedType)
    writer.writeStringValue("deviceId", ioTDeviceEvidence.deviceId);
    writer.writeStringValue("deviceName", ioTDeviceEvidence.deviceName);
    writer.writeStringValue("devicePageLink", ioTDeviceEvidence.devicePageLink);
    writer.writeStringValue("deviceSubType", ioTDeviceEvidence.deviceSubType);
    writer.writeStringValue("deviceType", ioTDeviceEvidence.deviceType);
    writer.writeEnumValue<IoTDeviceImportanceType>("importance", ioTDeviceEvidence.importance);
    writer.writeObjectValue<AzureResourceEvidence>("ioTHub", ioTDeviceEvidence.ioTHub, serializeAzureResourceEvidence);
    writer.writeStringValue("ioTSecurityAgentId", ioTDeviceEvidence.ioTSecurityAgentId);
    writer.writeObjectValue<IpEvidence>("ipAddress", ioTDeviceEvidence.ipAddress, serializeIpEvidence);
    writer.writeBooleanValue("isAuthorized", ioTDeviceEvidence.isAuthorized);
    writer.writeBooleanValue("isProgramming", ioTDeviceEvidence.isProgramming);
    writer.writeBooleanValue("isScanner", ioTDeviceEvidence.isScanner);
    writer.writeStringValue("macAddress", ioTDeviceEvidence.macAddress);
    writer.writeStringValue("manufacturer", ioTDeviceEvidence.manufacturer);
    writer.writeStringValue("model", ioTDeviceEvidence.model);
    writer.writeCollectionOfObjectValues<NicEvidence>("nics", ioTDeviceEvidence.nics, serializeNicEvidence);
    writer.writeStringValue("operatingSystem", ioTDeviceEvidence.operatingSystem);
    writer.writeCollectionOfPrimitiveValues<string>("owners", ioTDeviceEvidence.owners);
    writer.writeCollectionOfPrimitiveValues<string>("protocols", ioTDeviceEvidence.protocols);
    writer.writeStringValue("purdueLayer", ioTDeviceEvidence.purdueLayer);
    writer.writeStringValue("sensor", ioTDeviceEvidence.sensor);
    writer.writeStringValue("serialNumber", ioTDeviceEvidence.serialNumber);
    writer.writeStringValue("site", ioTDeviceEvidence.site);
    writer.writeStringValue("source", ioTDeviceEvidence.source);
    writer.writeObjectValue<UrlEvidence>("sourceRef", ioTDeviceEvidence.sourceRef, serializeUrlEvidence);
    writer.writeStringValue("zone", ioTDeviceEvidence.zone);
}
/**
 * Serializes information the current object
 * @param IpAddress The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIpAddress(writer: SerializationWriter, ipAddress: Partial<IpAddress> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ipAddress || isSerializingDerivedType) { return; }
    serializeHost(writer, ipAddress, isSerializingDerivedType)
    writer.writeObjectValue<AutonomousSystem>("autonomousSystem", ipAddress.autonomousSystem, serializeAutonomousSystem);
    writer.writeStringValue("countryOrRegion", ipAddress.countryOrRegion);
    writer.writeStringValue("hostingProvider", ipAddress.hostingProvider);
    writer.writeStringValue("netblock", ipAddress.netblock);
}
/**
 * Serializes information the current object
 * @param IpEvidence The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIpEvidence(writer: SerializationWriter, ipEvidence: Partial<IpEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ipEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, ipEvidence, isSerializingDerivedType)
    writer.writeStringValue("countryLetterCode", ipEvidence.countryLetterCode);
    writer.writeStringValue("ipAddress", ipEvidence.ipAddress);
    writer.writeObjectValue<GeoLocation>("location", ipEvidence.location, serializeGeoLocation);
    writer.writeObjectValue<Stream>("stream", ipEvidence.stream, serializeStream);
}
/**
 * Serializes information the current object
 * @param IrmSecurityAlertRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIrmSecurityAlertRecord(writer: SerializationWriter, irmSecurityAlertRecord: Partial<IrmSecurityAlertRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!irmSecurityAlertRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, irmSecurityAlertRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param IrmUserDefinedDetectionRecord The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIrmUserDefinedDetectionRecord(writer: SerializationWriter, irmUserDefinedDetectionRecord: Partial<IrmUserDefinedDetectionRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!irmUserDefinedDetectionRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, irmUserDefinedDetectionRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KaizalaAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKaizalaAuditRecord(writer: SerializationWriter, kaizalaAuditRecord: Partial<KaizalaAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kaizalaAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, kaizalaAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesClusterEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesClusterEvidence(writer: SerializationWriter, kubernetesClusterEvidence: Partial<KubernetesClusterEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesClusterEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, kubernetesClusterEvidence, isSerializingDerivedType)
    writer.writeObjectValue<AlertEvidence>("cloudResource", kubernetesClusterEvidence.cloudResource, serializeAlertEvidence);
    writer.writeStringValue("distribution", kubernetesClusterEvidence.distribution);
    writer.writeStringValue("name", kubernetesClusterEvidence.name);
    writer.writeEnumValue<KubernetesPlatform>("platform", kubernetesClusterEvidence.platform);
    writer.writeStringValue("version", kubernetesClusterEvidence.version);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesControllerEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesControllerEvidence(writer: SerializationWriter, kubernetesControllerEvidence: Partial<KubernetesControllerEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesControllerEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, kubernetesControllerEvidence, isSerializingDerivedType)
    writer.writeObjectValue<Dictionary>("labels", kubernetesControllerEvidence.labels, serializeDictionary);
    writer.writeStringValue("name", kubernetesControllerEvidence.name);
    writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesControllerEvidence.namespace, serializeKubernetesNamespaceEvidence);
    writer.writeStringValue("type", kubernetesControllerEvidence.type);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesNamespaceEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesNamespaceEvidence(writer: SerializationWriter, kubernetesNamespaceEvidence: Partial<KubernetesNamespaceEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesNamespaceEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, kubernetesNamespaceEvidence, isSerializingDerivedType)
    writer.writeObjectValue<KubernetesClusterEvidence>("cluster", kubernetesNamespaceEvidence.cluster, serializeKubernetesClusterEvidence);
    writer.writeObjectValue<Dictionary>("labels", kubernetesNamespaceEvidence.labels, serializeDictionary);
    writer.writeStringValue("name", kubernetesNamespaceEvidence.name);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesPodEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesPodEvidence(writer: SerializationWriter, kubernetesPodEvidence: Partial<KubernetesPodEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesPodEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, kubernetesPodEvidence, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<ContainerEvidence>("containers", kubernetesPodEvidence.containers, serializeContainerEvidence);
    writer.writeObjectValue<KubernetesControllerEvidence>("controller", kubernetesPodEvidence.controller, serializeKubernetesControllerEvidence);
    writer.writeCollectionOfObjectValues<ContainerEvidence>("ephemeralContainers", kubernetesPodEvidence.ephemeralContainers, serializeContainerEvidence);
    writer.writeCollectionOfObjectValues<ContainerEvidence>("initContainers", kubernetesPodEvidence.initContainers, serializeContainerEvidence);
    writer.writeObjectValue<Dictionary>("labels", kubernetesPodEvidence.labels, serializeDictionary);
    writer.writeStringValue("name", kubernetesPodEvidence.name);
    writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesPodEvidence.namespace, serializeKubernetesNamespaceEvidence);
    writer.writeObjectValue<IpEvidence>("podIp", kubernetesPodEvidence.podIp, serializeIpEvidence);
    writer.writeObjectValue<KubernetesServiceAccountEvidence>("serviceAccount", kubernetesPodEvidence.serviceAccount, serializeKubernetesServiceAccountEvidence);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesSecretEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesSecretEvidence(writer: SerializationWriter, kubernetesSecretEvidence: Partial<KubernetesSecretEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesSecretEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, kubernetesSecretEvidence, isSerializingDerivedType)
    writer.writeStringValue("name", kubernetesSecretEvidence.name);
    writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesSecretEvidence.namespace, serializeKubernetesNamespaceEvidence);
    writer.writeStringValue("secretType", kubernetesSecretEvidence.secretType);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesServiceAccountEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesServiceAccountEvidence(writer: SerializationWriter, kubernetesServiceAccountEvidence: Partial<KubernetesServiceAccountEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesServiceAccountEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, kubernetesServiceAccountEvidence, isSerializingDerivedType)
    writer.writeStringValue("name", kubernetesServiceAccountEvidence.name);
    writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesServiceAccountEvidence.namespace, serializeKubernetesNamespaceEvidence);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesServiceEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesServiceEvidence(writer: SerializationWriter, kubernetesServiceEvidence: Partial<KubernetesServiceEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesServiceEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, kubernetesServiceEvidence, isSerializingDerivedType)
    writer.writeObjectValue<IpEvidence>("clusterIP", kubernetesServiceEvidence.clusterIP, serializeIpEvidence);
    writer.writeCollectionOfObjectValues<IpEvidence>("externalIPs", kubernetesServiceEvidence.externalIPs, serializeIpEvidence);
    writer.writeObjectValue<Dictionary>("labels", kubernetesServiceEvidence.labels, serializeDictionary);
    writer.writeStringValue("name", kubernetesServiceEvidence.name);
    writer.writeObjectValue<KubernetesNamespaceEvidence>("namespace", kubernetesServiceEvidence.namespace, serializeKubernetesNamespaceEvidence);
    writer.writeObjectValue<Dictionary>("selector", kubernetesServiceEvidence.selector, serializeDictionary);
    writer.writeCollectionOfObjectValues<KubernetesServicePort>("servicePorts", kubernetesServiceEvidence.servicePorts, serializeKubernetesServicePort);
    writer.writeEnumValue<KubernetesServiceType>("serviceType", kubernetesServiceEvidence.serviceType);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesServicePort The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesServicePort(writer: SerializationWriter, kubernetesServicePort: Partial<KubernetesServicePort> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesServicePort || isSerializingDerivedType) { return; }
    writer.writeStringValue("appProtocol", kubernetesServicePort.appProtocol);
    writer.writeStringValue("name", kubernetesServicePort.name);
    writer.writeNumberValue("nodePort", kubernetesServicePort.nodePort);
    writer.writeStringValue("@odata.type", kubernetesServicePort.odataType);
    writer.writeNumberValue("port", kubernetesServicePort.port);
    writer.writeEnumValue<ContainerPortProtocol>("protocol", kubernetesServicePort.protocol);
    writer.writeStringValue("targetPort", kubernetesServicePort.targetPort);
    writer.writeAdditionalData(kubernetesServicePort.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LabelAnalyticsAggregateAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelAnalyticsAggregateAuditRecord(writer: SerializationWriter, labelAnalyticsAggregateAuditRecord: Partial<LabelAnalyticsAggregateAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!labelAnalyticsAggregateAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, labelAnalyticsAggregateAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LabelContentExplorerAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelContentExplorerAuditRecord(writer: SerializationWriter, labelContentExplorerAuditRecord: Partial<LabelContentExplorerAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!labelContentExplorerAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, labelContentExplorerAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LabelsRoot The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLabelsRoot(writer: SerializationWriter, labelsRoot: Partial<LabelsRoot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!labelsRoot || isSerializingDerivedType) { return; }
    serializeEntity(writer, labelsRoot, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<AuthorityTemplate>("authorities", labelsRoot.authorities, serializeAuthorityTemplate);
    writer.writeCollectionOfObjectValues<CategoryTemplate>("categories", labelsRoot.categories, serializeCategoryTemplate);
    writer.writeCollectionOfObjectValues<CitationTemplate>("citations", labelsRoot.citations, serializeCitationTemplate);
    writer.writeCollectionOfObjectValues<DepartmentTemplate>("departments", labelsRoot.departments, serializeDepartmentTemplate);
    writer.writeCollectionOfObjectValues<FilePlanReferenceTemplate>("filePlanReferences", labelsRoot.filePlanReferences, serializeFilePlanReferenceTemplate);
    writer.writeCollectionOfObjectValues<RetentionLabel>("retentionLabels", labelsRoot.retentionLabels, serializeRetentionLabel);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LargeContentMetadataAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLargeContentMetadataAuditRecord(writer: SerializationWriter, largeContentMetadataAuditRecord: Partial<LargeContentMetadataAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!largeContentMetadataAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, largeContentMetadataAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param LoggedOnUser The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoggedOnUser(writer: SerializationWriter, loggedOnUser: Partial<LoggedOnUser> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!loggedOnUser || isSerializingDerivedType) { return; }
    writer.writeStringValue("accountName", loggedOnUser.accountName);
    writer.writeStringValue("domainName", loggedOnUser.domainName);
    writer.writeStringValue("@odata.type", loggedOnUser.odataType);
    writer.writeAdditionalData(loggedOnUser.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param M365ComplianceConnectorAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeM365ComplianceConnectorAuditRecord(writer: SerializationWriter, m365ComplianceConnectorAuditRecord: Partial<M365ComplianceConnectorAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!m365ComplianceConnectorAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, m365ComplianceConnectorAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param M365DAADAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeM365DAADAuditRecord(writer: SerializationWriter, m365DAADAuditRecord: Partial<M365DAADAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!m365DAADAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, m365DAADAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MailboxConfigurationEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailboxConfigurationEvidence(writer: SerializationWriter, mailboxConfigurationEvidence: Partial<MailboxConfigurationEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mailboxConfigurationEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, mailboxConfigurationEvidence, isSerializingDerivedType)
    writer.writeStringValue("configurationId", mailboxConfigurationEvidence.configurationId);
    writer.writeEnumValue<MailboxConfigurationType>("configurationType", mailboxConfigurationEvidence.configurationType);
    writer.writeStringValue("displayName", mailboxConfigurationEvidence.displayName);
    writer.writeGuidValue("externalDirectoryObjectId", mailboxConfigurationEvidence.externalDirectoryObjectId);
    writer.writeStringValue("mailboxPrimaryAddress", mailboxConfigurationEvidence.mailboxPrimaryAddress);
    writer.writeStringValue("upn", mailboxConfigurationEvidence.upn);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MailboxEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailboxEvidence(writer: SerializationWriter, mailboxEvidence: Partial<MailboxEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mailboxEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, mailboxEvidence, isSerializingDerivedType)
    writer.writeStringValue("displayName", mailboxEvidence.displayName);
    writer.writeStringValue("primaryAddress", mailboxEvidence.primaryAddress);
    writer.writeStringValue("upn", mailboxEvidence.upn);
    writer.writeObjectValue<UserAccount>("userAccount", mailboxEvidence.userAccount, serializeUserAccount);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MailClusterEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailClusterEvidence(writer: SerializationWriter, mailClusterEvidence: Partial<MailClusterEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mailClusterEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, mailClusterEvidence, isSerializingDerivedType)
    writer.writeStringValue("clusterBy", mailClusterEvidence.clusterBy);
    writer.writeStringValue("clusterByValue", mailClusterEvidence.clusterByValue);
    writer.writeNumberValue("emailCount", mailClusterEvidence.emailCount);
    writer.writeCollectionOfPrimitiveValues<string>("networkMessageIds", mailClusterEvidence.networkMessageIds);
    writer.writeStringValue("query", mailClusterEvidence.query);
    writer.writeStringValue("urn", mailClusterEvidence.urn);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MailSubmissionData The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMailSubmissionData(writer: SerializationWriter, mailSubmissionData: Partial<MailSubmissionData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mailSubmissionData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mailSubmissionData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MalwareEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMalwareEvidence(writer: SerializationWriter, malwareEvidence: Partial<MalwareEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!malwareEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, malwareEvidence, isSerializingDerivedType)
    writer.writeStringValue("category", malwareEvidence.category);
    writer.writeCollectionOfObjectValues<FileEvidence>("files", malwareEvidence.files, serializeFileEvidence);
    writer.writeStringValue("name", malwareEvidence.name);
    writer.writeCollectionOfObjectValues<ProcessEvidence>("processes", malwareEvidence.processes, serializeProcessEvidence);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ManagedServicesAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedServicesAuditRecord(writer: SerializationWriter, managedServicesAuditRecord: Partial<ManagedServicesAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!managedServicesAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, managedServicesAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ManagedTenantsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeManagedTenantsAuditRecord(writer: SerializationWriter, managedTenantsAuditRecord: Partial<ManagedTenantsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!managedTenantsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, managedTenantsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MapgAlertsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMapgAlertsAuditRecord(writer: SerializationWriter, mapgAlertsAuditRecord: Partial<MapgAlertsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mapgAlertsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mapgAlertsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MapgOnboardAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMapgOnboardAuditRecord(writer: SerializationWriter, mapgOnboardAuditRecord: Partial<MapgOnboardAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mapgOnboardAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mapgOnboardAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MapgPolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMapgPolicyAuditRecord(writer: SerializationWriter, mapgPolicyAuditRecord: Partial<MapgPolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mapgPolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mapgPolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param McasAlertsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMcasAlertsAuditRecord(writer: SerializationWriter, mcasAlertsAuditRecord: Partial<McasAlertsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mcasAlertsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mcasAlertsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MdaDataSecuritySignalRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdaDataSecuritySignalRecord(writer: SerializationWriter, mdaDataSecuritySignalRecord: Partial<MdaDataSecuritySignalRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mdaDataSecuritySignalRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mdaDataSecuritySignalRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MdatpAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdatpAuditRecord(writer: SerializationWriter, mdatpAuditRecord: Partial<MdatpAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mdatpAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mdatpAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MdcEventsRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdcEventsRecord(writer: SerializationWriter, mdcEventsRecord: Partial<MdcEventsRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mdcEventsRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mdcEventsRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MdiAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMdiAuditRecord(writer: SerializationWriter, mdiAuditRecord: Partial<MdiAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mdiAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mdiAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MeshWorldsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMeshWorldsAuditRecord(writer: SerializationWriter, meshWorldsAuditRecord: Partial<MeshWorldsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!meshWorldsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, meshWorldsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Microsoft365BackupBackupItemAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupBackupItemAuditRecord(writer: SerializationWriter, microsoft365BackupBackupItemAuditRecord: Partial<Microsoft365BackupBackupItemAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoft365BackupBackupItemAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoft365BackupBackupItemAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Microsoft365BackupBackupPolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupBackupPolicyAuditRecord(writer: SerializationWriter, microsoft365BackupBackupPolicyAuditRecord: Partial<Microsoft365BackupBackupPolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoft365BackupBackupPolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoft365BackupBackupPolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Microsoft365BackupRestoreItemAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupRestoreItemAuditRecord(writer: SerializationWriter, microsoft365BackupRestoreItemAuditRecord: Partial<Microsoft365BackupRestoreItemAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoft365BackupRestoreItemAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoft365BackupRestoreItemAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Microsoft365BackupRestoreTaskAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoft365BackupRestoreTaskAuditRecord(writer: SerializationWriter, microsoft365BackupRestoreTaskAuditRecord: Partial<Microsoft365BackupRestoreTaskAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoft365BackupRestoreTaskAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoft365BackupRestoreTaskAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftDefenderExpertsBaseAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftDefenderExpertsBaseAuditRecord(writer: SerializationWriter, microsoftDefenderExpertsBaseAuditRecord: Partial<MicrosoftDefenderExpertsBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftDefenderExpertsBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftDefenderExpertsBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftDefenderExpertsXDRAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftDefenderExpertsXDRAuditRecord(writer: SerializationWriter, microsoftDefenderExpertsXDRAuditRecord: Partial<MicrosoftDefenderExpertsXDRAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftDefenderExpertsXDRAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftDefenderExpertsXDRAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftFlowAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftFlowAuditRecord(writer: SerializationWriter, microsoftFlowAuditRecord: Partial<MicrosoftFlowAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftFlowAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftFlowAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftFormsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftFormsAuditRecord(writer: SerializationWriter, microsoftFormsAuditRecord: Partial<MicrosoftFormsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftFormsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftFormsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftGraphDataConnectConsent The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftGraphDataConnectConsent(writer: SerializationWriter, microsoftGraphDataConnectConsent: Partial<MicrosoftGraphDataConnectConsent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftGraphDataConnectConsent || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftGraphDataConnectConsent, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftGraphDataConnectOperation The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftGraphDataConnectOperation(writer: SerializationWriter, microsoftGraphDataConnectOperation: Partial<MicrosoftGraphDataConnectOperation> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftGraphDataConnectOperation || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftGraphDataConnectOperation, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftPurviewDataMapOperationRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewDataMapOperationRecord(writer: SerializationWriter, microsoftPurviewDataMapOperationRecord: Partial<MicrosoftPurviewDataMapOperationRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftPurviewDataMapOperationRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftPurviewDataMapOperationRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftPurviewMetadataPolicyOperationRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewMetadataPolicyOperationRecord(writer: SerializationWriter, microsoftPurviewMetadataPolicyOperationRecord: Partial<MicrosoftPurviewMetadataPolicyOperationRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftPurviewMetadataPolicyOperationRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftPurviewMetadataPolicyOperationRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftPurviewPolicyOperationRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewPolicyOperationRecord(writer: SerializationWriter, microsoftPurviewPolicyOperationRecord: Partial<MicrosoftPurviewPolicyOperationRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftPurviewPolicyOperationRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftPurviewPolicyOperationRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftPurviewPrivacyAuditEvent The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftPurviewPrivacyAuditEvent(writer: SerializationWriter, microsoftPurviewPrivacyAuditEvent: Partial<MicrosoftPurviewPrivacyAuditEvent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftPurviewPrivacyAuditEvent || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftPurviewPrivacyAuditEvent, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftStreamAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftStreamAuditRecord(writer: SerializationWriter, microsoftStreamAuditRecord: Partial<MicrosoftStreamAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftStreamAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftStreamAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftTeamsAdminAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsAdminAuditRecord(writer: SerializationWriter, microsoftTeamsAdminAuditRecord: Partial<MicrosoftTeamsAdminAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftTeamsAdminAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftTeamsAdminAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftTeamsAnalyticsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsAnalyticsAuditRecord(writer: SerializationWriter, microsoftTeamsAnalyticsAuditRecord: Partial<MicrosoftTeamsAnalyticsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftTeamsAnalyticsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftTeamsAnalyticsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftTeamsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsAuditRecord(writer: SerializationWriter, microsoftTeamsAuditRecord: Partial<MicrosoftTeamsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftTeamsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftTeamsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftTeamsDeviceAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsDeviceAuditRecord(writer: SerializationWriter, microsoftTeamsDeviceAuditRecord: Partial<MicrosoftTeamsDeviceAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftTeamsDeviceAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftTeamsDeviceAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftTeamsRetentionLabelActionAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsRetentionLabelActionAuditRecord(writer: SerializationWriter, microsoftTeamsRetentionLabelActionAuditRecord: Partial<MicrosoftTeamsRetentionLabelActionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftTeamsRetentionLabelActionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftTeamsRetentionLabelActionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftTeamsSensitivityLabelActionAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsSensitivityLabelActionAuditRecord(writer: SerializationWriter, microsoftTeamsSensitivityLabelActionAuditRecord: Partial<MicrosoftTeamsSensitivityLabelActionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftTeamsSensitivityLabelActionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftTeamsSensitivityLabelActionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MicrosoftTeamsShiftsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMicrosoftTeamsShiftsAuditRecord(writer: SerializationWriter, microsoftTeamsShiftsAuditRecord: Partial<MicrosoftTeamsShiftsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!microsoftTeamsShiftsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, microsoftTeamsShiftsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelExchangeItemAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelExchangeItemAuditRecord(writer: SerializationWriter, mipAutoLabelExchangeItemAuditRecord: Partial<MipAutoLabelExchangeItemAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelExchangeItemAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelExchangeItemAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelItemAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelItemAuditRecord(writer: SerializationWriter, mipAutoLabelItemAuditRecord: Partial<MipAutoLabelItemAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelItemAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelItemAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelPolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelPolicyAuditRecord(writer: SerializationWriter, mipAutoLabelPolicyAuditRecord: Partial<MipAutoLabelPolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelPolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelPolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelProgressFeedbackAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelProgressFeedbackAuditRecord(writer: SerializationWriter, mipAutoLabelProgressFeedbackAuditRecord: Partial<MipAutoLabelProgressFeedbackAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelProgressFeedbackAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelProgressFeedbackAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelSharePointItemAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSharePointItemAuditRecord(writer: SerializationWriter, mipAutoLabelSharePointItemAuditRecord: Partial<MipAutoLabelSharePointItemAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelSharePointItemAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelSharePointItemAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelSharePointPolicyLocationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSharePointPolicyLocationAuditRecord(writer: SerializationWriter, mipAutoLabelSharePointPolicyLocationAuditRecord: Partial<MipAutoLabelSharePointPolicyLocationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelSharePointPolicyLocationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelSharePointPolicyLocationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelSimulationSharePointCompletionRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationSharePointCompletionRecord(writer: SerializationWriter, mipAutoLabelSimulationSharePointCompletionRecord: Partial<MipAutoLabelSimulationSharePointCompletionRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelSimulationSharePointCompletionRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelSimulationSharePointCompletionRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelSimulationSharePointProgressRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationSharePointProgressRecord(writer: SerializationWriter, mipAutoLabelSimulationSharePointProgressRecord: Partial<MipAutoLabelSimulationSharePointProgressRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelSimulationSharePointProgressRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelSimulationSharePointProgressRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelSimulationStatisticsRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationStatisticsRecord(writer: SerializationWriter, mipAutoLabelSimulationStatisticsRecord: Partial<MipAutoLabelSimulationStatisticsRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelSimulationStatisticsRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelSimulationStatisticsRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipAutoLabelSimulationStatusRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipAutoLabelSimulationStatusRecord(writer: SerializationWriter, mipAutoLabelSimulationStatusRecord: Partial<MipAutoLabelSimulationStatusRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipAutoLabelSimulationStatusRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipAutoLabelSimulationStatusRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipExactDataMatchAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipExactDataMatchAuditRecord(writer: SerializationWriter, mipExactDataMatchAuditRecord: Partial<MipExactDataMatchAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipExactDataMatchAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipExactDataMatchAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipLabelAnalyticsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipLabelAnalyticsAuditRecord(writer: SerializationWriter, mipLabelAnalyticsAuditRecord: Partial<MipLabelAnalyticsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipLabelAnalyticsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipLabelAnalyticsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MipLabelAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMipLabelAuditRecord(writer: SerializationWriter, mipLabelAuditRecord: Partial<MipLabelAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mipLabelAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mipLabelAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MS365DCustomDetectionAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMS365DCustomDetectionAuditRecord(writer: SerializationWriter, mS365DCustomDetectionAuditRecord: Partial<MS365DCustomDetectionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mS365DCustomDetectionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mS365DCustomDetectionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MS365DIncidentAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMS365DIncidentAuditRecord(writer: SerializationWriter, mS365DIncidentAuditRecord: Partial<MS365DIncidentAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mS365DIncidentAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mS365DIncidentAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MS365DSuppressionRuleAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMS365DSuppressionRuleAuditRecord(writer: SerializationWriter, mS365DSuppressionRuleAuditRecord: Partial<MS365DSuppressionRuleAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!mS365DSuppressionRuleAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, mS365DSuppressionRuleAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MsdeGeneralSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeGeneralSettingsAuditRecord(writer: SerializationWriter, msdeGeneralSettingsAuditRecord: Partial<MsdeGeneralSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!msdeGeneralSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, msdeGeneralSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MsdeIndicatorsSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeIndicatorsSettingsAuditRecord(writer: SerializationWriter, msdeIndicatorsSettingsAuditRecord: Partial<MsdeIndicatorsSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!msdeIndicatorsSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, msdeIndicatorsSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MsdeResponseActionsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeResponseActionsAuditRecord(writer: SerializationWriter, msdeResponseActionsAuditRecord: Partial<MsdeResponseActionsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!msdeResponseActionsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, msdeResponseActionsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MsdeRolesSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsdeRolesSettingsAuditRecord(writer: SerializationWriter, msdeRolesSettingsAuditRecord: Partial<MsdeRolesSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!msdeRolesSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, msdeRolesSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MsticNationStateNotificationRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMsticNationStateNotificationRecord(writer: SerializationWriter, msticNationStateNotificationRecord: Partial<MsticNationStateNotificationRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!msticNationStateNotificationRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, msticNationStateNotificationRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MultiStageDispositionAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMultiStageDispositionAuditRecord(writer: SerializationWriter, multiStageDispositionAuditRecord: Partial<MultiStageDispositionAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!multiStageDispositionAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, multiStageDispositionAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param MyAnalyticsSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeMyAnalyticsSettingsAuditRecord(writer: SerializationWriter, myAnalyticsSettingsAuditRecord: Partial<MyAnalyticsSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!myAnalyticsSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, myAnalyticsSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param NetworkAdapter The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNetworkAdapter(writer: SerializationWriter, networkAdapter: Partial<NetworkAdapter> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!networkAdapter || isSerializingDerivedType) { return; }
    serializeEntity(writer, networkAdapter, isSerializingDerivedType)
    writer.writeBooleanValue("isEnabled", networkAdapter.isEnabled);
    writer.writeStringValue("name", networkAdapter.name);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param NetworkConnectionEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNetworkConnectionEvidence(writer: SerializationWriter, networkConnectionEvidence: Partial<NetworkConnectionEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!networkConnectionEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, networkConnectionEvidence, isSerializingDerivedType)
    writer.writeObjectValue<IpEvidence>("destinationAddress", networkConnectionEvidence.destinationAddress, serializeIpEvidence);
    writer.writeNumberValue("destinationPort", networkConnectionEvidence.destinationPort);
    writer.writeEnumValue<ProtocolType>("protocol", networkConnectionEvidence.protocol);
    writer.writeObjectValue<IpEvidence>("sourceAddress", networkConnectionEvidence.sourceAddress, serializeIpEvidence);
    writer.writeNumberValue("sourcePort", networkConnectionEvidence.sourcePort);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param NicEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNicEvidence(writer: SerializationWriter, nicEvidence: Partial<NicEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!nicEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, nicEvidence, isSerializingDerivedType)
    writer.writeObjectValue<IpEvidence>("ipAddress", nicEvidence.ipAddress, serializeIpEvidence);
    writer.writeStringValue("macAddress", nicEvidence.macAddress);
    writer.writeCollectionOfPrimitiveValues<string>("vlans", nicEvidence.vlans);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OauthApplicationEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOauthApplicationEvidence(writer: SerializationWriter, oauthApplicationEvidence: Partial<OauthApplicationEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!oauthApplicationEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, oauthApplicationEvidence, isSerializingDerivedType)
    writer.writeStringValue("appId", oauthApplicationEvidence.appId);
    writer.writeStringValue("displayName", oauthApplicationEvidence.displayName);
    writer.writeStringValue("objectId", oauthApplicationEvidence.objectId);
    writer.writeStringValue("publisher", oauthApplicationEvidence.publisher);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OcrSettings The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOcrSettings(writer: SerializationWriter, ocrSettings: Partial<OcrSettings> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!ocrSettings || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("isEnabled", ocrSettings.isEnabled);
    writer.writeNumberValue("maxImageSize", ocrSettings.maxImageSize);
    writer.writeStringValue("@odata.type", ocrSettings.odataType);
    writer.writeDurationValue("timeout", ocrSettings.timeout);
    writer.writeAdditionalData(ocrSettings.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OfficeNativeAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOfficeNativeAuditRecord(writer: SerializationWriter, officeNativeAuditRecord: Partial<OfficeNativeAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!officeNativeAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, officeNativeAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OmePortalAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOmePortalAuditRecord(writer: SerializationWriter, omePortalAuditRecord: Partial<OmePortalAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!omePortalAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, omePortalAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OneDriveAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOneDriveAuditRecord(writer: SerializationWriter, oneDriveAuditRecord: Partial<OneDriveAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!oneDriveAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, oneDriveAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OnPremisesFileShareScannerDlpAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOnPremisesFileShareScannerDlpAuditRecord(writer: SerializationWriter, onPremisesFileShareScannerDlpAuditRecord: Partial<OnPremisesFileShareScannerDlpAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!onPremisesFileShareScannerDlpAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, onPremisesFileShareScannerDlpAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OnPremisesScannerDlpAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOnPremisesScannerDlpAuditRecord(writer: SerializationWriter, onPremisesScannerDlpAuditRecord: Partial<OnPremisesScannerDlpAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!onPremisesScannerDlpAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, onPremisesScannerDlpAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OnPremisesSharePointScannerDlpAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOnPremisesSharePointScannerDlpAuditRecord(writer: SerializationWriter, onPremisesSharePointScannerDlpAuditRecord: Partial<OnPremisesSharePointScannerDlpAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!onPremisesSharePointScannerDlpAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, onPremisesSharePointScannerDlpAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param OwaGetAccessTokenForResourceAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeOwaGetAccessTokenForResourceAuditRecord(writer: SerializationWriter, owaGetAccessTokenForResourceAuditRecord: Partial<OwaGetAccessTokenForResourceAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!owaGetAccessTokenForResourceAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, owaGetAccessTokenForResourceAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PassiveDnsRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePassiveDnsRecord(writer: SerializationWriter, passiveDnsRecord: Partial<PassiveDnsRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!passiveDnsRecord || isSerializingDerivedType) { return; }
    serializeArtifact(writer, passiveDnsRecord, isSerializingDerivedType)
    writer.writeObjectValue<Artifact>("artifact", passiveDnsRecord.artifact, serializeArtifact);
    writer.writeDateValue("collectedDateTime", passiveDnsRecord.collectedDateTime);
    writer.writeDateValue("firstSeenDateTime", passiveDnsRecord.firstSeenDateTime);
    writer.writeDateValue("lastSeenDateTime", passiveDnsRecord.lastSeenDateTime);
    writer.writeObjectValue<Host>("parentHost", passiveDnsRecord.parentHost, serializeHost);
    writer.writeStringValue("recordType", passiveDnsRecord.recordType);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PassiveDnsRecordCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePassiveDnsRecordCollectionResponse(writer: SerializationWriter, passiveDnsRecordCollectionResponse: Partial<PassiveDnsRecordCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!passiveDnsRecordCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, passiveDnsRecordCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<PassiveDnsRecord>("value", passiveDnsRecordCollectionResponse.value, serializePassiveDnsRecord);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PeopleAdminSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePeopleAdminSettingsAuditRecord(writer: SerializationWriter, peopleAdminSettingsAuditRecord: Partial<PeopleAdminSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!peopleAdminSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, peopleAdminSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PhysicalBadgingSignalAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePhysicalBadgingSignalAuditRecord(writer: SerializationWriter, physicalBadgingSignalAuditRecord: Partial<PhysicalBadgingSignalAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!physicalBadgingSignalAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, physicalBadgingSignalAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerCopyPlanAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerCopyPlanAuditRecord(writer: SerializationWriter, plannerCopyPlanAuditRecord: Partial<PlannerCopyPlanAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerCopyPlanAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerCopyPlanAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerPlanAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerPlanAuditRecord(writer: SerializationWriter, plannerPlanAuditRecord: Partial<PlannerPlanAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerPlanAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerPlanAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerPlanListAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerPlanListAuditRecord(writer: SerializationWriter, plannerPlanListAuditRecord: Partial<PlannerPlanListAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerPlanListAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerPlanListAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerRosterAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerRosterAuditRecord(writer: SerializationWriter, plannerRosterAuditRecord: Partial<PlannerRosterAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerRosterAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerRosterAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerRosterSensitivityLabelAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerRosterSensitivityLabelAuditRecord(writer: SerializationWriter, plannerRosterSensitivityLabelAuditRecord: Partial<PlannerRosterSensitivityLabelAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerRosterSensitivityLabelAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerRosterSensitivityLabelAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerTaskAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerTaskAuditRecord(writer: SerializationWriter, plannerTaskAuditRecord: Partial<PlannerTaskAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerTaskAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerTaskAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerTaskListAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerTaskListAuditRecord(writer: SerializationWriter, plannerTaskListAuditRecord: Partial<PlannerTaskListAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerTaskListAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerTaskListAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PlannerTenantSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePlannerTenantSettingsAuditRecord(writer: SerializationWriter, plannerTenantSettingsAuditRecord: Partial<PlannerTenantSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!plannerTenantSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, plannerTenantSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerAppsAuditAppRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerAppsAuditAppRecord(writer: SerializationWriter, powerAppsAuditAppRecord: Partial<PowerAppsAuditAppRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerAppsAuditAppRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerAppsAuditAppRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerAppsAuditPlanRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerAppsAuditPlanRecord(writer: SerializationWriter, powerAppsAuditPlanRecord: Partial<PowerAppsAuditPlanRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerAppsAuditPlanRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerAppsAuditPlanRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerAppsAuditResourceRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerAppsAuditResourceRecord(writer: SerializationWriter, powerAppsAuditResourceRecord: Partial<PowerAppsAuditResourceRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerAppsAuditResourceRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerAppsAuditResourceRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerBiAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerBiAuditRecord(writer: SerializationWriter, powerBiAuditRecord: Partial<PowerBiAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerBiAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerBiAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerBiDlpAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerBiDlpAuditRecord(writer: SerializationWriter, powerBiDlpAuditRecord: Partial<PowerBiDlpAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerBiDlpAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerBiDlpAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerPagesSiteAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPagesSiteAuditRecord(writer: SerializationWriter, powerPagesSiteAuditRecord: Partial<PowerPagesSiteAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerPagesSiteAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerPagesSiteAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerPlatformAdminDlpAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformAdminDlpAuditRecord(writer: SerializationWriter, powerPlatformAdminDlpAuditRecord: Partial<PowerPlatformAdminDlpAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerPlatformAdminDlpAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerPlatformAdminDlpAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerPlatformAdminEnvironmentAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformAdminEnvironmentAuditRecord(writer: SerializationWriter, powerPlatformAdminEnvironmentAuditRecord: Partial<PowerPlatformAdminEnvironmentAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerPlatformAdminEnvironmentAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerPlatformAdminEnvironmentAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerPlatformAdministratorActivityRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformAdministratorActivityRecord(writer: SerializationWriter, powerPlatformAdministratorActivityRecord: Partial<PowerPlatformAdministratorActivityRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerPlatformAdministratorActivityRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerPlatformAdministratorActivityRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerPlatformLockboxResourceAccessRequestAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformLockboxResourceAccessRequestAuditRecord(writer: SerializationWriter, powerPlatformLockboxResourceAccessRequestAuditRecord: Partial<PowerPlatformLockboxResourceAccessRequestAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerPlatformLockboxResourceAccessRequestAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerPlatformLockboxResourceAccessRequestAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerPlatformLockboxResourceCommandAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformLockboxResourceCommandAuditRecord(writer: SerializationWriter, powerPlatformLockboxResourceCommandAuditRecord: Partial<PowerPlatformLockboxResourceCommandAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerPlatformLockboxResourceCommandAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerPlatformLockboxResourceCommandAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PowerPlatformServiceActivityAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePowerPlatformServiceActivityAuditRecord(writer: SerializationWriter, powerPlatformServiceActivityAuditRecord: Partial<PowerPlatformServiceActivityAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!powerPlatformServiceActivityAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, powerPlatformServiceActivityAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyDataMatchAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyDataMatchAuditRecord(writer: SerializationWriter, privacyDataMatchAuditRecord: Partial<PrivacyDataMatchAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyDataMatchAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyDataMatchAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyDataMinimizationRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyDataMinimizationRecord(writer: SerializationWriter, privacyDataMinimizationRecord: Partial<PrivacyDataMinimizationRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyDataMinimizationRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyDataMinimizationRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyDigestEmailRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyDigestEmailRecord(writer: SerializationWriter, privacyDigestEmailRecord: Partial<PrivacyDigestEmailRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyDigestEmailRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyDigestEmailRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyOpenAccessAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyOpenAccessAuditRecord(writer: SerializationWriter, privacyOpenAccessAuditRecord: Partial<PrivacyOpenAccessAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyOpenAccessAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyOpenAccessAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyPortalAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyPortalAuditRecord(writer: SerializationWriter, privacyPortalAuditRecord: Partial<PrivacyPortalAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyPortalAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyPortalAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyRemediationActionRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyRemediationActionRecord(writer: SerializationWriter, privacyRemediationActionRecord: Partial<PrivacyRemediationActionRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyRemediationActionRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyRemediationActionRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyRemediationRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyRemediationRecord(writer: SerializationWriter, privacyRemediationRecord: Partial<PrivacyRemediationRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyRemediationRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyRemediationRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PrivacyTenantAuditHistoryRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePrivacyTenantAuditHistoryRecord(writer: SerializationWriter, privacyTenantAuditHistoryRecord: Partial<PrivacyTenantAuditHistoryRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!privacyTenantAuditHistoryRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, privacyTenantAuditHistoryRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProcessEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProcessEvidence(writer: SerializationWriter, processEvidence: Partial<ProcessEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!processEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, processEvidence, isSerializingDerivedType)
    writer.writeEnumValue<DetectionStatus>("detectionStatus", processEvidence.detectionStatus);
    writer.writeObjectValue<FileDetails>("imageFile", processEvidence.imageFile, serializeFileDetails);
    writer.writeStringValue("mdeDeviceId", processEvidence.mdeDeviceId);
    writer.writeDateValue("parentProcessCreationDateTime", processEvidence.parentProcessCreationDateTime);
    writer.writeNumberValue("parentProcessId", processEvidence.parentProcessId);
    writer.writeObjectValue<FileDetails>("parentProcessImageFile", processEvidence.parentProcessImageFile, serializeFileDetails);
    writer.writeStringValue("processCommandLine", processEvidence.processCommandLine);
    writer.writeDateValue("processCreationDateTime", processEvidence.processCreationDateTime);
    writer.writeNumberValue("processId", processEvidence.processId);
    writer.writeObjectValue<UserAccount>("userAccount", processEvidence.userAccount, serializeUserAccount);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectAuditRecord(writer: SerializationWriter, projectAuditRecord: Partial<ProjectAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectForTheWebAssignedToMeSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebAssignedToMeSettingsAuditRecord(writer: SerializationWriter, projectForTheWebAssignedToMeSettingsAuditRecord: Partial<ProjectForTheWebAssignedToMeSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectForTheWebAssignedToMeSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectForTheWebAssignedToMeSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectForTheWebProjectAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebProjectAuditRecord(writer: SerializationWriter, projectForTheWebProjectAuditRecord: Partial<ProjectForTheWebProjectAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectForTheWebProjectAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectForTheWebProjectAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectForTheWebProjectSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebProjectSettingsAuditRecord(writer: SerializationWriter, projectForTheWebProjectSettingsAuditRecord: Partial<ProjectForTheWebProjectSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectForTheWebProjectSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectForTheWebProjectSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectForTheWebRoadmapAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebRoadmapAuditRecord(writer: SerializationWriter, projectForTheWebRoadmapAuditRecord: Partial<ProjectForTheWebRoadmapAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectForTheWebRoadmapAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectForTheWebRoadmapAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectForTheWebRoadmapItemAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebRoadmapItemAuditRecord(writer: SerializationWriter, projectForTheWebRoadmapItemAuditRecord: Partial<ProjectForTheWebRoadmapItemAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectForTheWebRoadmapItemAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectForTheWebRoadmapItemAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectForTheWebRoadmapSettingsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebRoadmapSettingsAuditRecord(writer: SerializationWriter, projectForTheWebRoadmapSettingsAuditRecord: Partial<ProjectForTheWebRoadmapSettingsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectForTheWebRoadmapSettingsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectForTheWebRoadmapSettingsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ProjectForTheWebTaskAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeProjectForTheWebTaskAuditRecord(writer: SerializationWriter, projectForTheWebTaskAuditRecord: Partial<ProjectForTheWebTaskAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!projectForTheWebTaskAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, projectForTheWebTaskAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PublicFolderAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePublicFolderAuditRecord(writer: SerializationWriter, publicFolderAuditRecord: Partial<PublicFolderAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!publicFolderAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, publicFolderAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PurviewInsiderRiskAlertsRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePurviewInsiderRiskAlertsRecord(writer: SerializationWriter, purviewInsiderRiskAlertsRecord: Partial<PurviewInsiderRiskAlertsRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!purviewInsiderRiskAlertsRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, purviewInsiderRiskAlertsRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param PurviewInsiderRiskCasesRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePurviewInsiderRiskCasesRecord(writer: SerializationWriter, purviewInsiderRiskCasesRecord: Partial<PurviewInsiderRiskCasesRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!purviewInsiderRiskCasesRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, purviewInsiderRiskCasesRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param QuarantineAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeQuarantineAuditRecord(writer: SerializationWriter, quarantineAuditRecord: Partial<QuarantineAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!quarantineAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, quarantineAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RecordsManagementAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecordsManagementAuditRecord(writer: SerializationWriter, recordsManagementAuditRecord: Partial<RecordsManagementAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!recordsManagementAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, recordsManagementAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RedundancyDetectionSettings The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRedundancyDetectionSettings(writer: SerializationWriter, redundancyDetectionSettings: Partial<RedundancyDetectionSettings> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!redundancyDetectionSettings || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("isEnabled", redundancyDetectionSettings.isEnabled);
    writer.writeNumberValue("maxWords", redundancyDetectionSettings.maxWords);
    writer.writeNumberValue("minWords", redundancyDetectionSettings.minWords);
    writer.writeStringValue("@odata.type", redundancyDetectionSettings.odataType);
    writer.writeNumberValue("similarityThreshold", redundancyDetectionSettings.similarityThreshold);
    writer.writeAdditionalData(redundancyDetectionSettings.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RegistryKeyEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegistryKeyEvidence(writer: SerializationWriter, registryKeyEvidence: Partial<RegistryKeyEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!registryKeyEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, registryKeyEvidence, isSerializingDerivedType)
    writer.writeStringValue("registryHive", registryKeyEvidence.registryHive);
    writer.writeStringValue("registryKey", registryKeyEvidence.registryKey);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RegistryValueEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegistryValueEvidence(writer: SerializationWriter, registryValueEvidence: Partial<RegistryValueEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!registryValueEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, registryValueEvidence, isSerializingDerivedType)
    writer.writeStringValue("mdeDeviceId", registryValueEvidence.mdeDeviceId);
    writer.writeStringValue("registryHive", registryValueEvidence.registryHive);
    writer.writeStringValue("registryKey", registryValueEvidence.registryKey);
    writer.writeStringValue("registryValue", registryValueEvidence.registryValue);
    writer.writeStringValue("registryValueName", registryValueEvidence.registryValueName);
    writer.writeStringValue("registryValueType", registryValueEvidence.registryValueType);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionDuration The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionDuration(writer: SerializationWriter, retentionDuration: Partial<RetentionDuration> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionDuration || isSerializingDerivedType) { return; }
    writer.writeStringValue("@odata.type", retentionDuration.odataType);
    writer.writeAdditionalData(retentionDuration.additionalData);
    switch (retentionDuration.odataType) {
        case "#microsoft.graph.security.retentionDurationForever":
            serializeRetentionDurationForever(writer, retentionDuration, true);
        break;
        case "#microsoft.graph.security.retentionDurationInDays":
            serializeRetentionDurationInDays(writer, retentionDuration, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionDurationForever The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionDurationForever(writer: SerializationWriter, retentionDurationForever: Partial<RetentionDurationForever> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionDurationForever || isSerializingDerivedType) { return; }
    serializeRetentionDuration(writer, retentionDurationForever, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionDurationInDays The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionDurationInDays(writer: SerializationWriter, retentionDurationInDays: Partial<RetentionDurationInDays> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionDurationInDays || isSerializingDerivedType) { return; }
    serializeRetentionDuration(writer, retentionDurationInDays, isSerializingDerivedType)
    writer.writeNumberValue("days", retentionDurationInDays.days);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionEvent The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEvent(writer: SerializationWriter, retentionEvent: Partial<RetentionEvent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionEvent || isSerializingDerivedType) { return; }
    serializeEntity(writer, retentionEvent, isSerializingDerivedType)
    writer.writeObjectValue<IdentitySet>("createdBy", retentionEvent.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", retentionEvent.createdDateTime);
    writer.writeStringValue("description", retentionEvent.description);
    writer.writeStringValue("displayName", retentionEvent.displayName);
    writer.writeCollectionOfObjectValues<EventPropagationResult>("eventPropagationResults", retentionEvent.eventPropagationResults, serializeEventPropagationResult);
    writer.writeCollectionOfObjectValues<EventQuery>("eventQueries", retentionEvent.eventQueries, serializeEventQuery);
    writer.writeObjectValue<RetentionEventStatus>("eventStatus", retentionEvent.eventStatus, serializeRetentionEventStatus);
    writer.writeDateValue("eventTriggerDateTime", retentionEvent.eventTriggerDateTime);
    writer.writeObjectValue<IdentitySet>("lastModifiedBy", retentionEvent.lastModifiedBy, serializeIdentitySet);
    writer.writeDateValue("lastModifiedDateTime", retentionEvent.lastModifiedDateTime);
    writer.writeDateValue("lastStatusUpdateDateTime", retentionEvent.lastStatusUpdateDateTime);
    writer.writeObjectValue<RetentionEventType>("retentionEventType", retentionEvent.retentionEventType, serializeRetentionEventType);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionEventCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventCollectionResponse(writer: SerializationWriter, retentionEventCollectionResponse: Partial<RetentionEventCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionEventCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, retentionEventCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<RetentionEvent>("value", retentionEventCollectionResponse.value, serializeRetentionEvent);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionEventStatus The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventStatus(writer: SerializationWriter, retentionEventStatus: Partial<RetentionEventStatus> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionEventStatus || isSerializingDerivedType) { return; }
    writer.writeObjectValue<PublicError>("error", retentionEventStatus.errorEscaped, serializePublicError);
    writer.writeStringValue("@odata.type", retentionEventStatus.odataType);
    writer.writeEnumValue<EventStatusType>("status", retentionEventStatus.status);
    writer.writeAdditionalData(retentionEventStatus.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionEventType The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventType(writer: SerializationWriter, retentionEventType: Partial<RetentionEventType> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionEventType || isSerializingDerivedType) { return; }
    serializeEntity(writer, retentionEventType, isSerializingDerivedType)
    writer.writeObjectValue<IdentitySet>("createdBy", retentionEventType.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", retentionEventType.createdDateTime);
    writer.writeStringValue("description", retentionEventType.description);
    writer.writeStringValue("displayName", retentionEventType.displayName);
    writer.writeObjectValue<IdentitySet>("lastModifiedBy", retentionEventType.lastModifiedBy, serializeIdentitySet);
    writer.writeDateValue("lastModifiedDateTime", retentionEventType.lastModifiedDateTime);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionEventTypeCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionEventTypeCollectionResponse(writer: SerializationWriter, retentionEventTypeCollectionResponse: Partial<RetentionEventTypeCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionEventTypeCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, retentionEventTypeCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<RetentionEventType>("value", retentionEventTypeCollectionResponse.value, serializeRetentionEventType);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionLabel The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionLabel(writer: SerializationWriter, retentionLabel: Partial<RetentionLabel> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionLabel || isSerializingDerivedType) { return; }
    serializeEntity(writer, retentionLabel, isSerializingDerivedType)
    writer.writeEnumValue<ActionAfterRetentionPeriod>("actionAfterRetentionPeriod", retentionLabel.actionAfterRetentionPeriod);
    writer.writeEnumValue<BehaviorDuringRetentionPeriod>("behaviorDuringRetentionPeriod", retentionLabel.behaviorDuringRetentionPeriod);
    writer.writeObjectValue<IdentitySet>("createdBy", retentionLabel.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", retentionLabel.createdDateTime);
    writer.writeEnumValue<DefaultRecordBehavior>("defaultRecordBehavior", retentionLabel.defaultRecordBehavior);
    writer.writeStringValue("descriptionForAdmins", retentionLabel.descriptionForAdmins);
    writer.writeStringValue("descriptionForUsers", retentionLabel.descriptionForUsers);
    writer.writeObjectValue<FilePlanDescriptor>("descriptors", retentionLabel.descriptors, serializeFilePlanDescriptor);
    writer.writeStringValue("displayName", retentionLabel.displayName);
    writer.writeCollectionOfObjectValues<DispositionReviewStage>("dispositionReviewStages", retentionLabel.dispositionReviewStages, serializeDispositionReviewStage);
    writer.writeBooleanValue("isInUse", retentionLabel.isInUse);
    writer.writeStringValue("labelToBeApplied", retentionLabel.labelToBeApplied);
    writer.writeObjectValue<IdentitySet>("lastModifiedBy", retentionLabel.lastModifiedBy, serializeIdentitySet);
    writer.writeDateValue("lastModifiedDateTime", retentionLabel.lastModifiedDateTime);
    writer.writeObjectValue<RetentionDuration>("retentionDuration", retentionLabel.retentionDuration, serializeRetentionDuration);
    writer.writeObjectValue<RetentionEventType>("retentionEventType", retentionLabel.retentionEventType, serializeRetentionEventType);
    writer.writeEnumValue<RetentionTrigger>("retentionTrigger", retentionLabel.retentionTrigger);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionLabelCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionLabelCollectionResponse(writer: SerializationWriter, retentionLabelCollectionResponse: Partial<RetentionLabelCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionLabelCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, retentionLabelCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<RetentionLabel>("value", retentionLabelCollectionResponse.value, serializeRetentionLabel);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RetentionPolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRetentionPolicyAuditRecord(writer: SerializationWriter, retentionPolicyAuditRecord: Partial<RetentionPolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!retentionPolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, retentionPolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SasTokenEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSasTokenEvidence(writer: SerializationWriter, sasTokenEvidence: Partial<SasTokenEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sasTokenEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, sasTokenEvidence, isSerializingDerivedType)
    writer.writeStringValue("allowedIpAddresses", sasTokenEvidence.allowedIpAddresses);
    writer.writeCollectionOfPrimitiveValues<string>("allowedResourceTypes", sasTokenEvidence.allowedResourceTypes);
    writer.writeCollectionOfPrimitiveValues<string>("allowedServices", sasTokenEvidence.allowedServices);
    writer.writeDateValue("expiryDateTime", sasTokenEvidence.expiryDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("permissions", sasTokenEvidence.permissions);
    writer.writeStringValue("protocol", sasTokenEvidence.protocol);
    writer.writeStringValue("signatureHash", sasTokenEvidence.signatureHash);
    writer.writeStringValue("signedWith", sasTokenEvidence.signedWith);
    writer.writeDateValue("startDateTime", sasTokenEvidence.startDateTime);
    writer.writeObjectValue<AzureResourceEvidence>("storageResource", sasTokenEvidence.storageResource, serializeAzureResourceEvidence);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ScoreEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeScoreEvidence(writer: SerializationWriter, scoreEvidence: Partial<ScoreEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!scoreEvidence || isSerializingDerivedType) { return; }
    serializeAuditData(writer, scoreEvidence, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ScorePlatformGenericAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeScorePlatformGenericAuditRecord(writer: SerializationWriter, scorePlatformGenericAuditRecord: Partial<ScorePlatformGenericAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!scorePlatformGenericAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, scorePlatformGenericAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ScriptRunAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeScriptRunAuditRecord(writer: SerializationWriter, scriptRunAuditRecord: Partial<ScriptRunAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!scriptRunAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, scriptRunAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Search The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearch(writer: SerializationWriter, search: Partial<Search> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!search || isSerializingDerivedType) { return; }
    serializeEntity(writer, search, isSerializingDerivedType)
    writer.writeStringValue("contentQuery", search.contentQuery);
    writer.writeObjectValue<IdentitySet>("createdBy", search.createdBy, serializeIdentitySet);
    writer.writeDateValue("createdDateTime", search.createdDateTime);
    writer.writeStringValue("description", search.description);
    writer.writeStringValue("displayName", search.displayName);
    writer.writeObjectValue<IdentitySet>("lastModifiedBy", search.lastModifiedBy, serializeIdentitySet);
    writer.writeDateValue("lastModifiedDateTime", search.lastModifiedDateTime);
    switch (search.odataType) {
        case "#microsoft.graph.security.ediscoveryReviewSetQuery":
            serializeEdiscoveryReviewSetQuery(writer, search, true);
        break;
        case "#microsoft.graph.security.ediscoverySearch":
            serializeEdiscoverySearch(writer, search, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SearchAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSearchAuditRecord(writer: SerializationWriter, searchAuditRecord: Partial<SearchAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!searchAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, searchAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecurityComplianceAlertRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceAlertRecord(writer: SerializationWriter, securityComplianceAlertRecord: Partial<SecurityComplianceAlertRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!securityComplianceAlertRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, securityComplianceAlertRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecurityComplianceCenterEOPCmdletAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceCenterEOPCmdletAuditRecord(writer: SerializationWriter, securityComplianceCenterEOPCmdletAuditRecord: Partial<SecurityComplianceCenterEOPCmdletAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!securityComplianceCenterEOPCmdletAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, securityComplianceCenterEOPCmdletAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecurityComplianceInsightsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceInsightsAuditRecord(writer: SerializationWriter, securityComplianceInsightsAuditRecord: Partial<SecurityComplianceInsightsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!securityComplianceInsightsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, securityComplianceInsightsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecurityComplianceRBACAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceRBACAuditRecord(writer: SerializationWriter, securityComplianceRBACAuditRecord: Partial<SecurityComplianceRBACAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!securityComplianceRBACAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, securityComplianceRBACAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecurityComplianceUserChangeAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityComplianceUserChangeAuditRecord(writer: SerializationWriter, securityComplianceUserChangeAuditRecord: Partial<SecurityComplianceUserChangeAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!securityComplianceUserChangeAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, securityComplianceUserChangeAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecurityGroupEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecurityGroupEvidence(writer: SerializationWriter, securityGroupEvidence: Partial<SecurityGroupEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!securityGroupEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, securityGroupEvidence, isSerializingDerivedType)
    writer.writeStringValue("displayName", securityGroupEvidence.displayName);
    writer.writeStringValue("securityGroupId", securityGroupEvidence.securityGroupId);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Sensor The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensor(writer: SerializationWriter, sensor: Partial<Sensor> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sensor || isSerializingDerivedType) { return; }
    serializeEntity(writer, sensor, isSerializingDerivedType)
    writer.writeDateValue("createdDateTime", sensor.createdDateTime);
    writer.writeEnumValue<DeploymentStatus>("deploymentStatus", sensor.deploymentStatus);
    writer.writeStringValue("displayName", sensor.displayName);
    writer.writeStringValue("domainName", sensor.domainName);
    writer.writeCollectionOfObjectValues<HealthIssue>("healthIssues", sensor.healthIssues, serializeHealthIssue);
    writer.writeEnumValue<SensorHealthStatus>("healthStatus", sensor.healthStatus);
    writer.writeNumberValue("openHealthIssuesCount", sensor.openHealthIssuesCount);
    writer.writeEnumValue<SensorType>("sensorType", sensor.sensorType);
    writer.writeObjectValue<SensorSettings>("settings", sensor.settings, serializeSensorSettings);
    writer.writeStringValue("version", sensor.version);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SensorCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensorCollectionResponse(writer: SerializationWriter, sensorCollectionResponse: Partial<SensorCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sensorCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, sensorCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Sensor>("value", sensorCollectionResponse.value, serializeSensor);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SensorDeploymentPackage The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensorDeploymentPackage(writer: SerializationWriter, sensorDeploymentPackage: Partial<SensorDeploymentPackage> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sensorDeploymentPackage || isSerializingDerivedType) { return; }
    writer.writeStringValue("downloadUrl", sensorDeploymentPackage.downloadUrl);
    writer.writeStringValue("@odata.type", sensorDeploymentPackage.odataType);
    writer.writeStringValue("version", sensorDeploymentPackage.version);
    writer.writeAdditionalData(sensorDeploymentPackage.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SensorSettings The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSensorSettings(writer: SerializationWriter, sensorSettings: Partial<SensorSettings> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sensorSettings || isSerializingDerivedType) { return; }
    writer.writeStringValue("description", sensorSettings.description);
    writer.writeCollectionOfPrimitiveValues<string>("domainControllerDnsNames", sensorSettings.domainControllerDnsNames);
    writer.writeBooleanValue("isDelayedDeploymentEnabled", sensorSettings.isDelayedDeploymentEnabled);
    writer.writeCollectionOfObjectValues<NetworkAdapter>("networkAdapters", sensorSettings.networkAdapters, serializeNetworkAdapter);
    writer.writeStringValue("@odata.type", sensorSettings.odataType);
    writer.writeAdditionalData(sensorSettings.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ServicePrincipalEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServicePrincipalEvidence(writer: SerializationWriter, servicePrincipalEvidence: Partial<ServicePrincipalEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!servicePrincipalEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, servicePrincipalEvidence, isSerializingDerivedType)
    writer.writeStringValue("appId", servicePrincipalEvidence.appId);
    writer.writeStringValue("appOwnerTenantId", servicePrincipalEvidence.appOwnerTenantId);
    writer.writeStringValue("servicePrincipalName", servicePrincipalEvidence.servicePrincipalName);
    writer.writeStringValue("servicePrincipalObjectId", servicePrincipalEvidence.servicePrincipalObjectId);
    writer.writeEnumValue<ServicePrincipalType>("servicePrincipalType", servicePrincipalEvidence.servicePrincipalType);
    writer.writeStringValue("tenantId", servicePrincipalEvidence.tenantId);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointAppPermissionOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointAppPermissionOperationAuditRecord(writer: SerializationWriter, sharePointAppPermissionOperationAuditRecord: Partial<SharePointAppPermissionOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointAppPermissionOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointAppPermissionOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointAuditRecord(writer: SerializationWriter, sharePointAuditRecord: Partial<SharePointAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointCommentOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointCommentOperationAuditRecord(writer: SerializationWriter, sharePointCommentOperationAuditRecord: Partial<SharePointCommentOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointCommentOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointCommentOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointContentTypeOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointContentTypeOperationAuditRecord(writer: SerializationWriter, sharePointContentTypeOperationAuditRecord: Partial<SharePointContentTypeOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointContentTypeOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointContentTypeOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointESignatureAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointESignatureAuditRecord(writer: SerializationWriter, sharePointESignatureAuditRecord: Partial<SharePointESignatureAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointESignatureAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointESignatureAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointFieldOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointFieldOperationAuditRecord(writer: SerializationWriter, sharePointFieldOperationAuditRecord: Partial<SharePointFieldOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointFieldOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointFieldOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointFileOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointFileOperationAuditRecord(writer: SerializationWriter, sharePointFileOperationAuditRecord: Partial<SharePointFileOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointFileOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointFileOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointListOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointListOperationAuditRecord(writer: SerializationWriter, sharePointListOperationAuditRecord: Partial<SharePointListOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointListOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointListOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SharePointSharingOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSharePointSharingOperationAuditRecord(writer: SerializationWriter, sharePointSharingOperationAuditRecord: Partial<SharePointSharingOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sharePointSharingOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, sharePointSharingOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SinglePropertySchema The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSinglePropertySchema(writer: SerializationWriter, singlePropertySchema: Partial<SinglePropertySchema> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!singlePropertySchema || isSerializingDerivedType) { return; }
    writer.writeStringValue("name", singlePropertySchema.name);
    writer.writeStringValue("@odata.type", singlePropertySchema.odataType);
    writer.writeStringValue("type", singlePropertySchema.type);
    writer.writeAdditionalData(singlePropertySchema.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SiteSource The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSiteSource(writer: SerializationWriter, siteSource: Partial<SiteSource> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!siteSource || isSerializingDerivedType) { return; }
    serializeDataSource(writer, siteSource, isSerializingDerivedType)
    writer.writeObjectValue<Site>("site", siteSource.site, serializeSite);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SiteSourceCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSiteSourceCollectionResponse(writer: SerializationWriter, siteSourceCollectionResponse: Partial<SiteSourceCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!siteSourceCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, siteSourceCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<SiteSource>("value", siteSourceCollectionResponse.value, serializeSiteSource);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SkypeForBusinessBaseAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessBaseAuditRecord(writer: SerializationWriter, skypeForBusinessBaseAuditRecord: Partial<SkypeForBusinessBaseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!skypeForBusinessBaseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, skypeForBusinessBaseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SkypeForBusinessCmdletsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessCmdletsAuditRecord(writer: SerializationWriter, skypeForBusinessCmdletsAuditRecord: Partial<SkypeForBusinessCmdletsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!skypeForBusinessCmdletsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, skypeForBusinessCmdletsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SkypeForBusinessPSTNUsageAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessPSTNUsageAuditRecord(writer: SerializationWriter, skypeForBusinessPSTNUsageAuditRecord: Partial<SkypeForBusinessPSTNUsageAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!skypeForBusinessPSTNUsageAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, skypeForBusinessPSTNUsageAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SkypeForBusinessUsersBlockedAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSkypeForBusinessUsersBlockedAuditRecord(writer: SerializationWriter, skypeForBusinessUsersBlockedAuditRecord: Partial<SkypeForBusinessUsersBlockedAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!skypeForBusinessUsersBlockedAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, skypeForBusinessUsersBlockedAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SmsCreatePhoneNumberRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSmsCreatePhoneNumberRecord(writer: SerializationWriter, smsCreatePhoneNumberRecord: Partial<SmsCreatePhoneNumberRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!smsCreatePhoneNumberRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, smsCreatePhoneNumberRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SmsDeletePhoneNumberRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSmsDeletePhoneNumberRecord(writer: SerializationWriter, smsDeletePhoneNumberRecord: Partial<SmsDeletePhoneNumberRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!smsDeletePhoneNumberRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, smsDeletePhoneNumberRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SslCertificate The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSslCertificate(writer: SerializationWriter, sslCertificate: Partial<SslCertificate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sslCertificate || isSerializingDerivedType) { return; }
    serializeArtifact(writer, sslCertificate, isSerializingDerivedType)
    writer.writeDateValue("expirationDateTime", sslCertificate.expirationDateTime);
    writer.writeStringValue("fingerprint", sslCertificate.fingerprint);
    writer.writeDateValue("firstSeenDateTime", sslCertificate.firstSeenDateTime);
    writer.writeDateValue("issueDateTime", sslCertificate.issueDateTime);
    writer.writeObjectValue<SslCertificateEntity>("issuer", sslCertificate.issuer, serializeSslCertificateEntity);
    writer.writeDateValue("lastSeenDateTime", sslCertificate.lastSeenDateTime);
    writer.writeCollectionOfObjectValues<Host>("relatedHosts", sslCertificate.relatedHosts, serializeHost);
    writer.writeStringValue("serialNumber", sslCertificate.serialNumber);
    writer.writeStringValue("sha1", sslCertificate.sha1);
    writer.writeObjectValue<SslCertificateEntity>("subject", sslCertificate.subject, serializeSslCertificateEntity);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SslCertificateCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSslCertificateCollectionResponse(writer: SerializationWriter, sslCertificateCollectionResponse: Partial<SslCertificateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sslCertificateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, sslCertificateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<SslCertificate>("value", sslCertificateCollectionResponse.value, serializeSslCertificate);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SslCertificateEntity The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSslCertificateEntity(writer: SerializationWriter, sslCertificateEntity: Partial<SslCertificateEntity> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!sslCertificateEntity || isSerializingDerivedType) { return; }
    writer.writeObjectValue<PhysicalAddress>("address", sslCertificateEntity.address, serializePhysicalAddress);
    writer.writeCollectionOfPrimitiveValues<string>("alternateNames", sslCertificateEntity.alternateNames);
    writer.writeStringValue("commonName", sslCertificateEntity.commonName);
    writer.writeStringValue("email", sslCertificateEntity.email);
    writer.writeStringValue("givenName", sslCertificateEntity.givenName);
    writer.writeStringValue("@odata.type", sslCertificateEntity.odataType);
    writer.writeStringValue("organizationName", sslCertificateEntity.organizationName);
    writer.writeStringValue("organizationUnitName", sslCertificateEntity.organizationUnitName);
    writer.writeStringValue("serialNumber", sslCertificateEntity.serialNumber);
    writer.writeStringValue("surname", sslCertificateEntity.surname);
    writer.writeAdditionalData(sslCertificateEntity.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Stream The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeStream(writer: SerializationWriter, stream: Partial<Stream> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!stream || isSerializingDerivedType) { return; }
    writer.writeStringValue("name", stream.name);
    writer.writeStringValue("@odata.type", stream.odataType);
    writer.writeAdditionalData(stream.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SubcategoryTemplate The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubcategoryTemplate(writer: SerializationWriter, subcategoryTemplate: Partial<SubcategoryTemplate> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!subcategoryTemplate || isSerializingDerivedType) { return; }
    serializeFilePlanDescriptorTemplate(writer, subcategoryTemplate, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SubcategoryTemplateCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubcategoryTemplateCollectionResponse(writer: SerializationWriter, subcategoryTemplateCollectionResponse: Partial<SubcategoryTemplateCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!subcategoryTemplateCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, subcategoryTemplateCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<SubcategoryTemplate>("value", subcategoryTemplateCollectionResponse.value, serializeSubcategoryTemplate);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Subdomain The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubdomain(writer: SerializationWriter, subdomain: Partial<Subdomain> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!subdomain || isSerializingDerivedType) { return; }
    serializeEntity(writer, subdomain, isSerializingDerivedType)
    writer.writeDateValue("firstSeenDateTime", subdomain.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", subdomain.host, serializeHost);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SubdomainCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubdomainCollectionResponse(writer: SerializationWriter, subdomainCollectionResponse: Partial<SubdomainCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!subdomainCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, subdomainCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Subdomain>("value", subdomainCollectionResponse.value, serializeSubdomain);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SubmissionMailEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSubmissionMailEvidence(writer: SerializationWriter, submissionMailEvidence: Partial<SubmissionMailEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!submissionMailEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, submissionMailEvidence, isSerializingDerivedType)
    writer.writeStringValue("networkMessageId", submissionMailEvidence.networkMessageId);
    writer.writeStringValue("recipient", submissionMailEvidence.recipient);
    writer.writeStringValue("reportType", submissionMailEvidence.reportType);
    writer.writeStringValue("sender", submissionMailEvidence.sender);
    writer.writeStringValue("senderIp", submissionMailEvidence.senderIp);
    writer.writeStringValue("subject", submissionMailEvidence.subject);
    writer.writeDateValue("submissionDateTime", submissionMailEvidence.submissionDateTime);
    writer.writeStringValue("submissionId", submissionMailEvidence.submissionId);
    writer.writeStringValue("submitter", submissionMailEvidence.submitter);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SupervisoryReviewDayXInsightsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSupervisoryReviewDayXInsightsAuditRecord(writer: SerializationWriter, supervisoryReviewDayXInsightsAuditRecord: Partial<SupervisoryReviewDayXInsightsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!supervisoryReviewDayXInsightsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, supervisoryReviewDayXInsightsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SyntheticProbeAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSyntheticProbeAuditRecord(writer: SerializationWriter, syntheticProbeAuditRecord: Partial<SyntheticProbeAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!syntheticProbeAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, syntheticProbeAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Tag The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTag(writer: SerializationWriter, tag: Partial<Tag> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!tag || isSerializingDerivedType) { return; }
    serializeEntity(writer, tag, isSerializingDerivedType)
    writer.writeObjectValue<IdentitySet>("createdBy", tag.createdBy, serializeIdentitySet);
    writer.writeStringValue("description", tag.description);
    writer.writeStringValue("displayName", tag.displayName);
    writer.writeDateValue("lastModifiedDateTime", tag.lastModifiedDateTime);
    switch (tag.odataType) {
        case "#microsoft.graph.security.ediscoveryReviewTag":
            serializeEdiscoveryReviewTag(writer, tag, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsEasyApprovalsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsEasyApprovalsAuditRecord(writer: SerializationWriter, teamsEasyApprovalsAuditRecord: Partial<TeamsEasyApprovalsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsEasyApprovalsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, teamsEasyApprovalsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsHealthcareAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsHealthcareAuditRecord(writer: SerializationWriter, teamsHealthcareAuditRecord: Partial<TeamsHealthcareAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsHealthcareAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, teamsHealthcareAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsMessageEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsMessageEvidence(writer: SerializationWriter, teamsMessageEvidence: Partial<TeamsMessageEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsMessageEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, teamsMessageEvidence, isSerializingDerivedType)
    writer.writeStringValue("campaignId", teamsMessageEvidence.campaignId);
    writer.writeStringValue("channelId", teamsMessageEvidence.channelId);
    writer.writeEnumValue<TeamsMessageDeliveryAction>("deliveryAction", teamsMessageEvidence.deliveryAction);
    writer.writeEnumValue<TeamsDeliveryLocation>("deliveryLocation", teamsMessageEvidence.deliveryLocation);
    writer.writeCollectionOfObjectValues<FileEvidence>("files", teamsMessageEvidence.files, serializeFileEvidence);
    writer.writeStringValue("groupId", teamsMessageEvidence.groupId);
    writer.writeBooleanValue("isExternal", teamsMessageEvidence.isExternal);
    writer.writeBooleanValue("isOwned", teamsMessageEvidence.isOwned);
    writer.writeDateValue("lastModifiedDateTime", teamsMessageEvidence.lastModifiedDateTime);
    writer.writeEnumValue<AntispamTeamsDirection>("messageDirection", teamsMessageEvidence.messageDirection);
    writer.writeStringValue("messageId", teamsMessageEvidence.messageId);
    writer.writeGuidValue("owningTenantId", teamsMessageEvidence.owningTenantId);
    writer.writeStringValue("parentMessageId", teamsMessageEvidence.parentMessageId);
    writer.writeDateValue("receivedDateTime", teamsMessageEvidence.receivedDateTime);
    writer.writeCollectionOfPrimitiveValues<string>("recipients", teamsMessageEvidence.recipients);
    writer.writeStringValue("senderFromAddress", teamsMessageEvidence.senderFromAddress);
    writer.writeStringValue("senderIP", teamsMessageEvidence.senderIP);
    writer.writeStringValue("sourceAppName", teamsMessageEvidence.sourceAppName);
    writer.writeStringValue("sourceId", teamsMessageEvidence.sourceId);
    writer.writeStringValue("subject", teamsMessageEvidence.subject);
    writer.writeCollectionOfPrimitiveValues<string>("suspiciousRecipients", teamsMessageEvidence.suspiciousRecipients);
    writer.writeStringValue("threadId", teamsMessageEvidence.threadId);
    writer.writeStringValue("threadType", teamsMessageEvidence.threadType);
    writer.writeCollectionOfObjectValues<UrlEvidence>("urls", teamsMessageEvidence.urls, serializeUrlEvidence);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TeamsUpdatesAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTeamsUpdatesAuditRecord(writer: SerializationWriter, teamsUpdatesAuditRecord: Partial<TeamsUpdatesAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!teamsUpdatesAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, teamsUpdatesAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TenantAllowBlockListAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTenantAllowBlockListAuditRecord(writer: SerializationWriter, tenantAllowBlockListAuditRecord: Partial<TenantAllowBlockListAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!tenantAllowBlockListAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, tenantAllowBlockListAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ThreatFinderAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatFinderAuditRecord(writer: SerializationWriter, threatFinderAuditRecord: Partial<ThreatFinderAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!threatFinderAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, threatFinderAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ThreatIntelligence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligence(writer: SerializationWriter, threatIntelligence: Partial<ThreatIntelligence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!threatIntelligence || isSerializingDerivedType) { return; }
    serializeEntity(writer, threatIntelligence, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<ArticleIndicator>("articleIndicators", threatIntelligence.articleIndicators, serializeArticleIndicator);
    writer.writeCollectionOfObjectValues<Article>("articles", threatIntelligence.articles, serializeArticle);
    writer.writeCollectionOfObjectValues<HostComponent>("hostComponents", threatIntelligence.hostComponents, serializeHostComponent);
    writer.writeCollectionOfObjectValues<HostCookie>("hostCookies", threatIntelligence.hostCookies, serializeHostCookie);
    writer.writeCollectionOfObjectValues<HostPair>("hostPairs", threatIntelligence.hostPairs, serializeHostPair);
    writer.writeCollectionOfObjectValues<HostPort>("hostPorts", threatIntelligence.hostPorts, serializeHostPort);
    writer.writeCollectionOfObjectValues<Host>("hosts", threatIntelligence.hosts, serializeHost);
    writer.writeCollectionOfObjectValues<HostSslCertificate>("hostSslCertificates", threatIntelligence.hostSslCertificates, serializeHostSslCertificate);
    writer.writeCollectionOfObjectValues<HostTracker>("hostTrackers", threatIntelligence.hostTrackers, serializeHostTracker);
    writer.writeCollectionOfObjectValues<IntelligenceProfileIndicator>("intelligenceProfileIndicators", threatIntelligence.intelligenceProfileIndicators, serializeIntelligenceProfileIndicator);
    writer.writeCollectionOfObjectValues<IntelligenceProfile>("intelProfiles", threatIntelligence.intelProfiles, serializeIntelligenceProfile);
    writer.writeCollectionOfObjectValues<PassiveDnsRecord>("passiveDnsRecords", threatIntelligence.passiveDnsRecords, serializePassiveDnsRecord);
    writer.writeCollectionOfObjectValues<SslCertificate>("sslCertificates", threatIntelligence.sslCertificates, serializeSslCertificate);
    writer.writeCollectionOfObjectValues<Subdomain>("subdomains", threatIntelligence.subdomains, serializeSubdomain);
    writer.writeCollectionOfObjectValues<Vulnerability>("vulnerabilities", threatIntelligence.vulnerabilities, serializeVulnerability);
    writer.writeCollectionOfObjectValues<WhoisHistoryRecord>("whoisHistoryRecords", threatIntelligence.whoisHistoryRecords, serializeWhoisHistoryRecord);
    writer.writeCollectionOfObjectValues<WhoisRecord>("whoisRecords", threatIntelligence.whoisRecords, serializeWhoisRecord);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ThreatIntelligenceAtpContentData The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligenceAtpContentData(writer: SerializationWriter, threatIntelligenceAtpContentData: Partial<ThreatIntelligenceAtpContentData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!threatIntelligenceAtpContentData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, threatIntelligenceAtpContentData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ThreatIntelligenceMailData The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligenceMailData(writer: SerializationWriter, threatIntelligenceMailData: Partial<ThreatIntelligenceMailData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!threatIntelligenceMailData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, threatIntelligenceMailData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ThreatIntelligenceUrlClickData The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeThreatIntelligenceUrlClickData(writer: SerializationWriter, threatIntelligenceUrlClickData: Partial<ThreatIntelligenceUrlClickData> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!threatIntelligenceUrlClickData || isSerializingDerivedType) { return; }
    serializeAuditData(writer, threatIntelligenceUrlClickData, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TodoAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTodoAuditRecord(writer: SerializationWriter, todoAuditRecord: Partial<TodoAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!todoAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, todoAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TopicModelingSettings The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTopicModelingSettings(writer: SerializationWriter, topicModelingSettings: Partial<TopicModelingSettings> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!topicModelingSettings || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("dynamicallyAdjustTopicCount", topicModelingSettings.dynamicallyAdjustTopicCount);
    writer.writeBooleanValue("ignoreNumbers", topicModelingSettings.ignoreNumbers);
    writer.writeBooleanValue("isEnabled", topicModelingSettings.isEnabled);
    writer.writeStringValue("@odata.type", topicModelingSettings.odataType);
    writer.writeNumberValue("topicCount", topicModelingSettings.topicCount);
    writer.writeAdditionalData(topicModelingSettings.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TriggersRoot The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTriggersRoot(writer: SerializationWriter, triggersRoot: Partial<TriggersRoot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!triggersRoot || isSerializingDerivedType) { return; }
    serializeEntity(writer, triggersRoot, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<RetentionEvent>("retentionEvents", triggersRoot.retentionEvents, serializeRetentionEvent);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param TriggerTypesRoot The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTriggerTypesRoot(writer: SerializationWriter, triggerTypesRoot: Partial<TriggerTypesRoot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!triggerTypesRoot || isSerializingDerivedType) { return; }
    serializeEntity(writer, triggerTypesRoot, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<RetentionEventType>("retentionEventTypes", triggerTypesRoot.retentionEventTypes, serializeRetentionEventType);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UamOperationAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUamOperationAuditRecord(writer: SerializationWriter, uamOperationAuditRecord: Partial<UamOperationAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!uamOperationAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, uamOperationAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UnclassifiedArtifact The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnclassifiedArtifact(writer: SerializationWriter, unclassifiedArtifact: Partial<UnclassifiedArtifact> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!unclassifiedArtifact || isSerializingDerivedType) { return; }
    serializeArtifact(writer, unclassifiedArtifact, isSerializingDerivedType)
    writer.writeStringValue("kind", unclassifiedArtifact.kind);
    writer.writeStringValue("value", unclassifiedArtifact.value);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UnifiedGroupAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedGroupAuditRecord(writer: SerializationWriter, unifiedGroupAuditRecord: Partial<UnifiedGroupAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!unifiedGroupAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, unifiedGroupAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UnifiedGroupSource The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedGroupSource(writer: SerializationWriter, unifiedGroupSource: Partial<UnifiedGroupSource> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!unifiedGroupSource || isSerializingDerivedType) { return; }
    serializeDataSource(writer, unifiedGroupSource, isSerializingDerivedType)
    writer.writeObjectValue<Group>("group", unifiedGroupSource.group, serializeGroup);
    writer.writeEnumValue<SourceType[]>("includedSources", unifiedGroupSource.includedSources);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UnifiedGroupSourceCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedGroupSourceCollectionResponse(writer: SerializationWriter, unifiedGroupSourceCollectionResponse: Partial<UnifiedGroupSourceCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!unifiedGroupSourceCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, unifiedGroupSourceCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<UnifiedGroupSource>("value", unifiedGroupSourceCollectionResponse.value, serializeUnifiedGroupSource);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UnifiedSimulationMatchedItemAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedSimulationMatchedItemAuditRecord(writer: SerializationWriter, unifiedSimulationMatchedItemAuditRecord: Partial<UnifiedSimulationMatchedItemAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!unifiedSimulationMatchedItemAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, unifiedSimulationMatchedItemAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UnifiedSimulationSummaryAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUnifiedSimulationSummaryAuditRecord(writer: SerializationWriter, unifiedSimulationSummaryAuditRecord: Partial<UnifiedSimulationSummaryAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!unifiedSimulationSummaryAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, unifiedSimulationSummaryAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UploadCertificateRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUploadCertificateRecord(writer: SerializationWriter, uploadCertificateRecord: Partial<UploadCertificateRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!uploadCertificateRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, uploadCertificateRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UrbacAssignmentAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrbacAssignmentAuditRecord(writer: SerializationWriter, urbacAssignmentAuditRecord: Partial<UrbacAssignmentAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!urbacAssignmentAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, urbacAssignmentAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UrbacEnableStateAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrbacEnableStateAuditRecord(writer: SerializationWriter, urbacEnableStateAuditRecord: Partial<UrbacEnableStateAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!urbacEnableStateAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, urbacEnableStateAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UrbacRoleAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrbacRoleAuditRecord(writer: SerializationWriter, urbacRoleAuditRecord: Partial<UrbacRoleAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!urbacRoleAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, urbacRoleAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UrlEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUrlEvidence(writer: SerializationWriter, urlEvidence: Partial<UrlEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!urlEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, urlEvidence, isSerializingDerivedType)
    writer.writeStringValue("url", urlEvidence.url);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserAccount The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserAccount(writer: SerializationWriter, userAccount: Partial<UserAccount> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userAccount || isSerializingDerivedType) { return; }
    writer.writeStringValue("accountName", userAccount.accountName);
    writer.writeStringValue("azureAdUserId", userAccount.azureAdUserId);
    writer.writeStringValue("displayName", userAccount.displayName);
    writer.writeStringValue("domainName", userAccount.domainName);
    writer.writeStringValue("@odata.type", userAccount.odataType);
    writer.writeStringValue("userPrincipalName", userAccount.userPrincipalName);
    writer.writeStringValue("userSid", userAccount.userSid);
    writer.writeAdditionalData(userAccount.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserEvidence The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserEvidence(writer: SerializationWriter, userEvidence: Partial<UserEvidence> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userEvidence || isSerializingDerivedType) { return; }
    serializeAlertEvidence(writer, userEvidence, isSerializingDerivedType)
    writer.writeObjectValue<Stream>("stream", userEvidence.stream, serializeStream);
    writer.writeObjectValue<UserAccount>("userAccount", userEvidence.userAccount, serializeUserAccount);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserSource The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserSource(writer: SerializationWriter, userSource: Partial<UserSource> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userSource || isSerializingDerivedType) { return; }
    serializeDataSource(writer, userSource, isSerializingDerivedType)
    writer.writeStringValue("email", userSource.email);
    writer.writeEnumValue<SourceType[]>("includedSources", userSource.includedSources);
    writer.writeStringValue("siteWebUrl", userSource.siteWebUrl);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserSourceCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserSourceCollectionResponse(writer: SerializationWriter, userSourceCollectionResponse: Partial<UserSourceCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userSourceCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, userSourceCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<UserSource>("value", userSourceCollectionResponse.value, serializeUserSource);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UserTrainingAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserTrainingAuditRecord(writer: SerializationWriter, userTrainingAuditRecord: Partial<UserTrainingAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!userTrainingAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, userTrainingAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VfamBasePolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamBasePolicyAuditRecord(writer: SerializationWriter, vfamBasePolicyAuditRecord: Partial<VfamBasePolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vfamBasePolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vfamBasePolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VfamCreatePolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamCreatePolicyAuditRecord(writer: SerializationWriter, vfamCreatePolicyAuditRecord: Partial<VfamCreatePolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vfamCreatePolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vfamCreatePolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VfamDeletePolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamDeletePolicyAuditRecord(writer: SerializationWriter, vfamDeletePolicyAuditRecord: Partial<VfamDeletePolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vfamDeletePolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vfamDeletePolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VfamUpdatePolicyAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVfamUpdatePolicyAuditRecord(writer: SerializationWriter, vfamUpdatePolicyAuditRecord: Partial<VfamUpdatePolicyAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vfamUpdatePolicyAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vfamUpdatePolicyAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VivaGoalsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaGoalsAuditRecord(writer: SerializationWriter, vivaGoalsAuditRecord: Partial<VivaGoalsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vivaGoalsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vivaGoalsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VivaLearningAdminAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaLearningAdminAuditRecord(writer: SerializationWriter, vivaLearningAdminAuditRecord: Partial<VivaLearningAdminAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vivaLearningAdminAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vivaLearningAdminAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VivaLearningAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaLearningAuditRecord(writer: SerializationWriter, vivaLearningAuditRecord: Partial<VivaLearningAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vivaLearningAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vivaLearningAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VivaPulseAdminAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseAdminAuditRecord(writer: SerializationWriter, vivaPulseAdminAuditRecord: Partial<VivaPulseAdminAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vivaPulseAdminAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vivaPulseAdminAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VivaPulseOrganizerAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseOrganizerAuditRecord(writer: SerializationWriter, vivaPulseOrganizerAuditRecord: Partial<VivaPulseOrganizerAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vivaPulseOrganizerAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vivaPulseOrganizerAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VivaPulseReportAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseReportAuditRecord(writer: SerializationWriter, vivaPulseReportAuditRecord: Partial<VivaPulseReportAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vivaPulseReportAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vivaPulseReportAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VivaPulseResponseAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVivaPulseResponseAuditRecord(writer: SerializationWriter, vivaPulseResponseAuditRecord: Partial<VivaPulseResponseAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vivaPulseResponseAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, vivaPulseResponseAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VmMetadata The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVmMetadata(writer: SerializationWriter, vmMetadata: Partial<VmMetadata> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vmMetadata || isSerializingDerivedType) { return; }
    writer.writeEnumValue<VmCloudProvider>("cloudProvider", vmMetadata.cloudProvider);
    writer.writeStringValue("@odata.type", vmMetadata.odataType);
    writer.writeStringValue("resourceId", vmMetadata.resourceId);
    writer.writeStringValue("subscriptionId", vmMetadata.subscriptionId);
    writer.writeStringValue("vmId", vmMetadata.vmId);
    writer.writeAdditionalData(vmMetadata.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Vulnerability The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerability(writer: SerializationWriter, vulnerability: Partial<Vulnerability> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vulnerability || isSerializingDerivedType) { return; }
    serializeEntity(writer, vulnerability, isSerializingDerivedType)
    writer.writeBooleanValue("activeExploitsObserved", vulnerability.activeExploitsObserved);
    writer.writeCollectionOfObjectValues<Article>("articles", vulnerability.articles, serializeArticle);
    writer.writeCollectionOfPrimitiveValues<string>("commonWeaknessEnumerationIds", vulnerability.commonWeaknessEnumerationIds);
    writer.writeCollectionOfObjectValues<VulnerabilityComponent>("components", vulnerability.components, serializeVulnerabilityComponent);
    writer.writeDateValue("createdDateTime", vulnerability.createdDateTime);
    writer.writeObjectValue<CvssSummary>("cvss2Summary", vulnerability.cvss2Summary, serializeCvssSummary);
    writer.writeObjectValue<CvssSummary>("cvss3Summary", vulnerability.cvss3Summary, serializeCvssSummary);
    writer.writeObjectValue<FormattedContent>("description", vulnerability.description, serializeFormattedContent);
    writer.writeCollectionOfObjectValues<Hyperlink>("exploits", vulnerability.exploits, serializeHyperlink);
    writer.writeBooleanValue("exploitsAvailable", vulnerability.exploitsAvailable);
    writer.writeBooleanValue("hasChatter", vulnerability.hasChatter);
    writer.writeDateValue("lastModifiedDateTime", vulnerability.lastModifiedDateTime);
    writer.writeNumberValue("priorityScore", vulnerability.priorityScore);
    writer.writeDateValue("publishedDateTime", vulnerability.publishedDateTime);
    writer.writeCollectionOfObjectValues<Hyperlink>("references", vulnerability.references, serializeHyperlink);
    writer.writeObjectValue<FormattedContent>("remediation", vulnerability.remediation, serializeFormattedContent);
    writer.writeEnumValue<VulnerabilitySeverity>("severity", vulnerability.severity);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VulnerabilityCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerabilityCollectionResponse(writer: SerializationWriter, vulnerabilityCollectionResponse: Partial<VulnerabilityCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vulnerabilityCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, vulnerabilityCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<Vulnerability>("value", vulnerabilityCollectionResponse.value, serializeVulnerability);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VulnerabilityComponent The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerabilityComponent(writer: SerializationWriter, vulnerabilityComponent: Partial<VulnerabilityComponent> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vulnerabilityComponent || isSerializingDerivedType) { return; }
    serializeEntity(writer, vulnerabilityComponent, isSerializingDerivedType)
    writer.writeStringValue("name", vulnerabilityComponent.name);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VulnerabilityComponentCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVulnerabilityComponentCollectionResponse(writer: SerializationWriter, vulnerabilityComponentCollectionResponse: Partial<VulnerabilityComponentCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vulnerabilityComponentCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, vulnerabilityComponentCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<VulnerabilityComponent>("value", vulnerabilityComponentCollectionResponse.value, serializeVulnerabilityComponent);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WdatpAlertsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWdatpAlertsAuditRecord(writer: SerializationWriter, wdatpAlertsAuditRecord: Partial<WdatpAlertsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!wdatpAlertsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, wdatpAlertsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WhoisBaseRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisBaseRecord(writer: SerializationWriter, whoisBaseRecord: Partial<WhoisBaseRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!whoisBaseRecord || isSerializingDerivedType) { return; }
    serializeEntity(writer, whoisBaseRecord, isSerializingDerivedType)
    writer.writeObjectValue<WhoisContact>("abuse", whoisBaseRecord.abuse, serializeWhoisContact);
    writer.writeObjectValue<WhoisContact>("admin", whoisBaseRecord.admin, serializeWhoisContact);
    writer.writeObjectValue<WhoisContact>("billing", whoisBaseRecord.billing, serializeWhoisContact);
    writer.writeStringValue("domainStatus", whoisBaseRecord.domainStatus);
    writer.writeDateValue("expirationDateTime", whoisBaseRecord.expirationDateTime);
    writer.writeDateValue("firstSeenDateTime", whoisBaseRecord.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", whoisBaseRecord.host, serializeHost);
    writer.writeDateValue("lastSeenDateTime", whoisBaseRecord.lastSeenDateTime);
    writer.writeDateValue("lastUpdateDateTime", whoisBaseRecord.lastUpdateDateTime);
    writer.writeCollectionOfObjectValues<WhoisNameserver>("nameservers", whoisBaseRecord.nameservers, serializeWhoisNameserver);
    writer.writeObjectValue<WhoisContact>("noc", whoisBaseRecord.noc, serializeWhoisContact);
    writer.writeStringValue("rawWhoisText", whoisBaseRecord.rawWhoisText);
    writer.writeObjectValue<WhoisContact>("registrant", whoisBaseRecord.registrant, serializeWhoisContact);
    writer.writeObjectValue<WhoisContact>("registrar", whoisBaseRecord.registrar, serializeWhoisContact);
    writer.writeDateValue("registrationDateTime", whoisBaseRecord.registrationDateTime);
    writer.writeObjectValue<WhoisContact>("technical", whoisBaseRecord.technical, serializeWhoisContact);
    writer.writeStringValue("whoisServer", whoisBaseRecord.whoisServer);
    writer.writeObjectValue<WhoisContact>("zone", whoisBaseRecord.zone, serializeWhoisContact);
    switch (whoisBaseRecord.odataType) {
        case "#microsoft.graph.security.whoisHistoryRecord":
            serializeWhoisHistoryRecord(writer, whoisBaseRecord, true);
        break;
        case "#microsoft.graph.security.whoisRecord":
            serializeWhoisRecord(writer, whoisBaseRecord, true);
        break;
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WhoisContact The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisContact(writer: SerializationWriter, whoisContact: Partial<WhoisContact> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!whoisContact || isSerializingDerivedType) { return; }
    writer.writeObjectValue<PhysicalAddress>("address", whoisContact.address, serializePhysicalAddress);
    writer.writeStringValue("email", whoisContact.email);
    writer.writeStringValue("fax", whoisContact.fax);
    writer.writeStringValue("name", whoisContact.name);
    writer.writeStringValue("@odata.type", whoisContact.odataType);
    writer.writeStringValue("organization", whoisContact.organization);
    writer.writeStringValue("telephone", whoisContact.telephone);
    writer.writeAdditionalData(whoisContact.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WhoisHistoryRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisHistoryRecord(writer: SerializationWriter, whoisHistoryRecord: Partial<WhoisHistoryRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!whoisHistoryRecord || isSerializingDerivedType) { return; }
    serializeWhoisBaseRecord(writer, whoisHistoryRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WhoisHistoryRecordCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisHistoryRecordCollectionResponse(writer: SerializationWriter, whoisHistoryRecordCollectionResponse: Partial<WhoisHistoryRecordCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!whoisHistoryRecordCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, whoisHistoryRecordCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<WhoisHistoryRecord>("value", whoisHistoryRecordCollectionResponse.value, serializeWhoisHistoryRecord);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WhoisNameserver The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisNameserver(writer: SerializationWriter, whoisNameserver: Partial<WhoisNameserver> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!whoisNameserver || isSerializingDerivedType) { return; }
    writer.writeDateValue("firstSeenDateTime", whoisNameserver.firstSeenDateTime);
    writer.writeObjectValue<Host>("host", whoisNameserver.host, serializeHost);
    writer.writeDateValue("lastSeenDateTime", whoisNameserver.lastSeenDateTime);
    writer.writeStringValue("@odata.type", whoisNameserver.odataType);
    writer.writeAdditionalData(whoisNameserver.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WhoisRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisRecord(writer: SerializationWriter, whoisRecord: Partial<WhoisRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!whoisRecord || isSerializingDerivedType) { return; }
    serializeWhoisBaseRecord(writer, whoisRecord, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<WhoisHistoryRecord>("history", whoisRecord.history, serializeWhoisHistoryRecord);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WhoisRecordCollectionResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWhoisRecordCollectionResponse(writer: SerializationWriter, whoisRecordCollectionResponse: Partial<WhoisRecordCollectionResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!whoisRecordCollectionResponse || isSerializingDerivedType) { return; }
    serializeBaseCollectionPaginationCountResponse(writer, whoisRecordCollectionResponse, isSerializingDerivedType)
    writer.writeCollectionOfObjectValues<WhoisRecord>("value", whoisRecordCollectionResponse.value, serializeWhoisRecord);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Windows365CustomerLockboxAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWindows365CustomerLockboxAuditRecord(writer: SerializationWriter, windows365CustomerLockboxAuditRecord: Partial<Windows365CustomerLockboxAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!windows365CustomerLockboxAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, windows365CustomerLockboxAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WorkplaceAnalyticsAuditRecord The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWorkplaceAnalyticsAuditRecord(writer: SerializationWriter, workplaceAnalyticsAuditRecord: Partial<WorkplaceAnalyticsAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!workplaceAnalyticsAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, workplaceAnalyticsAuditRecord, isSerializingDerivedType)
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 * @param YammerAuditRecord The instance to serialize from.
 */
// @ts-ignore
export function serializeYammerAuditRecord(writer: SerializationWriter, yammerAuditRecord: Partial<YammerAuditRecord> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!yammerAuditRecord || isSerializingDerivedType) { return; }
    serializeAuditData(writer, yammerAuditRecord, isSerializingDerivedType)
}
export interface ServicePrincipalEvidence extends AlertEvidence, Parsable {
    /**
     * The appId property
     */
    appId?: string | null;
    /**
     * The appOwnerTenantId property
     */
    appOwnerTenantId?: string | null;
    /**
     * The servicePrincipalName property
     */
    servicePrincipalName?: string | null;
    /**
     * The servicePrincipalObjectId property
     */
    servicePrincipalObjectId?: string | null;
    /**
     * The servicePrincipalType property
     */
    servicePrincipalType?: ServicePrincipalType | null;
    /**
     * The tenantId property
     */
    tenantId?: string | null;
}
export type ServicePrincipalType = (typeof ServicePrincipalTypeObject)[keyof typeof ServicePrincipalTypeObject];
export type ServiceSource = (typeof ServiceSourceObject)[keyof typeof ServiceSourceObject];
export interface SharePointAppPermissionOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointAuditRecord extends AuditData, Parsable {
}
export interface SharePointCommentOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointContentTypeOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointESignatureAuditRecord extends AuditData, Parsable {
}
export interface SharePointFieldOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointFileOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointListOperationAuditRecord extends AuditData, Parsable {
}
export interface SharePointSharingOperationAuditRecord extends AuditData, Parsable {
}
export interface SinglePropertySchema extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name of the property.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The type of the property.
     */
    type?: string | null;
}
export interface SiteSource extends DataSource, Parsable {
    /**
     * The site property
     */
    site?: Site | null;
}
export interface SiteSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SiteSource[] | null;
}
export interface SkypeForBusinessBaseAuditRecord extends AuditData, Parsable {
}
export interface SkypeForBusinessCmdletsAuditRecord extends AuditData, Parsable {
}
export interface SkypeForBusinessPSTNUsageAuditRecord extends AuditData, Parsable {
}
export interface SkypeForBusinessUsersBlockedAuditRecord extends AuditData, Parsable {
}
export interface SmsCreatePhoneNumberRecord extends AuditData, Parsable {
}
export interface SmsDeletePhoneNumberRecord extends AuditData, Parsable {
}
export type SourceType = (typeof SourceTypeObject)[keyof typeof SourceTypeObject];
export interface SslCertificate extends Artifact, Parsable {
    /**
     * The date and time when a certificate expires. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    expirationDateTime?: Date | null;
    /**
     * A hash of the certificate calculated on the data and signature.
     */
    fingerprint?: string | null;
    /**
     * The first date and time when this sslCertificate was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The date and time when a certificate was issued. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    issueDateTime?: Date | null;
    /**
     * The entity that grants this certificate.
     */
    issuer?: SslCertificateEntity | null;
    /**
     * The most recent date and time when this sslCertificate was observed. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The host resources related with this sslCertificate.
     */
    relatedHosts?: Host[] | null;
    /**
     * The serial number associated with an SSL certificate.
     */
    serialNumber?: string | null;
    /**
     * A SHA-1 hash of the certificate. Note: This is not the signature.
     */
    sha1?: string | null;
    /**
     * The person, site, machine, and so on, this certificate is for.
     */
    subject?: SslCertificateEntity | null;
}
export interface SslCertificateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SslCertificate[] | null;
}
export interface SslCertificateEntity extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * A physical address of the entity.
     */
    address?: PhysicalAddress | null;
    /**
     * Alternate names for this entity that are part of the certificate.
     */
    alternateNames?: string[] | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * A common name for this entity.
     */
    commonName?: string | null;
    /**
     * An email for this entity.
     */
    email?: string | null;
    /**
     * If the entity is a person, this is the person's given name (first name).
     */
    givenName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * If the entity is an organization, this is the name of the organization.
     */
    organizationName?: string | null;
    /**
     * If the entity is an organization, this communicates if a unit in the organization is named on the entity.
     */
    organizationUnitName?: string | null;
    /**
     * A serial number assigned to the entity; usually only available if the entity is the issuer.
     */
    serialNumber?: string | null;
    /**
     * If the entity is a person, this is the person's surname (last name).
     */
    surname?: string | null;
}
export type StatisticsOptions = (typeof StatisticsOptionsObject)[keyof typeof StatisticsOptionsObject];
export interface Stream extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The name property
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface SubcategoryTemplate extends FilePlanDescriptorTemplate, Parsable {
}
export interface SubcategoryTemplateCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: SubcategoryTemplate[] | null;
}
export interface Subdomain extends Entity, Parsable {
    /**
     * The date and time when Microsoft Defender Threat Intelligence first observed the subdomain. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
}
export interface SubdomainCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Subdomain[] | null;
}
export interface SubmissionMailEvidence extends AlertEvidence, Parsable {
    /**
     * The networkMessageId property
     */
    networkMessageId?: string | null;
    /**
     * The recipient property
     */
    recipient?: string | null;
    /**
     * The reportType property
     */
    reportType?: string | null;
    /**
     * The sender property
     */
    sender?: string | null;
    /**
     * The senderIp property
     */
    senderIp?: string | null;
    /**
     * The subject property
     */
    subject?: string | null;
    /**
     * The submissionDateTime property
     */
    submissionDateTime?: Date | null;
    /**
     * The submissionId property
     */
    submissionId?: string | null;
    /**
     * The submitter property
     */
    submitter?: string | null;
}
export interface SupervisoryReviewDayXInsightsAuditRecord extends AuditData, Parsable {
}
export interface SyntheticProbeAuditRecord extends AuditData, Parsable {
}
export interface Tag extends Entity, Parsable {
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet | null;
    /**
     * The description property
     */
    description?: string | null;
    /**
     * The displayName property
     */
    displayName?: string | null;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date | null;
}
export type TeamsDeliveryLocation = (typeof TeamsDeliveryLocationObject)[keyof typeof TeamsDeliveryLocationObject];
export interface TeamsEasyApprovalsAuditRecord extends AuditData, Parsable {
}
export interface TeamsHealthcareAuditRecord extends AuditData, Parsable {
}
export type TeamsMessageDeliveryAction = (typeof TeamsMessageDeliveryActionObject)[keyof typeof TeamsMessageDeliveryActionObject];
export interface TeamsMessageEvidence extends AlertEvidence, Parsable {
    /**
     * The identifier of the campaign that this Teams message is part of.
     */
    campaignId?: string | null;
    /**
     * The channel ID associated with this Teams message.
     */
    channelId?: string | null;
    /**
     * The delivery action of this Teams message. Possible values are: unknown, deliveredAsSpam, delivered, blocked, replaced, unknownFutureValue.
     */
    deliveryAction?: TeamsMessageDeliveryAction | null;
    /**
     * The delivery location of this Teams message. Possible values are: unknown, teams, quarantine, failed, unknownFutureValue.
     */
    deliveryLocation?: TeamsDeliveryLocation | null;
    /**
     * The list of file entities that are attached to this Teams message.
     */
    files?: FileEvidence[] | null;
    /**
     * The identifier of the team or group that this message is part of.
     */
    groupId?: string | null;
    /**
     * Indicates whether the message is owned by the organization that reported the security detection alert.
     */
    isExternal?: boolean | null;
    /**
     * Indicates whether the message is owned by your organization.
     */
    isOwned?: boolean | null;
    /**
     * Date and time when the message was last edited. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * The direction of the Teams message. The possible values are: unknown, inbound, outbound, intraorg, unknownFutureValue.
     */
    messageDirection?: AntispamTeamsDirection | null;
    /**
     * Message identifier unique within the thread.
     */
    messageId?: string | null;
    /**
     * Tenant ID (GUID) of the owner of the message.
     */
    owningTenantId?: Guid | null;
    /**
     * Identifier of the message to which the current message is a reply; otherwise, it's the same as the messageId.
     */
    parentMessageId?: string | null;
    /**
     * The received date of this message. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    receivedDateTime?: Date | null;
    /**
     * The recipients of this Teams message.
     */
    recipients?: string[] | null;
    /**
     * The SMTP format address of the sender.
     */
    senderFromAddress?: string | null;
    /**
     * The IP address of the sender.
     */
    senderIP?: string | null;
    /**
     * Source of the message; for example, desktop and mobile.
     */
    sourceAppName?: string | null;
    /**
     * The source ID of this Teams message.
     */
    sourceId?: string | null;
    /**
     * The subject of this Teams message.
     */
    subject?: string | null;
    /**
     * The list of recipients who were detected as suspicious.
     */
    suspiciousRecipients?: string[] | null;
    /**
     * Identifier of the channel or chat that this message is part of.
     */
    threadId?: string | null;
    /**
     * The Teams message type. Supported values are: Chat, Topic, Space, and Meeting.
     */
    threadType?: string | null;
    /**
     * The URLs contained in this Teams message.
     */
    urls?: UrlEvidence[] | null;
}
export interface TeamsUpdatesAuditRecord extends AuditData, Parsable {
}
export interface TenantAllowBlockListAuditRecord extends AuditData, Parsable {
}
export interface ThreatFinderAuditRecord extends AuditData, Parsable {
}
export interface ThreatIntelligence extends Entity, Parsable {
    /**
     * Refers to indicators of threat or compromise highlighted in an article.Note: List retrieval is not yet supported.
     */
    articleIndicators?: ArticleIndicator[] | null;
    /**
     * A list of article objects.
     */
    articles?: Article[] | null;
    /**
     * Retrieve details about hostComponent objects.Note: List retrieval is not yet supported.
     */
    hostComponents?: HostComponent[] | null;
    /**
     * Retrieve details about hostCookie objects.Note: List retrieval is not yet supported.
     */
    hostCookies?: HostCookie[] | null;
    /**
     * Retrieve details about hostTracker objects.Note: List retrieval is not yet supported.
     */
    hostPairs?: HostPair[] | null;
    /**
     * Retrieve details about hostPort objects.Note: List retrieval is not yet supported.
     */
    hostPorts?: HostPort[] | null;
    /**
     * Refers to host objects that Microsoft Threat Intelligence has observed.Note: List retrieval is not yet supported.
     */
    hosts?: Host[] | null;
    /**
     * Retrieve details about hostSslCertificate objects.Note: List retrieval is not yet supported.
     */
    hostSslCertificates?: HostSslCertificate[] | null;
    /**
     * Retrieve details about hostTracker objects.Note: List retrieval is not yet supported.
     */
    hostTrackers?: HostTracker[] | null;
    /**
     * The intelligenceProfileIndicators property
     */
    intelligenceProfileIndicators?: IntelligenceProfileIndicator[] | null;
    /**
     * A list of intelligenceProfile objects.
     */
    intelProfiles?: IntelligenceProfile[] | null;
    /**
     * Retrieve details about passiveDnsRecord objects.Note: List retrieval is not yet supported.
     */
    passiveDnsRecords?: PassiveDnsRecord[] | null;
    /**
     * Retrieve details about sslCertificate objects.Note: List retrieval is not yet supported.
     */
    sslCertificates?: SslCertificate[] | null;
    /**
     * Retrieve details about the subdomain.Note: List retrieval is not yet supported.
     */
    subdomains?: Subdomain[] | null;
    /**
     * Retrieve details about vulnerabilities.Note: List retrieval is not yet supported.
     */
    vulnerabilities?: Vulnerability[] | null;
    /**
     * Retrieve details about whoisHistoryRecord objects.Note: List retrieval is not yet supported.
     */
    whoisHistoryRecords?: WhoisHistoryRecord[] | null;
    /**
     * A list of whoisRecord objects.
     */
    whoisRecords?: WhoisRecord[] | null;
}
export interface ThreatIntelligenceAtpContentData extends AuditData, Parsable {
}
export interface ThreatIntelligenceMailData extends AuditData, Parsable {
}
export interface ThreatIntelligenceUrlClickData extends AuditData, Parsable {
}
export interface TodoAuditRecord extends AuditData, Parsable {
}
export interface TopicModelingSettings extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * Indicates whether the themes model should dynamically optimize the number of generated topics. To learn more, see Adjust maximum number of themes dynamically.
     */
    dynamicallyAdjustTopicCount?: boolean | null;
    /**
     * Indicates whether the themes model should exclude numbers while parsing document texts. To learn more, see Include numbers in themes.
     */
    ignoreNumbers?: boolean | null;
    /**
     * Indicates whether themes model is enabled for the case.
     */
    isEnabled?: boolean | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The total number of topics that the themes model will generate for a review set. To learn more, see Maximum number of themes.
     */
    topicCount?: number | null;
}
export interface TriggersRoot extends Entity, Parsable {
    /**
     * The retentionEvents property
     */
    retentionEvents?: RetentionEvent[] | null;
}
export interface TriggerTypesRoot extends Entity, Parsable {
    /**
     * The retentionEventTypes property
     */
    retentionEventTypes?: RetentionEventType[] | null;
}
export interface UamOperationAuditRecord extends AuditData, Parsable {
}
export interface UnclassifiedArtifact extends Artifact, Parsable {
    /**
     * The kind for this unclassifiedArtifact resource, describing what this value means.
     */
    kind?: string | null;
    /**
     * The value for this unclassifiedArtifact.
     */
    value?: string | null;
}
export interface UnifiedGroupAuditRecord extends AuditData, Parsable {
}
export interface UnifiedGroupSource extends DataSource, Parsable {
    /**
     * The group property
     */
    group?: Group | null;
    /**
     * Specifies which sources are included in this group. Possible values are: mailbox, site.
     */
    includedSources?: SourceType[] | null;
}
export interface UnifiedGroupSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UnifiedGroupSource[] | null;
}
export interface UnifiedSimulationMatchedItemAuditRecord extends AuditData, Parsable {
}
export interface UnifiedSimulationSummaryAuditRecord extends AuditData, Parsable {
}
export interface UploadCertificateRecord extends AuditData, Parsable {
}
export interface UrbacAssignmentAuditRecord extends AuditData, Parsable {
}
export interface UrbacEnableStateAuditRecord extends AuditData, Parsable {
}
export interface UrbacRoleAuditRecord extends AuditData, Parsable {
}
export interface UrlEvidence extends AlertEvidence, Parsable {
    /**
     * The Unique Resource Locator (URL).
     */
    url?: string | null;
}
export interface UserAccount extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The displayed name of the user account.
     */
    accountName?: string | null;
    /**
     * The user object identifier in Microsoft Entra ID.
     */
    azureAdUserId?: string | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The user display name in Microsoft Entra ID.
     */
    displayName?: string | null;
    /**
     * The name of the Active Directory domain of which the user is a member.
     */
    domainName?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The user principal name of the account in Microsoft Entra ID.
     */
    userPrincipalName?: string | null;
    /**
     * The local security identifier of the user account.
     */
    userSid?: string | null;
}
export interface UserEvidence extends AlertEvidence, Parsable {
    /**
     * The stream property
     */
    stream?: Stream | null;
    /**
     * The user account details.
     */
    userAccount?: UserAccount | null;
}
export interface UserSource extends DataSource, Parsable {
    /**
     * Email address of the user's mailbox.
     */
    email?: string | null;
    /**
     * Specifies which sources are included in this group. Possible values are: mailbox, site.
     */
    includedSources?: SourceType[] | null;
    /**
     * The URL of the user's OneDrive for Business site. Read-only.
     */
    siteWebUrl?: string | null;
}
export interface UserSourceCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: UserSource[] | null;
}
export interface UserTrainingAuditRecord extends AuditData, Parsable {
}
export interface VfamBasePolicyAuditRecord extends AuditData, Parsable {
}
export interface VfamCreatePolicyAuditRecord extends AuditData, Parsable {
}
export interface VfamDeletePolicyAuditRecord extends AuditData, Parsable {
}
export interface VfamUpdatePolicyAuditRecord extends AuditData, Parsable {
}
export interface VivaGoalsAuditRecord extends AuditData, Parsable {
}
export interface VivaLearningAdminAuditRecord extends AuditData, Parsable {
}
export interface VivaLearningAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseAdminAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseOrganizerAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseReportAuditRecord extends AuditData, Parsable {
}
export interface VivaPulseResponseAuditRecord extends AuditData, Parsable {
}
export type VmCloudProvider = (typeof VmCloudProviderObject)[keyof typeof VmCloudProviderObject];
export interface VmMetadata extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The cloudProvider property
     */
    cloudProvider?: VmCloudProvider | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * Unique identifier of the Azure resource.
     */
    resourceId?: string | null;
    /**
     * Unique identifier of the Azure subscription the customer tenant belongs to.
     */
    subscriptionId?: string | null;
    /**
     * Unique identifier of the virtual machine instance.
     */
    vmId?: string | null;
}
export interface Vulnerability extends Entity, Parsable {
    /**
     * Indicates whether this vulnerability has any known exploits associated to known bad actors.
     */
    activeExploitsObserved?: boolean | null;
    /**
     * Articles related to this vulnerability.
     */
    articles?: Article[] | null;
    /**
     * Community-defined common weakness enumerations (CWE).
     */
    commonWeaknessEnumerationIds?: string[] | null;
    /**
     * Components related to this vulnerability article.
     */
    components?: VulnerabilityComponent[] | null;
    /**
     * The date and time when this vulnerability article was first created.
     */
    createdDateTime?: Date | null;
    /**
     * The cvss2Summary property
     */
    cvss2Summary?: CvssSummary | null;
    /**
     * The cvss3Summary property
     */
    cvss3Summary?: CvssSummary | null;
    /**
     * The description property
     */
    description?: FormattedContent | null;
    /**
     * Known exploits for this vulnerability.
     */
    exploits?: Hyperlink[] | null;
    /**
     * Indicates whether this vulnerability has exploits in public sources (such as Packetstorm or Exploit-DB) online.
     */
    exploitsAvailable?: boolean | null;
    /**
     * Indicates whether chatter about this vulnerability has been discovered online.
     */
    hasChatter?: boolean | null;
    /**
     * The date and time when this vulnerability article was most recently updated.
     */
    lastModifiedDateTime?: Date | null;
    /**
     * A unique algorithm that reflects the priority of a vulnerability based on the CVSS score, exploits, chatter, and linkage to malware. This property also evaluates the recency of these components so users can understand which vulnerability should be remediated first.
     */
    priorityScore?: number | null;
    /**
     * The date and time when this vulnerability article was published.
     */
    publishedDateTime?: Date | null;
    /**
     * Reference links where further information can be learned about this vulnerability.
     */
    references?: Hyperlink[] | null;
    /**
     * Any known remediation steps.
     */
    remediation?: FormattedContent | null;
    /**
     * The severity property
     */
    severity?: VulnerabilitySeverity | null;
}
export interface VulnerabilityCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Vulnerability[] | null;
}
export interface VulnerabilityComponent extends Entity, Parsable {
    /**
     * The name of this vulnerability component.
     */
    name?: string | null;
}
export interface VulnerabilityComponentCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: VulnerabilityComponent[] | null;
}
export type VulnerabilitySeverity = (typeof VulnerabilitySeverityObject)[keyof typeof VulnerabilitySeverityObject];
export interface WdatpAlertsAuditRecord extends AuditData, Parsable {
}
export interface WhoisBaseRecord extends Entity, Parsable {
    /**
     * The contact information for the abuse contact.
     */
    abuse?: WhoisContact | null;
    /**
     * The contact information for the admin contact.
     */
    admin?: WhoisContact | null;
    /**
     * The contact information for the billing contact.
     */
    billing?: WhoisContact | null;
    /**
     * The domain status for this WHOIS object.
     */
    domainStatus?: string | null;
    /**
     * The date and time when this WHOIS record expires with the registrar. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    expirationDateTime?: Date | null;
    /**
     * The first seen date and time of this WHOIS record. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The last seen date and time of this WHOIS record. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The date and time when this WHOIS record was last modified. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastUpdateDateTime?: Date | null;
    /**
     * The nameservers for this WHOIS object.
     */
    nameservers?: WhoisNameserver[] | null;
    /**
     * The contact information for the noc contact.
     */
    noc?: WhoisContact | null;
    /**
     * The raw WHOIS details for this WHOIS object.
     */
    rawWhoisText?: string | null;
    /**
     * The contact information for the registrant contact.
     */
    registrant?: WhoisContact | null;
    /**
     * The contact information for the registrar contact.
     */
    registrar?: WhoisContact | null;
    /**
     * The date and time when this WHOIS record was registered with a registrar. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    registrationDateTime?: Date | null;
    /**
     * The contact information for the technical contact.
     */
    technical?: WhoisContact | null;
    /**
     * The WHOIS server that provides the details.
     */
    whoisServer?: string | null;
    /**
     * The contact information for the zone contact.
     */
    zone?: WhoisContact | null;
}
export interface WhoisContact extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The physical address of the entity.
     */
    address?: PhysicalAddress | null;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The email of this WHOIS contact.
     */
    email?: string | null;
    /**
     * The fax of this WHOIS contact. No format is guaranteed.
     */
    fax?: string | null;
    /**
     * The name of this WHOIS contact.
     */
    name?: string | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
    /**
     * The organization of this WHOIS contact.
     */
    organization?: string | null;
    /**
     * The telephone of this WHOIS contact. No format is guaranteed.
     */
    telephone?: string | null;
}
export interface WhoisHistoryRecord extends Parsable, WhoisBaseRecord {
}
export interface WhoisHistoryRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: WhoisHistoryRecord[] | null;
}
export interface WhoisNameserver extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The first seen date and time of this WHOIS contact. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    firstSeenDateTime?: Date | null;
    /**
     * The host property
     */
    host?: Host | null;
    /**
     * The last seen date and time of this WHOIS contact. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    lastSeenDateTime?: Date | null;
    /**
     * The OdataType property
     */
    odataType?: string | null;
}
export interface WhoisRecord extends Parsable, WhoisBaseRecord {
    /**
     * The collection of historical records associated to this WHOIS object.
     */
    history?: WhoisHistoryRecord[] | null;
}
export interface WhoisRecordCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: WhoisRecord[] | null;
}
export interface Windows365CustomerLockboxAuditRecord extends AuditData, Parsable {
}
export interface WorkplaceAnalyticsAuditRecord extends AuditData, Parsable {
}
export interface YammerAuditRecord extends AuditData, Parsable {
}
export const ActionAfterRetentionPeriodObject = {
    None: "none",
    Delete: "delete",
    StartDispositionReview: "startDispositionReview",
    Relabel: "relabel",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AdditionalDataOptionsObject = {
    AllVersions: "allVersions",
    LinkedFiles: "linkedFiles",
    UnknownFutureValue: "unknownFutureValue",
    AdvancedIndexing: "advancedIndexing",
    ListAttachments: "listAttachments",
    HtmlTranscripts: "htmlTranscripts",
    MessageConversationExpansion: "messageConversationExpansion",
    LocationsWithoutHits: "locationsWithoutHits",
    AllItemsInFolder: "allItemsInFolder",
} as const;
export const AdditionalOptionsObject = {
    None: "none",
    TeamsAndYammerConversations: "teamsAndYammerConversations",
    CloudAttachments: "cloudAttachments",
    AllDocumentVersions: "allDocumentVersions",
    SubfolderContents: "subfolderContents",
    ListAttachments: "listAttachments",
    UnknownFutureValue: "unknownFutureValue",
    HtmlTranscripts: "htmlTranscripts",
    AdvancedIndexing: "advancedIndexing",
    AllItemsInFolder: "allItemsInFolder",
    IncludeFolderAndPath: "includeFolderAndPath",
    CondensePaths: "condensePaths",
    FriendlyName: "friendlyName",
    SplitSource: "splitSource",
    IncludeReport: "includeReport",
} as const;
export const AlertClassificationObject = {
    Unknown: "unknown",
    FalsePositive: "falsePositive",
    TruePositive: "truePositive",
    InformationalExpectedActivity: "informationalExpectedActivity",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertDeterminationObject = {
    Unknown: "unknown",
    Apt: "apt",
    Malware: "malware",
    SecurityPersonnel: "securityPersonnel",
    SecurityTesting: "securityTesting",
    UnwantedSoftware: "unwantedSoftware",
    Other: "other",
    MultiStagedAttack: "multiStagedAttack",
    CompromisedAccount: "compromisedAccount",
    Phishing: "phishing",
    MaliciousUserActivity: "maliciousUserActivity",
    NotMalicious: "notMalicious",
    NotEnoughDataToValidate: "notEnoughDataToValidate",
    ConfirmedActivity: "confirmedActivity",
    LineOfBusinessApplication: "lineOfBusinessApplication",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertSeverityObject = {
    Unknown: "unknown",
    Informational: "informational",
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AlertStatusObject = {
    Unknown: "unknown",
    NewEscaped: "new",
    InProgress: "inProgress",
    Resolved: "resolved",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AntispamTeamsDirectionObject = {
    Unknown: "unknown",
    Inbound: "inbound",
    Outbound: "outbound",
    Intraorg: "intraorg",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AuditLogQueryStatusObject = {
    NotStarted: "notStarted",
    Running: "running",
    Succeeded: "succeeded",
    Failed: "failed",
    Cancelled: "cancelled",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AuditLogRecordTypeObject = {
    ExchangeAdmin: "ExchangeAdmin",
    ExchangeItem: "ExchangeItem",
    ExchangeItemGroup: "ExchangeItemGroup",
    SharePoint: "SharePoint",
    SyntheticProbe: "SyntheticProbe",
    SharePointFileOperation: "SharePointFileOperation",
    OneDrive: "OneDrive",
    AzureActiveDirectory: "AzureActiveDirectory",
    AzureActiveDirectoryAccountLogon: "AzureActiveDirectoryAccountLogon",
    DataCenterSecurityCmdlet: "DataCenterSecurityCmdlet",
    ComplianceDLPSharePoint: "ComplianceDLPSharePoint",
    Sway: "Sway",
    ComplianceDLPExchange: "ComplianceDLPExchange",
    SharePointSharingOperation: "SharePointSharingOperation",
    AzureActiveDirectoryStsLogon: "AzureActiveDirectoryStsLogon",
    SkypeForBusinessPSTNUsage: "SkypeForBusinessPSTNUsage",
    SkypeForBusinessUsersBlocked: "SkypeForBusinessUsersBlocked",
    SecurityComplianceCenterEOPCmdlet: "SecurityComplianceCenterEOPCmdlet",
    ExchangeAggregatedOperation: "ExchangeAggregatedOperation",
    PowerBIAudit: "PowerBIAudit",
    CRM: "CRM",
    Yammer: "Yammer",
    SkypeForBusinessCmdlets: "SkypeForBusinessCmdlets",
    Discovery: "Discovery",
    MicrosoftTeams: "MicrosoftTeams",
    ThreatIntelligence: "ThreatIntelligence",
    MailSubmission: "MailSubmission",
    MicrosoftFlow: "MicrosoftFlow",
    AeD: "AeD",
    MicrosoftStream: "MicrosoftStream",
    ComplianceDLPSharePointClassification: "ComplianceDLPSharePointClassification",
    ThreatFinder: "ThreatFinder",
    Project: "Project",
    SharePointListOperation: "SharePointListOperation",
    SharePointCommentOperation: "SharePointCommentOperation",
    DataGovernance: "DataGovernance",
    Kaizala: "Kaizala",
    SecurityComplianceAlerts: "SecurityComplianceAlerts",
    ThreatIntelligenceUrl: "ThreatIntelligenceUrl",
    SecurityComplianceInsights: "SecurityComplianceInsights",
    MIPLabel: "MIPLabel",
    WorkplaceAnalytics: "WorkplaceAnalytics",
    PowerAppsApp: "PowerAppsApp",
    PowerAppsPlan: "PowerAppsPlan",
    ThreatIntelligenceAtpContent: "ThreatIntelligenceAtpContent",
    LabelContentExplorer: "LabelContentExplorer",
    TeamsHealthcare: "TeamsHealthcare",
    ExchangeItemAggregated: "ExchangeItemAggregated",
    HygieneEvent: "HygieneEvent",
    DataInsightsRestApiAudit: "DataInsightsRestApiAudit",
    InformationBarrierPolicyApplication: "InformationBarrierPolicyApplication",
    SharePointListItemOperation: "SharePointListItemOperation",
    SharePointContentTypeOperation: "SharePointContentTypeOperation",
    SharePointFieldOperation: "SharePointFieldOperation",
    MicrosoftTeamsAdmin: "MicrosoftTeamsAdmin",
    HRSignal: "HRSignal",
    MicrosoftTeamsDevice: "MicrosoftTeamsDevice",
    MicrosoftTeamsAnalytics: "MicrosoftTeamsAnalytics",
    InformationWorkerProtection: "InformationWorkerProtection",
    Campaign: "Campaign",
    DLPEndpoint: "DLPEndpoint",
    AirInvestigation: "AirInvestigation",
    Quarantine: "Quarantine",
    MicrosoftForms: "MicrosoftForms",
    ApplicationAudit: "ApplicationAudit",
    ComplianceSupervisionExchange: "ComplianceSupervisionExchange",
    CustomerKeyServiceEncryption: "CustomerKeyServiceEncryption",
    OfficeNative: "OfficeNative",
    MipAutoLabelSharePointItem: "MipAutoLabelSharePointItem",
    MipAutoLabelSharePointPolicyLocation: "MipAutoLabelSharePointPolicyLocation",
    MicrosoftTeamsShifts: "MicrosoftTeamsShifts",
    SecureScore: "SecureScore",
    MipAutoLabelExchangeItem: "MipAutoLabelExchangeItem",
    CortanaBriefing: "CortanaBriefing",
    Search: "Search",
    WDATPAlerts: "WDATPAlerts",
    PowerPlatformAdminDlp: "PowerPlatformAdminDlp",
    PowerPlatformAdminEnvironment: "PowerPlatformAdminEnvironment",
    MDATPAudit: "MDATPAudit",
    SensitivityLabelPolicyMatch: "SensitivityLabelPolicyMatch",
    SensitivityLabelAction: "SensitivityLabelAction",
    SensitivityLabeledFileAction: "SensitivityLabeledFileAction",
    AttackSim: "AttackSim",
    AirManualInvestigation: "AirManualInvestigation",
    SecurityComplianceRBAC: "SecurityComplianceRBAC",
    UserTraining: "UserTraining",
    AirAdminActionInvestigation: "AirAdminActionInvestigation",
    MSTIC: "MSTIC",
    PhysicalBadgingSignal: "PhysicalBadgingSignal",
    TeamsEasyApprovals: "TeamsEasyApprovals",
    AipDiscover: "AipDiscover",
    AipSensitivityLabelAction: "AipSensitivityLabelAction",
    AipProtectionAction: "AipProtectionAction",
    AipFileDeleted: "AipFileDeleted",
    AipHeartBeat: "AipHeartBeat",
    MCASAlerts: "MCASAlerts",
    OnPremisesFileShareScannerDlp: "OnPremisesFileShareScannerDlp",
    OnPremisesSharePointScannerDlp: "OnPremisesSharePointScannerDlp",
    ExchangeSearch: "ExchangeSearch",
    SharePointSearch: "SharePointSearch",
    PrivacyDataMinimization: "PrivacyDataMinimization",
    LabelAnalyticsAggregate: "LabelAnalyticsAggregate",
    MyAnalyticsSettings: "MyAnalyticsSettings",
    SecurityComplianceUserChange: "SecurityComplianceUserChange",
    ComplianceDLPExchangeClassification: "ComplianceDLPExchangeClassification",
    ComplianceDLPEndpoint: "ComplianceDLPEndpoint",
    MipExactDataMatch: "MipExactDataMatch",
    MSDEResponseActions: "MSDEResponseActions",
    MSDEGeneralSettings: "MSDEGeneralSettings",
    MSDEIndicatorsSettings: "MSDEIndicatorsSettings",
    MS365DCustomDetection: "MS365DCustomDetection",
    MSDERolesSettings: "MSDERolesSettings",
    MAPGAlerts: "MAPGAlerts",
    MAPGPolicy: "MAPGPolicy",
    MAPGRemediation: "MAPGRemediation",
    PrivacyRemediationAction: "PrivacyRemediationAction",
    PrivacyDigestEmail: "PrivacyDigestEmail",
    MipAutoLabelSimulationProgress: "MipAutoLabelSimulationProgress",
    MipAutoLabelSimulationCompletion: "MipAutoLabelSimulationCompletion",
    MipAutoLabelProgressFeedback: "MipAutoLabelProgressFeedback",
    DlpSensitiveInformationType: "DlpSensitiveInformationType",
    MipAutoLabelSimulationStatistics: "MipAutoLabelSimulationStatistics",
    LargeContentMetadata: "LargeContentMetadata",
    Microsoft365Group: "Microsoft365Group",
    CDPMlInferencingResult: "CDPMlInferencingResult",
    FilteringMailMetadata: "FilteringMailMetadata",
    CDPClassificationMailItem: "CDPClassificationMailItem",
    CDPClassificationDocument: "CDPClassificationDocument",
    OfficeScriptsRunAction: "OfficeScriptsRunAction",
    FilteringPostMailDeliveryAction: "FilteringPostMailDeliveryAction",
    CDPUnifiedFeedback: "CDPUnifiedFeedback",
    TenantAllowBlockList: "TenantAllowBlockList",
    ConsumptionResource: "ConsumptionResource",
    HealthcareSignal: "HealthcareSignal",
    DlpImportResult: "DlpImportResult",
    CDPCompliancePolicyExecution: "CDPCompliancePolicyExecution",
    MultiStageDisposition: "MultiStageDisposition",
    PrivacyDataMatch: "PrivacyDataMatch",
    FilteringDocMetadata: "FilteringDocMetadata",
    FilteringEmailFeatures: "FilteringEmailFeatures",
    PowerBIDlp: "PowerBIDlp",
    FilteringUrlInfo: "FilteringUrlInfo",
    FilteringAttachmentInfo: "FilteringAttachmentInfo",
    CoreReportingSettings: "CoreReportingSettings",
    ComplianceConnector: "ComplianceConnector",
    PowerPlatformLockboxResourceAccessRequest: "PowerPlatformLockboxResourceAccessRequest",
    PowerPlatformLockboxResourceCommand: "PowerPlatformLockboxResourceCommand",
    CDPPredictiveCodingLabel: "CDPPredictiveCodingLabel",
    CDPCompliancePolicyUserFeedback: "CDPCompliancePolicyUserFeedback",
    WebpageActivityEndpoint: "WebpageActivityEndpoint",
    OMEPortal: "OMEPortal",
    CMImprovementActionChange: "CMImprovementActionChange",
    FilteringUrlClick: "FilteringUrlClick",
    MipLabelAnalyticsAuditRecord: "MipLabelAnalyticsAuditRecord",
    FilteringEntityEvent: "FilteringEntityEvent",
    FilteringRuleHits: "FilteringRuleHits",
    FilteringMailSubmission: "FilteringMailSubmission",
    LabelExplorer: "LabelExplorer",
    MicrosoftManagedServicePlatform: "MicrosoftManagedServicePlatform",
    PowerPlatformServiceActivity: "PowerPlatformServiceActivity",
    ScorePlatformGenericAuditRecord: "ScorePlatformGenericAuditRecord",
    FilteringTimeTravelDocMetadata: "FilteringTimeTravelDocMetadata",
    Alert: "Alert",
    AlertStatus: "AlertStatus",
    AlertIncident: "AlertIncident",
    IncidentStatus: "IncidentStatus",
    CaseEscaped: "Case",
    CaseInvestigation: "CaseInvestigation",
    RecordsManagement: "RecordsManagement",
    PrivacyRemediation: "PrivacyRemediation",
    DataShareOperation: "DataShareOperation",
    CdpDlpSensitive: "CdpDlpSensitive",
    EHRConnector: "EHRConnector",
    FilteringMailGradingResult: "FilteringMailGradingResult",
    PublicFolder: "PublicFolder",
    PrivacyTenantAuditHistoryRecord: "PrivacyTenantAuditHistoryRecord",
    AipScannerDiscoverEvent: "AipScannerDiscoverEvent",
    EduDataLakeDownloadOperation: "EduDataLakeDownloadOperation",
    M365ComplianceConnector: "M365ComplianceConnector",
    MicrosoftGraphDataConnectOperation: "MicrosoftGraphDataConnectOperation",
    MicrosoftPurview: "MicrosoftPurview",
    FilteringEmailContentFeatures: "FilteringEmailContentFeatures",
    PowerPagesSite: "PowerPagesSite",
    PowerAppsResource: "PowerAppsResource",
    PlannerPlan: "PlannerPlan",
    PlannerCopyPlan: "PlannerCopyPlan",
    PlannerTask: "PlannerTask",
    PlannerRoster: "PlannerRoster",
    PlannerPlanList: "PlannerPlanList",
    PlannerTaskList: "PlannerTaskList",
    PlannerTenantSettings: "PlannerTenantSettings",
    ProjectForTheWebProject: "ProjectForTheWebProject",
    ProjectForTheWebTask: "ProjectForTheWebTask",
    ProjectForTheWebRoadmap: "ProjectForTheWebRoadmap",
    ProjectForTheWebRoadmapItem: "ProjectForTheWebRoadmapItem",
    ProjectForTheWebProjectSettings: "ProjectForTheWebProjectSettings",
    ProjectForTheWebRoadmapSettings: "ProjectForTheWebRoadmapSettings",
    QuarantineMetadata: "QuarantineMetadata",
    MicrosoftTodoAudit: "MicrosoftTodoAudit",
    TimeTravelFilteringDocMetadata: "TimeTravelFilteringDocMetadata",
    TeamsQuarantineMetadata: "TeamsQuarantineMetadata",
    SharePointAppPermissionOperation: "SharePointAppPermissionOperation",
    MicrosoftTeamsSensitivityLabelAction: "MicrosoftTeamsSensitivityLabelAction",
    FilteringTeamsMetadata: "FilteringTeamsMetadata",
    FilteringTeamsUrlInfo: "FilteringTeamsUrlInfo",
    FilteringTeamsPostDeliveryAction: "FilteringTeamsPostDeliveryAction",
    MDCAssessments: "MDCAssessments",
    MDCRegulatoryComplianceStandards: "MDCRegulatoryComplianceStandards",
    MDCRegulatoryComplianceControls: "MDCRegulatoryComplianceControls",
    MDCRegulatoryComplianceAssessments: "MDCRegulatoryComplianceAssessments",
    MDCSecurityConnectors: "MDCSecurityConnectors",
    MDADataSecuritySignal: "MDADataSecuritySignal",
    VivaGoals: "VivaGoals",
    FilteringRuntimeInfo: "FilteringRuntimeInfo",
    AttackSimAdmin: "AttackSimAdmin",
    MicrosoftGraphDataConnectConsent: "MicrosoftGraphDataConnectConsent",
    FilteringAtpDetonationInfo: "FilteringAtpDetonationInfo",
    PrivacyPortal: "PrivacyPortal",
    ManagedTenants: "ManagedTenants",
    UnifiedSimulationMatchedItem: "UnifiedSimulationMatchedItem",
    UnifiedSimulationSummary: "UnifiedSimulationSummary",
    UpdateQuarantineMetadata: "UpdateQuarantineMetadata",
    MS365DSuppressionRule: "MS365DSuppressionRule",
    PurviewDataMapOperation: "PurviewDataMapOperation",
    FilteringUrlPostClickAction: "FilteringUrlPostClickAction",
    IrmUserDefinedDetectionSignal: "IrmUserDefinedDetectionSignal",
    TeamsUpdates: "TeamsUpdates",
    PlannerRosterSensitivityLabel: "PlannerRosterSensitivityLabel",
    MS365DIncident: "MS365DIncident",
    FilteringDelistingMetadata: "FilteringDelistingMetadata",
    ComplianceDLPSharePointClassificationExtended: "ComplianceDLPSharePointClassificationExtended",
    MicrosoftDefenderForIdentityAudit: "MicrosoftDefenderForIdentityAudit",
    SupervisoryReviewDayXInsight: "SupervisoryReviewDayXInsight",
    DefenderExpertsforXDRAdmin: "DefenderExpertsforXDRAdmin",
    CDPEdgeBlockedMessage: "CDPEdgeBlockedMessage",
    HostedRpa: "HostedRpa",
    CdpContentExplorerAggregateRecord: "CdpContentExplorerAggregateRecord",
    CDPHygieneAttachmentInfo: "CDPHygieneAttachmentInfo",
    CDPHygieneSummary: "CDPHygieneSummary",
    CDPPostMailDeliveryAction: "CDPPostMailDeliveryAction",
    CDPEmailFeatures: "CDPEmailFeatures",
    CDPHygieneUrlInfo: "CDPHygieneUrlInfo",
    CDPUrlClick: "CDPUrlClick",
    CDPPackageManagerHygieneEvent: "CDPPackageManagerHygieneEvent",
    FilteringDocScan: "FilteringDocScan",
    TimeTravelFilteringDocScan: "TimeTravelFilteringDocScan",
    MAPGOnboard: "MAPGOnboard",
    VfamCreatePolicy: "VfamCreatePolicy",
    VfamUpdatePolicy: "VfamUpdatePolicy",
    VfamDeletePolicy: "VfamDeletePolicy",
    M365DAAD: "M365DAAD",
    CdpColdCrawlStatus: "CdpColdCrawlStatus",
    PowerPlatformAdministratorActivity: "PowerPlatformAdministratorActivity",
    Windows365CustomerLockbox: "Windows365CustomerLockbox",
    CdpResourceScopeChangeEvent: "CdpResourceScopeChangeEvent",
    ComplianceCCExchangeExecutionResult: "ComplianceCCExchangeExecutionResult",
    CdpOcrCostEstimatorRecord: "CdpOcrCostEstimatorRecord",
    CopilotInteraction: "CopilotInteraction",
    CdpOcrBillingRecord: "CdpOcrBillingRecord",
    ComplianceDLPApplications: "ComplianceDLPApplications",
    UAMOperation: "UAMOperation",
    VivaLearning: "VivaLearning",
    VivaLearningAdmin: "VivaLearningAdmin",
    PurviewPolicyOperation: "PurviewPolicyOperation",
    PurviewMetadataPolicyOperation: "PurviewMetadataPolicyOperation",
    PeopleAdminSettings: "PeopleAdminSettings",
    CdpComplianceDLPExchangeClassification: "CdpComplianceDLPExchangeClassification",
    CdpComplianceDLPSharePointClassification: "CdpComplianceDLPSharePointClassification",
    FilteringBulkSenderInsightData: "FilteringBulkSenderInsightData",
    FilteringBulkThresholdInsightData: "FilteringBulkThresholdInsightData",
    PrivacyOpenAccess: "PrivacyOpenAccess",
    OWAAuth: "OWAAuth",
    ComplianceDLPApplicationsClassification: "ComplianceDLPApplicationsClassification",
    SharePointESignature: "SharePointESignature",
    Dynamics365BusinessCentral: "Dynamics365BusinessCentral",
    MeshWorlds: "MeshWorlds",
    VivaPulseResponse: "VivaPulseResponse",
    VivaPulseOrganizer: "VivaPulseOrganizer",
    VivaPulseAdmin: "VivaPulseAdmin",
    VivaPulseReport: "VivaPulseReport",
    AIAppInteraction: "AIAppInteraction",
    ComplianceDLMExchange: "ComplianceDLMExchange",
    ComplianceDLMSharePoint: "ComplianceDLMSharePoint",
    ProjectForTheWebAssignedToMeSettings: "ProjectForTheWebAssignedToMeSettings",
    CPSOperation: "CPSOperation",
    ComplianceDLPExchangeDiscovery: "ComplianceDLPExchangeDiscovery",
    PurviewMCRecommendation: "PurviewMCRecommendation",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const AuditLogUserTypeObject = {
    Regular: "Regular",
    Reserved: "Reserved",
    Admin: "Admin",
    DcAdmin: "DcAdmin",
    System: "System",
    Application: "Application",
    ServicePrincipal: "ServicePrincipal",
    CustomPolicy: "CustomPolicy",
    SystemPolicy: "SystemPolicy",
    PartnerTechnician: "PartnerTechnician",
    Guest: "Guest",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const BehaviorDuringRetentionPeriodObject = {
    DoNotRetain: "doNotRetain",
    Retain: "retain",
    RetainAsRecord: "retainAsRecord",
    RetainAsRegulatoryRecord: "retainAsRegulatoryRecord",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const CaseActionObject = {
    ContentExport: "contentExport",
    ApplyTags: "applyTags",
    ConvertToPdf: "convertToPdf",
    Index: "index",
    EstimateStatistics: "estimateStatistics",
    AddToReviewSet: "addToReviewSet",
    HoldUpdate: "holdUpdate",
    UnknownFutureValue: "unknownFutureValue",
    PurgeData: "purgeData",
    ExportReport: "exportReport",
    ExportResult: "exportResult",
} as const;
export const CaseOperationStatusObject = {
    NotStarted: "notStarted",
    SubmissionFailed: "submissionFailed",
    Running: "running",
    Succeeded: "succeeded",
    PartiallySucceeded: "partiallySucceeded",
    Failed: "failed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const CaseStatusObject = {
    Unknown: "unknown",
    Active: "active",
    PendingDelete: "pendingDelete",
    Closing: "closing",
    Closed: "closed",
    ClosedWithError: "closedWithError",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ChildSelectabilityObject = {
    One: "One",
    Many: "Many",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const CloudAttachmentVersionObject = {
    Latest: "latest",
    Recent10: "recent10",
    Recent100: "recent100",
    All: "all",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ContainerPortProtocolObject = {
    Udp: "udp",
    Tcp: "tcp",
    Sctp: "sctp",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ContentFormatObject = {
    Text: "text",
    Html: "html",
    Markdown: "markdown",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DataSourceContainerStatusObject = {
    Active: "active",
    Released: "released",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DataSourceHoldStatusObject = {
    NotApplied: "notApplied",
    Applied: "applied",
    Applying: "applying",
    Removing: "removing",
    Partial: "partial",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DataSourceScopesObject = {
    None: "none",
    AllTenantMailboxes: "allTenantMailboxes",
    AllTenantSites: "allTenantSites",
    AllCaseCustodians: "allCaseCustodians",
    AllCaseNoncustodialDataSources: "allCaseNoncustodialDataSources",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DefaultRecordBehaviorObject = {
    StartLocked: "startLocked",
    StartUnlocked: "startUnlocked",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DefenderAvStatusObject = {
    NotReporting: "notReporting",
    Disabled: "disabled",
    NotUpdated: "notUpdated",
    Updated: "updated",
    Unknown: "unknown",
    NotSupported: "notSupported",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeploymentStatusObject = {
    UpToDate: "upToDate",
    Outdated: "outdated",
    Updating: "updating",
    UpdateFailed: "updateFailed",
    NotConfigured: "notConfigured",
    Unreachable: "unreachable",
    Disconnected: "disconnected",
    StartFailure: "startFailure",
    Syncing: "syncing",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DetectionSourceObject = {
    Unknown: "unknown",
    MicrosoftDefenderForEndpoint: "microsoftDefenderForEndpoint",
    Antivirus: "antivirus",
    SmartScreen: "smartScreen",
    CustomTi: "customTi",
    MicrosoftDefenderForOffice365: "microsoftDefenderForOffice365",
    AutomatedInvestigation: "automatedInvestigation",
    MicrosoftThreatExperts: "microsoftThreatExperts",
    CustomDetection: "customDetection",
    MicrosoftDefenderForIdentity: "microsoftDefenderForIdentity",
    CloudAppSecurity: "cloudAppSecurity",
    Microsoft365Defender: "microsoft365Defender",
    AzureAdIdentityProtection: "azureAdIdentityProtection",
    Manual: "manual",
    MicrosoftDataLossPrevention: "microsoftDataLossPrevention",
    AppGovernancePolicy: "appGovernancePolicy",
    AppGovernanceDetection: "appGovernanceDetection",
    UnknownFutureValue: "unknownFutureValue",
    MicrosoftDefenderForCloud: "microsoftDefenderForCloud",
    MicrosoftDefenderForIoT: "microsoftDefenderForIoT",
    MicrosoftDefenderForServers: "microsoftDefenderForServers",
    MicrosoftDefenderForStorage: "microsoftDefenderForStorage",
    MicrosoftDefenderForDNS: "microsoftDefenderForDNS",
    MicrosoftDefenderForDatabases: "microsoftDefenderForDatabases",
    MicrosoftDefenderForContainers: "microsoftDefenderForContainers",
    MicrosoftDefenderForNetwork: "microsoftDefenderForNetwork",
    MicrosoftDefenderForAppService: "microsoftDefenderForAppService",
    MicrosoftDefenderForKeyVault: "microsoftDefenderForKeyVault",
    MicrosoftDefenderForResourceManager: "microsoftDefenderForResourceManager",
    MicrosoftDefenderForApiManagement: "microsoftDefenderForApiManagement",
    NrtAlerts: "nrtAlerts",
    ScheduledAlerts: "scheduledAlerts",
    MicrosoftDefenderThreatIntelligenceAnalytics: "microsoftDefenderThreatIntelligenceAnalytics",
    BuiltInMl: "builtInMl",
    MicrosoftInsiderRiskManagement: "microsoftInsiderRiskManagement",
    MicrosoftThreatIntelligence: "microsoftThreatIntelligence",
    MicrosoftSentinel: "microsoftSentinel",
} as const;
export const DetectionStatusObject = {
    Detected: "detected",
    Blocked: "blocked",
    Prevented: "prevented",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeviceHealthStatusObject = {
    Active: "active",
    Inactive: "inactive",
    ImpairedCommunication: "impairedCommunication",
    NoSensorData: "noSensorData",
    NoSensorDataImpairedCommunication: "noSensorDataImpairedCommunication",
    Unknown: "unknown",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DeviceRiskScoreObject = {
    None: "none",
    Informational: "informational",
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const DocumentVersionObject = {
    Latest: "latest",
    Recent10: "recent10",
    Recent100: "recent100",
    All: "all",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EventPropagationStatusObject = {
    None: "none",
    InProcessing: "inProcessing",
    Failed: "failed",
    Success: "success",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EventStatusTypeObject = {
    Pending: "pending",
    ErrorEscaped: "error",
    Success: "success",
    NotAvaliable: "notAvaliable",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EvidenceRemediationStatusObject = {
    None: "none",
    Remediated: "remediated",
    Prevented: "prevented",
    Blocked: "blocked",
    NotFound: "notFound",
    UnknownFutureValue: "unknownFutureValue",
    Active: "active",
    PendingApproval: "pendingApproval",
    Declined: "declined",
    Unremediated: "unremediated",
    Running: "running",
    PartiallyRemediated: "partiallyRemediated",
} as const;
export const EvidenceRoleObject = {
    Unknown: "unknown",
    Contextual: "contextual",
    Scanned: "scanned",
    Source: "source",
    Destination: "destination",
    Created: "created",
    Added: "added",
    Compromised: "compromised",
    Edited: "edited",
    Attacked: "attacked",
    Attacker: "attacker",
    CommandAndControl: "commandAndControl",
    Loaded: "loaded",
    Suspicious: "suspicious",
    PolicyViolator: "policyViolator",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const EvidenceVerdictObject = {
    Unknown: "unknown",
    Suspicious: "suspicious",
    Malicious: "malicious",
    NoThreatsFound: "noThreatsFound",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportCriteriaObject = {
    SearchHits: "searchHits",
    PartiallyIndexed: "partiallyIndexed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportFileStructureObject = {
    None: "none",
    Directory: "directory",
    Pst: "pst",
    UnknownFutureValue: "unknownFutureValue",
    Msg: "msg",
} as const;
export const ExportFormatObject = {
    Pst: "pst",
    Msg: "msg",
    Eml: "eml",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportLocationObject = {
    ResponsiveLocations: "responsiveLocations",
    NonresponsiveLocations: "nonresponsiveLocations",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ExportOptionsObject = {
    OriginalFiles: "originalFiles",
    Text: "text",
    PdfReplacement: "pdfReplacement",
    Tags: "tags",
    UnknownFutureValue: "unknownFutureValue",
    SplitSource: "splitSource",
    IncludeFolderAndPath: "includeFolderAndPath",
    FriendlyName: "friendlyName",
    CondensePaths: "condensePaths",
} as const;
export const FileHashAlgorithmObject = {
    Unknown: "unknown",
    Md5: "md5",
    Sha1: "sha1",
    Sha256: "sha256",
    Sha256ac: "sha256ac",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const GoogleCloudLocationTypeObject = {
    Unknown: "unknown",
    Regional: "regional",
    Zonal: "zonal",
    Global: "global",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HealthIssueSeverityObject = {
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HealthIssueStatusObject = {
    Open: "open",
    Closed: "closed",
    Suppressed: "suppressed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HealthIssueTypeObject = {
    Sensor: "sensor",
    Global: "global",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostPortProtocolObject = {
    Tcp: "tcp",
    Udp: "udp",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostPortStatusObject = {
    Open: "open",
    Filtered: "filtered",
    Closed: "closed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostReputationClassificationObject = {
    Unknown: "unknown",
    Neutral: "neutral",
    Suspicious: "suspicious",
    Malicious: "malicious",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const HostReputationRuleSeverityObject = {
    Unknown: "unknown",
    Low: "low",
    Medium: "medium",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IncidentStatusObject = {
    Active: "active",
    Resolved: "resolved",
    InProgress: "inProgress",
    Redirected: "redirected",
    UnknownFutureValue: "unknownFutureValue",
    AwaitingAction: "awaitingAction",
} as const;
export const IndicatorSourceObject = {
    Microsoft: "microsoft",
    Osint: "osint",
    Public: "public",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IntelligenceProfileKindObject = {
    Actor: "actor",
    Tool: "tool",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const IoTDeviceImportanceTypeObject = {
    Unknown: "unknown",
    Low: "low",
    Normal: "normal",
    High: "high",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ItemsToIncludeObject = {
    SearchHits: "searchHits",
    PartiallyIndexed: "partiallyIndexed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const KubernetesPlatformObject = {
    Unknown: "unknown",
    Aks: "aks",
    Eks: "eks",
    Gke: "gke",
    Arc: "arc",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const KubernetesServiceTypeObject = {
    Unknown: "unknown",
    ClusterIP: "clusterIP",
    ExternalName: "externalName",
    NodePort: "nodePort",
    LoadBalancer: "loadBalancer",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const MailboxConfigurationTypeObject = {
    MailForwardingRule: "mailForwardingRule",
    OwaSettings: "owaSettings",
    EwsSettings: "ewsSettings",
    MailDelegation: "mailDelegation",
    UserInboxRule: "userInboxRule",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const OnboardingStatusObject = {
    InsufficientInfo: "insufficientInfo",
    Onboarded: "onboarded",
    CanBeOnboarded: "canBeOnboarded",
    Unsupported: "unsupported",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ProtocolTypeObject = {
    Tcp: "tcp",
    Udp: "udp",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PurgeAreasObject = {
    Mailboxes: "mailboxes",
    TeamsMessages: "teamsMessages",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const PurgeTypeObject = {
    Recoverable: "recoverable",
    UnknownFutureValue: "unknownFutureValue",
    PermanentlyDelete: "permanentlyDelete",
} as const;
export const QueryTypeObject = {
    Files: "files",
    Messages: "messages",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const RetentionTriggerObject = {
    DateLabeled: "dateLabeled",
    DateCreated: "dateCreated",
    DateModified: "dateModified",
    DateOfEvent: "dateOfEvent",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SensorHealthStatusObject = {
    Healthy: "healthy",
    NotHealthyLow: "notHealthyLow",
    NotHealthyMedium: "notHealthyMedium",
    NotHealthyHigh: "notHealthyHigh",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const SensorTypeObject = {
    AdConnectIntegrated: "adConnectIntegrated",
    AdcsIntegrated: "adcsIntegrated",
    AdfsIntegrated: "adfsIntegrated",
    DomainControllerIntegrated: "domainControllerIntegrated",
    DomainControllerStandalone: "domainControllerStandalone",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ServicePrincipalTypeObject = {
    Unknown: "unknown",
    Application: "application",
    ManagedIdentity: "managedIdentity",
    Legacy: "legacy",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const ServiceSourceObject = {
    Unknown: "unknown",
    MicrosoftDefenderForEndpoint: "microsoftDefenderForEndpoint",
    MicrosoftDefenderForIdentity: "microsoftDefenderForIdentity",
    MicrosoftDefenderForCloudApps: "microsoftDefenderForCloudApps",
    MicrosoftDefenderForOffice365: "microsoftDefenderForOffice365",
    Microsoft365Defender: "microsoft365Defender",
    AzureAdIdentityProtection: "azureAdIdentityProtection",
    MicrosoftAppGovernance: "microsoftAppGovernance",
    DataLossPrevention: "dataLossPrevention",
    UnknownFutureValue: "unknownFutureValue",
    MicrosoftDefenderForCloud: "microsoftDefenderForCloud",
    MicrosoftSentinel: "microsoftSentinel",
    MicrosoftInsiderRiskManagement: "microsoftInsiderRiskManagement",
    MicrosoftThreatIntelligence: "microsoftThreatIntelligence",
} as const;
export const SourceTypeObject = {
    Mailbox: "mailbox",
    Site: "site",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const StatisticsOptionsObject = {
    IncludeRefiners: "includeRefiners",
    IncludeQueryStats: "includeQueryStats",
    IncludeUnindexedStats: "includeUnindexedStats",
    AdvancedIndexing: "advancedIndexing",
    LocationsWithoutHits: "locationsWithoutHits",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TeamsDeliveryLocationObject = {
    Unknown: "unknown",
    Teams: "teams",
    Quarantine: "quarantine",
    Failed: "failed",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const TeamsMessageDeliveryActionObject = {
    Unknown: "unknown",
    DeliveredAsSpam: "deliveredAsSpam",
    Delivered: "delivered",
    Blocked: "blocked",
    Replaced: "replaced",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const VmCloudProviderObject = {
    Unknown: "unknown",
    Azure: "azure",
    UnknownFutureValue: "unknownFutureValue",
} as const;
export const VulnerabilitySeverityObject = {
    None: "none",
    Low: "low",
    Medium: "medium",
    High: "high",
    Critical: "critical",
    UnknownFutureValue: "unknownFutureValue",
} as const;
/* tslint:enable */
/* eslint-enable */
