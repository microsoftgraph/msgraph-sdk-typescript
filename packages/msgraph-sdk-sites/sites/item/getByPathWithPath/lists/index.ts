/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createListCollectionResponseFromDiscriminatorValue, createListFromDiscriminatorValue, serializeList, type List, type ListCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the lists property of the microsoft.graph.site entity.
 */
export interface ListsRequestBuilder extends BaseRequestBuilder<ListsRequestBuilder> {
    /**
     * Get the collection of [lists][] for a [site][]. Lists with the [system][] facet are hidden by default.To list them, include system in your $select statement.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ListCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/list-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ListsRequestBuilderGetQueryParameters> | undefined) : Promise<ListCollectionResponse | undefined>;
    /**
     * Create a new [list][] in a [site][].
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<List>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/list-create?view=graph-rest-1.0|Find more info here}
     */
     post(body: List, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<List | undefined>;
    /**
     * Get the collection of [lists][] for a [site][]. Lists with the [system][] facet are hidden by default.To list them, include system in your $select statement.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ListsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new [list][] in a [site][].
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: List, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get the collection of [lists][] for a [site][]. Lists with the [system][] facet are hidden by default.To list them, include system in your $select statement.
 */
export interface ListsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ListsRequestBuilderUriTemplate = "{+baseurl}/sites/{site%2Did}/getByPath(path='{path}')/lists{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the lists property of the microsoft.graph.site entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    CreatedByUser: "createdByUser",
    LastModifiedByUser: "lastModifiedByUser",
    Columns: "columns",
    ContentTypes: "contentTypes",
    Drive: "drive",
    Items: "items",
    Operations: "operations",
    Subscriptions: "subscriptions",
} as const;
/**
 * Provides operations to manage the lists property of the microsoft.graph.site entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Description: "description",
    DescriptionDesc: "description desc",
    ETag: "eTag",
    ETagDesc: "eTag desc",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedByDesc: "lastModifiedBy desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    Name: "name",
    NameDesc: "name desc",
    ParentReference: "parentReference",
    ParentReferenceDesc: "parentReference desc",
    WebUrl: "webUrl",
    WebUrlDesc: "webUrl desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    List: "list",
    ListDesc: "list desc",
    SharepointIds: "sharepointIds",
    SharepointIdsDesc: "sharepointIds desc",
    System: "system",
    SystemDesc: "system desc",
} as const;
/**
 * Provides operations to manage the lists property of the microsoft.graph.site entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    ETag: "eTag",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    Name: "name",
    ParentReference: "parentReference",
    WebUrl: "webUrl",
    DisplayName: "displayName",
    List: "list",
    SharepointIds: "sharepointIds",
    System: "system",
    CreatedByUser: "createdByUser",
    LastModifiedByUser: "lastModifiedByUser",
    Columns: "columns",
    ContentTypes: "contentTypes",
    Drive: "drive",
    Items: "items",
    Operations: "operations",
    Subscriptions: "subscriptions",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ListsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ListsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ListsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createListCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ListsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ListsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createListFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeList,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
