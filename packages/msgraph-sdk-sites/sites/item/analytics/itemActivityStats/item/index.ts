/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createItemActivityStatFromDiscriminatorValue, serializeItemActivityStat, type ItemActivityStat } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { ActivitiesRequestBuilderNavigationMetadata, ActivitiesRequestBuilderRequestsMetadata, type ActivitiesRequestBuilder } from './activities/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the itemActivityStats property of the microsoft.graph.itemAnalytics entity.
 */
export interface ItemActivityStatItemRequestBuilder extends BaseRequestBuilder<ItemActivityStatItemRequestBuilder> {
    /**
     * Provides operations to manage the activities property of the microsoft.graph.itemActivityStat entity.
     */
    get activities(): ActivitiesRequestBuilder;
    /**
     * Delete navigation property itemActivityStats for sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get itemActivityStats from sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ItemActivityStat>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ItemActivityStatItemRequestBuilderGetQueryParameters> | undefined) : Promise<ItemActivityStat | undefined>;
    /**
     * Update the navigation property itemActivityStats in sites
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ItemActivityStat>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ItemActivityStat, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ItemActivityStat | undefined>;
    /**
     * Delete navigation property itemActivityStats for sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get itemActivityStats from sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ItemActivityStatItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property itemActivityStats in sites
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ItemActivityStat, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get itemActivityStats from sites
 */
export interface ItemActivityStatItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ItemActivityStatItemRequestBuilderUriTemplate = "{+baseurl}/sites/{site%2Did}/analytics/itemActivityStats/{itemActivityStat%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ItemActivityStatItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ItemActivityStatItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ItemActivityStatItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    activities: {
        requestsMetadata: ActivitiesRequestBuilderRequestsMetadata,
        navigationMetadata: ActivitiesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ItemActivityStatItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ItemActivityStatItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: ItemActivityStatItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createItemActivityStatFromDiscriminatorValue,
        queryParametersMapper: ItemActivityStatItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ItemActivityStatItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createItemActivityStatFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeItemActivityStat,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
