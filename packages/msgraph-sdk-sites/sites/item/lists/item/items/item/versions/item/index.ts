/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createListItemVersionFromDiscriminatorValue, serializeListItemVersion, type ListItemVersion } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { FieldsRequestBuilderRequestsMetadata, type FieldsRequestBuilder } from './fields/';
// @ts-ignore
import { RestoreVersionRequestBuilderRequestsMetadata, type RestoreVersionRequestBuilder } from './restoreVersion/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the versions property of the microsoft.graph.listItem entity.
 */
export interface ListItemVersionItemRequestBuilder extends BaseRequestBuilder<ListItemVersionItemRequestBuilder> {
    /**
     * Provides operations to manage the fields property of the microsoft.graph.listItemVersion entity.
     */
    get fields(): FieldsRequestBuilder;
    /**
     * Provides operations to call the restoreVersion method.
     */
    get restoreVersion(): RestoreVersionRequestBuilder;
    /**
     * Delete navigation property versions for sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the metadata for a specific version of a ListItem.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ListItemVersion>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/listitemversion-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ListItemVersionItemRequestBuilderGetQueryParameters> | undefined) : Promise<ListItemVersion | undefined>;
    /**
     * Update the navigation property versions in sites
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ListItemVersion>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ListItemVersion, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ListItemVersion | undefined>;
    /**
     * Delete navigation property versions for sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the metadata for a specific version of a ListItem.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ListItemVersionItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property versions in sites
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ListItemVersion, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the metadata for a specific version of a ListItem.
 */
export interface ListItemVersionItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ListItemVersionItemRequestBuilderUriTemplate = "{+baseurl}/sites/{site%2Did}/lists/{list%2Did}/items/{listItem%2Did}/versions/{listItemVersion%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ListItemVersionItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ListItemVersionItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ListItemVersionItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    fields: {
        requestsMetadata: FieldsRequestBuilderRequestsMetadata,
    },
    restoreVersion: {
        requestsMetadata: RestoreVersionRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ListItemVersionItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ListItemVersionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ListItemVersionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createListItemVersionFromDiscriminatorValue,
        queryParametersMapper: ListItemVersionItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ListItemVersionItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createListItemVersionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeListItemVersion,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
