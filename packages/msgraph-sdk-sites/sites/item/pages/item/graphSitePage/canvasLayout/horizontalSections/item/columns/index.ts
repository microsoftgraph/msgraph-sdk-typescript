/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createHorizontalSectionColumnCollectionResponseFromDiscriminatorValue, createHorizontalSectionColumnFromDiscriminatorValue, serializeHorizontalSectionColumn, type HorizontalSectionColumn, type HorizontalSectionColumnCollectionResponse } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
// @ts-ignore
import { HorizontalSectionColumnItemRequestBuilderNavigationMetadata, HorizontalSectionColumnItemRequestBuilderRequestsMetadata, type HorizontalSectionColumnItemRequestBuilder } from './item/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the columns property of the microsoft.graph.horizontalSection entity.
 */
export interface ColumnsRequestBuilder extends BaseRequestBuilder<ColumnsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the columns property of the microsoft.graph.horizontalSection entity.
     * @param horizontalSectionColumnId The unique identifier of horizontalSectionColumn
     * @returns {HorizontalSectionColumnItemRequestBuilder}
     */
     byHorizontalSectionColumnId(horizontalSectionColumnId: string) : HorizontalSectionColumnItemRequestBuilder;
    /**
     * Get columns from sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HorizontalSectionColumnCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ColumnsRequestBuilderGetQueryParameters> | undefined) : Promise<HorizontalSectionColumnCollectionResponse | undefined>;
    /**
     * Create new navigation property to columns for sites
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HorizontalSectionColumn>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: HorizontalSectionColumn, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<HorizontalSectionColumn | undefined>;
    /**
     * Get columns from sites
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ColumnsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to columns for sites
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: HorizontalSectionColumn, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get columns from sites
 */
export interface ColumnsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ColumnsRequestBuilderUriTemplate = "{+baseurl}/sites/{site%2Did}/pages/{baseSitePage%2Did}/graph.sitePage/canvasLayout/horizontalSections/{horizontalSection%2Did}/columns{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ColumnsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ColumnsRequestBuilderNavigationMetadata: Record<Exclude<keyof ColumnsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byHorizontalSectionColumnId: {
        requestsMetadata: HorizontalSectionColumnItemRequestBuilderRequestsMetadata,
        navigationMetadata: HorizontalSectionColumnItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["horizontalSectionColumn%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ColumnsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ColumnsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHorizontalSectionColumnCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ColumnsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ColumnsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHorizontalSectionColumnFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeHorizontalSectionColumn,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
