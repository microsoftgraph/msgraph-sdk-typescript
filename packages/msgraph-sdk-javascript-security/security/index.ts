/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSecurityFromDiscriminatorValue, serializeSecurity, type Security } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { Alerts_v2RequestBuilderNavigationMetadata, Alerts_v2RequestBuilderRequestsMetadata, Alerts_v2RequestBuilderUriTemplate, type Alerts_v2RequestBuilder } from './alerts_v2/';
import { AlertsRequestBuilderNavigationMetadata, AlertsRequestBuilderRequestsMetadata, AlertsRequestBuilderUriTemplate, type AlertsRequestBuilder } from './alerts/';
import { AttackSimulationRequestBuilderNavigationMetadata, AttackSimulationRequestBuilderRequestsMetadata, AttackSimulationRequestBuilderUriTemplate, type AttackSimulationRequestBuilder } from './attackSimulation/';
import { CasesRequestBuilderNavigationMetadata, CasesRequestBuilderRequestsMetadata, CasesRequestBuilderUriTemplate, type CasesRequestBuilder } from './cases/';
import { IncidentsRequestBuilderNavigationMetadata, IncidentsRequestBuilderRequestsMetadata, IncidentsRequestBuilderUriTemplate, type IncidentsRequestBuilder } from './incidents/';
import { MicrosoftGraphSecurityRunHuntingQueryRequestBuilderRequestsMetadata, MicrosoftGraphSecurityRunHuntingQueryRequestBuilderUriTemplate, type MicrosoftGraphSecurityRunHuntingQueryRequestBuilder } from './microsoftGraphSecurityRunHuntingQuery/';
import { SecureScoreControlProfilesRequestBuilderNavigationMetadata, SecureScoreControlProfilesRequestBuilderRequestsMetadata, SecureScoreControlProfilesRequestBuilderUriTemplate, type SecureScoreControlProfilesRequestBuilder } from './secureScoreControlProfiles/';
import { SecureScoresRequestBuilderNavigationMetadata, SecureScoresRequestBuilderRequestsMetadata, SecureScoresRequestBuilderUriTemplate, type SecureScoresRequestBuilder } from './secureScores/';
import { SubjectRightsRequestsRequestBuilderNavigationMetadata, SubjectRightsRequestsRequestBuilderRequestsMetadata, SubjectRightsRequestsRequestBuilderUriTemplate, type SubjectRightsRequestsRequestBuilder } from './subjectRightsRequests/';
import { ThreatIntelligenceRequestBuilderNavigationMetadata, ThreatIntelligenceRequestBuilderRequestsMetadata, ThreatIntelligenceRequestBuilderUriTemplate, type ThreatIntelligenceRequestBuilder } from './threatIntelligence/';
import { TriggersRequestBuilderNavigationMetadata, TriggersRequestBuilderRequestsMetadata, TriggersRequestBuilderUriTemplate, type TriggersRequestBuilder } from './triggers/';
import { TriggerTypesRequestBuilderNavigationMetadata, TriggerTypesRequestBuilderRequestsMetadata, TriggerTypesRequestBuilderUriTemplate, type TriggerTypesRequestBuilder } from './triggerTypes/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the security singleton.
 */
export interface SecurityRequestBuilder extends BaseRequestBuilder<SecurityRequestBuilder> {
    /**
     * Provides operations to manage the alerts property of the microsoft.graph.security entity.
     */
    get alerts(): AlertsRequestBuilder;
    /**
     * Provides operations to manage the alerts_v2 property of the microsoft.graph.security entity.
     */
    get alerts_v2(): Alerts_v2RequestBuilder;
    /**
     * Provides operations to manage the attackSimulation property of the microsoft.graph.security entity.
     */
    get attackSimulation(): AttackSimulationRequestBuilder;
    /**
     * Provides operations to manage the cases property of the microsoft.graph.security entity.
     */
    get cases(): CasesRequestBuilder;
    /**
     * Provides operations to manage the incidents property of the microsoft.graph.security entity.
     */
    get incidents(): IncidentsRequestBuilder;
    /**
     * Provides operations to call the runHuntingQuery method.
     */
    get microsoftGraphSecurityRunHuntingQuery(): MicrosoftGraphSecurityRunHuntingQueryRequestBuilder;
    /**
     * Provides operations to manage the secureScoreControlProfiles property of the microsoft.graph.security entity.
     */
    get secureScoreControlProfiles(): SecureScoreControlProfilesRequestBuilder;
    /**
     * Provides operations to manage the secureScores property of the microsoft.graph.security entity.
     */
    get secureScores(): SecureScoresRequestBuilder;
    /**
     * Provides operations to manage the subjectRightsRequests property of the microsoft.graph.security entity.
     */
    get subjectRightsRequests(): SubjectRightsRequestsRequestBuilder;
    /**
     * Provides operations to manage the threatIntelligence property of the microsoft.graph.security entity.
     */
    get threatIntelligence(): ThreatIntelligenceRequestBuilder;
    /**
     * Provides operations to manage the triggers property of the microsoft.graph.security entity.
     */
    get triggers(): TriggersRequestBuilder;
    /**
     * Provides operations to manage the triggerTypes property of the microsoft.graph.security entity.
     */
    get triggerTypes(): TriggerTypesRequestBuilder;
    /**
     * Get security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Security
     */
     get(requestConfiguration?: RequestConfiguration<SecurityRequestBuilderGetQueryParameters> | undefined) : Promise<Security | undefined>;
    /**
     * Update security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of Security
     */
     patch(body: Security, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Security | undefined>;
    /**
     * Get security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SecurityRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: Security, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get security
 */
export interface SecurityRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SecurityRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SecurityRequestBuilderNavigationMetadata: Record<Exclude<keyof SecurityRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    alerts: {
        uriTemplate: AlertsRequestBuilderUriTemplate,
        requestsMetadata: AlertsRequestBuilderRequestsMetadata,
        navigationMetadata: AlertsRequestBuilderNavigationMetadata,
    },
    alerts_v2: {
        uriTemplate: Alerts_v2RequestBuilderUriTemplate,
        requestsMetadata: Alerts_v2RequestBuilderRequestsMetadata,
        navigationMetadata: Alerts_v2RequestBuilderNavigationMetadata,
    },
    attackSimulation: {
        uriTemplate: AttackSimulationRequestBuilderUriTemplate,
        requestsMetadata: AttackSimulationRequestBuilderRequestsMetadata,
        navigationMetadata: AttackSimulationRequestBuilderNavigationMetadata,
    },
    cases: {
        uriTemplate: CasesRequestBuilderUriTemplate,
        requestsMetadata: CasesRequestBuilderRequestsMetadata,
        navigationMetadata: CasesRequestBuilderNavigationMetadata,
    },
    incidents: {
        uriTemplate: IncidentsRequestBuilderUriTemplate,
        requestsMetadata: IncidentsRequestBuilderRequestsMetadata,
        navigationMetadata: IncidentsRequestBuilderNavigationMetadata,
    },
    microsoftGraphSecurityRunHuntingQuery: {
        uriTemplate: MicrosoftGraphSecurityRunHuntingQueryRequestBuilderUriTemplate,
        requestsMetadata: MicrosoftGraphSecurityRunHuntingQueryRequestBuilderRequestsMetadata,
    },
    secureScoreControlProfiles: {
        uriTemplate: SecureScoreControlProfilesRequestBuilderUriTemplate,
        requestsMetadata: SecureScoreControlProfilesRequestBuilderRequestsMetadata,
        navigationMetadata: SecureScoreControlProfilesRequestBuilderNavigationMetadata,
    },
    secureScores: {
        uriTemplate: SecureScoresRequestBuilderUriTemplate,
        requestsMetadata: SecureScoresRequestBuilderRequestsMetadata,
        navigationMetadata: SecureScoresRequestBuilderNavigationMetadata,
    },
    subjectRightsRequests: {
        uriTemplate: SubjectRightsRequestsRequestBuilderUriTemplate,
        requestsMetadata: SubjectRightsRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: SubjectRightsRequestsRequestBuilderNavigationMetadata,
    },
    threatIntelligence: {
        uriTemplate: ThreatIntelligenceRequestBuilderUriTemplate,
        requestsMetadata: ThreatIntelligenceRequestBuilderRequestsMetadata,
        navigationMetadata: ThreatIntelligenceRequestBuilderNavigationMetadata,
    },
    triggers: {
        uriTemplate: TriggersRequestBuilderUriTemplate,
        requestsMetadata: TriggersRequestBuilderRequestsMetadata,
        navigationMetadata: TriggersRequestBuilderNavigationMetadata,
    },
    triggerTypes: {
        uriTemplate: TriggerTypesRequestBuilderUriTemplate,
        requestsMetadata: TriggerTypesRequestBuilderRequestsMetadata,
        navigationMetadata: TriggerTypesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SecurityRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSecurityFromDiscriminatorValue,
        queryParametersMapper: SecurityRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSecurityFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSecurity,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const SecurityRequestBuilderUriTemplate = "{+baseurl}/security{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
