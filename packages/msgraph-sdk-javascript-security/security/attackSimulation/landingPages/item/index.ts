/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createLandingPageFromDiscriminatorValue, serializeLandingPage, type LandingPage } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { DetailsRequestBuilderNavigationMetadata, DetailsRequestBuilderRequestsMetadata, DetailsRequestBuilderUriTemplate, type DetailsRequestBuilder } from './details/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the landingPages property of the microsoft.graph.attackSimulationRoot entity.
 */
export interface LandingPageItemRequestBuilder extends BaseRequestBuilder<LandingPageItemRequestBuilder> {
    /**
     * Provides operations to manage the details property of the microsoft.graph.landingPage entity.
     */
    get details(): DetailsRequestBuilder;
    /**
     * Delete navigation property landingPages for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents an attack simulation training landing page.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of LandingPage
     */
     get(requestConfiguration?: RequestConfiguration<LandingPageItemRequestBuilderGetQueryParameters> | undefined) : Promise<LandingPage | undefined>;
    /**
     * Update the navigation property landingPages in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of LandingPage
     */
     patch(body: LandingPage, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<LandingPage | undefined>;
    /**
     * Delete navigation property landingPages for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents an attack simulation training landing page.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<LandingPageItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property landingPages in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: LandingPage, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents an attack simulation training landing page.
 */
export interface LandingPageItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const LandingPageItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const LandingPageItemRequestBuilderNavigationMetadata: Record<Exclude<keyof LandingPageItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    details: {
        uriTemplate: DetailsRequestBuilderUriTemplate,
        requestsMetadata: DetailsRequestBuilderRequestsMetadata,
        navigationMetadata: DetailsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const LandingPageItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createLandingPageFromDiscriminatorValue,
        queryParametersMapper: LandingPageItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createLandingPageFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeLandingPage,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const LandingPageItemRequestBuilderUriTemplate = "{+baseurl}/security/attackSimulation/landingPages/{landingPage%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
