/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { createHuntingQueryResultsFromDiscriminatorValue, serializeHuntingQueryResults, type HuntingQueryResults } from '@microsoft/msgraph-sdk-javascript/models/security/';
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a runHuntingQueryPostRequestBody
 */
export function createRunHuntingQueryPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoRunHuntingQueryPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoRunHuntingQueryPostRequestBody(runHuntingQueryPostRequestBody: RunHuntingQueryPostRequestBody | undefined = {} as RunHuntingQueryPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "query": n => { runHuntingQueryPostRequestBody.query = n.getStringValue(); },
    }
}
/**
 * Provides operations to call the runHuntingQuery method.
 */
export interface MicrosoftGraphSecurityRunHuntingQueryRequestBuilder extends BaseRequestBuilder<MicrosoftGraphSecurityRunHuntingQueryRequestBuilder> {
    /**
     * Invoke action runHuntingQuery
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of HuntingQueryResults
     */
     post(body: RunHuntingQueryPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<HuntingQueryResults | undefined>;
    /**
     * Invoke action runHuntingQuery
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: RunHuntingQueryPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
export interface RunHuntingQueryPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The query property
     */
    query?: string;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeRunHuntingQueryPostRequestBody(writer: SerializationWriter, runHuntingQueryPostRequestBody: RunHuntingQueryPostRequestBody | undefined = {} as RunHuntingQueryPostRequestBody) : void {
    writer.writeStringValue("query", runHuntingQueryPostRequestBody.query);
    writer.writeAdditionalData(runHuntingQueryPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const MicrosoftGraphSecurityRunHuntingQueryRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createHuntingQueryResultsFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRunHuntingQueryPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const MicrosoftGraphSecurityRunHuntingQueryRequestBuilderUriTemplate = "{+baseurl}/security/microsoft.graph.security.runHuntingQuery";
/* tslint:enable */
/* eslint-enable */
