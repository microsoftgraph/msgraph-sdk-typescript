/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createB2xIdentityUserFlowFromDiscriminatorValue, serializeB2xIdentityUserFlow, type B2xIdentityUserFlow } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { ApiConnectorConfigurationRequestBuilderNavigationMetadata, ApiConnectorConfigurationRequestBuilderRequestsMetadata, type ApiConnectorConfigurationRequestBuilder } from './apiConnectorConfiguration/';
// @ts-ignore
import { IdentityProvidersRequestBuilderNavigationMetadata, IdentityProvidersRequestBuilderRequestsMetadata, type IdentityProvidersRequestBuilder } from './identityProviders/';
// @ts-ignore
import { LanguagesRequestBuilderNavigationMetadata, LanguagesRequestBuilderRequestsMetadata, type LanguagesRequestBuilder } from './languages/';
// @ts-ignore
import { type UserAttributeAssignmentsRequestBuilder, UserAttributeAssignmentsRequestBuilderNavigationMetadata, UserAttributeAssignmentsRequestBuilderRequestsMetadata } from './userAttributeAssignments/';
// @ts-ignore
import { type UserFlowIdentityProvidersRequestBuilder, UserFlowIdentityProvidersRequestBuilderNavigationMetadata, UserFlowIdentityProvidersRequestBuilderRequestsMetadata } from './userFlowIdentityProviders/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the b2xUserFlows property of the microsoft.graph.identityContainer entity.
 */
export interface B2xIdentityUserFlowItemRequestBuilder extends BaseRequestBuilder<B2xIdentityUserFlowItemRequestBuilder> {
    /**
     * The apiConnectorConfiguration property
     */
    get apiConnectorConfiguration(): ApiConnectorConfigurationRequestBuilder;
    /**
     * Provides operations to manage the identityProviders property of the microsoft.graph.b2xIdentityUserFlow entity.
     */
    get identityProviders(): IdentityProvidersRequestBuilder;
    /**
     * Provides operations to manage the languages property of the microsoft.graph.b2xIdentityUserFlow entity.
     */
    get languages(): LanguagesRequestBuilder;
    /**
     * Provides operations to manage the userAttributeAssignments property of the microsoft.graph.b2xIdentityUserFlow entity.
     */
    get userAttributeAssignments(): UserAttributeAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the userFlowIdentityProviders property of the microsoft.graph.b2xIdentityUserFlow entity.
     */
    get userFlowIdentityProviders(): UserFlowIdentityProvidersRequestBuilder;
    /**
     * Delete navigation property b2xUserFlows for identity
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents entry point for B2X/self-service sign-up identity userflows.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<B2xIdentityUserFlow>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<B2xIdentityUserFlowItemRequestBuilderGetQueryParameters> | undefined) : Promise<B2xIdentityUserFlow | undefined>;
    /**
     * Update the navigation property b2xUserFlows in identity
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<B2xIdentityUserFlow>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: B2xIdentityUserFlow, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<B2xIdentityUserFlow | undefined>;
    /**
     * Delete navigation property b2xUserFlows for identity
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents entry point for B2X/self-service sign-up identity userflows.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<B2xIdentityUserFlowItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property b2xUserFlows in identity
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: B2xIdentityUserFlow, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents entry point for B2X/self-service sign-up identity userflows.
 */
export interface B2xIdentityUserFlowItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const B2xIdentityUserFlowItemRequestBuilderUriTemplate = "{+baseurl}/identity/b2xUserFlows/{b2xIdentityUserFlow%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const B2xIdentityUserFlowItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const B2xIdentityUserFlowItemRequestBuilderNavigationMetadata: Record<Exclude<keyof B2xIdentityUserFlowItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    apiConnectorConfiguration: {
        requestsMetadata: ApiConnectorConfigurationRequestBuilderRequestsMetadata,
        navigationMetadata: ApiConnectorConfigurationRequestBuilderNavigationMetadata,
    },
    identityProviders: {
        requestsMetadata: IdentityProvidersRequestBuilderRequestsMetadata,
        navigationMetadata: IdentityProvidersRequestBuilderNavigationMetadata,
    },
    languages: {
        requestsMetadata: LanguagesRequestBuilderRequestsMetadata,
        navigationMetadata: LanguagesRequestBuilderNavigationMetadata,
    },
    userAttributeAssignments: {
        requestsMetadata: UserAttributeAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: UserAttributeAssignmentsRequestBuilderNavigationMetadata,
    },
    userFlowIdentityProviders: {
        requestsMetadata: UserFlowIdentityProvidersRequestBuilderRequestsMetadata,
        navigationMetadata: UserFlowIdentityProvidersRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const B2xIdentityUserFlowItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: B2xIdentityUserFlowItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: B2xIdentityUserFlowItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createB2xIdentityUserFlowFromDiscriminatorValue,
        queryParametersMapper: B2xIdentityUserFlowItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: B2xIdentityUserFlowItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createB2xIdentityUserFlowFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeB2xIdentityUserFlow,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
