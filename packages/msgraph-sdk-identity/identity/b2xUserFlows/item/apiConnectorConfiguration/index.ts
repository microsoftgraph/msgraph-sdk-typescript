/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUserFlowApiConnectorConfigurationFromDiscriminatorValue, type UserFlowApiConnectorConfiguration } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { PostAttributeCollectionRequestBuilderNavigationMetadata, PostAttributeCollectionRequestBuilderRequestsMetadata, type PostAttributeCollectionRequestBuilder } from './postAttributeCollection/';
import { PostFederationSignupRequestBuilderNavigationMetadata, PostFederationSignupRequestBuilderRequestsMetadata, type PostFederationSignupRequestBuilder } from './postFederationSignup/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration
 */
export interface ApiConnectorConfigurationRequestBuilder extends BaseRequestBuilder<ApiConnectorConfigurationRequestBuilder> {
    /**
     * Provides operations to manage the postAttributeCollection property of the microsoft.graph.userFlowApiConnectorConfiguration entity.
     */
    get postAttributeCollection(): PostAttributeCollectionRequestBuilder;
    /**
     * Provides operations to manage the postFederationSignup property of the microsoft.graph.userFlowApiConnectorConfiguration entity.
     */
    get postFederationSignup(): PostFederationSignupRequestBuilder;
    /**
     * Configuration for enabling an API connector for use as part of the self-service sign-up user flow. You can only obtain the value of this object using Get userFlowApiConnectorConfiguration.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UserFlowApiConnectorConfiguration>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ApiConnectorConfigurationRequestBuilderGetQueryParameters> | undefined) : Promise<UserFlowApiConnectorConfiguration | undefined>;
    /**
     * Configuration for enabling an API connector for use as part of the self-service sign-up user flow. You can only obtain the value of this object using Get userFlowApiConnectorConfiguration.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ApiConnectorConfigurationRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Configuration for enabling an API connector for use as part of the self-service sign-up user flow. You can only obtain the value of this object using Get userFlowApiConnectorConfiguration.
 */
export interface ApiConnectorConfigurationRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ApiConnectorConfigurationRequestBuilderUriTemplate = "{+baseurl}/identity/b2xUserFlows/{b2xIdentityUserFlow%2Did}/apiConnectorConfiguration{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ApiConnectorConfigurationRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ApiConnectorConfigurationRequestBuilderNavigationMetadata: Record<Exclude<keyof ApiConnectorConfigurationRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    postAttributeCollection: {
        requestsMetadata: PostAttributeCollectionRequestBuilderRequestsMetadata,
        navigationMetadata: PostAttributeCollectionRequestBuilderNavigationMetadata,
    },
    postFederationSignup: {
        requestsMetadata: PostFederationSignupRequestBuilderRequestsMetadata,
        navigationMetadata: PostFederationSignupRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ApiConnectorConfigurationRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ApiConnectorConfigurationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUserFlowApiConnectorConfigurationFromDiscriminatorValue,
        queryParametersMapper: ApiConnectorConfigurationRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
