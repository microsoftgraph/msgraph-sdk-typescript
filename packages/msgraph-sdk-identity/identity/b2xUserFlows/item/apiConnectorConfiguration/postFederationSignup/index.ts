/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createIdentityApiConnectorFromDiscriminatorValue, serializeIdentityApiConnector, type IdentityApiConnector } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { RefRequestBuilderRequestsMetadata, type RefRequestBuilder } from './ref/';
import { type UploadClientCertificateRequestBuilder, UploadClientCertificateRequestBuilderRequestsMetadata } from './uploadClientCertificate/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the postFederationSignup property of the microsoft.graph.userFlowApiConnectorConfiguration entity.
 */
export interface PostFederationSignupRequestBuilder extends BaseRequestBuilder<PostFederationSignupRequestBuilder> {
    /**
     * Provides operations to manage the collection of identityContainer entities.
     */
    get ref(): RefRequestBuilder;
    /**
     * Provides operations to call the uploadClientCertificate method.
     */
    get uploadClientCertificate(): UploadClientCertificateRequestBuilder;
    /**
     * Delete navigation property postFederationSignup for identity
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get postFederationSignup from identity
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IdentityApiConnector>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PostFederationSignupRequestBuilderGetQueryParameters> | undefined) : Promise<IdentityApiConnector | undefined>;
    /**
     * Update the navigation property postFederationSignup in identity
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<IdentityApiConnector>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: IdentityApiConnector, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<IdentityApiConnector | undefined>;
    /**
     * Delete navigation property postFederationSignup for identity
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get postFederationSignup from identity
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PostFederationSignupRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property postFederationSignup in identity
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: IdentityApiConnector, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get postFederationSignup from identity
 */
export interface PostFederationSignupRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const PostFederationSignupRequestBuilderUriTemplate = "{+baseurl}/identity/b2xUserFlows/{b2xIdentityUserFlow%2Did}/apiConnectorConfiguration/postFederationSignup{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PostFederationSignupRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PostFederationSignupRequestBuilderNavigationMetadata: Record<Exclude<keyof PostFederationSignupRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    ref: {
        requestsMetadata: RefRequestBuilderRequestsMetadata,
    },
    uploadClientCertificate: {
        requestsMetadata: UploadClientCertificateRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PostFederationSignupRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: PostFederationSignupRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: PostFederationSignupRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createIdentityApiConnectorFromDiscriminatorValue,
        queryParametersMapper: PostFederationSignupRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: PostFederationSignupRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createIdentityApiConnectorFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeIdentityApiConnector,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
