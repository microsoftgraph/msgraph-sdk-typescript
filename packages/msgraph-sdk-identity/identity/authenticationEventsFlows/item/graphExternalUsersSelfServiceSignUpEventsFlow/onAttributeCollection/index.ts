/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOnAttributeCollectionHandlerFromDiscriminatorValue, type OnAttributeCollectionHandler } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { GraphOnAttributeCollectionExternalUsersSelfServiceSignUpRequestBuilderNavigationMetadata, GraphOnAttributeCollectionExternalUsersSelfServiceSignUpRequestBuilderRequestsMetadata, type GraphOnAttributeCollectionExternalUsersSelfServiceSignUpRequestBuilder } from './graphOnAttributeCollectionExternalUsersSelfServiceSignUp/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /identity/authenticationEventsFlows/{authenticationEventsFlow-id}/graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection
 */
export interface OnAttributeCollectionRequestBuilder extends BaseRequestBuilder<OnAttributeCollectionRequestBuilder> {
    /**
     * Casts the previous resource to onAttributeCollectionExternalUsersSelfServiceSignUp.
     */
    get graphOnAttributeCollectionExternalUsersSelfServiceSignUp(): GraphOnAttributeCollectionExternalUsersSelfServiceSignUpRequestBuilder;
    /**
     * The configuration for what to invoke when attributes are ready to be collected from the user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnAttributeCollectionHandler>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<OnAttributeCollectionRequestBuilderGetQueryParameters> | undefined) : Promise<OnAttributeCollectionHandler | undefined>;
    /**
     * The configuration for what to invoke when attributes are ready to be collected from the user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OnAttributeCollectionRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The configuration for what to invoke when attributes are ready to be collected from the user.
 */
export interface OnAttributeCollectionRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const OnAttributeCollectionRequestBuilderUriTemplate = "{+baseurl}/identity/authenticationEventsFlows/{authenticationEventsFlow%2Did}/graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OnAttributeCollectionRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OnAttributeCollectionRequestBuilderNavigationMetadata: Record<Exclude<keyof OnAttributeCollectionRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    graphOnAttributeCollectionExternalUsersSelfServiceSignUp: {
        requestsMetadata: GraphOnAttributeCollectionExternalUsersSelfServiceSignUpRequestBuilderRequestsMetadata,
        navigationMetadata: GraphOnAttributeCollectionExternalUsersSelfServiceSignUpRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OnAttributeCollectionRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: OnAttributeCollectionRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnAttributeCollectionHandlerFromDiscriminatorValue,
        queryParametersMapper: OnAttributeCollectionRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
