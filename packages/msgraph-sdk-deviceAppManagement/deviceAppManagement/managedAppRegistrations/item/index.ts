/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createManagedAppRegistrationFromDiscriminatorValue, serializeManagedAppRegistration, type ManagedAppRegistration } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AppliedPoliciesRequestBuilderNavigationMetadata, AppliedPoliciesRequestBuilderRequestsMetadata, type AppliedPoliciesRequestBuilder } from './appliedPolicies/index.js';
// @ts-ignore
import { IntendedPoliciesRequestBuilderNavigationMetadata, IntendedPoliciesRequestBuilderRequestsMetadata, type IntendedPoliciesRequestBuilder } from './intendedPolicies/index.js';
// @ts-ignore
import { OperationsRequestBuilderNavigationMetadata, OperationsRequestBuilderRequestsMetadata, type OperationsRequestBuilder } from './operations/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the managedAppRegistrations property of the microsoft.graph.deviceAppManagement entity.
 */
export interface ManagedAppRegistrationItemRequestBuilder extends BaseRequestBuilder<ManagedAppRegistrationItemRequestBuilder> {
    /**
     * Provides operations to manage the appliedPolicies property of the microsoft.graph.managedAppRegistration entity.
     */
    get appliedPolicies(): AppliedPoliciesRequestBuilder;
    /**
     * Provides operations to manage the intendedPolicies property of the microsoft.graph.managedAppRegistration entity.
     */
    get intendedPolicies(): IntendedPoliciesRequestBuilder;
    /**
     * Provides operations to manage the operations property of the microsoft.graph.managedAppRegistration entity.
     */
    get operations(): OperationsRequestBuilder;
    /**
     * Delete navigation property managedAppRegistrations for deviceAppManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read properties and relationships of the androidManagedAppRegistration object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedAppRegistration>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-mam-androidmanagedappregistration-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ManagedAppRegistrationItemRequestBuilderGetQueryParameters> | undefined) : Promise<ManagedAppRegistration | undefined>;
    /**
     * Update the navigation property managedAppRegistrations in deviceAppManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ManagedAppRegistration>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ManagedAppRegistration, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ManagedAppRegistration | undefined>;
    /**
     * Delete navigation property managedAppRegistrations for deviceAppManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read properties and relationships of the androidManagedAppRegistration object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ManagedAppRegistrationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property managedAppRegistrations in deviceAppManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ManagedAppRegistration, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read properties and relationships of the androidManagedAppRegistration object.
 */
export interface ManagedAppRegistrationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ManagedAppRegistrationItemRequestBuilderUriTemplate = "{+baseurl}/deviceAppManagement/managedAppRegistrations/{managedAppRegistration%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ManagedAppRegistrationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ManagedAppRegistrationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ManagedAppRegistrationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    appliedPolicies: {
        requestsMetadata: AppliedPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: AppliedPoliciesRequestBuilderNavigationMetadata,
    },
    intendedPolicies: {
        requestsMetadata: IntendedPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: IntendedPoliciesRequestBuilderNavigationMetadata,
    },
    operations: {
        requestsMetadata: OperationsRequestBuilderRequestsMetadata,
        navigationMetadata: OperationsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ManagedAppRegistrationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ManagedAppRegistrationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ManagedAppRegistrationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedAppRegistrationFromDiscriminatorValue,
        queryParametersMapper: ManagedAppRegistrationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ManagedAppRegistrationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createManagedAppRegistrationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeManagedAppRegistration,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
