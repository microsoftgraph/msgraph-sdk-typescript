/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageAssignmentRequestFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeAccessPackageAssignmentRequest, serializeBaseCollectionPaginationCountResponse, type AccessPackageAssignmentRequest, type BaseCollectionPaginationCountResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FilterByCurrentUserWithOnGetResponse}
 */
export function createFilterByCurrentUserWithOnGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoFilterByCurrentUserWithOnGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoFilterByCurrentUserWithOnGetResponse(filterByCurrentUserWithOnGetResponse: Partial<FilterByCurrentUserWithOnGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(filterByCurrentUserWithOnGetResponse),
        "value": n => { filterByCurrentUserWithOnGetResponse.value = n.getCollectionOfObjectValues<AccessPackageAssignmentRequest>(createAccessPackageAssignmentRequestFromDiscriminatorValue); },
    }
}
export interface FilterByCurrentUserWithOnGetResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: AccessPackageAssignmentRequest[];
}
/**
 * Provides operations to call the filterByCurrentUser method.
 */
export interface FilterByCurrentUserWithOnRequestBuilder extends BaseRequestBuilder<FilterByCurrentUserWithOnRequestBuilder> {
    /**
     * Invoke function filterByCurrentUser
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<FilterByCurrentUserWithOnGetResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<FilterByCurrentUserWithOnRequestBuilderGetQueryParameters> | undefined) : Promise<FilterByCurrentUserWithOnGetResponse | undefined>;
    /**
     * Invoke function filterByCurrentUser
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<FilterByCurrentUserWithOnRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Invoke function filterByCurrentUser
 */
export interface FilterByCurrentUserWithOnRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeFilterByCurrentUserWithOnGetResponse(writer: SerializationWriter, filterByCurrentUserWithOnGetResponse: Partial<FilterByCurrentUserWithOnGetResponse> | undefined = {}) : void {
    serializeBaseCollectionPaginationCountResponse(writer, filterByCurrentUserWithOnGetResponse)
    writer.writeCollectionOfObjectValues<AccessPackageAssignmentRequest>("value", filterByCurrentUserWithOnGetResponse.value, serializeAccessPackageAssignmentRequest);
}
/**
 * Uri template for the request builder.
 */
export const FilterByCurrentUserWithOnRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/assignmentRequests/filterByCurrentUser(on='{on}'){?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const FilterByCurrentUserWithOnRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const FilterByCurrentUserWithOnRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: FilterByCurrentUserWithOnRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createFilterByCurrentUserWithOnGetResponseFromDiscriminatorValue,
        queryParametersMapper: FilterByCurrentUserWithOnRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to call the filterByCurrentUser method.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AccessPackage: "accessPackage",
    Assignment: "assignment",
    Requestor: "requestor",
} as const;
/**
 * Provides operations to call the filterByCurrentUser method.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    Answers: "answers",
    AnswersDesc: "answers desc",
    CompletedDateTime: "completedDateTime",
    CompletedDateTimeDesc: "completedDateTime desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    CustomExtensionCalloutInstances: "customExtensionCalloutInstances",
    CustomExtensionCalloutInstancesDesc: "customExtensionCalloutInstances desc",
    RequestType: "requestType",
    RequestTypeDesc: "requestType desc",
    Schedule: "schedule",
    ScheduleDesc: "schedule desc",
    State: "state",
    StateDesc: "state desc",
    Status: "status",
    StatusDesc: "status desc",
} as const;
/**
 * Provides operations to call the filterByCurrentUser method.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Answers: "answers",
    CompletedDateTime: "completedDateTime",
    CreatedDateTime: "createdDateTime",
    CustomExtensionCalloutInstances: "customExtensionCalloutInstances",
    RequestType: "requestType",
    Schedule: "schedule",
    State: "state",
    Status: "status",
    AccessPackage: "accessPackage",
    Assignment: "assignment",
    Requestor: "requestor",
} as const;
/* tslint:enable */
/* eslint-enable */
