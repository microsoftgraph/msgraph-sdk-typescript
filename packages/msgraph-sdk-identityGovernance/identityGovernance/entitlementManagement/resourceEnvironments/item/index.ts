/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageResourceEnvironmentFromDiscriminatorValue, serializeAccessPackageResourceEnvironment, type AccessPackageResourceEnvironment } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { ResourcesRequestBuilderNavigationMetadata, ResourcesRequestBuilderRequestsMetadata, type ResourcesRequestBuilder } from './resources/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the resourceEnvironments property of the microsoft.graph.entitlementManagement entity.
 */
export interface AccessPackageResourceEnvironmentItemRequestBuilder extends BaseRequestBuilder<AccessPackageResourceEnvironmentItemRequestBuilder> {
    /**
     * Provides operations to manage the resources property of the microsoft.graph.accessPackageResourceEnvironment entity.
     */
    get resources(): ResourcesRequestBuilder;
    /**
     * Delete navigation property resourceEnvironments for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * A reference to the geolocation environments in which a resource is located.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessPackageResourceEnvironment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AccessPackageResourceEnvironmentItemRequestBuilderGetQueryParameters> | undefined) : Promise<AccessPackageResourceEnvironment | undefined>;
    /**
     * Update the navigation property resourceEnvironments in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessPackageResourceEnvironment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: AccessPackageResourceEnvironment, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AccessPackageResourceEnvironment | undefined>;
    /**
     * Delete navigation property resourceEnvironments for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * A reference to the geolocation environments in which a resource is located.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AccessPackageResourceEnvironmentItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property resourceEnvironments in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: AccessPackageResourceEnvironment, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * A reference to the geolocation environments in which a resource is located.
 */
export interface AccessPackageResourceEnvironmentItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AccessPackageResourceEnvironmentItemRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/resourceEnvironments/{accessPackageResourceEnvironment%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AccessPackageResourceEnvironmentItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AccessPackageResourceEnvironmentItemRequestBuilderNavigationMetadata: Record<Exclude<keyof AccessPackageResourceEnvironmentItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    resources: {
        requestsMetadata: ResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: ResourcesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AccessPackageResourceEnvironmentItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: AccessPackageResourceEnvironmentItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: AccessPackageResourceEnvironmentItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessPackageResourceEnvironmentFromDiscriminatorValue,
        queryParametersMapper: AccessPackageResourceEnvironmentItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: AccessPackageResourceEnvironmentItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessPackageResourceEnvironmentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAccessPackageResourceEnvironment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the resourceEnvironments property of the microsoft.graph.entitlementManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Resources: "resources",
} as const;
/**
 * Provides operations to manage the resourceEnvironments property of the microsoft.graph.entitlementManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ConnectionInfo: "connectionInfo",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DisplayName: "displayName",
    IsDefaultEnvironment: "isDefaultEnvironment",
    ModifiedDateTime: "modifiedDateTime",
    OriginId: "originId",
    OriginSystem: "originSystem",
    Resources: "resources",
} as const;
/* tslint:enable */
/* eslint-enable */
