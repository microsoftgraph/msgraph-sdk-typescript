/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageAssignmentPolicyFromDiscriminatorValue, type AccessPackageAssignmentPolicy } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignmentPolicy property of the microsoft.graph.accessPackageAssignment entity.
 */
export interface AssignmentPolicyRequestBuilder extends BaseRequestBuilder<AssignmentPolicyRequestBuilder> {
    /**
     * Read-only. Supports $filter (eq) on the id property and $expand query parameters.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessPackageAssignmentPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AssignmentPolicyRequestBuilderGetQueryParameters> | undefined) : Promise<AccessPackageAssignmentPolicy | undefined>;
    /**
     * Read-only. Supports $filter (eq) on the id property and $expand query parameters.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AssignmentPolicyRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Read-only. Supports $filter (eq) on the id property and $expand query parameters.
 */
export interface AssignmentPolicyRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AssignmentPolicyRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/assignments/{accessPackageAssignment%2Did}/assignmentPolicy{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AssignmentPolicyRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AssignmentPolicyRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AssignmentPolicyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAccessPackageAssignmentPolicyFromDiscriminatorValue,
        queryParametersMapper: AssignmentPolicyRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the assignmentPolicy property of the microsoft.graph.accessPackageAssignment entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AccessPackage: "accessPackage",
    Catalog: "catalog",
    CustomExtensionStageSettings: "customExtensionStageSettings",
    Questions: "questions",
} as const;
/**
 * Provides operations to manage the assignmentPolicy property of the microsoft.graph.accessPackageAssignment entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AllowedTargetScope: "allowedTargetScope",
    AutomaticRequestSettings: "automaticRequestSettings",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DisplayName: "displayName",
    Expiration: "expiration",
    ModifiedDateTime: "modifiedDateTime",
    RequestApprovalSettings: "requestApprovalSettings",
    RequestorSettings: "requestorSettings",
    ReviewSettings: "reviewSettings",
    SpecificAllowedTargets: "specificAllowedTargets",
    AccessPackage: "accessPackage",
    Catalog: "catalog",
    CustomExtensionStageSettings: "customExtensionStageSettings",
    Questions: "questions",
} as const;
/* tslint:enable */
/* eslint-enable */
