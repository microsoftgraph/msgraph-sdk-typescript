/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createRunCollectionResponseFromDiscriminatorValue, type RunCollectionResponse } from '@microsoft/msgraph-sdk/models/identityGovernance/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { RunItemRequestBuilderNavigationMetadata, RunItemRequestBuilderRequestsMetadata, type RunItemRequestBuilder } from './item/';
import { MicrosoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTimeRequestBuilderRequestsMetadata, type MicrosoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTimeRequestBuilder } from './microsoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTime/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the runs property of the microsoft.graph.identityGovernance.workflow entity.
 */
export interface RunsRequestBuilder extends BaseRequestBuilder<RunsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the runs property of the microsoft.graph.identityGovernance.workflow entity.
     * @param runId The unique identifier of run
     * @returns {RunItemRequestBuilder}
     */
     byRunId(runId: string) : RunItemRequestBuilder;
    /**
     * Get a list of the run objects and their properties for a lifecycle workflow.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RunCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/identitygovernance-workflow-list-runs?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<RunsRequestBuilderGetQueryParameters> | undefined) : Promise<RunCollectionResponse | undefined>;
    /**
     * Provides operations to call the summary method.
     * @param endDateTime Usage: endDateTime={endDateTime}
     * @param startDateTime Usage: startDateTime={startDateTime}
     * @returns {MicrosoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTimeRequestBuilder}
     */
     microsoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTime(endDateTime: Date | undefined, startDateTime: Date | undefined) : MicrosoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTimeRequestBuilder;
    /**
     * Get a list of the run objects and their properties for a lifecycle workflow.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<RunsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get a list of the run objects and their properties for a lifecycle workflow.
 */
export interface RunsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const RunsRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/lifecycleWorkflows/workflows/{workflow%2Did}/runs{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the runs property of the microsoft.graph.identityGovernance.workflow entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    TaskProcessingResults: "taskProcessingResults",
    UserProcessingResults: "userProcessingResults",
} as const;
/**
 * Provides operations to manage the runs property of the microsoft.graph.identityGovernance.workflow entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CompletedDateTime: "completedDateTime",
    CompletedDateTimeDesc: "completedDateTime desc",
    FailedTasksCount: "failedTasksCount",
    FailedTasksCountDesc: "failedTasksCount desc",
    FailedUsersCount: "failedUsersCount",
    FailedUsersCountDesc: "failedUsersCount desc",
    LastUpdatedDateTime: "lastUpdatedDateTime",
    LastUpdatedDateTimeDesc: "lastUpdatedDateTime desc",
    ProcessingStatus: "processingStatus",
    ProcessingStatusDesc: "processingStatus desc",
    ScheduledDateTime: "scheduledDateTime",
    ScheduledDateTimeDesc: "scheduledDateTime desc",
    StartedDateTime: "startedDateTime",
    StartedDateTimeDesc: "startedDateTime desc",
    SuccessfulUsersCount: "successfulUsersCount",
    SuccessfulUsersCountDesc: "successfulUsersCount desc",
    TotalTasksCount: "totalTasksCount",
    TotalTasksCountDesc: "totalTasksCount desc",
    TotalUnprocessedTasksCount: "totalUnprocessedTasksCount",
    TotalUnprocessedTasksCountDesc: "totalUnprocessedTasksCount desc",
    TotalUsersCount: "totalUsersCount",
    TotalUsersCountDesc: "totalUsersCount desc",
    WorkflowExecutionType: "workflowExecutionType",
    WorkflowExecutionTypeDesc: "workflowExecutionType desc",
} as const;
/**
 * Provides operations to manage the runs property of the microsoft.graph.identityGovernance.workflow entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CompletedDateTime: "completedDateTime",
    FailedTasksCount: "failedTasksCount",
    FailedUsersCount: "failedUsersCount",
    LastUpdatedDateTime: "lastUpdatedDateTime",
    ProcessingStatus: "processingStatus",
    ScheduledDateTime: "scheduledDateTime",
    StartedDateTime: "startedDateTime",
    SuccessfulUsersCount: "successfulUsersCount",
    TotalTasksCount: "totalTasksCount",
    TotalUnprocessedTasksCount: "totalUnprocessedTasksCount",
    TotalUsersCount: "totalUsersCount",
    WorkflowExecutionType: "workflowExecutionType",
    TaskProcessingResults: "taskProcessingResults",
    UserProcessingResults: "userProcessingResults",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const RunsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const RunsRequestBuilderNavigationMetadata: Record<Exclude<keyof RunsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byRunId: {
        requestsMetadata: RunItemRequestBuilderRequestsMetadata,
        navigationMetadata: RunItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["run%2Did"],
    },
    microsoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTime: {
        requestsMetadata: MicrosoftGraphIdentityGovernanceSummaryWithStartDateTimeWithEndDateTimeRequestBuilderRequestsMetadata,
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const RunsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: RunsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRunCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: RunsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
