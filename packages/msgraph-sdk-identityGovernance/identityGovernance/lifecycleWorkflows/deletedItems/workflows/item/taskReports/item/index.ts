/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createTaskReportFromDiscriminatorValue, type TaskReport } from '@microsoft/msgraph-sdk/models/identityGovernance/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { TaskRequestBuilderRequestsMetadata, type TaskRequestBuilder } from './task/';
import { TaskDefinitionRequestBuilderRequestsMetadata, type TaskDefinitionRequestBuilder } from './taskDefinition/';
import { TaskProcessingResultsRequestBuilderNavigationMetadata, TaskProcessingResultsRequestBuilderRequestsMetadata, type TaskProcessingResultsRequestBuilder } from './taskProcessingResults/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the taskReports property of the microsoft.graph.identityGovernance.workflow entity.
 */
export interface TaskReportItemRequestBuilder extends BaseRequestBuilder<TaskReportItemRequestBuilder> {
    /**
     * Provides operations to manage the task property of the microsoft.graph.identityGovernance.taskReport entity.
     */
    get task(): TaskRequestBuilder;
    /**
     * Provides operations to manage the taskDefinition property of the microsoft.graph.identityGovernance.taskReport entity.
     */
    get taskDefinition(): TaskDefinitionRequestBuilder;
    /**
     * Provides operations to manage the taskProcessingResults property of the microsoft.graph.identityGovernance.taskReport entity.
     */
    get taskProcessingResults(): TaskProcessingResultsRequestBuilder;
    /**
     * Represents the aggregation of task execution data for tasks within a workflow object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TaskReport>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<TaskReportItemRequestBuilderGetQueryParameters> | undefined) : Promise<TaskReport | undefined>;
    /**
     * Represents the aggregation of task execution data for tasks within a workflow object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TaskReportItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Represents the aggregation of task execution data for tasks within a workflow object.
 */
export interface TaskReportItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const TaskReportItemRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow%2Did}/taskReports/{taskReport%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TaskReportItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TaskReportItemRequestBuilderNavigationMetadata: Record<Exclude<keyof TaskReportItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    task: {
        requestsMetadata: TaskRequestBuilderRequestsMetadata,
    },
    taskDefinition: {
        requestsMetadata: TaskDefinitionRequestBuilderRequestsMetadata,
    },
    taskProcessingResults: {
        requestsMetadata: TaskProcessingResultsRequestBuilderRequestsMetadata,
        navigationMetadata: TaskProcessingResultsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TaskReportItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: TaskReportItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createTaskReportFromDiscriminatorValue,
        queryParametersMapper: TaskReportItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
