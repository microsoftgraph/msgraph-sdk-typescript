/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPrivilegedAccessGroupEligibilityScheduleRequestCollectionResponseFromDiscriminatorValue, createPrivilegedAccessGroupEligibilityScheduleRequestFromDiscriminatorValue, serializePrivilegedAccessGroupEligibilityScheduleRequest, type PrivilegedAccessGroupEligibilityScheduleRequest, type PrivilegedAccessGroupEligibilityScheduleRequestCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { FilterByCurrentUserWithOnRequestBuilderRequestsMetadata, type FilterByCurrentUserWithOnRequestBuilder } from './filterByCurrentUserWithOn/';
import { PrivilegedAccessGroupEligibilityScheduleRequestItemRequestBuilderNavigationMetadata, PrivilegedAccessGroupEligibilityScheduleRequestItemRequestBuilderRequestsMetadata, type PrivilegedAccessGroupEligibilityScheduleRequestItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the eligibilityScheduleRequests property of the microsoft.graph.privilegedAccessGroup entity.
 */
export interface EligibilityScheduleRequestsRequestBuilder extends BaseRequestBuilder<EligibilityScheduleRequestsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the eligibilityScheduleRequests property of the microsoft.graph.privilegedAccessGroup entity.
     * @param privilegedAccessGroupEligibilityScheduleRequestId The unique identifier of privilegedAccessGroupEligibilityScheduleRequest
     * @returns {PrivilegedAccessGroupEligibilityScheduleRequestItemRequestBuilder}
     */
     byPrivilegedAccessGroupEligibilityScheduleRequestId(privilegedAccessGroupEligibilityScheduleRequestId: string) : PrivilegedAccessGroupEligibilityScheduleRequestItemRequestBuilder;
    /**
     * Provides operations to call the filterByCurrentUser method.
     * @param on Usage: on='{on}'
     * @returns {FilterByCurrentUserWithOnRequestBuilder}
     */
     filterByCurrentUserWithOn(on: string | undefined) : FilterByCurrentUserWithOnRequestBuilder;
    /**
     * Get a list of the privilegedAccessGroupEligibilityScheduleRequest objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PrivilegedAccessGroupEligibilityScheduleRequestCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/privilegedaccessgroup-list-eligibilityschedulerequests?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<EligibilityScheduleRequestsRequestBuilderGetQueryParameters> | undefined) : Promise<PrivilegedAccessGroupEligibilityScheduleRequestCollectionResponse | undefined>;
    /**
     * Create a new privilegedAccessGroupEligibilityScheduleRequest object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PrivilegedAccessGroupEligibilityScheduleRequest>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/privilegedaccessgroup-post-eligibilityschedulerequests?view=graph-rest-1.0|Find more info here}
     */
     post(body: PrivilegedAccessGroupEligibilityScheduleRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PrivilegedAccessGroupEligibilityScheduleRequest | undefined>;
    /**
     * Get a list of the privilegedAccessGroupEligibilityScheduleRequest objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EligibilityScheduleRequestsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new privilegedAccessGroupEligibilityScheduleRequest object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: PrivilegedAccessGroupEligibilityScheduleRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the privilegedAccessGroupEligibilityScheduleRequest objects and their properties.
 */
export interface EligibilityScheduleRequestsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const EligibilityScheduleRequestsRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EligibilityScheduleRequestsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EligibilityScheduleRequestsRequestBuilderNavigationMetadata: Record<Exclude<keyof EligibilityScheduleRequestsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byPrivilegedAccessGroupEligibilityScheduleRequestId: {
        requestsMetadata: PrivilegedAccessGroupEligibilityScheduleRequestItemRequestBuilderRequestsMetadata,
        navigationMetadata: PrivilegedAccessGroupEligibilityScheduleRequestItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["privilegedAccessGroupEligibilityScheduleRequest%2Did"],
    },
    filterByCurrentUserWithOn: {
        requestsMetadata: FilterByCurrentUserWithOnRequestBuilderRequestsMetadata,
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EligibilityScheduleRequestsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: EligibilityScheduleRequestsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPrivilegedAccessGroupEligibilityScheduleRequestCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: EligibilityScheduleRequestsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: EligibilityScheduleRequestsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPrivilegedAccessGroupEligibilityScheduleRequestFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePrivilegedAccessGroupEligibilityScheduleRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the eligibilityScheduleRequests property of the microsoft.graph.privilegedAccessGroup entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Group: "group",
    Principal: "principal",
    TargetSchedule: "targetSchedule",
} as const;
/**
 * Provides operations to manage the eligibilityScheduleRequests property of the microsoft.graph.privilegedAccessGroup entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    ApprovalId: "approvalId",
    ApprovalIdDesc: "approvalId desc",
    CompletedDateTime: "completedDateTime",
    CompletedDateTimeDesc: "completedDateTime desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    CustomData: "customData",
    CustomDataDesc: "customData desc",
    Status: "status",
    StatusDesc: "status desc",
    Action: "action",
    ActionDesc: "action desc",
    IsValidationOnly: "isValidationOnly",
    IsValidationOnlyDesc: "isValidationOnly desc",
    Justification: "justification",
    JustificationDesc: "justification desc",
    ScheduleInfo: "scheduleInfo",
    ScheduleInfoDesc: "scheduleInfo desc",
    TicketInfo: "ticketInfo",
    TicketInfoDesc: "ticketInfo desc",
    AccessId: "accessId",
    AccessIdDesc: "accessId desc",
    GroupId: "groupId",
    GroupIdDesc: "groupId desc",
    PrincipalId: "principalId",
    PrincipalIdDesc: "principalId desc",
    TargetScheduleId: "targetScheduleId",
    TargetScheduleIdDesc: "targetScheduleId desc",
} as const;
/**
 * Provides operations to manage the eligibilityScheduleRequests property of the microsoft.graph.privilegedAccessGroup entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ApprovalId: "approvalId",
    CompletedDateTime: "completedDateTime",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    CustomData: "customData",
    Status: "status",
    Action: "action",
    IsValidationOnly: "isValidationOnly",
    Justification: "justification",
    ScheduleInfo: "scheduleInfo",
    TicketInfo: "ticketInfo",
    AccessId: "accessId",
    GroupId: "groupId",
    PrincipalId: "principalId",
    TargetScheduleId: "targetScheduleId",
    Group: "group",
    Principal: "principal",
    TargetSchedule: "targetSchedule",
} as const;
/* tslint:enable */
/* eslint-enable */
