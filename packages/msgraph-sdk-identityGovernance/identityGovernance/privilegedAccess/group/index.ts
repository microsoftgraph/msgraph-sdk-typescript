/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPrivilegedAccessGroupFromDiscriminatorValue, serializePrivilegedAccessGroup, type PrivilegedAccessGroup } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { AssignmentApprovalsRequestBuilderNavigationMetadata, AssignmentApprovalsRequestBuilderRequestsMetadata, type AssignmentApprovalsRequestBuilder } from './assignmentApprovals/';
// @ts-ignore
import { AssignmentScheduleInstancesRequestBuilderNavigationMetadata, AssignmentScheduleInstancesRequestBuilderRequestsMetadata, type AssignmentScheduleInstancesRequestBuilder } from './assignmentScheduleInstances/';
// @ts-ignore
import { AssignmentScheduleRequestsRequestBuilderNavigationMetadata, AssignmentScheduleRequestsRequestBuilderRequestsMetadata, type AssignmentScheduleRequestsRequestBuilder } from './assignmentScheduleRequests/';
// @ts-ignore
import { AssignmentSchedulesRequestBuilderNavigationMetadata, AssignmentSchedulesRequestBuilderRequestsMetadata, type AssignmentSchedulesRequestBuilder } from './assignmentSchedules/';
// @ts-ignore
import { EligibilityScheduleInstancesRequestBuilderNavigationMetadata, EligibilityScheduleInstancesRequestBuilderRequestsMetadata, type EligibilityScheduleInstancesRequestBuilder } from './eligibilityScheduleInstances/';
// @ts-ignore
import { EligibilityScheduleRequestsRequestBuilderNavigationMetadata, EligibilityScheduleRequestsRequestBuilderRequestsMetadata, type EligibilityScheduleRequestsRequestBuilder } from './eligibilityScheduleRequests/';
// @ts-ignore
import { EligibilitySchedulesRequestBuilderNavigationMetadata, EligibilitySchedulesRequestBuilderRequestsMetadata, type EligibilitySchedulesRequestBuilder } from './eligibilitySchedules/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the group property of the microsoft.graph.privilegedAccessRoot entity.
 */
export interface GroupRequestBuilder extends BaseRequestBuilder<GroupRequestBuilder> {
    /**
     * Provides operations to manage the assignmentApprovals property of the microsoft.graph.privilegedAccessGroup entity.
     */
    get assignmentApprovals(): AssignmentApprovalsRequestBuilder;
    /**
     * Provides operations to manage the assignmentScheduleInstances property of the microsoft.graph.privilegedAccessGroup entity.
     */
    get assignmentScheduleInstances(): AssignmentScheduleInstancesRequestBuilder;
    /**
     * Provides operations to manage the assignmentScheduleRequests property of the microsoft.graph.privilegedAccessGroup entity.
     */
    get assignmentScheduleRequests(): AssignmentScheduleRequestsRequestBuilder;
    /**
     * Provides operations to manage the assignmentSchedules property of the microsoft.graph.privilegedAccessGroup entity.
     */
    get assignmentSchedules(): AssignmentSchedulesRequestBuilder;
    /**
     * Provides operations to manage the eligibilityScheduleInstances property of the microsoft.graph.privilegedAccessGroup entity.
     */
    get eligibilityScheduleInstances(): EligibilityScheduleInstancesRequestBuilder;
    /**
     * Provides operations to manage the eligibilityScheduleRequests property of the microsoft.graph.privilegedAccessGroup entity.
     */
    get eligibilityScheduleRequests(): EligibilityScheduleRequestsRequestBuilder;
    /**
     * Provides operations to manage the eligibilitySchedules property of the microsoft.graph.privilegedAccessGroup entity.
     */
    get eligibilitySchedules(): EligibilitySchedulesRequestBuilder;
    /**
     * Delete navigation property group for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * A group that's governed through Privileged Identity Management (PIM).
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PrivilegedAccessGroup>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<GroupRequestBuilderGetQueryParameters> | undefined) : Promise<PrivilegedAccessGroup | undefined>;
    /**
     * Update the navigation property group in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PrivilegedAccessGroup>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: PrivilegedAccessGroup, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PrivilegedAccessGroup | undefined>;
    /**
     * Delete navigation property group for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * A group that's governed through Privileged Identity Management (PIM).
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<GroupRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property group in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: PrivilegedAccessGroup, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * A group that's governed through Privileged Identity Management (PIM).
 */
export interface GroupRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const GroupRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/privilegedAccess/group{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const GroupRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const GroupRequestBuilderNavigationMetadata: Record<Exclude<keyof GroupRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assignmentApprovals: {
        requestsMetadata: AssignmentApprovalsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentApprovalsRequestBuilderNavigationMetadata,
    },
    assignmentScheduleInstances: {
        requestsMetadata: AssignmentScheduleInstancesRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentScheduleInstancesRequestBuilderNavigationMetadata,
    },
    assignmentScheduleRequests: {
        requestsMetadata: AssignmentScheduleRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentScheduleRequestsRequestBuilderNavigationMetadata,
    },
    assignmentSchedules: {
        requestsMetadata: AssignmentSchedulesRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentSchedulesRequestBuilderNavigationMetadata,
    },
    eligibilityScheduleInstances: {
        requestsMetadata: EligibilityScheduleInstancesRequestBuilderRequestsMetadata,
        navigationMetadata: EligibilityScheduleInstancesRequestBuilderNavigationMetadata,
    },
    eligibilityScheduleRequests: {
        requestsMetadata: EligibilityScheduleRequestsRequestBuilderRequestsMetadata,
        navigationMetadata: EligibilityScheduleRequestsRequestBuilderNavigationMetadata,
    },
    eligibilitySchedules: {
        requestsMetadata: EligibilitySchedulesRequestBuilderRequestsMetadata,
        navigationMetadata: EligibilitySchedulesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const GroupRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: GroupRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: GroupRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPrivilegedAccessGroupFromDiscriminatorValue,
        queryParametersMapper: GroupRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: GroupRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPrivilegedAccessGroupFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePrivilegedAccessGroup,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
