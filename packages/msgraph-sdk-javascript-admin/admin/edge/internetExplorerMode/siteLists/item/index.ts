/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createBrowserSiteListFromDiscriminatorValue, serializeBrowserSiteList, type BrowserSiteList } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { PublishRequestBuilderRequestsMetadata, PublishRequestBuilderUriTemplate, type PublishRequestBuilder } from './publish/';
import { SharedCookiesRequestBuilderNavigationMetadata, SharedCookiesRequestBuilderRequestsMetadata, SharedCookiesRequestBuilderUriTemplate, type SharedCookiesRequestBuilder } from './sharedCookies/';
import { SitesRequestBuilderNavigationMetadata, SitesRequestBuilderRequestsMetadata, SitesRequestBuilderUriTemplate, type SitesRequestBuilder } from './sites/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the siteLists property of the microsoft.graph.internetExplorerMode entity.
 */
export interface BrowserSiteListItemRequestBuilder extends BaseRequestBuilder<BrowserSiteListItemRequestBuilder> {
    /**
     * Provides operations to call the publish method.
     */
    get publish(): PublishRequestBuilder;
    /**
     * Provides operations to manage the sharedCookies property of the microsoft.graph.browserSiteList entity.
     */
    get sharedCookies(): SharedCookiesRequestBuilder;
    /**
     * Provides operations to manage the sites property of the microsoft.graph.browserSiteList entity.
     */
    get sites(): SitesRequestBuilder;
    /**
     * Delete a browserSiteList object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/internetexplorermode-delete-sitelists?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get a browserSiteList that contains browserSite and browserSharedCookie resources.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of BrowserSiteList
     * @see {@link https://learn.microsoft.com/graph/api/browsersitelist-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<BrowserSiteListItemRequestBuilderGetQueryParameters> | undefined) : Promise<BrowserSiteList | undefined>;
    /**
     * Update the properties of a browserSiteList object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of BrowserSiteList
     * @see {@link https://learn.microsoft.com/graph/api/browsersitelist-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: BrowserSiteList, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<BrowserSiteList | undefined>;
    /**
     * Delete a browserSiteList object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get a browserSiteList that contains browserSite and browserSharedCookie resources.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<BrowserSiteListItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a browserSiteList object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: BrowserSiteList, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a browserSiteList that contains browserSite and browserSharedCookie resources.
 */
export interface BrowserSiteListItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const BrowserSiteListItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const BrowserSiteListItemRequestBuilderNavigationMetadata: Record<Exclude<keyof BrowserSiteListItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    publish: {
        uriTemplate: PublishRequestBuilderUriTemplate,
        requestsMetadata: PublishRequestBuilderRequestsMetadata,
    },
    sharedCookies: {
        uriTemplate: SharedCookiesRequestBuilderUriTemplate,
        requestsMetadata: SharedCookiesRequestBuilderRequestsMetadata,
        navigationMetadata: SharedCookiesRequestBuilderNavigationMetadata,
    },
    sites: {
        uriTemplate: SitesRequestBuilderUriTemplate,
        requestsMetadata: SitesRequestBuilderRequestsMetadata,
        navigationMetadata: SitesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const BrowserSiteListItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createBrowserSiteListFromDiscriminatorValue,
        queryParametersMapper: BrowserSiteListItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createBrowserSiteListFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeBrowserSiteList,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const BrowserSiteListItemRequestBuilderUriTemplate = "{+baseurl}/admin/edge/internetExplorerMode/siteLists/{browserSiteList%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
