/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPeopleAdminSettingsFromDiscriminatorValue, type PeopleAdminSettings } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { ProfileCardPropertiesRequestBuilderNavigationMetadata, ProfileCardPropertiesRequestBuilderRequestsMetadata, ProfileCardPropertiesRequestBuilderUriTemplate, type ProfileCardPropertiesRequestBuilder } from './profileCardProperties/';
import { PronounsRequestBuilderRequestsMetadata, PronounsRequestBuilderUriTemplate, type PronounsRequestBuilder } from './pronouns/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the people property of the microsoft.graph.admin entity.
 */
export interface PeopleRequestBuilder extends BaseRequestBuilder<PeopleRequestBuilder> {
    /**
     * Provides operations to manage the profileCardProperties property of the microsoft.graph.peopleAdminSettings entity.
     */
    get profileCardProperties(): ProfileCardPropertiesRequestBuilder;
    /**
     * Provides operations to manage the pronouns property of the microsoft.graph.peopleAdminSettings entity.
     */
    get pronouns(): PronounsRequestBuilder;
    /**
     * Retrieve the properties and relationships of a peopleAdminSettings object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PeopleAdminSettings
     * @see {@link https://learn.microsoft.com/graph/api/peopleadminsettings-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<PeopleRequestBuilderGetQueryParameters> | undefined) : Promise<PeopleAdminSettings | undefined>;
    /**
     * Retrieve the properties and relationships of a peopleAdminSettings object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PeopleRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of a peopleAdminSettings object.
 */
export interface PeopleRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PeopleRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PeopleRequestBuilderNavigationMetadata: Record<Exclude<keyof PeopleRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    profileCardProperties: {
        uriTemplate: ProfileCardPropertiesRequestBuilderUriTemplate,
        requestsMetadata: ProfileCardPropertiesRequestBuilderRequestsMetadata,
        navigationMetadata: ProfileCardPropertiesRequestBuilderNavigationMetadata,
    },
    pronouns: {
        uriTemplate: PronounsRequestBuilderUriTemplate,
        requestsMetadata: PronounsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PeopleRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPeopleAdminSettingsFromDiscriminatorValue,
        queryParametersMapper: PeopleRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const PeopleRequestBuilderUriTemplate = "{+baseurl}/admin/people{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
