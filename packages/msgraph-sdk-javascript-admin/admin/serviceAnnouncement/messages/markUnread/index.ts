/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a markUnreadPostRequestBody
 */
export function createMarkUnreadPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoMarkUnreadPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a markUnreadPostResponse
 */
export function createMarkUnreadPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoMarkUnreadPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoMarkUnreadPostRequestBody(markUnreadPostRequestBody: MarkUnreadPostRequestBody | undefined = {} as MarkUnreadPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "messageIds": n => { markUnreadPostRequestBody.messageIds = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoMarkUnreadPostResponse(markUnreadPostResponse: MarkUnreadPostResponse | undefined = {} as MarkUnreadPostResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { markUnreadPostResponse.value = n.getBooleanValue(); },
    }
}
export interface MarkUnreadPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The messageIds property
     */
    messageIds?: string[];
}
export interface MarkUnreadPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: boolean;
}
/**
 * Provides operations to call the markUnread method.
 */
export interface MarkUnreadRequestBuilder extends BaseRequestBuilder<MarkUnreadRequestBuilder> {
    /**
     * Mark a list of serviceUpdateMessages as unread for the signed in user.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of MarkUnreadPostResponse
     * @see {@link https://learn.microsoft.com/graph/api/serviceupdatemessage-markunread?view=graph-rest-1.0|Find more info here}
     */
     post(body: MarkUnreadPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<MarkUnreadPostResponse | undefined>;
    /**
     * Mark a list of serviceUpdateMessages as unread for the signed in user.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: MarkUnreadPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeMarkUnreadPostRequestBody(writer: SerializationWriter, markUnreadPostRequestBody: MarkUnreadPostRequestBody | undefined = {} as MarkUnreadPostRequestBody) : void {
    writer.writeCollectionOfPrimitiveValues<string>("messageIds", markUnreadPostRequestBody.messageIds);
    writer.writeAdditionalData(markUnreadPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeMarkUnreadPostResponse(writer: SerializationWriter, markUnreadPostResponse: MarkUnreadPostResponse | undefined = {} as MarkUnreadPostResponse) : void {
    writer.writeBooleanValue("value", markUnreadPostResponse.value);
    writer.writeAdditionalData(markUnreadPostResponse.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const MarkUnreadRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createMarkUnreadPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeMarkUnreadPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const MarkUnreadRequestBuilderUriTemplate = "{+baseurl}/admin/serviceAnnouncement/messages/markUnread";
/* tslint:enable */
/* eslint-enable */
