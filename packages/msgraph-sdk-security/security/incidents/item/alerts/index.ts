/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { createAlertCollectionResponseFromDiscriminatorValue, type AlertCollectionResponse } from '@microsoft/msgraph-sdk/models/security/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { AlertItemRequestBuilderNavigationMetadata, AlertItemRequestBuilderRequestsMetadata, type AlertItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the alerts property of the microsoft.graph.security.incident entity.
 */
export interface AlertsRequestBuilder extends BaseRequestBuilder<AlertsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the alerts property of the microsoft.graph.security.incident entity.
     * @param alertId The unique identifier of alert
     * @returns {AlertItemRequestBuilder}
     */
     byAlertId(alertId: string) : AlertItemRequestBuilder;
    /**
     * The list of related alerts. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AlertCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AlertsRequestBuilderGetQueryParameters> | undefined) : Promise<AlertCollectionResponse | undefined>;
    /**
     * The list of related alerts. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AlertsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The list of related alerts. Supports $expand.
 */
export interface AlertsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AlertsRequestBuilderUriTemplate = "{+baseurl}/security/incidents/{incident%2Did}/alerts{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AlertsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AlertsRequestBuilderNavigationMetadata: Record<Exclude<keyof AlertsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byAlertId: {
        requestsMetadata: AlertItemRequestBuilderRequestsMetadata,
        navigationMetadata: AlertItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["alert%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AlertsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AlertsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAlertCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AlertsRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security.incident entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security.incident entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    ActorDisplayName: "actorDisplayName",
    ActorDisplayNameDesc: "actorDisplayName desc",
    AdditionalData: "additionalData",
    AdditionalDataDesc: "additionalData desc",
    AlertPolicyId: "alertPolicyId",
    AlertPolicyIdDesc: "alertPolicyId desc",
    AlertWebUrl: "alertWebUrl",
    AlertWebUrlDesc: "alertWebUrl desc",
    AssignedTo: "assignedTo",
    AssignedToDesc: "assignedTo desc",
    Category: "category",
    CategoryDesc: "category desc",
    Classification: "classification",
    ClassificationDesc: "classification desc",
    Comments: "comments",
    CommentsDesc: "comments desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DetectionSource: "detectionSource",
    DetectionSourceDesc: "detectionSource desc",
    DetectorId: "detectorId",
    DetectorIdDesc: "detectorId desc",
    Determination: "determination",
    DeterminationDesc: "determination desc",
    Evidence: "evidence",
    EvidenceDesc: "evidence desc",
    FirstActivityDateTime: "firstActivityDateTime",
    FirstActivityDateTimeDesc: "firstActivityDateTime desc",
    IncidentId: "incidentId",
    IncidentIdDesc: "incidentId desc",
    IncidentWebUrl: "incidentWebUrl",
    IncidentWebUrlDesc: "incidentWebUrl desc",
    LastActivityDateTime: "lastActivityDateTime",
    LastActivityDateTimeDesc: "lastActivityDateTime desc",
    LastUpdateDateTime: "lastUpdateDateTime",
    LastUpdateDateTimeDesc: "lastUpdateDateTime desc",
    MitreTechniques: "mitreTechniques",
    MitreTechniquesDesc: "mitreTechniques desc",
    ProductName: "productName",
    ProductNameDesc: "productName desc",
    ProviderAlertId: "providerAlertId",
    ProviderAlertIdDesc: "providerAlertId desc",
    RecommendedActions: "recommendedActions",
    RecommendedActionsDesc: "recommendedActions desc",
    ResolvedDateTime: "resolvedDateTime",
    ResolvedDateTimeDesc: "resolvedDateTime desc",
    ServiceSource: "serviceSource",
    ServiceSourceDesc: "serviceSource desc",
    Severity: "severity",
    SeverityDesc: "severity desc",
    Status: "status",
    StatusDesc: "status desc",
    SystemTags: "systemTags",
    SystemTagsDesc: "systemTags desc",
    TenantId: "tenantId",
    TenantIdDesc: "tenantId desc",
    ThreatDisplayName: "threatDisplayName",
    ThreatDisplayNameDesc: "threatDisplayName desc",
    ThreatFamilyName: "threatFamilyName",
    ThreatFamilyNameDesc: "threatFamilyName desc",
    Title: "title",
    TitleDesc: "title desc",
} as const;
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security.incident entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ActorDisplayName: "actorDisplayName",
    AdditionalData: "additionalData",
    AlertPolicyId: "alertPolicyId",
    AlertWebUrl: "alertWebUrl",
    AssignedTo: "assignedTo",
    Category: "category",
    Classification: "classification",
    Comments: "comments",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DetectionSource: "detectionSource",
    DetectorId: "detectorId",
    Determination: "determination",
    Evidence: "evidence",
    FirstActivityDateTime: "firstActivityDateTime",
    IncidentId: "incidentId",
    IncidentWebUrl: "incidentWebUrl",
    LastActivityDateTime: "lastActivityDateTime",
    LastUpdateDateTime: "lastUpdateDateTime",
    MitreTechniques: "mitreTechniques",
    ProductName: "productName",
    ProviderAlertId: "providerAlertId",
    RecommendedActions: "recommendedActions",
    ResolvedDateTime: "resolvedDateTime",
    ServiceSource: "serviceSource",
    Severity: "severity",
    Status: "status",
    SystemTags: "systemTags",
    TenantId: "tenantId",
    ThreatDisplayName: "threatDisplayName",
    ThreatFamilyName: "threatFamilyName",
    Title: "title",
} as const;
/* tslint:enable */
/* eslint-enable */
