/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPayloadCollectionResponseFromDiscriminatorValue, createPayloadFromDiscriminatorValue, serializePayload, type Payload, type PayloadCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { PayloadItemRequestBuilderRequestsMetadata, type PayloadItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the payloads property of the microsoft.graph.attackSimulationRoot entity.
 */
export interface PayloadsRequestBuilder extends BaseRequestBuilder<PayloadsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the payloads property of the microsoft.graph.attackSimulationRoot entity.
     * @param payloadId The unique identifier of payload
     * @returns {PayloadItemRequestBuilder}
     */
     byPayloadId(payloadId: string) : PayloadItemRequestBuilder;
    /**
     * Get a list of payloads for attack simulation campaigns. This operation expects the mandatory parameter source to filter and query the respective data source.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PayloadCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/attacksimulationroot-list-payloads?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<PayloadsRequestBuilderGetQueryParameters> | undefined) : Promise<PayloadCollectionResponse | undefined>;
    /**
     * Create new navigation property to payloads for security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Payload>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: Payload, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Payload | undefined>;
    /**
     * Get a list of payloads for attack simulation campaigns. This operation expects the mandatory parameter source to filter and query the respective data source.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PayloadsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to payloads for security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Payload, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of payloads for attack simulation campaigns. This operation expects the mandatory parameter source to filter and query the respective data source.
 */
export interface PayloadsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const PayloadsRequestBuilderUriTemplate = "{+baseurl}/security/attackSimulation/payloads{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the payloads property of the microsoft.graph.attackSimulationRoot entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the payloads property of the microsoft.graph.attackSimulationRoot entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    Brand: "brand",
    BrandDesc: "brand desc",
    Complexity: "complexity",
    ComplexityDesc: "complexity desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Description: "description",
    DescriptionDesc: "description desc",
    Detail: "detail",
    DetailDesc: "detail desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    Industry: "industry",
    IndustryDesc: "industry desc",
    IsAutomated: "isAutomated",
    IsAutomatedDesc: "isAutomated desc",
    IsControversial: "isControversial",
    IsControversialDesc: "isControversial desc",
    IsCurrentEvent: "isCurrentEvent",
    IsCurrentEventDesc: "isCurrentEvent desc",
    Language: "language",
    LanguageDesc: "language desc",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedByDesc: "lastModifiedBy desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    PayloadTags: "payloadTags",
    PayloadTagsDesc: "payloadTags desc",
    Platform: "platform",
    PlatformDesc: "platform desc",
    PredictedCompromiseRate: "predictedCompromiseRate",
    PredictedCompromiseRateDesc: "predictedCompromiseRate desc",
    SimulationAttackType: "simulationAttackType",
    SimulationAttackTypeDesc: "simulationAttackType desc",
    Source: "source",
    SourceDesc: "source desc",
    Status: "status",
    StatusDesc: "status desc",
    Technique: "technique",
    TechniqueDesc: "technique desc",
    Theme: "theme",
    ThemeDesc: "theme desc",
} as const;
/**
 * Provides operations to manage the payloads property of the microsoft.graph.attackSimulationRoot entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Brand: "brand",
    Complexity: "complexity",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    Detail: "detail",
    DisplayName: "displayName",
    Industry: "industry",
    IsAutomated: "isAutomated",
    IsControversial: "isControversial",
    IsCurrentEvent: "isCurrentEvent",
    Language: "language",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    PayloadTags: "payloadTags",
    Platform: "platform",
    PredictedCompromiseRate: "predictedCompromiseRate",
    SimulationAttackType: "simulationAttackType",
    Source: "source",
    Status: "status",
    Technique: "technique",
    Theme: "theme",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PayloadsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PayloadsRequestBuilderNavigationMetadata: Record<Exclude<keyof PayloadsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byPayloadId: {
        requestsMetadata: PayloadItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["payload%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PayloadsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PayloadsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPayloadCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: PayloadsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: PayloadsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPayloadFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePayload,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
