/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAttackSimulationRootFromDiscriminatorValue, serializeAttackSimulationRoot, type AttackSimulationRoot } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { EndUserNotificationsRequestBuilderNavigationMetadata, EndUserNotificationsRequestBuilderRequestsMetadata, type EndUserNotificationsRequestBuilder } from './endUserNotifications/';
// @ts-ignore
import { LandingPagesRequestBuilderNavigationMetadata, LandingPagesRequestBuilderRequestsMetadata, type LandingPagesRequestBuilder } from './landingPages/';
// @ts-ignore
import { LoginPagesRequestBuilderNavigationMetadata, LoginPagesRequestBuilderRequestsMetadata, type LoginPagesRequestBuilder } from './loginPages/';
// @ts-ignore
import { OperationsRequestBuilderNavigationMetadata, OperationsRequestBuilderRequestsMetadata, type OperationsRequestBuilder } from './operations/';
// @ts-ignore
import { PayloadsRequestBuilderNavigationMetadata, PayloadsRequestBuilderRequestsMetadata, type PayloadsRequestBuilder } from './payloads/';
// @ts-ignore
import { SimulationAutomationsRequestBuilderNavigationMetadata, SimulationAutomationsRequestBuilderRequestsMetadata, type SimulationAutomationsRequestBuilder } from './simulationAutomations/';
// @ts-ignore
import { SimulationsRequestBuilderNavigationMetadata, SimulationsRequestBuilderRequestsMetadata, type SimulationsRequestBuilder } from './simulations/';
// @ts-ignore
import { TrainingsRequestBuilderNavigationMetadata, TrainingsRequestBuilderRequestsMetadata, type TrainingsRequestBuilder } from './trainings/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the attackSimulation property of the microsoft.graph.security entity.
 */
export interface AttackSimulationRequestBuilder extends BaseRequestBuilder<AttackSimulationRequestBuilder> {
    /**
     * Provides operations to manage the endUserNotifications property of the microsoft.graph.attackSimulationRoot entity.
     */
    get endUserNotifications(): EndUserNotificationsRequestBuilder;
    /**
     * Provides operations to manage the landingPages property of the microsoft.graph.attackSimulationRoot entity.
     */
    get landingPages(): LandingPagesRequestBuilder;
    /**
     * Provides operations to manage the loginPages property of the microsoft.graph.attackSimulationRoot entity.
     */
    get loginPages(): LoginPagesRequestBuilder;
    /**
     * Provides operations to manage the operations property of the microsoft.graph.attackSimulationRoot entity.
     */
    get operations(): OperationsRequestBuilder;
    /**
     * Provides operations to manage the payloads property of the microsoft.graph.attackSimulationRoot entity.
     */
    get payloads(): PayloadsRequestBuilder;
    /**
     * Provides operations to manage the simulationAutomations property of the microsoft.graph.attackSimulationRoot entity.
     */
    get simulationAutomations(): SimulationAutomationsRequestBuilder;
    /**
     * Provides operations to manage the simulations property of the microsoft.graph.attackSimulationRoot entity.
     */
    get simulations(): SimulationsRequestBuilder;
    /**
     * Provides operations to manage the trainings property of the microsoft.graph.attackSimulationRoot entity.
     */
    get trainings(): TrainingsRequestBuilder;
    /**
     * Delete navigation property attackSimulation for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get attackSimulation from security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AttackSimulationRoot>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<AttackSimulationRequestBuilderGetQueryParameters> | undefined) : Promise<AttackSimulationRoot | undefined>;
    /**
     * Update the navigation property attackSimulation in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AttackSimulationRoot>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: AttackSimulationRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AttackSimulationRoot | undefined>;
    /**
     * Delete navigation property attackSimulation for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get attackSimulation from security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AttackSimulationRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property attackSimulation in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: AttackSimulationRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get attackSimulation from security
 */
export interface AttackSimulationRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const AttackSimulationRequestBuilderUriTemplate = "{+baseurl}/security/attackSimulation{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AttackSimulationRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AttackSimulationRequestBuilderNavigationMetadata: Record<Exclude<keyof AttackSimulationRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    endUserNotifications: {
        requestsMetadata: EndUserNotificationsRequestBuilderRequestsMetadata,
        navigationMetadata: EndUserNotificationsRequestBuilderNavigationMetadata,
    },
    landingPages: {
        requestsMetadata: LandingPagesRequestBuilderRequestsMetadata,
        navigationMetadata: LandingPagesRequestBuilderNavigationMetadata,
    },
    loginPages: {
        requestsMetadata: LoginPagesRequestBuilderRequestsMetadata,
        navigationMetadata: LoginPagesRequestBuilderNavigationMetadata,
    },
    operations: {
        requestsMetadata: OperationsRequestBuilderRequestsMetadata,
        navigationMetadata: OperationsRequestBuilderNavigationMetadata,
    },
    payloads: {
        requestsMetadata: PayloadsRequestBuilderRequestsMetadata,
        navigationMetadata: PayloadsRequestBuilderNavigationMetadata,
    },
    simulationAutomations: {
        requestsMetadata: SimulationAutomationsRequestBuilderRequestsMetadata,
        navigationMetadata: SimulationAutomationsRequestBuilderNavigationMetadata,
    },
    simulations: {
        requestsMetadata: SimulationsRequestBuilderRequestsMetadata,
        navigationMetadata: SimulationsRequestBuilderNavigationMetadata,
    },
    trainings: {
        requestsMetadata: TrainingsRequestBuilderRequestsMetadata,
        navigationMetadata: TrainingsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AttackSimulationRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: AttackSimulationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: AttackSimulationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAttackSimulationRootFromDiscriminatorValue,
        queryParametersMapper: AttackSimulationRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: AttackSimulationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAttackSimulationRootFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAttackSimulationRoot,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
