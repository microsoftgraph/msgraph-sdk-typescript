/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { createHostTrackerCollectionResponseFromDiscriminatorValue, type HostTrackerCollectionResponse } from '@microsoft/msgraph-sdk/models/security/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { HostTrackerItemRequestBuilderRequestsMetadata, type HostTrackerItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the trackers property of the microsoft.graph.security.host entity.
 */
export interface TrackersRequestBuilder extends BaseRequestBuilder<TrackersRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the trackers property of the microsoft.graph.security.host entity.
     * @param hostTrackerId The unique identifier of hostTracker
     * @returns {HostTrackerItemRequestBuilder}
     */
     byHostTrackerId(hostTrackerId: string) : HostTrackerItemRequestBuilder;
    /**
     * Get a list of hostTracker resources.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HostTrackerCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/security-host-list-trackers?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<TrackersRequestBuilderGetQueryParameters> | undefined) : Promise<HostTrackerCollectionResponse | undefined>;
    /**
     * Get a list of hostTracker resources.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TrackersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get a list of hostTracker resources.
 */
export interface TrackersRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const TrackersRequestBuilderUriTemplate = "{+baseurl}/security/threatIntelligence/hosts/{host%2Did}/trackers{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the trackers property of the microsoft.graph.security.host entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Host: "host",
} as const;
/**
 * Provides operations to manage the trackers property of the microsoft.graph.security.host entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    FirstSeenDateTime: "firstSeenDateTime",
    FirstSeenDateTimeDesc: "firstSeenDateTime desc",
    Kind: "kind",
    KindDesc: "kind desc",
    LastSeenDateTime: "lastSeenDateTime",
    LastSeenDateTimeDesc: "lastSeenDateTime desc",
    Value: "value",
    ValueDesc: "value desc",
} as const;
/**
 * Provides operations to manage the trackers property of the microsoft.graph.security.host entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    FirstSeenDateTime: "firstSeenDateTime",
    Kind: "kind",
    LastSeenDateTime: "lastSeenDateTime",
    Value: "value",
    Host: "host",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TrackersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TrackersRequestBuilderNavigationMetadata: Record<Exclude<keyof TrackersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byHostTrackerId: {
        requestsMetadata: HostTrackerItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["hostTracker%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TrackersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: TrackersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHostTrackerCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: TrackersRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
