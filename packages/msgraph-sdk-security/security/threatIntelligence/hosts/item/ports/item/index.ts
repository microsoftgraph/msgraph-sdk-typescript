/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { createHostPortFromDiscriminatorValue, type HostPort } from '@microsoft/msgraph-sdk/models/security/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
 */
export interface HostPortItemRequestBuilder extends BaseRequestBuilder<HostPortItemRequestBuilder> {
    /**
     * The hostPorts associated with a host.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HostPort>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<HostPortItemRequestBuilderGetQueryParameters> | undefined) : Promise<HostPort | undefined>;
    /**
     * The hostPorts associated with a host.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<HostPortItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The hostPorts associated with a host.
 */
export interface HostPortItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const HostPortItemRequestBuilderUriTemplate = "{+baseurl}/security/threatIntelligence/hosts/{host%2Did}/ports/{hostPort%2Did}{?%24expand,%24select}";
/**
 * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Host: "host",
    MostRecentSslCertificate: "mostRecentSslCertificate",
} as const;
/**
 * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Banners: "banners",
    FirstSeenDateTime: "firstSeenDateTime",
    LastScanDateTime: "lastScanDateTime",
    LastSeenDateTime: "lastSeenDateTime",
    Port: "port",
    Protocol: "protocol",
    Services: "services",
    Status: "status",
    TimesObserved: "timesObserved",
    Host: "host",
    MostRecentSslCertificate: "mostRecentSslCertificate",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const HostPortItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const HostPortItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: HostPortItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHostPortFromDiscriminatorValue,
        queryParametersMapper: HostPortItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
