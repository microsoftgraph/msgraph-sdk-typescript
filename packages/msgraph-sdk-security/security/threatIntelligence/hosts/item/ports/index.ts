/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { createHostPortCollectionResponseFromDiscriminatorValue, type HostPortCollectionResponse } from '@microsoft/msgraph-sdk/models/security/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { HostPortItemRequestBuilderRequestsMetadata, type HostPortItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
 */
export interface PortsRequestBuilder extends BaseRequestBuilder<PortsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
     * @param hostPortId The unique identifier of hostPort
     * @returns {HostPortItemRequestBuilder}
     */
     byHostPortId(hostPortId: string) : HostPortItemRequestBuilder;
    /**
     * Get the list of hostPort resources associated with a host.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<HostPortCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/security-host-list-ports?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<PortsRequestBuilderGetQueryParameters> | undefined) : Promise<HostPortCollectionResponse | undefined>;
    /**
     * Get the list of hostPort resources associated with a host.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PortsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get the list of hostPort resources associated with a host.
 */
export interface PortsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const PortsRequestBuilderUriTemplate = "{+baseurl}/security/threatIntelligence/hosts/{host%2Did}/ports{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Host: "host",
    MostRecentSslCertificate: "mostRecentSslCertificate",
} as const;
/**
 * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    Banners: "banners",
    BannersDesc: "banners desc",
    FirstSeenDateTime: "firstSeenDateTime",
    FirstSeenDateTimeDesc: "firstSeenDateTime desc",
    LastScanDateTime: "lastScanDateTime",
    LastScanDateTimeDesc: "lastScanDateTime desc",
    LastSeenDateTime: "lastSeenDateTime",
    LastSeenDateTimeDesc: "lastSeenDateTime desc",
    Port: "port",
    PortDesc: "port desc",
    Protocol: "protocol",
    ProtocolDesc: "protocol desc",
    Services: "services",
    ServicesDesc: "services desc",
    Status: "status",
    StatusDesc: "status desc",
    TimesObserved: "timesObserved",
    TimesObservedDesc: "timesObserved desc",
} as const;
/**
 * Provides operations to manage the ports property of the microsoft.graph.security.host entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Banners: "banners",
    FirstSeenDateTime: "firstSeenDateTime",
    LastScanDateTime: "lastScanDateTime",
    LastSeenDateTime: "lastSeenDateTime",
    Port: "port",
    Protocol: "protocol",
    Services: "services",
    Status: "status",
    TimesObserved: "timesObserved",
    Host: "host",
    MostRecentSslCertificate: "mostRecentSslCertificate",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PortsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PortsRequestBuilderNavigationMetadata: Record<Exclude<keyof PortsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byHostPortId: {
        requestsMetadata: HostPortItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["hostPort%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PortsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PortsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createHostPortCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: PortsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
