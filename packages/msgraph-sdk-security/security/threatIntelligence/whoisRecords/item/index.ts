/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { createWhoisRecordFromDiscriminatorValue, serializeWhoisRecord, type WhoisRecord } from '@microsoft/msgraph-sdk/models/security/';
// @ts-ignore
import { HistoryRequestBuilderNavigationMetadata, HistoryRequestBuilderRequestsMetadata, type HistoryRequestBuilder } from './history/';
// @ts-ignore
import { HostRequestBuilderRequestsMetadata, type HostRequestBuilder } from './host/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the whoisRecords property of the microsoft.graph.security.threatIntelligence entity.
 */
export interface WhoisRecordItemRequestBuilder extends BaseRequestBuilder<WhoisRecordItemRequestBuilder> {
    /**
     * Provides operations to manage the history property of the microsoft.graph.security.whoisRecord entity.
     */
    get history(): HistoryRequestBuilder;
    /**
     * Provides operations to manage the host property of the microsoft.graph.security.whoisBaseRecord entity.
     */
    get host(): HostRequestBuilder;
    /**
     * Delete navigation property whoisRecords for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get the specified whoisRecord resource.  Specify the desired whoisRecord in one of the following two ways:- Identify a host and get its current whoisRecord. - Specify an id value to get the corresponding whoisRecord.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WhoisRecord>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/security-whoisrecord-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<WhoisRecordItemRequestBuilderGetQueryParameters> | undefined) : Promise<WhoisRecord | undefined>;
    /**
     * Update the navigation property whoisRecords in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WhoisRecord>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: WhoisRecord, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WhoisRecord | undefined>;
    /**
     * Delete navigation property whoisRecords for security
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get the specified whoisRecord resource.  Specify the desired whoisRecord in one of the following two ways:- Identify a host and get its current whoisRecord. - Specify an id value to get the corresponding whoisRecord.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WhoisRecordItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property whoisRecords in security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: WhoisRecord, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get the specified whoisRecord resource.  Specify the desired whoisRecord in one of the following two ways:- Identify a host and get its current whoisRecord. - Specify an id value to get the corresponding whoisRecord.
 */
export interface WhoisRecordItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const WhoisRecordItemRequestBuilderUriTemplate = "{+baseurl}/security/threatIntelligence/whoisRecords/{whoisRecord%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const WhoisRecordItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WhoisRecordItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WhoisRecordItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    history: {
        requestsMetadata: HistoryRequestBuilderRequestsMetadata,
        navigationMetadata: HistoryRequestBuilderNavigationMetadata,
    },
    host: {
        requestsMetadata: HostRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WhoisRecordItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WhoisRecordItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WhoisRecordItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWhoisRecordFromDiscriminatorValue,
        queryParametersMapper: WhoisRecordItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: WhoisRecordItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWhoisRecordFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWhoisRecord,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
