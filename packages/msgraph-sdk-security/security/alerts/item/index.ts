/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAlertFromDiscriminatorValue, serializeAlert, type Alert } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the alerts property of the microsoft.graph.security entity.
 */
export interface AlertItemRequestBuilder extends BaseRequestBuilder<AlertItemRequestBuilder> {
    /**
     * Retrieve the properties and relationships of an alert object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Alert>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/alert-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<AlertItemRequestBuilderGetQueryParameters> | undefined) : Promise<Alert | undefined>;
    /**
     * Update an editable alert property within any integrated solution to keep alert status and assignments in sync across solutions. This method updates any solution that has a record of the referenced alert ID.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Alert>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/alert-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: Alert, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Alert | undefined>;
    /**
     * Retrieve the properties and relationships of an alert object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AlertItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update an editable alert property within any integrated solution to keep alert status and assignments in sync across solutions. This method updates any solution that has a record of the referenced alert ID.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: Alert, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of an alert object.
 */
export interface AlertItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AlertItemRequestBuilderUriTemplate = "{+baseurl}/security/alerts/{alert%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AlertItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AlertItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AlertItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAlertFromDiscriminatorValue,
        queryParametersMapper: AlertItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: AlertItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAlertFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAlert,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ActivityGroupName: "activityGroupName",
    AlertDetections: "alertDetections",
    AssignedTo: "assignedTo",
    AzureSubscriptionId: "azureSubscriptionId",
    AzureTenantId: "azureTenantId",
    Category: "category",
    ClosedDateTime: "closedDateTime",
    CloudAppStates: "cloudAppStates",
    Comments: "comments",
    Confidence: "confidence",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DetectionIds: "detectionIds",
    EventDateTime: "eventDateTime",
    Feedback: "feedback",
    FileStates: "fileStates",
    HistoryStates: "historyStates",
    HostStates: "hostStates",
    IncidentIds: "incidentIds",
    InvestigationSecurityStates: "investigationSecurityStates",
    LastEventDateTime: "lastEventDateTime",
    LastModifiedDateTime: "lastModifiedDateTime",
    MalwareStates: "malwareStates",
    MessageSecurityStates: "messageSecurityStates",
    NetworkConnections: "networkConnections",
    Processes: "processes",
    RecommendedActions: "recommendedActions",
    RegistryKeyStates: "registryKeyStates",
    SecurityResources: "securityResources",
    Severity: "severity",
    SourceMaterials: "sourceMaterials",
    Status: "status",
    Tags: "tags",
    Title: "title",
    Triggers: "triggers",
    UriClickSecurityStates: "uriClickSecurityStates",
    UserStates: "userStates",
    VendorInformation: "vendorInformation",
    VulnerabilityStates: "vulnerabilityStates",
} as const;
/* tslint:enable */
/* eslint-enable */
