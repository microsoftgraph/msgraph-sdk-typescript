/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAlertCollectionResponseFromDiscriminatorValue, createAlertFromDiscriminatorValue, serializeAlert, type Alert, type AlertCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { AlertItemRequestBuilderRequestsMetadata, type AlertItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the alerts property of the microsoft.graph.security entity.
 */
export interface AlertsRequestBuilder extends BaseRequestBuilder<AlertsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the alerts property of the microsoft.graph.security entity.
     * @param alertId The unique identifier of alert
     * @returns {AlertItemRequestBuilder}
     */
     byAlertId(alertId: string) : AlertItemRequestBuilder;
    /**
     * Retrieve a list of alert objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AlertCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/alert-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<AlertsRequestBuilderGetQueryParameters> | undefined) : Promise<AlertCollectionResponse | undefined>;
    /**
     * Create new navigation property to alerts for security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Alert>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: Alert, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Alert | undefined>;
    /**
     * Retrieve a list of alert objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AlertsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to alerts for security
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Alert, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a list of alert objects.
 */
export interface AlertsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AlertsRequestBuilderUriTemplate = "{+baseurl}/security/alerts{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AlertsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AlertsRequestBuilderNavigationMetadata: Record<Exclude<keyof AlertsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byAlertId: {
        requestsMetadata: AlertItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["alert%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AlertsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AlertsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAlertCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AlertsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: AlertsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAlertFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAlert,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    ActivityGroupName: "activityGroupName",
    ActivityGroupNameDesc: "activityGroupName desc",
    AlertDetections: "alertDetections",
    AlertDetectionsDesc: "alertDetections desc",
    AssignedTo: "assignedTo",
    AssignedToDesc: "assignedTo desc",
    AzureSubscriptionId: "azureSubscriptionId",
    AzureSubscriptionIdDesc: "azureSubscriptionId desc",
    AzureTenantId: "azureTenantId",
    AzureTenantIdDesc: "azureTenantId desc",
    Category: "category",
    CategoryDesc: "category desc",
    ClosedDateTime: "closedDateTime",
    ClosedDateTimeDesc: "closedDateTime desc",
    CloudAppStates: "cloudAppStates",
    CloudAppStatesDesc: "cloudAppStates desc",
    Comments: "comments",
    CommentsDesc: "comments desc",
    Confidence: "confidence",
    ConfidenceDesc: "confidence desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DetectionIds: "detectionIds",
    DetectionIdsDesc: "detectionIds desc",
    EventDateTime: "eventDateTime",
    EventDateTimeDesc: "eventDateTime desc",
    Feedback: "feedback",
    FeedbackDesc: "feedback desc",
    FileStates: "fileStates",
    FileStatesDesc: "fileStates desc",
    HistoryStates: "historyStates",
    HistoryStatesDesc: "historyStates desc",
    HostStates: "hostStates",
    HostStatesDesc: "hostStates desc",
    IncidentIds: "incidentIds",
    IncidentIdsDesc: "incidentIds desc",
    InvestigationSecurityStates: "investigationSecurityStates",
    InvestigationSecurityStatesDesc: "investigationSecurityStates desc",
    LastEventDateTime: "lastEventDateTime",
    LastEventDateTimeDesc: "lastEventDateTime desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    MalwareStates: "malwareStates",
    MalwareStatesDesc: "malwareStates desc",
    MessageSecurityStates: "messageSecurityStates",
    MessageSecurityStatesDesc: "messageSecurityStates desc",
    NetworkConnections: "networkConnections",
    NetworkConnectionsDesc: "networkConnections desc",
    Processes: "processes",
    ProcessesDesc: "processes desc",
    RecommendedActions: "recommendedActions",
    RecommendedActionsDesc: "recommendedActions desc",
    RegistryKeyStates: "registryKeyStates",
    RegistryKeyStatesDesc: "registryKeyStates desc",
    SecurityResources: "securityResources",
    SecurityResourcesDesc: "securityResources desc",
    Severity: "severity",
    SeverityDesc: "severity desc",
    SourceMaterials: "sourceMaterials",
    SourceMaterialsDesc: "sourceMaterials desc",
    Status: "status",
    StatusDesc: "status desc",
    Tags: "tags",
    TagsDesc: "tags desc",
    Title: "title",
    TitleDesc: "title desc",
    Triggers: "triggers",
    TriggersDesc: "triggers desc",
    UriClickSecurityStates: "uriClickSecurityStates",
    UriClickSecurityStatesDesc: "uriClickSecurityStates desc",
    UserStates: "userStates",
    UserStatesDesc: "userStates desc",
    VendorInformation: "vendorInformation",
    VendorInformationDesc: "vendorInformation desc",
    VulnerabilityStates: "vulnerabilityStates",
    VulnerabilityStatesDesc: "vulnerabilityStates desc",
} as const;
/**
 * Provides operations to manage the alerts property of the microsoft.graph.security entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ActivityGroupName: "activityGroupName",
    AlertDetections: "alertDetections",
    AssignedTo: "assignedTo",
    AzureSubscriptionId: "azureSubscriptionId",
    AzureTenantId: "azureTenantId",
    Category: "category",
    ClosedDateTime: "closedDateTime",
    CloudAppStates: "cloudAppStates",
    Comments: "comments",
    Confidence: "confidence",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    DetectionIds: "detectionIds",
    EventDateTime: "eventDateTime",
    Feedback: "feedback",
    FileStates: "fileStates",
    HistoryStates: "historyStates",
    HostStates: "hostStates",
    IncidentIds: "incidentIds",
    InvestigationSecurityStates: "investigationSecurityStates",
    LastEventDateTime: "lastEventDateTime",
    LastModifiedDateTime: "lastModifiedDateTime",
    MalwareStates: "malwareStates",
    MessageSecurityStates: "messageSecurityStates",
    NetworkConnections: "networkConnections",
    Processes: "processes",
    RecommendedActions: "recommendedActions",
    RegistryKeyStates: "registryKeyStates",
    SecurityResources: "securityResources",
    Severity: "severity",
    SourceMaterials: "sourceMaterials",
    Status: "status",
    Tags: "tags",
    Title: "title",
    Triggers: "triggers",
    UriClickSecurityStates: "uriClickSecurityStates",
    UserStates: "userStates",
    VendorInformation: "vendorInformation",
    VulnerabilityStates: "vulnerabilityStates",
} as const;
/* tslint:enable */
/* eslint-enable */
