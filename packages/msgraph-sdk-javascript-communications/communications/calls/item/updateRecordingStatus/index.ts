/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUpdateRecordingStatusOperationFromDiscriminatorValue, RecordingStatus, RecordingStatusObject, serializeUpdateRecordingStatusOperation, type UpdateRecordingStatusOperation } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a updateRecordingStatusPostRequestBody
 */
export function createUpdateRecordingStatusPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoUpdateRecordingStatusPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUpdateRecordingStatusPostRequestBody(updateRecordingStatusPostRequestBody: UpdateRecordingStatusPostRequestBody | undefined = {} as UpdateRecordingStatusPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "clientContext": n => { updateRecordingStatusPostRequestBody.clientContext = n.getStringValue(); },
        "status": n => { updateRecordingStatusPostRequestBody.status = n.getEnumValue<RecordingStatus>(RecordingStatusObject); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUpdateRecordingStatusPostRequestBody(writer: SerializationWriter, updateRecordingStatusPostRequestBody: UpdateRecordingStatusPostRequestBody | undefined = {} as UpdateRecordingStatusPostRequestBody) : void {
    writer.writeStringValue("clientContext", updateRecordingStatusPostRequestBody.clientContext);
    writer.writeEnumValue<RecordingStatus>("status", updateRecordingStatusPostRequestBody.status);
    writer.writeAdditionalData(updateRecordingStatusPostRequestBody.additionalData);
}
export interface UpdateRecordingStatusPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The clientContext property
     */
    clientContext?: string;
    /**
     * The status property
     */
    status?: RecordingStatus;
}
/**
 * Provides operations to call the updateRecordingStatus method.
 */
export interface UpdateRecordingStatusRequestBuilder extends BaseRequestBuilder<UpdateRecordingStatusRequestBuilder> {
    /**
     * Update the application's recording status associated with a call. This requires the use of the Teams policy-based recording solution.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of UpdateRecordingStatusOperation
     * @see {@link https://learn.microsoft.com/graph/api/call-updaterecordingstatus?view=graph-rest-1.0|Find more info here}
     */
     post(body: UpdateRecordingStatusPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UpdateRecordingStatusOperation | undefined>;
    /**
     * Update the application's recording status associated with a call. This requires the use of the Teams policy-based recording solution.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: UpdateRecordingStatusPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Metadata for all the requests in the request builder.
 */
export const UpdateRecordingStatusRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUpdateRecordingStatusOperationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdateRecordingStatusPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const UpdateRecordingStatusRequestBuilderUriTemplate = "{+baseurl}/communications/calls/{call%2Did}/updateRecordingStatus";
/* tslint:enable */
/* eslint-enable */
