/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDirectoryObjectCollectionResponseFromDiscriminatorValue, type DirectoryObjectCollectionResponse } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
// @ts-ignore
import { GraphApplicationRequestBuilderNavigationMetadata, GraphApplicationRequestBuilderRequestsMetadata, type GraphApplicationRequestBuilder } from './graphApplication/';
// @ts-ignore
import { GraphDeviceRequestBuilderNavigationMetadata, GraphDeviceRequestBuilderRequestsMetadata, type GraphDeviceRequestBuilder } from './graphDevice/';
// @ts-ignore
import { GraphGroupRequestBuilderNavigationMetadata, GraphGroupRequestBuilderRequestsMetadata, type GraphGroupRequestBuilder } from './graphGroup/';
// @ts-ignore
import { GraphOrgContactRequestBuilderNavigationMetadata, GraphOrgContactRequestBuilderRequestsMetadata, type GraphOrgContactRequestBuilder } from './graphOrgContact/';
// @ts-ignore
import { GraphServicePrincipalRequestBuilderNavigationMetadata, GraphServicePrincipalRequestBuilderRequestsMetadata, type GraphServicePrincipalRequestBuilder } from './graphServicePrincipal/';
// @ts-ignore
import { GraphUserRequestBuilderNavigationMetadata, GraphUserRequestBuilderRequestsMetadata, type GraphUserRequestBuilder } from './graphUser/';
// @ts-ignore
import { DirectoryObjectItemRequestBuilderNavigationMetadata, type DirectoryObjectItemRequestBuilder } from './item/';
// @ts-ignore
import { RefRequestBuilderRequestsMetadata, type RefRequestBuilder } from './ref/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the members property of the microsoft.graph.directoryRole entity.
 */
export interface MembersRequestBuilder extends BaseRequestBuilder<MembersRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Casts the previous resource to application.
     */
    get graphApplication(): GraphApplicationRequestBuilder;
    /**
     * Casts the previous resource to device.
     */
    get graphDevice(): GraphDeviceRequestBuilder;
    /**
     * Casts the previous resource to group.
     */
    get graphGroup(): GraphGroupRequestBuilder;
    /**
     * Casts the previous resource to orgContact.
     */
    get graphOrgContact(): GraphOrgContactRequestBuilder;
    /**
     * Casts the previous resource to servicePrincipal.
     */
    get graphServicePrincipal(): GraphServicePrincipalRequestBuilder;
    /**
     * Casts the previous resource to user.
     */
    get graphUser(): GraphUserRequestBuilder;
    /**
     * Provides operations to manage the collection of directoryRole entities.
     */
    get ref(): RefRequestBuilder;
    /**
     * Gets an item from the github.com/microsoftgraph/msgraph-sdk-typescript/.directoryRoles.item.members.item collection
     * @param directoryObjectId The unique identifier of directoryObject
     * @returns {DirectoryObjectItemRequestBuilder}
     */
     byDirectoryObjectId(directoryObjectId: string) : DirectoryObjectItemRequestBuilder;
    /**
     * Users that are members of this directory role. HTTP Methods: GET, POST, DELETE. Read-only. Nullable. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DirectoryObjectCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/directoryrole-list-members?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<MembersRequestBuilderGetQueryParameters> | undefined) : Promise<DirectoryObjectCollectionResponse | undefined>;
    /**
     * Users that are members of this directory role. HTTP Methods: GET, POST, DELETE. Read-only. Nullable. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MembersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Users that are members of this directory role. HTTP Methods: GET, POST, DELETE. Read-only. Nullable. Supports $expand.
 */
export interface MembersRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const MembersRequestBuilderUriTemplate = "{+baseurl}/directoryRoles/{directoryRole%2Did}/members{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MembersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const MembersRequestBuilderNavigationMetadata: Record<Exclude<keyof MembersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byDirectoryObjectId: {
        navigationMetadata: DirectoryObjectItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["directoryObject%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    graphApplication: {
        requestsMetadata: GraphApplicationRequestBuilderRequestsMetadata,
        navigationMetadata: GraphApplicationRequestBuilderNavigationMetadata,
    },
    graphDevice: {
        requestsMetadata: GraphDeviceRequestBuilderRequestsMetadata,
        navigationMetadata: GraphDeviceRequestBuilderNavigationMetadata,
    },
    graphGroup: {
        requestsMetadata: GraphGroupRequestBuilderRequestsMetadata,
        navigationMetadata: GraphGroupRequestBuilderNavigationMetadata,
    },
    graphOrgContact: {
        requestsMetadata: GraphOrgContactRequestBuilderRequestsMetadata,
        navigationMetadata: GraphOrgContactRequestBuilderNavigationMetadata,
    },
    graphServicePrincipal: {
        requestsMetadata: GraphServicePrincipalRequestBuilderRequestsMetadata,
        navigationMetadata: GraphServicePrincipalRequestBuilderNavigationMetadata,
    },
    graphUser: {
        requestsMetadata: GraphUserRequestBuilderRequestsMetadata,
        navigationMetadata: GraphUserRequestBuilderNavigationMetadata,
    },
    ref: {
        requestsMetadata: RefRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MembersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: MembersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDirectoryObjectCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: MembersRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
