/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createServicePrincipalCollectionResponseFromDiscriminatorValue, createServicePrincipalFromDiscriminatorValue, serializeServicePrincipal, type ServicePrincipal, type ServicePrincipalCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { DeltaRequestBuilderRequestsMetadata, type DeltaRequestBuilder } from './delta/';
import { GetAvailableExtensionPropertiesRequestBuilderRequestsMetadata, type GetAvailableExtensionPropertiesRequestBuilder } from './getAvailableExtensionProperties/';
import { GetByIdsRequestBuilderRequestsMetadata, type GetByIdsRequestBuilder } from './getByIds/';
import { ServicePrincipalItemRequestBuilderNavigationMetadata, ServicePrincipalItemRequestBuilderRequestsMetadata, type ServicePrincipalItemRequestBuilder } from './item/';
import { type ValidatePropertiesRequestBuilder, ValidatePropertiesRequestBuilderRequestsMetadata } from './validateProperties/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the collection of servicePrincipal entities.
 */
export interface ServicePrincipalsRequestBuilder extends BaseRequestBuilder<ServicePrincipalsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the delta method.
     */
    get delta(): DeltaRequestBuilder;
    /**
     * Provides operations to call the getAvailableExtensionProperties method.
     */
    get getAvailableExtensionProperties(): GetAvailableExtensionPropertiesRequestBuilder;
    /**
     * Provides operations to call the getByIds method.
     */
    get getByIds(): GetByIdsRequestBuilder;
    /**
     * Provides operations to call the validateProperties method.
     */
    get validateProperties(): ValidatePropertiesRequestBuilder;
    /**
     * Provides operations to manage the collection of servicePrincipal entities.
     * @param servicePrincipalId The unique identifier of servicePrincipal
     * @returns {ServicePrincipalItemRequestBuilder}
     */
     byServicePrincipalId(servicePrincipalId: string) : ServicePrincipalItemRequestBuilder;
    /**
     * Retrieve a list of servicePrincipal objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ServicePrincipalCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/serviceprincipal-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ServicePrincipalsRequestBuilderGetQueryParameters> | undefined) : Promise<ServicePrincipalCollectionResponse | undefined>;
    /**
     * Create a new servicePrincipal object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ServicePrincipal>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/serviceprincipal-post-serviceprincipals?view=graph-rest-1.0|Find more info here}
     */
     post(body: ServicePrincipal, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ServicePrincipal | undefined>;
    /**
     * Retrieve a list of servicePrincipal objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ServicePrincipalsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new servicePrincipal object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ServicePrincipal, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a list of servicePrincipal objects.
 */
export interface ServicePrincipalsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ServicePrincipalsRequestBuilderUriTemplate = "{+baseurl}/servicePrincipals{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the collection of servicePrincipal entities.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AppManagementPolicies: "appManagementPolicies",
    AppRoleAssignedTo: "appRoleAssignedTo",
    AppRoleAssignments: "appRoleAssignments",
    ClaimsMappingPolicies: "claimsMappingPolicies",
    CreatedObjects: "createdObjects",
    DelegatedPermissionClassifications: "delegatedPermissionClassifications",
    Endpoints: "endpoints",
    FederatedIdentityCredentials: "federatedIdentityCredentials",
    HomeRealmDiscoveryPolicies: "homeRealmDiscoveryPolicies",
    MemberOf: "memberOf",
    Oauth2PermissionGrants: "oauth2PermissionGrants",
    OwnedObjects: "ownedObjects",
    Owners: "owners",
    RemoteDesktopSecurityConfiguration: "remoteDesktopSecurityConfiguration",
    Synchronization: "synchronization",
    TokenIssuancePolicies: "tokenIssuancePolicies",
    TokenLifetimePolicies: "tokenLifetimePolicies",
    TransitiveMemberOf: "transitiveMemberOf",
} as const;
/**
 * Provides operations to manage the collection of servicePrincipal entities.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    DeletedDateTime: "deletedDateTime",
    DeletedDateTimeDesc: "deletedDateTime desc",
    AccountEnabled: "accountEnabled",
    AccountEnabledDesc: "accountEnabled desc",
    AddIns: "addIns",
    AddInsDesc: "addIns desc",
    AlternativeNames: "alternativeNames",
    AlternativeNamesDesc: "alternativeNames desc",
    AppDescription: "appDescription",
    AppDescriptionDesc: "appDescription desc",
    AppDisplayName: "appDisplayName",
    AppDisplayNameDesc: "appDisplayName desc",
    AppId: "appId",
    AppIdDesc: "appId desc",
    ApplicationTemplateId: "applicationTemplateId",
    ApplicationTemplateIdDesc: "applicationTemplateId desc",
    AppOwnerOrganizationId: "appOwnerOrganizationId",
    AppOwnerOrganizationIdDesc: "appOwnerOrganizationId desc",
    AppRoleAssignmentRequired: "appRoleAssignmentRequired",
    AppRoleAssignmentRequiredDesc: "appRoleAssignmentRequired desc",
    AppRoles: "appRoles",
    AppRolesDesc: "appRoles desc",
    CustomSecurityAttributes: "customSecurityAttributes",
    CustomSecurityAttributesDesc: "customSecurityAttributes desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DisabledByMicrosoftStatus: "disabledByMicrosoftStatus",
    DisabledByMicrosoftStatusDesc: "disabledByMicrosoftStatus desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    Homepage: "homepage",
    HomepageDesc: "homepage desc",
    Info: "info",
    InfoDesc: "info desc",
    KeyCredentials: "keyCredentials",
    KeyCredentialsDesc: "keyCredentials desc",
    LoginUrl: "loginUrl",
    LoginUrlDesc: "loginUrl desc",
    LogoutUrl: "logoutUrl",
    LogoutUrlDesc: "logoutUrl desc",
    Notes: "notes",
    NotesDesc: "notes desc",
    NotificationEmailAddresses: "notificationEmailAddresses",
    NotificationEmailAddressesDesc: "notificationEmailAddresses desc",
    Oauth2PermissionScopes: "oauth2PermissionScopes",
    Oauth2PermissionScopesDesc: "oauth2PermissionScopes desc",
    PasswordCredentials: "passwordCredentials",
    PasswordCredentialsDesc: "passwordCredentials desc",
    PreferredSingleSignOnMode: "preferredSingleSignOnMode",
    PreferredSingleSignOnModeDesc: "preferredSingleSignOnMode desc",
    PreferredTokenSigningKeyThumbprint: "preferredTokenSigningKeyThumbprint",
    PreferredTokenSigningKeyThumbprintDesc: "preferredTokenSigningKeyThumbprint desc",
    ReplyUrls: "replyUrls",
    ReplyUrlsDesc: "replyUrls desc",
    ResourceSpecificApplicationPermissions: "resourceSpecificApplicationPermissions",
    ResourceSpecificApplicationPermissionsDesc: "resourceSpecificApplicationPermissions desc",
    SamlSingleSignOnSettings: "samlSingleSignOnSettings",
    SamlSingleSignOnSettingsDesc: "samlSingleSignOnSettings desc",
    ServicePrincipalNames: "servicePrincipalNames",
    ServicePrincipalNamesDesc: "servicePrincipalNames desc",
    ServicePrincipalType: "servicePrincipalType",
    ServicePrincipalTypeDesc: "servicePrincipalType desc",
    SignInAudience: "signInAudience",
    SignInAudienceDesc: "signInAudience desc",
    Tags: "tags",
    TagsDesc: "tags desc",
    TokenEncryptionKeyId: "tokenEncryptionKeyId",
    TokenEncryptionKeyIdDesc: "tokenEncryptionKeyId desc",
    VerifiedPublisher: "verifiedPublisher",
    VerifiedPublisherDesc: "verifiedPublisher desc",
} as const;
/**
 * Provides operations to manage the collection of servicePrincipal entities.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    DeletedDateTime: "deletedDateTime",
    AccountEnabled: "accountEnabled",
    AddIns: "addIns",
    AlternativeNames: "alternativeNames",
    AppDescription: "appDescription",
    AppDisplayName: "appDisplayName",
    AppId: "appId",
    ApplicationTemplateId: "applicationTemplateId",
    AppOwnerOrganizationId: "appOwnerOrganizationId",
    AppRoleAssignmentRequired: "appRoleAssignmentRequired",
    AppRoles: "appRoles",
    CustomSecurityAttributes: "customSecurityAttributes",
    Description: "description",
    DisabledByMicrosoftStatus: "disabledByMicrosoftStatus",
    DisplayName: "displayName",
    Homepage: "homepage",
    Info: "info",
    KeyCredentials: "keyCredentials",
    LoginUrl: "loginUrl",
    LogoutUrl: "logoutUrl",
    Notes: "notes",
    NotificationEmailAddresses: "notificationEmailAddresses",
    Oauth2PermissionScopes: "oauth2PermissionScopes",
    PasswordCredentials: "passwordCredentials",
    PreferredSingleSignOnMode: "preferredSingleSignOnMode",
    PreferredTokenSigningKeyThumbprint: "preferredTokenSigningKeyThumbprint",
    ReplyUrls: "replyUrls",
    ResourceSpecificApplicationPermissions: "resourceSpecificApplicationPermissions",
    SamlSingleSignOnSettings: "samlSingleSignOnSettings",
    ServicePrincipalNames: "servicePrincipalNames",
    ServicePrincipalType: "servicePrincipalType",
    SignInAudience: "signInAudience",
    Tags: "tags",
    TokenEncryptionKeyId: "tokenEncryptionKeyId",
    VerifiedPublisher: "verifiedPublisher",
    AppManagementPolicies: "appManagementPolicies",
    AppRoleAssignedTo: "appRoleAssignedTo",
    AppRoleAssignments: "appRoleAssignments",
    ClaimsMappingPolicies: "claimsMappingPolicies",
    CreatedObjects: "createdObjects",
    DelegatedPermissionClassifications: "delegatedPermissionClassifications",
    Endpoints: "endpoints",
    FederatedIdentityCredentials: "federatedIdentityCredentials",
    HomeRealmDiscoveryPolicies: "homeRealmDiscoveryPolicies",
    MemberOf: "memberOf",
    Oauth2PermissionGrants: "oauth2PermissionGrants",
    OwnedObjects: "ownedObjects",
    Owners: "owners",
    RemoteDesktopSecurityConfiguration: "remoteDesktopSecurityConfiguration",
    Synchronization: "synchronization",
    TokenIssuancePolicies: "tokenIssuancePolicies",
    TokenLifetimePolicies: "tokenLifetimePolicies",
    TransitiveMemberOf: "transitiveMemberOf",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ServicePrincipalsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ServicePrincipalsRequestBuilderNavigationMetadata: Record<Exclude<keyof ServicePrincipalsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byServicePrincipalId: {
        requestsMetadata: ServicePrincipalItemRequestBuilderRequestsMetadata,
        navigationMetadata: ServicePrincipalItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["servicePrincipal%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    delta: {
        requestsMetadata: DeltaRequestBuilderRequestsMetadata,
    },
    getAvailableExtensionProperties: {
        requestsMetadata: GetAvailableExtensionPropertiesRequestBuilderRequestsMetadata,
    },
    getByIds: {
        requestsMetadata: GetByIdsRequestBuilderRequestsMetadata,
    },
    validateProperties: {
        requestsMetadata: ValidatePropertiesRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ServicePrincipalsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ServicePrincipalsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createServicePrincipalCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ServicePrincipalsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ServicePrincipalsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createServicePrincipalFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeServicePrincipal,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
