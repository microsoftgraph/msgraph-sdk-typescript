/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createServicePrincipalFromDiscriminatorValue, serializeServicePrincipal, type ServicePrincipal } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { AddKeyRequestBuilderRequestsMetadata, type AddKeyRequestBuilder } from './addKey/index.js';
// @ts-ignore
import { AddPasswordRequestBuilderRequestsMetadata, type AddPasswordRequestBuilder } from './addPassword/index.js';
// @ts-ignore
import { AddTokenSigningCertificateRequestBuilderRequestsMetadata, type AddTokenSigningCertificateRequestBuilder } from './addTokenSigningCertificate/index.js';
// @ts-ignore
import { AppManagementPoliciesRequestBuilderNavigationMetadata, AppManagementPoliciesRequestBuilderRequestsMetadata, type AppManagementPoliciesRequestBuilder } from './appManagementPolicies/index.js';
// @ts-ignore
import { AppRoleAssignedToRequestBuilderNavigationMetadata, AppRoleAssignedToRequestBuilderRequestsMetadata, type AppRoleAssignedToRequestBuilder } from './appRoleAssignedTo/index.js';
// @ts-ignore
import { AppRoleAssignmentsRequestBuilderNavigationMetadata, AppRoleAssignmentsRequestBuilderRequestsMetadata, type AppRoleAssignmentsRequestBuilder } from './appRoleAssignments/index.js';
// @ts-ignore
import { CheckMemberGroupsRequestBuilderRequestsMetadata, type CheckMemberGroupsRequestBuilder } from './checkMemberGroups/index.js';
// @ts-ignore
import { CheckMemberObjectsRequestBuilderRequestsMetadata, type CheckMemberObjectsRequestBuilder } from './checkMemberObjects/index.js';
// @ts-ignore
import { ClaimsMappingPoliciesRequestBuilderNavigationMetadata, ClaimsMappingPoliciesRequestBuilderRequestsMetadata, type ClaimsMappingPoliciesRequestBuilder } from './claimsMappingPolicies/index.js';
// @ts-ignore
import { CreatedObjectsRequestBuilderNavigationMetadata, CreatedObjectsRequestBuilderRequestsMetadata, type CreatedObjectsRequestBuilder } from './createdObjects/index.js';
// @ts-ignore
import { DelegatedPermissionClassificationsRequestBuilderNavigationMetadata, DelegatedPermissionClassificationsRequestBuilderRequestsMetadata, type DelegatedPermissionClassificationsRequestBuilder } from './delegatedPermissionClassifications/index.js';
// @ts-ignore
import { EndpointsRequestBuilderNavigationMetadata, EndpointsRequestBuilderRequestsMetadata, type EndpointsRequestBuilder } from './endpoints/index.js';
// @ts-ignore
import { FederatedIdentityCredentialsRequestBuilderNavigationMetadata, FederatedIdentityCredentialsRequestBuilderRequestsMetadata, type FederatedIdentityCredentialsRequestBuilder } from './federatedIdentityCredentials/index.js';
// @ts-ignore
import { FederatedIdentityCredentialsWithNameRequestBuilderRequestsMetadata, type FederatedIdentityCredentialsWithNameRequestBuilder } from './federatedIdentityCredentialsWithName/index.js';
// @ts-ignore
import { GetMemberGroupsRequestBuilderRequestsMetadata, type GetMemberGroupsRequestBuilder } from './getMemberGroups/index.js';
// @ts-ignore
import { GetMemberObjectsRequestBuilderRequestsMetadata, type GetMemberObjectsRequestBuilder } from './getMemberObjects/index.js';
// @ts-ignore
import { HomeRealmDiscoveryPoliciesRequestBuilderNavigationMetadata, HomeRealmDiscoveryPoliciesRequestBuilderRequestsMetadata, type HomeRealmDiscoveryPoliciesRequestBuilder } from './homeRealmDiscoveryPolicies/index.js';
// @ts-ignore
import { MemberOfRequestBuilderNavigationMetadata, MemberOfRequestBuilderRequestsMetadata, type MemberOfRequestBuilder } from './memberOf/index.js';
// @ts-ignore
import { Oauth2PermissionGrantsRequestBuilderNavigationMetadata, Oauth2PermissionGrantsRequestBuilderRequestsMetadata, type Oauth2PermissionGrantsRequestBuilder } from './oauth2PermissionGrants/index.js';
// @ts-ignore
import { OwnedObjectsRequestBuilderNavigationMetadata, OwnedObjectsRequestBuilderRequestsMetadata, type OwnedObjectsRequestBuilder } from './ownedObjects/index.js';
// @ts-ignore
import { OwnersRequestBuilderNavigationMetadata, OwnersRequestBuilderRequestsMetadata, type OwnersRequestBuilder } from './owners/index.js';
// @ts-ignore
import { RemoteDesktopSecurityConfigurationRequestBuilderNavigationMetadata, RemoteDesktopSecurityConfigurationRequestBuilderRequestsMetadata, type RemoteDesktopSecurityConfigurationRequestBuilder } from './remoteDesktopSecurityConfiguration/index.js';
// @ts-ignore
import { RemoveKeyRequestBuilderRequestsMetadata, type RemoveKeyRequestBuilder } from './removeKey/index.js';
// @ts-ignore
import { RemovePasswordRequestBuilderRequestsMetadata, type RemovePasswordRequestBuilder } from './removePassword/index.js';
// @ts-ignore
import { RestoreRequestBuilderRequestsMetadata, type RestoreRequestBuilder } from './restore/index.js';
// @ts-ignore
import { SynchronizationRequestBuilderNavigationMetadata, SynchronizationRequestBuilderRequestsMetadata, type SynchronizationRequestBuilder } from './synchronization/index.js';
// @ts-ignore
import { TokenIssuancePoliciesRequestBuilderNavigationMetadata, TokenIssuancePoliciesRequestBuilderRequestsMetadata, type TokenIssuancePoliciesRequestBuilder } from './tokenIssuancePolicies/index.js';
// @ts-ignore
import { TokenLifetimePoliciesRequestBuilderNavigationMetadata, TokenLifetimePoliciesRequestBuilderRequestsMetadata, type TokenLifetimePoliciesRequestBuilder } from './tokenLifetimePolicies/index.js';
// @ts-ignore
import { TransitiveMemberOfRequestBuilderNavigationMetadata, TransitiveMemberOfRequestBuilderRequestsMetadata, type TransitiveMemberOfRequestBuilder } from './transitiveMemberOf/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of servicePrincipal entities.
 */
export interface ServicePrincipalItemRequestBuilder extends BaseRequestBuilder<ServicePrincipalItemRequestBuilder> {
    /**
     * Provides operations to call the addKey method.
     */
    get addKey(): AddKeyRequestBuilder;
    /**
     * Provides operations to call the addPassword method.
     */
    get addPassword(): AddPasswordRequestBuilder;
    /**
     * Provides operations to call the addTokenSigningCertificate method.
     */
    get addTokenSigningCertificate(): AddTokenSigningCertificateRequestBuilder;
    /**
     * Provides operations to manage the appManagementPolicies property of the microsoft.graph.servicePrincipal entity.
     */
    get appManagementPolicies(): AppManagementPoliciesRequestBuilder;
    /**
     * Provides operations to manage the appRoleAssignedTo property of the microsoft.graph.servicePrincipal entity.
     */
    get appRoleAssignedTo(): AppRoleAssignedToRequestBuilder;
    /**
     * Provides operations to manage the appRoleAssignments property of the microsoft.graph.servicePrincipal entity.
     */
    get appRoleAssignments(): AppRoleAssignmentsRequestBuilder;
    /**
     * Provides operations to call the checkMemberGroups method.
     */
    get checkMemberGroups(): CheckMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the checkMemberObjects method.
     */
    get checkMemberObjects(): CheckMemberObjectsRequestBuilder;
    /**
     * Provides operations to manage the claimsMappingPolicies property of the microsoft.graph.servicePrincipal entity.
     */
    get claimsMappingPolicies(): ClaimsMappingPoliciesRequestBuilder;
    /**
     * Provides operations to manage the createdObjects property of the microsoft.graph.servicePrincipal entity.
     */
    get createdObjects(): CreatedObjectsRequestBuilder;
    /**
     * Provides operations to manage the delegatedPermissionClassifications property of the microsoft.graph.servicePrincipal entity.
     */
    get delegatedPermissionClassifications(): DelegatedPermissionClassificationsRequestBuilder;
    /**
     * Provides operations to manage the endpoints property of the microsoft.graph.servicePrincipal entity.
     */
    get endpoints(): EndpointsRequestBuilder;
    /**
     * Provides operations to manage the federatedIdentityCredentials property of the microsoft.graph.servicePrincipal entity.
     */
    get federatedIdentityCredentials(): FederatedIdentityCredentialsRequestBuilder;
    /**
     * Provides operations to call the getMemberGroups method.
     */
    get getMemberGroups(): GetMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the getMemberObjects method.
     */
    get getMemberObjects(): GetMemberObjectsRequestBuilder;
    /**
     * Provides operations to manage the homeRealmDiscoveryPolicies property of the microsoft.graph.servicePrincipal entity.
     */
    get homeRealmDiscoveryPolicies(): HomeRealmDiscoveryPoliciesRequestBuilder;
    /**
     * Provides operations to manage the memberOf property of the microsoft.graph.servicePrincipal entity.
     */
    get memberOf(): MemberOfRequestBuilder;
    /**
     * Provides operations to manage the oauth2PermissionGrants property of the microsoft.graph.servicePrincipal entity.
     */
    get oauth2PermissionGrants(): Oauth2PermissionGrantsRequestBuilder;
    /**
     * Provides operations to manage the ownedObjects property of the microsoft.graph.servicePrincipal entity.
     */
    get ownedObjects(): OwnedObjectsRequestBuilder;
    /**
     * Provides operations to manage the owners property of the microsoft.graph.servicePrincipal entity.
     */
    get owners(): OwnersRequestBuilder;
    /**
     * Provides operations to manage the remoteDesktopSecurityConfiguration property of the microsoft.graph.servicePrincipal entity.
     */
    get remoteDesktopSecurityConfiguration(): RemoteDesktopSecurityConfigurationRequestBuilder;
    /**
     * Provides operations to call the removeKey method.
     */
    get removeKey(): RemoveKeyRequestBuilder;
    /**
     * Provides operations to call the removePassword method.
     */
    get removePassword(): RemovePasswordRequestBuilder;
    /**
     * Provides operations to call the restore method.
     */
    get restore(): RestoreRequestBuilder;
    /**
     * Provides operations to manage the synchronization property of the microsoft.graph.servicePrincipal entity.
     */
    get synchronization(): SynchronizationRequestBuilder;
    /**
     * Provides operations to manage the tokenIssuancePolicies property of the microsoft.graph.servicePrincipal entity.
     */
    get tokenIssuancePolicies(): TokenIssuancePoliciesRequestBuilder;
    /**
     * Provides operations to manage the tokenLifetimePolicies property of the microsoft.graph.servicePrincipal entity.
     */
    get tokenLifetimePolicies(): TokenLifetimePoliciesRequestBuilder;
    /**
     * Provides operations to manage the transitiveMemberOf property of the microsoft.graph.servicePrincipal entity.
     */
    get transitiveMemberOf(): TransitiveMemberOfRequestBuilder;
    /**
     * Delete a servicePrincipal object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/serviceprincipal-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Provides operations to manage the federatedIdentityCredentials property of the microsoft.graph.servicePrincipal entity.
     * @param name Alternate key of federatedIdentityCredential
     * @returns {FederatedIdentityCredentialsWithNameRequestBuilder}
     */
     federatedIdentityCredentialsWithName(name: string | undefined) : FederatedIdentityCredentialsWithNameRequestBuilder;
    /**
     * Retrieve the properties and relationships of a servicePrincipal object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ServicePrincipal>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/serviceprincipal-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ServicePrincipalItemRequestBuilderGetQueryParameters> | undefined) : Promise<ServicePrincipal | undefined>;
    /**
     * Create a new servicePrincipal object if it doesn't exist, or update the properties of an existing servicePrincipal object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ServicePrincipal>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/serviceprincipal-upsert?view=graph-rest-1.0|Find more info here}
     */
     patch(body: ServicePrincipal, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ServicePrincipal | undefined>;
    /**
     * Delete a servicePrincipal object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of a servicePrincipal object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ServicePrincipalItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new servicePrincipal object if it doesn't exist, or update the properties of an existing servicePrincipal object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ServicePrincipal, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of a servicePrincipal object.
 */
export interface ServicePrincipalItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ServicePrincipalItemRequestBuilderUriTemplate = "{+baseurl}/servicePrincipals/{servicePrincipal%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ServicePrincipalItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ServicePrincipalItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ServicePrincipalItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    federatedIdentityCredentialsWithName: {
        requestsMetadata: FederatedIdentityCredentialsWithNameRequestBuilderRequestsMetadata,
        pathParametersMappings: ["name"],
    },
    addKey: {
        requestsMetadata: AddKeyRequestBuilderRequestsMetadata,
    },
    addPassword: {
        requestsMetadata: AddPasswordRequestBuilderRequestsMetadata,
    },
    addTokenSigningCertificate: {
        requestsMetadata: AddTokenSigningCertificateRequestBuilderRequestsMetadata,
    },
    appManagementPolicies: {
        requestsMetadata: AppManagementPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: AppManagementPoliciesRequestBuilderNavigationMetadata,
    },
    appRoleAssignedTo: {
        requestsMetadata: AppRoleAssignedToRequestBuilderRequestsMetadata,
        navigationMetadata: AppRoleAssignedToRequestBuilderNavigationMetadata,
    },
    appRoleAssignments: {
        requestsMetadata: AppRoleAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AppRoleAssignmentsRequestBuilderNavigationMetadata,
    },
    checkMemberGroups: {
        requestsMetadata: CheckMemberGroupsRequestBuilderRequestsMetadata,
    },
    checkMemberObjects: {
        requestsMetadata: CheckMemberObjectsRequestBuilderRequestsMetadata,
    },
    claimsMappingPolicies: {
        requestsMetadata: ClaimsMappingPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: ClaimsMappingPoliciesRequestBuilderNavigationMetadata,
    },
    createdObjects: {
        requestsMetadata: CreatedObjectsRequestBuilderRequestsMetadata,
        navigationMetadata: CreatedObjectsRequestBuilderNavigationMetadata,
    },
    delegatedPermissionClassifications: {
        requestsMetadata: DelegatedPermissionClassificationsRequestBuilderRequestsMetadata,
        navigationMetadata: DelegatedPermissionClassificationsRequestBuilderNavigationMetadata,
    },
    endpoints: {
        requestsMetadata: EndpointsRequestBuilderRequestsMetadata,
        navigationMetadata: EndpointsRequestBuilderNavigationMetadata,
    },
    federatedIdentityCredentials: {
        requestsMetadata: FederatedIdentityCredentialsRequestBuilderRequestsMetadata,
        navigationMetadata: FederatedIdentityCredentialsRequestBuilderNavigationMetadata,
    },
    getMemberGroups: {
        requestsMetadata: GetMemberGroupsRequestBuilderRequestsMetadata,
    },
    getMemberObjects: {
        requestsMetadata: GetMemberObjectsRequestBuilderRequestsMetadata,
    },
    homeRealmDiscoveryPolicies: {
        requestsMetadata: HomeRealmDiscoveryPoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: HomeRealmDiscoveryPoliciesRequestBuilderNavigationMetadata,
    },
    memberOf: {
        requestsMetadata: MemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: MemberOfRequestBuilderNavigationMetadata,
    },
    oauth2PermissionGrants: {
        requestsMetadata: Oauth2PermissionGrantsRequestBuilderRequestsMetadata,
        navigationMetadata: Oauth2PermissionGrantsRequestBuilderNavigationMetadata,
    },
    ownedObjects: {
        requestsMetadata: OwnedObjectsRequestBuilderRequestsMetadata,
        navigationMetadata: OwnedObjectsRequestBuilderNavigationMetadata,
    },
    owners: {
        requestsMetadata: OwnersRequestBuilderRequestsMetadata,
        navigationMetadata: OwnersRequestBuilderNavigationMetadata,
    },
    remoteDesktopSecurityConfiguration: {
        requestsMetadata: RemoteDesktopSecurityConfigurationRequestBuilderRequestsMetadata,
        navigationMetadata: RemoteDesktopSecurityConfigurationRequestBuilderNavigationMetadata,
    },
    removeKey: {
        requestsMetadata: RemoveKeyRequestBuilderRequestsMetadata,
    },
    removePassword: {
        requestsMetadata: RemovePasswordRequestBuilderRequestsMetadata,
    },
    restore: {
        requestsMetadata: RestoreRequestBuilderRequestsMetadata,
    },
    synchronization: {
        requestsMetadata: SynchronizationRequestBuilderRequestsMetadata,
        navigationMetadata: SynchronizationRequestBuilderNavigationMetadata,
    },
    tokenIssuancePolicies: {
        requestsMetadata: TokenIssuancePoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: TokenIssuancePoliciesRequestBuilderNavigationMetadata,
    },
    tokenLifetimePolicies: {
        requestsMetadata: TokenLifetimePoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: TokenLifetimePoliciesRequestBuilderNavigationMetadata,
    },
    transitiveMemberOf: {
        requestsMetadata: TransitiveMemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: TransitiveMemberOfRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ServicePrincipalItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ServicePrincipalItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ServicePrincipalItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createServicePrincipalFromDiscriminatorValue,
        queryParametersMapper: ServicePrincipalItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ServicePrincipalItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createServicePrincipalFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeServicePrincipal,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
