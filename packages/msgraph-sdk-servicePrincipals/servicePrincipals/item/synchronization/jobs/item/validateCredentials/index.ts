/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue, serializeSynchronizationSecretKeyStringValuePair, type SynchronizationSecretKeyStringValuePair } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ValidateCredentialsPostRequestBody}
 */
export function createValidateCredentialsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoValidateCredentialsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoValidateCredentialsPostRequestBody(validateCredentialsPostRequestBody: Partial<ValidateCredentialsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "applicationIdentifier": n => { validateCredentialsPostRequestBody.applicationIdentifier = n.getStringValue(); },
        "backingStoreEnabled": n => { validateCredentialsPostRequestBody.backingStoreEnabled = true; },
        "credentials": n => { validateCredentialsPostRequestBody.credentials = n.getCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>(createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue); },
        "templateId": n => { validateCredentialsPostRequestBody.templateId = n.getStringValue(); },
        "useSavedCredentials": n => { validateCredentialsPostRequestBody.useSavedCredentials = n.getBooleanValue(); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeValidateCredentialsPostRequestBody(writer: SerializationWriter, validateCredentialsPostRequestBody: Partial<ValidateCredentialsPostRequestBody> | undefined = {}) : void {
    writer.writeStringValue("applicationIdentifier", validateCredentialsPostRequestBody.applicationIdentifier);
    writer.writeCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>("credentials", validateCredentialsPostRequestBody.credentials, serializeSynchronizationSecretKeyStringValuePair);
    writer.writeStringValue("templateId", validateCredentialsPostRequestBody.templateId);
    writer.writeBooleanValue("useSavedCredentials", validateCredentialsPostRequestBody.useSavedCredentials);
    writer.writeAdditionalData(validateCredentialsPostRequestBody.additionalData);
}
export interface ValidateCredentialsPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The applicationIdentifier property
     */
    applicationIdentifier?: string;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The credentials property
     */
    credentials?: SynchronizationSecretKeyStringValuePair[];
    /**
     * The templateId property
     */
    templateId?: string;
    /**
     * The useSavedCredentials property
     */
    useSavedCredentials?: boolean;
}
/**
 * Provides operations to call the validateCredentials method.
 */
export interface ValidateCredentialsRequestBuilder extends BaseRequestBuilder<ValidateCredentialsRequestBuilder> {
    /**
     * Validate that the credentials are valid in the tenant.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/synchronization-synchronizationjob-validatecredentials?view=graph-rest-1.0|Find more info here}
     */
     post(body: ValidateCredentialsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Validate that the credentials are valid in the tenant.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ValidateCredentialsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const ValidateCredentialsRequestBuilderUriTemplate = "{+baseurl}/servicePrincipals/{servicePrincipal%2Did}/synchronization/jobs/{synchronizationJob%2Did}/validateCredentials";
/**
 * Metadata for all the requests in the request builder.
 */
export const ValidateCredentialsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ValidateCredentialsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeValidateCredentialsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
