/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createItemPreviewInfoFromDiscriminatorValue, serializeItemPreviewInfo, type ItemPreviewInfo } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a previewPostRequestBody
 */
export function createPreviewPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoPreviewPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoPreviewPostRequestBody(previewPostRequestBody: PreviewPostRequestBody | undefined = {} as PreviewPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { previewPostRequestBody.backingStoreEnabled = true; },
        "page": n => { previewPostRequestBody.page = n.getStringValue(); },
        "zoom": n => { previewPostRequestBody.zoom = n.getNumberValue(); },
    }
}
export interface PreviewPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The page property
     */
    page?: string;
    /**
     * The zoom property
     */
    zoom?: number;
}
/**
 * Provides operations to call the preview method.
 */
export interface PreviewRequestBuilder extends BaseRequestBuilder<PreviewRequestBuilder> {
    /**
     * Invoke action preview
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of ItemPreviewInfo
     */
     post(body: PreviewPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ItemPreviewInfo | undefined>;
    /**
     * Invoke action preview
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: PreviewPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializePreviewPostRequestBody(writer: SerializationWriter, previewPostRequestBody: PreviewPostRequestBody | undefined = {} as PreviewPostRequestBody) : void {
    writer.writeStringValue("page", previewPostRequestBody.page);
    writer.writeNumberValue("zoom", previewPostRequestBody.zoom);
    writer.writeAdditionalData(previewPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const PreviewRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createItemPreviewInfoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePreviewPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const PreviewRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}/items/{driveItem%2Did}/preview";
/* tslint:enable */
/* eslint-enable */
