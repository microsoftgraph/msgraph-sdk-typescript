/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createWorkbookChartAxesFromDiscriminatorValue, serializeWorkbookChartAxes, type WorkbookChartAxes } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { CategoryAxisRequestBuilderNavigationMetadata, CategoryAxisRequestBuilderRequestsMetadata, CategoryAxisRequestBuilderUriTemplate, type CategoryAxisRequestBuilder } from './categoryAxis/';
import { SeriesAxisRequestBuilderNavigationMetadata, SeriesAxisRequestBuilderRequestsMetadata, SeriesAxisRequestBuilderUriTemplate, type SeriesAxisRequestBuilder } from './seriesAxis/';
import { type ValueAxisRequestBuilder, ValueAxisRequestBuilderNavigationMetadata, ValueAxisRequestBuilderRequestsMetadata, ValueAxisRequestBuilderUriTemplate } from './valueAxis/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the axes property of the microsoft.graph.workbookChart entity.
 */
export interface AxesRequestBuilder extends BaseRequestBuilder<AxesRequestBuilder> {
    /**
     * Provides operations to manage the categoryAxis property of the microsoft.graph.workbookChartAxes entity.
     */
    get categoryAxis(): CategoryAxisRequestBuilder;
    /**
     * Provides operations to manage the seriesAxis property of the microsoft.graph.workbookChartAxes entity.
     */
    get seriesAxis(): SeriesAxisRequestBuilder;
    /**
     * Provides operations to manage the valueAxis property of the microsoft.graph.workbookChartAxes entity.
     */
    get valueAxis(): ValueAxisRequestBuilder;
    /**
     * Delete navigation property axes for drives
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents chart axes. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WorkbookChartAxes
     */
     get(requestConfiguration?: RequestConfiguration<AxesRequestBuilderGetQueryParameters> | undefined) : Promise<WorkbookChartAxes | undefined>;
    /**
     * Update the navigation property axes in drives
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of WorkbookChartAxes
     */
     patch(body: WorkbookChartAxes, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WorkbookChartAxes | undefined>;
    /**
     * Delete navigation property axes for drives
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents chart axes. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AxesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property axes in drives
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: WorkbookChartAxes, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents chart axes. Read-only.
 */
export interface AxesRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AxesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AxesRequestBuilderNavigationMetadata: Record<Exclude<keyof AxesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    categoryAxis: {
        uriTemplate: CategoryAxisRequestBuilderUriTemplate,
        requestsMetadata: CategoryAxisRequestBuilderRequestsMetadata,
        navigationMetadata: CategoryAxisRequestBuilderNavigationMetadata,
    },
    seriesAxis: {
        uriTemplate: SeriesAxisRequestBuilderUriTemplate,
        requestsMetadata: SeriesAxisRequestBuilderRequestsMetadata,
        navigationMetadata: SeriesAxisRequestBuilderNavigationMetadata,
    },
    valueAxis: {
        uriTemplate: ValueAxisRequestBuilderUriTemplate,
        requestsMetadata: ValueAxisRequestBuilderRequestsMetadata,
        navigationMetadata: ValueAxisRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AxesRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWorkbookChartAxesFromDiscriminatorValue,
        queryParametersMapper: AxesRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createWorkbookChartAxesFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWorkbookChartAxes,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AxesRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}/items/{driveItem%2Did}/workbook/worksheets/{workbookWorksheet%2Did}/charts/{workbookChart%2Did}/axes{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
