/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPrinterShareFromDiscriminatorValue, serializePrinterShare, type PrinterShare } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { AllowedGroupsRequestBuilderNavigationMetadata, AllowedGroupsRequestBuilderRequestsMetadata, type AllowedGroupsRequestBuilder } from './allowedGroups/';
// @ts-ignore
import { AllowedUsersRequestBuilderNavigationMetadata, AllowedUsersRequestBuilderRequestsMetadata, type AllowedUsersRequestBuilder } from './allowedUsers/';
// @ts-ignore
import { JobsRequestBuilderNavigationMetadata, JobsRequestBuilderRequestsMetadata, type JobsRequestBuilder } from './jobs/';
// @ts-ignore
import { PrinterRequestBuilderRequestsMetadata, type PrinterRequestBuilder } from './printer/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the shares property of the microsoft.graph.print entity.
 */
export interface PrinterShareItemRequestBuilder extends BaseRequestBuilder<PrinterShareItemRequestBuilder> {
    /**
     * Provides operations to manage the allowedGroups property of the microsoft.graph.printerShare entity.
     */
    get allowedGroups(): AllowedGroupsRequestBuilder;
    /**
     * Provides operations to manage the allowedUsers property of the microsoft.graph.printerShare entity.
     */
    get allowedUsers(): AllowedUsersRequestBuilder;
    /**
     * Provides operations to manage the jobs property of the microsoft.graph.printerBase entity.
     */
    get jobs(): JobsRequestBuilder;
    /**
     * Provides operations to manage the printer property of the microsoft.graph.printerShare entity.
     */
    get printer(): PrinterRequestBuilder;
    /**
     * Delete navigation property shares for print
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The list of printer shares registered in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PrinterShare>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PrinterShareItemRequestBuilderGetQueryParameters> | undefined) : Promise<PrinterShare | undefined>;
    /**
     * Update the navigation property shares in print
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PrinterShare>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: PrinterShare, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PrinterShare | undefined>;
    /**
     * Delete navigation property shares for print
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The list of printer shares registered in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PrinterShareItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property shares in print
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: PrinterShare, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of printer shares registered in the tenant.
 */
export interface PrinterShareItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const PrinterShareItemRequestBuilderUriTemplate = "{+baseurl}/print/shares/{printerShare%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PrinterShareItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PrinterShareItemRequestBuilderNavigationMetadata: Record<Exclude<keyof PrinterShareItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    allowedGroups: {
        requestsMetadata: AllowedGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: AllowedGroupsRequestBuilderNavigationMetadata,
    },
    allowedUsers: {
        requestsMetadata: AllowedUsersRequestBuilderRequestsMetadata,
        navigationMetadata: AllowedUsersRequestBuilderNavigationMetadata,
    },
    jobs: {
        requestsMetadata: JobsRequestBuilderRequestsMetadata,
        navigationMetadata: JobsRequestBuilderNavigationMetadata,
    },
    printer: {
        requestsMetadata: PrinterRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PrinterShareItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: PrinterShareItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: PrinterShareItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPrinterShareFromDiscriminatorValue,
        queryParametersMapper: PrinterShareItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: PrinterShareItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPrinterShareFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePrinterShare,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
