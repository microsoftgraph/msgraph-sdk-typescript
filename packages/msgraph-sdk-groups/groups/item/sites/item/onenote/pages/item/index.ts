/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOnenotePageFromDiscriminatorValue, serializeOnenotePage, type OnenotePage } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { ContentRequestBuilderRequestsMetadata, type ContentRequestBuilder } from './content/';
// @ts-ignore
import { CopyToSectionRequestBuilderRequestsMetadata, type CopyToSectionRequestBuilder } from './copyToSection/';
// @ts-ignore
import { OnenotePatchContentRequestBuilderRequestsMetadata, type OnenotePatchContentRequestBuilder } from './onenotePatchContent/';
// @ts-ignore
import { ParentNotebookRequestBuilderRequestsMetadata, type ParentNotebookRequestBuilder } from './parentNotebook/';
// @ts-ignore
import { ParentSectionRequestBuilderRequestsMetadata, type ParentSectionRequestBuilder } from './parentSection/';
// @ts-ignore
import { PreviewRequestBuilderRequestsMetadata, type PreviewRequestBuilder } from './preview/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the pages property of the microsoft.graph.onenote entity.
 */
export interface OnenotePageItemRequestBuilder extends BaseRequestBuilder<OnenotePageItemRequestBuilder> {
    /**
     * Provides operations to manage the media for the group entity.
     */
    get content(): ContentRequestBuilder;
    /**
     * Provides operations to call the copyToSection method.
     */
    get copyToSection(): CopyToSectionRequestBuilder;
    /**
     * Provides operations to call the onenotePatchContent method.
     */
    get onenotePatchContent(): OnenotePatchContentRequestBuilder;
    /**
     * Provides operations to manage the parentNotebook property of the microsoft.graph.onenotePage entity.
     */
    get parentNotebook(): ParentNotebookRequestBuilder;
    /**
     * Provides operations to manage the parentSection property of the microsoft.graph.onenotePage entity.
     */
    get parentSection(): ParentSectionRequestBuilder;
    /**
     * Provides operations to call the preview method.
     */
    get preview(): PreviewRequestBuilder;
    /**
     * Delete a OneNote page.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/page-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties and relationships of a page object. Getting page information Access a page's metadata by page identifier: Getting page content You can use the page's content endpoint to get the HTML content of a page: The includeIDs=true query option is used to update pages.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnenotePage>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/page-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<OnenotePageItemRequestBuilderGetQueryParameters> | undefined) : Promise<OnenotePage | undefined>;
    /**
     * Update the navigation property pages in groups
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnenotePage>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: OnenotePage, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OnenotePage | undefined>;
    /**
     * Delete a OneNote page.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of a page object. Getting page information Access a page's metadata by page identifier: Getting page content You can use the page's content endpoint to get the HTML content of a page: The includeIDs=true query option is used to update pages.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OnenotePageItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property pages in groups
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: OnenotePage, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of a page object. Getting page information Access a page's metadata by page identifier: Getting page content You can use the page's content endpoint to get the HTML content of a page: The includeIDs=true query option is used to update pages.
 */
export interface OnenotePageItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const OnenotePageItemRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/sites/{site%2Did}/onenote/pages/{onenotePage%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OnenotePageItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OnenotePageItemRequestBuilderNavigationMetadata: Record<Exclude<keyof OnenotePageItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    content: {
        requestsMetadata: ContentRequestBuilderRequestsMetadata,
    },
    copyToSection: {
        requestsMetadata: CopyToSectionRequestBuilderRequestsMetadata,
    },
    onenotePatchContent: {
        requestsMetadata: OnenotePatchContentRequestBuilderRequestsMetadata,
    },
    parentNotebook: {
        requestsMetadata: ParentNotebookRequestBuilderRequestsMetadata,
    },
    parentSection: {
        requestsMetadata: ParentSectionRequestBuilderRequestsMetadata,
    },
    preview: {
        requestsMetadata: PreviewRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OnenotePageItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: OnenotePageItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: OnenotePageItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnenotePageFromDiscriminatorValue,
        queryParametersMapper: OnenotePageItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: OnenotePageItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnenotePageFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOnenotePage,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
