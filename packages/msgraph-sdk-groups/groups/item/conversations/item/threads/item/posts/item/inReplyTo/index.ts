/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPostFromDiscriminatorValue, type Post } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { AttachmentsRequestBuilderNavigationMetadata, AttachmentsRequestBuilderRequestsMetadata, type AttachmentsRequestBuilder } from './attachments/';
// @ts-ignore
import { ExtensionsRequestBuilderNavigationMetadata, ExtensionsRequestBuilderRequestsMetadata, type ExtensionsRequestBuilder } from './extensions/';
// @ts-ignore
import { ForwardRequestBuilderRequestsMetadata, type ForwardRequestBuilder } from './forward/';
// @ts-ignore
import { ReplyRequestBuilderRequestsMetadata, type ReplyRequestBuilder } from './reply/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the inReplyTo property of the microsoft.graph.post entity.
 */
export interface InReplyToRequestBuilder extends BaseRequestBuilder<InReplyToRequestBuilder> {
    /**
     * Provides operations to manage the attachments property of the microsoft.graph.post entity.
     */
    get attachments(): AttachmentsRequestBuilder;
    /**
     * Provides operations to manage the extensions property of the microsoft.graph.post entity.
     */
    get extensions(): ExtensionsRequestBuilder;
    /**
     * Provides operations to call the forward method.
     */
    get forward(): ForwardRequestBuilder;
    /**
     * Provides operations to call the reply method.
     */
    get reply(): ReplyRequestBuilder;
    /**
     * Read-only. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Post>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<InReplyToRequestBuilderGetQueryParameters> | undefined) : Promise<Post | undefined>;
    /**
     * Read-only. Supports $expand.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<InReplyToRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Read-only. Supports $expand.
 */
export interface InReplyToRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const InReplyToRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/conversations/{conversation%2Did}/threads/{conversationThread%2Did}/posts/{post%2Did}/inReplyTo{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const InReplyToRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const InReplyToRequestBuilderNavigationMetadata: Record<Exclude<keyof InReplyToRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    attachments: {
        requestsMetadata: AttachmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AttachmentsRequestBuilderNavigationMetadata,
    },
    extensions: {
        requestsMetadata: ExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: ExtensionsRequestBuilderNavigationMetadata,
    },
    forward: {
        requestsMetadata: ForwardRequestBuilderRequestsMetadata,
    },
    reply: {
        requestsMetadata: ReplyRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const InReplyToRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: InReplyToRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPostFromDiscriminatorValue,
        queryParametersMapper: InReplyToRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
