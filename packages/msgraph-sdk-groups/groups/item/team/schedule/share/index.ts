/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SharePostRequestBody}
 */
export function createSharePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSharePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoSharePostRequestBody(sharePostRequestBody: Partial<SharePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { sharePostRequestBody.backingStoreEnabled = true; },
        "endDateTime": n => { sharePostRequestBody.endDateTime = n.getDateValue(); },
        "notifyTeam": n => { sharePostRequestBody.notifyTeam = n.getBooleanValue(); },
        "startDateTime": n => { sharePostRequestBody.startDateTime = n.getDateValue(); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeSharePostRequestBody(writer: SerializationWriter, sharePostRequestBody: Partial<SharePostRequestBody> | undefined = {}) : void {
    writer.writeDateValue("endDateTime", sharePostRequestBody.endDateTime);
    writer.writeBooleanValue("notifyTeam", sharePostRequestBody.notifyTeam);
    writer.writeDateValue("startDateTime", sharePostRequestBody.startDateTime);
    writer.writeAdditionalData(sharePostRequestBody.additionalData);
}
export interface SharePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The endDateTime property
     */
    endDateTime?: Date;
    /**
     * The notifyTeam property
     */
    notifyTeam?: boolean;
    /**
     * The startDateTime property
     */
    startDateTime?: Date;
}
/**
 * Provides operations to call the share method.
 */
export interface ShareRequestBuilder extends BaseRequestBuilder<ShareRequestBuilder> {
    /**
     * Share a schedule time range with schedule members. This action makes the collections of shift, openshift and timeOff items in the specified time range of the schedule viewable by the specified team members, including employees and managers. Each shift, openshift and timeOff instance in a schedule supports a draft version and a shared version of the item. The draft version is viewable by only managers, and the shared version is viewable by employees and managers. For each shift, openshift and timeOff instance in the specified time range, the share action updates the shared version from the draft version, so that in addition to managers, employees can also view the most current information about the item. The notifyTeam parameter further specifies which employees can view the item.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/schedule-share?view=graph-rest-1.0|Find more info here}
     */
     post(body: SharePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Share a schedule time range with schedule members. This action makes the collections of shift, openshift and timeOff items in the specified time range of the schedule viewable by the specified team members, including employees and managers. Each shift, openshift and timeOff instance in a schedule supports a draft version and a shared version of the item. The draft version is viewable by only managers, and the shared version is viewable by employees and managers. For each shift, openshift and timeOff instance in the specified time range, the share action updates the shared version from the draft version, so that in addition to managers, employees can also view the most current information about the item. The notifyTeam parameter further specifies which employees can view the item.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: SharePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const ShareRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/team/schedule/share";
/**
 * Metadata for all the requests in the request builder.
 */
export const ShareRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ShareRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSharePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
