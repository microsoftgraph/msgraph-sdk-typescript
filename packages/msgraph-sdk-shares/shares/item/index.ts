/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createSharedDriveItemFromDiscriminatorValue, serializeSharedDriveItem, type SharedDriveItem } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { CreatedByUserRequestBuilderNavigationMetadata, CreatedByUserRequestBuilderRequestsMetadata, type CreatedByUserRequestBuilder } from './createdByUser/';
// @ts-ignore
import { DriveItemRequestBuilderNavigationMetadata, DriveItemRequestBuilderRequestsMetadata, type DriveItemRequestBuilder } from './driveItem/';
// @ts-ignore
import { ItemsRequestBuilderNavigationMetadata, ItemsRequestBuilderRequestsMetadata, type ItemsRequestBuilder } from './items/';
// @ts-ignore
import { LastModifiedByUserRequestBuilderNavigationMetadata, LastModifiedByUserRequestBuilderRequestsMetadata, type LastModifiedByUserRequestBuilder } from './lastModifiedByUser/';
// @ts-ignore
import { ListRequestBuilderNavigationMetadata, ListRequestBuilderRequestsMetadata, type ListRequestBuilder } from './list/';
// @ts-ignore
import { ListItemRequestBuilderRequestsMetadata, type ListItemRequestBuilder } from './listItem/';
// @ts-ignore
import { PermissionRequestBuilderNavigationMetadata, PermissionRequestBuilderRequestsMetadata, type PermissionRequestBuilder } from './permission/';
// @ts-ignore
import { RootRequestBuilderNavigationMetadata, RootRequestBuilderRequestsMetadata, type RootRequestBuilder } from './root/';
// @ts-ignore
import { SiteRequestBuilderRequestsMetadata, type SiteRequestBuilder } from './site/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of sharedDriveItem entities.
 */
export interface SharedDriveItemItemRequestBuilder extends BaseRequestBuilder<SharedDriveItemItemRequestBuilder> {
    /**
     * Provides operations to manage the createdByUser property of the microsoft.graph.baseItem entity.
     */
    get createdByUser(): CreatedByUserRequestBuilder;
    /**
     * Provides operations to manage the driveItem property of the microsoft.graph.sharedDriveItem entity.
     */
    get driveItem(): DriveItemRequestBuilder;
    /**
     * Provides operations to manage the items property of the microsoft.graph.sharedDriveItem entity.
     */
    get items(): ItemsRequestBuilder;
    /**
     * Provides operations to manage the lastModifiedByUser property of the microsoft.graph.baseItem entity.
     */
    get lastModifiedByUser(): LastModifiedByUserRequestBuilder;
    /**
     * Provides operations to manage the list property of the microsoft.graph.sharedDriveItem entity.
     */
    get list(): ListRequestBuilder;
    /**
     * Provides operations to manage the listItem property of the microsoft.graph.sharedDriveItem entity.
     */
    get listItem(): ListItemRequestBuilder;
    /**
     * Provides operations to manage the permission property of the microsoft.graph.sharedDriveItem entity.
     */
    get permission(): PermissionRequestBuilder;
    /**
     * Provides operations to manage the root property of the microsoft.graph.sharedDriveItem entity.
     */
    get root(): RootRequestBuilder;
    /**
     * Provides operations to manage the site property of the microsoft.graph.sharedDriveItem entity.
     */
    get site(): SiteRequestBuilder;
    /**
     * Delete entity from shares
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SharedDriveItem>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/shares-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<SharedDriveItemItemRequestBuilderGetQueryParameters> | undefined) : Promise<SharedDriveItem | undefined>;
    /**
     * Update entity in shares
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SharedDriveItem>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: SharedDriveItem, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SharedDriveItem | undefined>;
    /**
     * Delete entity from shares
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SharedDriveItemItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update entity in shares
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: SharedDriveItem, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Access a shared DriveItem or a collection of shared items by using a shareId or sharing URL. To use a sharing URL with this API, your app needs to transform the URL into a sharing token.
 */
export interface SharedDriveItemItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const SharedDriveItemItemRequestBuilderUriTemplate = "{+baseurl}/shares/{sharedDriveItem%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SharedDriveItemItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SharedDriveItemItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SharedDriveItemItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    createdByUser: {
        requestsMetadata: CreatedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: CreatedByUserRequestBuilderNavigationMetadata,
    },
    driveItem: {
        requestsMetadata: DriveItemRequestBuilderRequestsMetadata,
        navigationMetadata: DriveItemRequestBuilderNavigationMetadata,
    },
    items: {
        requestsMetadata: ItemsRequestBuilderRequestsMetadata,
        navigationMetadata: ItemsRequestBuilderNavigationMetadata,
    },
    lastModifiedByUser: {
        requestsMetadata: LastModifiedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: LastModifiedByUserRequestBuilderNavigationMetadata,
    },
    list: {
        requestsMetadata: ListRequestBuilderRequestsMetadata,
        navigationMetadata: ListRequestBuilderNavigationMetadata,
    },
    listItem: {
        requestsMetadata: ListItemRequestBuilderRequestsMetadata,
    },
    permission: {
        requestsMetadata: PermissionRequestBuilderRequestsMetadata,
        navigationMetadata: PermissionRequestBuilderNavigationMetadata,
    },
    root: {
        requestsMetadata: RootRequestBuilderRequestsMetadata,
        navigationMetadata: RootRequestBuilderNavigationMetadata,
    },
    site: {
        requestsMetadata: SiteRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SharedDriveItemItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: SharedDriveItemItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: SharedDriveItemItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSharedDriveItemFromDiscriminatorValue,
        queryParametersMapper: SharedDriveItemItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: SharedDriveItemItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSharedDriveItemFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSharedDriveItem,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
