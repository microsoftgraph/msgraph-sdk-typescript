/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createColumnDefinitionFromDiscriminatorValue, type ColumnDefinition } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the sourceColumn property of the microsoft.graph.columnDefinition entity.
 */
export interface SourceColumnRequestBuilder extends BaseRequestBuilder<SourceColumnRequestBuilder> {
    /**
     * The source column for the content type column.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ColumnDefinition>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SourceColumnRequestBuilderGetQueryParameters> | undefined) : Promise<ColumnDefinition | undefined>;
    /**
     * The source column for the content type column.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SourceColumnRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The source column for the content type column.
 */
export interface SourceColumnRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const SourceColumnRequestBuilderUriTemplate = "{+baseurl}/shares/{sharedDriveItem%2Did}/list/columns/{columnDefinition%2Did}/sourceColumn{?%24expand,%24select}";
/**
 * Provides operations to manage the sourceColumn property of the microsoft.graph.columnDefinition entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    SourceColumn: "sourceColumn",
} as const;
/**
 * Provides operations to manage the sourceColumn property of the microsoft.graph.columnDefinition entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Boolean: "boolean",
    Calculated: "calculated",
    Choice: "choice",
    ColumnGroup: "columnGroup",
    ContentApprovalStatus: "contentApprovalStatus",
    Currency: "currency",
    DateTime: "dateTime",
    DefaultValue: "defaultValue",
    Description: "description",
    DisplayName: "displayName",
    EnforceUniqueValues: "enforceUniqueValues",
    Geolocation: "geolocation",
    Hidden: "hidden",
    HyperlinkOrPicture: "hyperlinkOrPicture",
    Indexed: "indexed",
    IsDeletable: "isDeletable",
    IsReorderable: "isReorderable",
    IsSealed: "isSealed",
    Lookup: "lookup",
    Name: "name",
    Number: "number",
    PersonOrGroup: "personOrGroup",
    PropagateChanges: "propagateChanges",
    ReadOnly: "readOnly",
    Required: "required",
    SourceContentType: "sourceContentType",
    Term: "term",
    Text: "text",
    Thumbnail: "thumbnail",
    Type: "type",
    Validation: "validation",
    SourceColumn: "sourceColumn",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SourceColumnRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SourceColumnRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SourceColumnRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createColumnDefinitionFromDiscriminatorValue,
        queryParametersMapper: SourceColumnRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
