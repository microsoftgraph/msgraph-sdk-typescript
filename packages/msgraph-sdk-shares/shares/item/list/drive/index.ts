/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDriveFromDiscriminatorValue, type Drive } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the drive property of the microsoft.graph.list entity.
 */
export interface DriveRequestBuilder extends BaseRequestBuilder<DriveRequestBuilder> {
    /**
     * Allows access to the list as a drive resource with driveItems. Only present on document libraries.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Drive>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DriveRequestBuilderGetQueryParameters> | undefined) : Promise<Drive | undefined>;
    /**
     * Allows access to the list as a drive resource with driveItems. Only present on document libraries.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DriveRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Allows access to the list as a drive resource with driveItems. Only present on document libraries.
 */
export interface DriveRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const DriveRequestBuilderUriTemplate = "{+baseurl}/shares/{sharedDriveItem%2Did}/list/drive{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DriveRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DriveRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: DriveRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDriveFromDiscriminatorValue,
        queryParametersMapper: DriveRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the drive property of the microsoft.graph.list entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    CreatedByUser: "createdByUser",
    LastModifiedByUser: "lastModifiedByUser",
    Bundles: "bundles",
    Following: "following",
    Items: "items",
    List: "list",
    Root: "root",
    Special: "special",
} as const;
/**
 * Provides operations to manage the drive property of the microsoft.graph.list entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    ETag: "eTag",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    Name: "name",
    ParentReference: "parentReference",
    WebUrl: "webUrl",
    DriveType: "driveType",
    Owner: "owner",
    Quota: "quota",
    SharePointIds: "sharePointIds",
    System: "system",
    CreatedByUser: "createdByUser",
    LastModifiedByUser: "lastModifiedByUser",
    Bundles: "bundles",
    Following: "following",
    Items: "items",
    List: "list",
    Root: "root",
    Special: "special",
} as const;
/* tslint:enable */
/* eslint-enable */
