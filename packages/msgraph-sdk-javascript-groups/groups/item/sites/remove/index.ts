/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSiteFromDiscriminatorValue, deserializeIntoBaseCollectionPaginationCountResponse, serializeBaseCollectionPaginationCountResponse, serializeSite, type BaseCollectionPaginationCountResponse, type Site } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a removePostRequestBody
 */
export function createRemovePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoRemovePostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a removePostResponse
 */
export function createRemovePostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoRemovePostResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoRemovePostRequestBody(removePostRequestBody: RemovePostRequestBody | undefined = {} as RemovePostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "value": n => { removePostRequestBody.value = n.getCollectionOfObjectValues<Site>(createSiteFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoRemovePostResponse(removePostResponse: RemovePostResponse | undefined = {} as RemovePostResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(removePostResponse),
        "value": n => { removePostResponse.value = n.getCollectionOfObjectValues<Site>(createSiteFromDiscriminatorValue); },
    }
}
export interface RemovePostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The value property
     */
    value?: Site[];
}
export interface RemovePostResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: Site[];
}
/**
 * Provides operations to call the remove method.
 */
export interface RemoveRequestBuilder extends BaseRequestBuilder<RemoveRequestBuilder> {
    /**
     * Unfollow a user's site or multiple sites.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of RemovePostResponse
     * @see {@link https://learn.microsoft.com/graph/api/site-unfollow?view=graph-rest-1.0|Find more info here}
     */
     post(body: RemovePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RemovePostResponse | undefined>;
    /**
     * Unfollow a user's site or multiple sites.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: RemovePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeRemovePostRequestBody(writer: SerializationWriter, removePostRequestBody: RemovePostRequestBody | undefined = {} as RemovePostRequestBody) : void {
    writer.writeCollectionOfObjectValues<Site>("value", removePostRequestBody.value, serializeSite);
    writer.writeAdditionalData(removePostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeRemovePostResponse(writer: SerializationWriter, removePostResponse: RemovePostResponse | undefined = {} as RemovePostResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, removePostResponse)
    writer.writeCollectionOfObjectValues<Site>("value", removePostResponse.value, serializeSite);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const RemoveRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createRemovePostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRemovePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const RemoveRequestBuilderUriTemplate = "{+baseurl}/groups/{group%2Did}/sites/remove";
/* tslint:enable */
/* eslint-enable */
