/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPinnedChatMessageInfoFromDiscriminatorValue, serializePinnedChatMessageInfo, type PinnedChatMessageInfo } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { MessageRequestBuilderRequestsMetadata, type MessageRequestBuilder } from './message/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the pinnedMessages property of the microsoft.graph.chat entity.
 */
export interface PinnedChatMessageInfoItemRequestBuilder extends BaseRequestBuilder<PinnedChatMessageInfoItemRequestBuilder> {
    /**
     * Provides operations to manage the message property of the microsoft.graph.pinnedChatMessageInfo entity.
     */
    get message(): MessageRequestBuilder;
    /**
     * Unpin a message from a chat.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/chat-delete-pinnedmessages?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * A collection of all the pinned messages in the chat. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PinnedChatMessageInfo>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PinnedChatMessageInfoItemRequestBuilderGetQueryParameters> | undefined) : Promise<PinnedChatMessageInfo | undefined>;
    /**
     * Update the navigation property pinnedMessages in chats
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PinnedChatMessageInfo>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: PinnedChatMessageInfo, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PinnedChatMessageInfo | undefined>;
    /**
     * Unpin a message from a chat.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * A collection of all the pinned messages in the chat. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PinnedChatMessageInfoItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property pinnedMessages in chats
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: PinnedChatMessageInfo, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * A collection of all the pinned messages in the chat. Nullable.
 */
export interface PinnedChatMessageInfoItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const PinnedChatMessageInfoItemRequestBuilderUriTemplate = "{+baseurl}/chats/{chat%2Did}/pinnedMessages/{pinnedChatMessageInfo%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PinnedChatMessageInfoItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PinnedChatMessageInfoItemRequestBuilderNavigationMetadata: Record<Exclude<keyof PinnedChatMessageInfoItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    message: {
        requestsMetadata: MessageRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PinnedChatMessageInfoItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: PinnedChatMessageInfoItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: PinnedChatMessageInfoItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPinnedChatMessageInfoFromDiscriminatorValue,
        queryParametersMapper: PinnedChatMessageInfoItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: PinnedChatMessageInfoItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPinnedChatMessageInfoFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePinnedChatMessageInfo,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
