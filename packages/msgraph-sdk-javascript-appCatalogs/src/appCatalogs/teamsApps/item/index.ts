/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createTeamsAppFromDiscriminatorValue, serializeTeamsApp, type TeamsApp } from '@microsoft/msgraph-sdk-javascript/src/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/src/models/oDataErrors/';
import { AppDefinitionsRequestBuilderNavigationMetadata, AppDefinitionsRequestBuilderRequestsMetadata, AppDefinitionsRequestBuilderUriTemplate, type AppDefinitionsRequestBuilder } from './appDefinitions/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the teamsApps property of the microsoft.graph.appCatalogs entity.
 */
export interface TeamsAppItemRequestBuilder extends BaseRequestBuilder<TeamsAppItemRequestBuilder> {
    /**
     * Provides operations to manage the appDefinitions property of the microsoft.graph.teamsApp entity.
     */
    get appDefinitions(): AppDefinitionsRequestBuilder;
    /**
     * Delete an app from an organization's app catalog (the tenant app catalog). To delete an app, the distributionMethod property for the app must be set to organization. You can also use this API to remove a submitted app from the review process.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/teamsapp-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get teamsApps from appCatalogs
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of TeamsApp
     */
     get(requestConfiguration?: RequestConfiguration<TeamsAppItemRequestBuilderGetQueryParameters> | undefined) : Promise<TeamsApp | undefined>;
    /**
     * Update the navigation property teamsApps in appCatalogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of TeamsApp
     */
     patch(body: TeamsApp, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TeamsApp | undefined>;
    /**
     * Delete an app from an organization's app catalog (the tenant app catalog). To delete an app, the distributionMethod property for the app must be set to organization. You can also use this API to remove a submitted app from the review process.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get teamsApps from appCatalogs
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TeamsAppItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property teamsApps in appCatalogs
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: TeamsApp, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get teamsApps from appCatalogs
 */
export interface TeamsAppItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TeamsAppItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TeamsAppItemRequestBuilderNavigationMetadata: Record<Exclude<keyof TeamsAppItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    appDefinitions: {
        uriTemplate: AppDefinitionsRequestBuilderUriTemplate,
        requestsMetadata: AppDefinitionsRequestBuilderRequestsMetadata,
        navigationMetadata: AppDefinitionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TeamsAppItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createTeamsAppFromDiscriminatorValue,
        queryParametersMapper: TeamsAppItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createTeamsAppFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTeamsApp,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const TeamsAppItemRequestBuilderUriTemplate = "{+baseurl}/appCatalogs/teamsApps/{teamsApp%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */

