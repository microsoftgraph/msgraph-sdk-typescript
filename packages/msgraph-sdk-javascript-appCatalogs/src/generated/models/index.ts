/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { type AdditionalDataHolder, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AppCatalogs extends Entity, Parsable {
    /**
     * The teamsApps property
     */
    teamsApps?: TeamsApp[];
}
export interface AzureCommunicationServicesUserIdentity extends Identity, Parsable {
    /**
     * The Azure Communication Services resource ID associated with the user.
     */
    azureCommunicationServicesResourceId?: string;
}
export interface BaseCollectionPaginationCountResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataCount property
     */
    odataCount?: number;
    /**
     * The OdataNextLink property
     */
    odataNextLink?: string;
}
export interface ChatMessageFromIdentitySet extends IdentitySet, Parsable {
}
export interface ChatMessageMentionedIdentitySet extends IdentitySet, Parsable {
    /**
     * If present, represents a conversation (for example, team or channel) @mentioned in a message.
     */
    conversation?: TeamworkConversationIdentity;
}
export interface ChatMessageReactionIdentitySet extends IdentitySet, Parsable {
}
export interface CommunicationsApplicationIdentity extends Identity, Parsable {
    /**
     * First-party Microsoft application that presents this identity.
     */
    applicationType?: string;
    /**
     * True if the participant shouldn't be shown in other participants' rosters.
     */
    hidden?: boolean;
}
export interface CommunicationsApplicationInstanceIdentity extends Identity, Parsable {
    /**
     * True if the participant shouldn't be shown in other participants' rosters.
     */
    hidden?: boolean;
    /**
     * The tenant ID of the application.
     */
    tenantId?: string;
}
export interface CommunicationsEncryptedIdentity extends Identity, Parsable {
}
export interface CommunicationsGuestIdentity extends Identity, Parsable {
}
export interface CommunicationsIdentitySet extends IdentitySet, Parsable {
    /**
     * The application instance associated with this action.
     */
    applicationInstance?: Identity;
    /**
     * An identity the participant would like to present itself as to the other participants in the call.
     */
    assertedIdentity?: Identity;
    /**
     * The Azure Communication Services user associated with this action.
     */
    azureCommunicationServicesUser?: Identity;
    /**
     * The encrypted user associated with this action.
     */
    encrypted?: Identity;
    /**
     * Type of endpoint that the participant uses. Possible values are: default, voicemail, skypeForBusiness, skypeForBusinessVoipPhone, unknownFutureValue.
     */
    endpointType?: EndpointType;
    /**
     * The guest user associated with this action.
     */
    guest?: Identity;
    /**
     * The Skype for Business on-premises user associated with this action.
     */
    onPremises?: Identity;
    /**
     * The phone user associated with this action.
     */
    phone?: Identity;
}
export interface CommunicationsPhoneIdentity extends Identity, Parsable {
}
export interface CommunicationsUserIdentity extends Identity, Parsable {
    /**
     * The user's tenant ID.
     */
    tenantId?: string;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a appCatalogs
 */
export function createAppCatalogsFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoAppCatalogs;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a azureCommunicationServicesUserIdentity
 */
export function createAzureCommunicationServicesUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoAzureCommunicationServicesUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a BaseCollectionPaginationCountResponse
 */
export function createBaseCollectionPaginationCountResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoBaseCollectionPaginationCountResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a chatMessageFromIdentitySet
 */
export function createChatMessageFromIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoChatMessageFromIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a chatMessageMentionedIdentitySet
 */
export function createChatMessageMentionedIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoChatMessageMentionedIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a chatMessageReactionIdentitySet
 */
export function createChatMessageReactionIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoChatMessageReactionIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a communicationsApplicationIdentity
 */
export function createCommunicationsApplicationIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoCommunicationsApplicationIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a communicationsApplicationInstanceIdentity
 */
export function createCommunicationsApplicationInstanceIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoCommunicationsApplicationInstanceIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a communicationsEncryptedIdentity
 */
export function createCommunicationsEncryptedIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoCommunicationsEncryptedIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a communicationsGuestIdentity
 */
export function createCommunicationsGuestIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoCommunicationsGuestIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a communicationsIdentitySet
 */
export function createCommunicationsIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoCommunicationsIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a communicationsPhoneIdentity
 */
export function createCommunicationsPhoneIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoCommunicationsPhoneIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a communicationsUserIdentity
 */
export function createCommunicationsUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoCommunicationsUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a detailsInfo
 */
export function createDetailsInfoFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoDetailsInfo;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a emailIdentity
 */
export function createEmailIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoEmailIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a entity
 */
export function createEntityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.appCatalogs":
                    return deserializeIntoAppCatalogs;
                case "#microsoft.graph.teamsApp":
                    return deserializeIntoTeamsApp;
                case "#microsoft.graph.teamsAppDefinition":
                    return deserializeIntoTeamsAppDefinition;
                case "#microsoft.graph.teamworkBot":
                    return deserializeIntoTeamworkBot;
            }
        }
    }
    return deserializeIntoEntity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a identity
 */
export function createIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.azureCommunicationServicesUserIdentity":
                    return deserializeIntoAzureCommunicationServicesUserIdentity;
                case "#microsoft.graph.communicationsApplicationIdentity":
                    return deserializeIntoCommunicationsApplicationIdentity;
                case "#microsoft.graph.communicationsApplicationInstanceIdentity":
                    return deserializeIntoCommunicationsApplicationInstanceIdentity;
                case "#microsoft.graph.communicationsEncryptedIdentity":
                    return deserializeIntoCommunicationsEncryptedIdentity;
                case "#microsoft.graph.communicationsGuestIdentity":
                    return deserializeIntoCommunicationsGuestIdentity;
                case "#microsoft.graph.communicationsPhoneIdentity":
                    return deserializeIntoCommunicationsPhoneIdentity;
                case "#microsoft.graph.communicationsUserIdentity":
                    return deserializeIntoCommunicationsUserIdentity;
                case "#microsoft.graph.emailIdentity":
                    return deserializeIntoEmailIdentity;
                case "#microsoft.graph.initiator":
                    return deserializeIntoInitiator;
                case "#microsoft.graph.provisionedIdentity":
                    return deserializeIntoProvisionedIdentity;
                case "#microsoft.graph.provisioningServicePrincipal":
                    return deserializeIntoProvisioningServicePrincipal;
                case "#microsoft.graph.provisioningSystem":
                    return deserializeIntoProvisioningSystem;
                case "#microsoft.graph.servicePrincipalIdentity":
                    return deserializeIntoServicePrincipalIdentity;
                case "#microsoft.graph.sharePointIdentity":
                    return deserializeIntoSharePointIdentity;
                case "#microsoft.graph.teamworkApplicationIdentity":
                    return deserializeIntoTeamworkApplicationIdentity;
                case "#microsoft.graph.teamworkConversationIdentity":
                    return deserializeIntoTeamworkConversationIdentity;
                case "#microsoft.graph.teamworkTagIdentity":
                    return deserializeIntoTeamworkTagIdentity;
                case "#microsoft.graph.teamworkUserIdentity":
                    return deserializeIntoTeamworkUserIdentity;
                case "#microsoft.graph.userIdentity":
                    return deserializeIntoUserIdentity;
            }
        }
    }
    return deserializeIntoIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a identitySet
 */
export function createIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    const mappingValueNode = parseNode.getChildNode("@odata.type");
    if (mappingValueNode) {
        const mappingValue = mappingValueNode.getStringValue();
        if (mappingValue) {
            switch (mappingValue) {
                case "#microsoft.graph.chatMessageFromIdentitySet":
                    return deserializeIntoChatMessageFromIdentitySet;
                case "#microsoft.graph.chatMessageMentionedIdentitySet":
                    return deserializeIntoChatMessageMentionedIdentitySet;
                case "#microsoft.graph.chatMessageReactionIdentitySet":
                    return deserializeIntoChatMessageReactionIdentitySet;
                case "#microsoft.graph.communicationsIdentitySet":
                    return deserializeIntoCommunicationsIdentitySet;
                case "#microsoft.graph.sharePointIdentitySet":
                    return deserializeIntoSharePointIdentitySet;
            }
        }
    }
    return deserializeIntoIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a initiator
 */
export function createInitiatorFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoInitiator;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a provisionedIdentity
 */
export function createProvisionedIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoProvisionedIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a provisioningServicePrincipal
 */
export function createProvisioningServicePrincipalFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoProvisioningServicePrincipal;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a provisioningSystem
 */
export function createProvisioningSystemFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoProvisioningSystem;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a servicePrincipalIdentity
 */
export function createServicePrincipalIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoServicePrincipalIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a sharePointIdentity
 */
export function createSharePointIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoSharePointIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a sharePointIdentitySet
 */
export function createSharePointIdentitySetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoSharePointIdentitySet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamsAppAuthorization
 */
export function createTeamsAppAuthorizationFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamsAppAuthorization;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamsAppCollectionResponse
 */
export function createTeamsAppCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamsAppCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamsAppDefinitionCollectionResponse
 */
export function createTeamsAppDefinitionCollectionResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamsAppDefinitionCollectionResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamsAppDefinition
 */
export function createTeamsAppDefinitionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamsAppDefinition;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamsApp
 */
export function createTeamsAppFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamsApp;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamsAppPermissionSet
 */
export function createTeamsAppPermissionSetFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamsAppPermissionSet;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamsAppResourceSpecificPermission
 */
export function createTeamsAppResourceSpecificPermissionFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamsAppResourceSpecificPermission;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamworkApplicationIdentity
 */
export function createTeamworkApplicationIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamworkApplicationIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamworkBot
 */
export function createTeamworkBotFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamworkBot;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamworkConversationIdentity
 */
export function createTeamworkConversationIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamworkConversationIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamworkTagIdentity
 */
export function createTeamworkTagIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamworkTagIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a teamworkUserIdentity
 */
export function createTeamworkUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoTeamworkUserIdentity;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a userIdentity
 */
export function createUserIdentityFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoUserIdentity;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoAppCatalogs(appCatalogs: AppCatalogs | undefined = {} as AppCatalogs) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(appCatalogs),
        "teamsApps": n => { appCatalogs.teamsApps = n.getCollectionOfObjectValues<TeamsApp>(createTeamsAppFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoAzureCommunicationServicesUserIdentity(azureCommunicationServicesUserIdentity: AzureCommunicationServicesUserIdentity | undefined = {} as AzureCommunicationServicesUserIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(azureCommunicationServicesUserIdentity),
        "azureCommunicationServicesResourceId": n => { azureCommunicationServicesUserIdentity.azureCommunicationServicesResourceId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoBaseCollectionPaginationCountResponse(baseCollectionPaginationCountResponse: BaseCollectionPaginationCountResponse | undefined = {} as BaseCollectionPaginationCountResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.count": n => { baseCollectionPaginationCountResponse.odataCount = n.getNumberValue(); },
        "@odata.nextLink": n => { baseCollectionPaginationCountResponse.odataNextLink = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoChatMessageFromIdentitySet(chatMessageFromIdentitySet: ChatMessageFromIdentitySet | undefined = {} as ChatMessageFromIdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(chatMessageFromIdentitySet),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoChatMessageMentionedIdentitySet(chatMessageMentionedIdentitySet: ChatMessageMentionedIdentitySet | undefined = {} as ChatMessageMentionedIdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(chatMessageMentionedIdentitySet),
        "conversation": n => { chatMessageMentionedIdentitySet.conversation = n.getObjectValue<TeamworkConversationIdentity>(createTeamworkConversationIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoChatMessageReactionIdentitySet(chatMessageReactionIdentitySet: ChatMessageReactionIdentitySet | undefined = {} as ChatMessageReactionIdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(chatMessageReactionIdentitySet),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCommunicationsApplicationIdentity(communicationsApplicationIdentity: CommunicationsApplicationIdentity | undefined = {} as CommunicationsApplicationIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsApplicationIdentity),
        "applicationType": n => { communicationsApplicationIdentity.applicationType = n.getStringValue(); },
        "hidden": n => { communicationsApplicationIdentity.hidden = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCommunicationsApplicationInstanceIdentity(communicationsApplicationInstanceIdentity: CommunicationsApplicationInstanceIdentity | undefined = {} as CommunicationsApplicationInstanceIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsApplicationInstanceIdentity),
        "hidden": n => { communicationsApplicationInstanceIdentity.hidden = n.getBooleanValue(); },
        "tenantId": n => { communicationsApplicationInstanceIdentity.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCommunicationsEncryptedIdentity(communicationsEncryptedIdentity: CommunicationsEncryptedIdentity | undefined = {} as CommunicationsEncryptedIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsEncryptedIdentity),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCommunicationsGuestIdentity(communicationsGuestIdentity: CommunicationsGuestIdentity | undefined = {} as CommunicationsGuestIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsGuestIdentity),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCommunicationsIdentitySet(communicationsIdentitySet: CommunicationsIdentitySet | undefined = {} as CommunicationsIdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(communicationsIdentitySet),
        "applicationInstance": n => { communicationsIdentitySet.applicationInstance = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "assertedIdentity": n => { communicationsIdentitySet.assertedIdentity = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "azureCommunicationServicesUser": n => { communicationsIdentitySet.azureCommunicationServicesUser = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "encrypted": n => { communicationsIdentitySet.encrypted = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "endpointType": n => { communicationsIdentitySet.endpointType = n.getEnumValue<EndpointType>(EndpointTypeObject); },
        "guest": n => { communicationsIdentitySet.guest = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "onPremises": n => { communicationsIdentitySet.onPremises = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "phone": n => { communicationsIdentitySet.phone = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCommunicationsPhoneIdentity(communicationsPhoneIdentity: CommunicationsPhoneIdentity | undefined = {} as CommunicationsPhoneIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsPhoneIdentity),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoCommunicationsUserIdentity(communicationsUserIdentity: CommunicationsUserIdentity | undefined = {} as CommunicationsUserIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(communicationsUserIdentity),
        "tenantId": n => { communicationsUserIdentity.tenantId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoDetailsInfo(detailsInfo: DetailsInfo | undefined = {} as DetailsInfo) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { detailsInfo.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoEmailIdentity(emailIdentity: EmailIdentity | undefined = {} as EmailIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(emailIdentity),
        "email": n => { emailIdentity.email = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoEntity(entity: Entity | undefined = {} as Entity) : Record<string, (node: ParseNode) => void> {
    return {
        "id": n => { entity.id = n.getStringValue(); },
        "@odata.type": n => { entity.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoIdentity(identity: Identity | undefined = {} as Identity) : Record<string, (node: ParseNode) => void> {
    return {
        "displayName": n => { identity.displayName = n.getStringValue(); },
        "id": n => { identity.id = n.getStringValue(); },
        "@odata.type": n => { identity.odataType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoIdentitySet(identitySet: IdentitySet | undefined = {} as IdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        "application": n => { identitySet.application = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "device": n => { identitySet.device = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "@odata.type": n => { identitySet.odataType = n.getStringValue(); },
        "user": n => { identitySet.user = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoInitiator(initiator: Initiator | undefined = {} as Initiator) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(initiator),
        "initiatorType": n => { initiator.initiatorType = n.getEnumValue<InitiatorType>(InitiatorTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoProvisionedIdentity(provisionedIdentity: ProvisionedIdentity | undefined = {} as ProvisionedIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(provisionedIdentity),
        "details": n => { provisionedIdentity.details = n.getObjectValue<DetailsInfo>(createDetailsInfoFromDiscriminatorValue); },
        "identityType": n => { provisionedIdentity.identityType = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoProvisioningServicePrincipal(provisioningServicePrincipal: ProvisioningServicePrincipal | undefined = {} as ProvisioningServicePrincipal) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(provisioningServicePrincipal),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoProvisioningSystem(provisioningSystem: ProvisioningSystem | undefined = {} as ProvisioningSystem) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(provisioningSystem),
        "details": n => { provisioningSystem.details = n.getObjectValue<DetailsInfo>(createDetailsInfoFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoServicePrincipalIdentity(servicePrincipalIdentity: ServicePrincipalIdentity | undefined = {} as ServicePrincipalIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(servicePrincipalIdentity),
        "appId": n => { servicePrincipalIdentity.appId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoSharePointIdentity(sharePointIdentity: SharePointIdentity | undefined = {} as SharePointIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(sharePointIdentity),
        "loginName": n => { sharePointIdentity.loginName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoSharePointIdentitySet(sharePointIdentitySet: SharePointIdentitySet | undefined = {} as SharePointIdentitySet) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentitySet(sharePointIdentitySet),
        "group": n => { sharePointIdentitySet.group = n.getObjectValue<Identity>(createIdentityFromDiscriminatorValue); },
        "siteGroup": n => { sharePointIdentitySet.siteGroup = n.getObjectValue<SharePointIdentity>(createSharePointIdentityFromDiscriminatorValue); },
        "siteUser": n => { sharePointIdentitySet.siteUser = n.getObjectValue<SharePointIdentity>(createSharePointIdentityFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamsApp(teamsApp: TeamsApp | undefined = {} as TeamsApp) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsApp),
        "appDefinitions": n => { teamsApp.appDefinitions = n.getCollectionOfObjectValues<TeamsAppDefinition>(createTeamsAppDefinitionFromDiscriminatorValue); },
        "displayName": n => { teamsApp.displayName = n.getStringValue(); },
        "distributionMethod": n => { teamsApp.distributionMethod = n.getEnumValue<TeamsAppDistributionMethod>(TeamsAppDistributionMethodObject); },
        "externalId": n => { teamsApp.externalId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamsAppAuthorization(teamsAppAuthorization: TeamsAppAuthorization | undefined = {} as TeamsAppAuthorization) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { teamsAppAuthorization.odataType = n.getStringValue(); },
        "requiredPermissionSet": n => { teamsAppAuthorization.requiredPermissionSet = n.getObjectValue<TeamsAppPermissionSet>(createTeamsAppPermissionSetFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamsAppCollectionResponse(teamsAppCollectionResponse: TeamsAppCollectionResponse | undefined = {} as TeamsAppCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(teamsAppCollectionResponse),
        "value": n => { teamsAppCollectionResponse.value = n.getCollectionOfObjectValues<TeamsApp>(createTeamsAppFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamsAppDefinition(teamsAppDefinition: TeamsAppDefinition | undefined = {} as TeamsAppDefinition) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamsAppDefinition),
        "authorization": n => { teamsAppDefinition.authorization = n.getObjectValue<TeamsAppAuthorization>(createTeamsAppAuthorizationFromDiscriminatorValue); },
        "bot": n => { teamsAppDefinition.bot = n.getObjectValue<TeamworkBot>(createTeamworkBotFromDiscriminatorValue); },
        "createdBy": n => { teamsAppDefinition.createdBy = n.getObjectValue<IdentitySet>(createIdentitySetFromDiscriminatorValue); },
        "description": n => { teamsAppDefinition.description = n.getStringValue(); },
        "displayName": n => { teamsAppDefinition.displayName = n.getStringValue(); },
        "lastModifiedDateTime": n => { teamsAppDefinition.lastModifiedDateTime = n.getDateValue(); },
        "publishingState": n => { teamsAppDefinition.publishingState = n.getEnumValue<TeamsAppPublishingState>(TeamsAppPublishingStateObject); },
        "shortDescription": n => { teamsAppDefinition.shortDescription = n.getStringValue(); },
        "teamsAppId": n => { teamsAppDefinition.teamsAppId = n.getStringValue(); },
        "version": n => { teamsAppDefinition.version = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamsAppDefinitionCollectionResponse(teamsAppDefinitionCollectionResponse: TeamsAppDefinitionCollectionResponse | undefined = {} as TeamsAppDefinitionCollectionResponse) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoBaseCollectionPaginationCountResponse(teamsAppDefinitionCollectionResponse),
        "value": n => { teamsAppDefinitionCollectionResponse.value = n.getCollectionOfObjectValues<TeamsAppDefinition>(createTeamsAppDefinitionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamsAppPermissionSet(teamsAppPermissionSet: TeamsAppPermissionSet | undefined = {} as TeamsAppPermissionSet) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { teamsAppPermissionSet.odataType = n.getStringValue(); },
        "resourceSpecificPermissions": n => { teamsAppPermissionSet.resourceSpecificPermissions = n.getCollectionOfObjectValues<TeamsAppResourceSpecificPermission>(createTeamsAppResourceSpecificPermissionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamsAppResourceSpecificPermission(teamsAppResourceSpecificPermission: TeamsAppResourceSpecificPermission | undefined = {} as TeamsAppResourceSpecificPermission) : Record<string, (node: ParseNode) => void> {
    return {
        "@odata.type": n => { teamsAppResourceSpecificPermission.odataType = n.getStringValue(); },
        "permissionType": n => { teamsAppResourceSpecificPermission.permissionType = n.getEnumValue<TeamsAppResourceSpecificPermissionType>(TeamsAppResourceSpecificPermissionTypeObject); },
        "permissionValue": n => { teamsAppResourceSpecificPermission.permissionValue = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamworkApplicationIdentity(teamworkApplicationIdentity: TeamworkApplicationIdentity | undefined = {} as TeamworkApplicationIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkApplicationIdentity),
        "applicationIdentityType": n => { teamworkApplicationIdentity.applicationIdentityType = n.getEnumValue<TeamworkApplicationIdentityType>(TeamworkApplicationIdentityTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamworkBot(teamworkBot: TeamworkBot | undefined = {} as TeamworkBot) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoEntity(teamworkBot),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamworkConversationIdentity(teamworkConversationIdentity: TeamworkConversationIdentity | undefined = {} as TeamworkConversationIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkConversationIdentity),
        "conversationIdentityType": n => { teamworkConversationIdentity.conversationIdentityType = n.getEnumValue<TeamworkConversationIdentityType>(TeamworkConversationIdentityTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamworkTagIdentity(teamworkTagIdentity: TeamworkTagIdentity | undefined = {} as TeamworkTagIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkTagIdentity),
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoTeamworkUserIdentity(teamworkUserIdentity: TeamworkUserIdentity | undefined = {} as TeamworkUserIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(teamworkUserIdentity),
        "userIdentityType": n => { teamworkUserIdentity.userIdentityType = n.getEnumValue<TeamworkUserIdentityType>(TeamworkUserIdentityTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoUserIdentity(userIdentity: UserIdentity | undefined = {} as UserIdentity) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoIdentity(userIdentity),
        "ipAddress": n => { userIdentity.ipAddress = n.getStringValue(); },
        "userPrincipalName": n => { userIdentity.userPrincipalName = n.getStringValue(); },
    }
}
export interface DetailsInfo extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export interface EmailIdentity extends Identity, Parsable {
    /**
     * Email address of the user.
     */
    email?: string;
}
export type EndpointType = (typeof EndpointTypeObject)[keyof typeof EndpointTypeObject];
export interface Entity extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The unique identifier for an entity. Read-only.
     */
    id?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export interface Identity extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The display name of the identity. The display name might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
     */
    displayName?: string;
    /**
     * Unique identifier for the identity.
     */
    id?: string;
    /**
     * The OdataType property
     */
    odataType?: string;
}
export interface IdentitySet extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Optional. The application associated with this action.
     */
    application?: Identity;
    /**
     * Optional. The device associated with this action.
     */
    device?: Identity;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Optional. The user associated with this action.
     */
    user?: Identity;
}
export interface Initiator extends Identity, Parsable {
    /**
     * Type of initiator. Possible values are: user, application, system, unknownFutureValue.
     */
    initiatorType?: InitiatorType;
}
export type InitiatorType = (typeof InitiatorTypeObject)[keyof typeof InitiatorTypeObject];
export interface ProvisionedIdentity extends Identity, Parsable {
    /**
     * Details of the identity.
     */
    details?: DetailsInfo;
    /**
     * Type of identity that has been provisioned, such as 'user' or 'group'. Supports $filter (eq, contains).
     */
    identityType?: string;
}
export interface ProvisioningServicePrincipal extends Identity, Parsable {
}
export interface ProvisioningSystem extends Identity, Parsable {
    /**
     * Details of the system.
     */
    details?: DetailsInfo;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeAppCatalogs(writer: SerializationWriter, appCatalogs: AppCatalogs | undefined = {} as AppCatalogs) : void {
    serializeEntity(writer, appCatalogs)
    writer.writeCollectionOfObjectValues<TeamsApp>("teamsApps", appCatalogs.teamsApps, serializeTeamsApp);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeAzureCommunicationServicesUserIdentity(writer: SerializationWriter, azureCommunicationServicesUserIdentity: AzureCommunicationServicesUserIdentity | undefined = {} as AzureCommunicationServicesUserIdentity) : void {
    serializeIdentity(writer, azureCommunicationServicesUserIdentity)
    writer.writeStringValue("azureCommunicationServicesResourceId", azureCommunicationServicesUserIdentity.azureCommunicationServicesResourceId);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeBaseCollectionPaginationCountResponse(writer: SerializationWriter, baseCollectionPaginationCountResponse: BaseCollectionPaginationCountResponse | undefined = {} as BaseCollectionPaginationCountResponse) : void {
    writer.writeNumberValue("@odata.count", baseCollectionPaginationCountResponse.odataCount);
    writer.writeStringValue("@odata.nextLink", baseCollectionPaginationCountResponse.odataNextLink);
    writer.writeAdditionalData(baseCollectionPaginationCountResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeChatMessageFromIdentitySet(writer: SerializationWriter, chatMessageFromIdentitySet: ChatMessageFromIdentitySet | undefined = {} as ChatMessageFromIdentitySet) : void {
    serializeIdentitySet(writer, chatMessageFromIdentitySet)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeChatMessageMentionedIdentitySet(writer: SerializationWriter, chatMessageMentionedIdentitySet: ChatMessageMentionedIdentitySet | undefined = {} as ChatMessageMentionedIdentitySet) : void {
    serializeIdentitySet(writer, chatMessageMentionedIdentitySet)
    writer.writeObjectValue<TeamworkConversationIdentity>("conversation", chatMessageMentionedIdentitySet.conversation, serializeTeamworkConversationIdentity);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeChatMessageReactionIdentitySet(writer: SerializationWriter, chatMessageReactionIdentitySet: ChatMessageReactionIdentitySet | undefined = {} as ChatMessageReactionIdentitySet) : void {
    serializeIdentitySet(writer, chatMessageReactionIdentitySet)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCommunicationsApplicationIdentity(writer: SerializationWriter, communicationsApplicationIdentity: CommunicationsApplicationIdentity | undefined = {} as CommunicationsApplicationIdentity) : void {
    serializeIdentity(writer, communicationsApplicationIdentity)
    writer.writeStringValue("applicationType", communicationsApplicationIdentity.applicationType);
    writer.writeBooleanValue("hidden", communicationsApplicationIdentity.hidden);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCommunicationsApplicationInstanceIdentity(writer: SerializationWriter, communicationsApplicationInstanceIdentity: CommunicationsApplicationInstanceIdentity | undefined = {} as CommunicationsApplicationInstanceIdentity) : void {
    serializeIdentity(writer, communicationsApplicationInstanceIdentity)
    writer.writeBooleanValue("hidden", communicationsApplicationInstanceIdentity.hidden);
    writer.writeStringValue("tenantId", communicationsApplicationInstanceIdentity.tenantId);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCommunicationsEncryptedIdentity(writer: SerializationWriter, communicationsEncryptedIdentity: CommunicationsEncryptedIdentity | undefined = {} as CommunicationsEncryptedIdentity) : void {
    serializeIdentity(writer, communicationsEncryptedIdentity)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCommunicationsGuestIdentity(writer: SerializationWriter, communicationsGuestIdentity: CommunicationsGuestIdentity | undefined = {} as CommunicationsGuestIdentity) : void {
    serializeIdentity(writer, communicationsGuestIdentity)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCommunicationsIdentitySet(writer: SerializationWriter, communicationsIdentitySet: CommunicationsIdentitySet | undefined = {} as CommunicationsIdentitySet) : void {
    serializeIdentitySet(writer, communicationsIdentitySet)
    writer.writeObjectValue<Identity>("applicationInstance", communicationsIdentitySet.applicationInstance, serializeIdentity);
    writer.writeObjectValue<Identity>("assertedIdentity", communicationsIdentitySet.assertedIdentity, serializeIdentity);
    writer.writeObjectValue<Identity>("azureCommunicationServicesUser", communicationsIdentitySet.azureCommunicationServicesUser, serializeIdentity);
    writer.writeObjectValue<Identity>("encrypted", communicationsIdentitySet.encrypted, serializeIdentity);
    writer.writeEnumValue<EndpointType>("endpointType", communicationsIdentitySet.endpointType);
    writer.writeObjectValue<Identity>("guest", communicationsIdentitySet.guest, serializeIdentity);
    writer.writeObjectValue<Identity>("onPremises", communicationsIdentitySet.onPremises, serializeIdentity);
    writer.writeObjectValue<Identity>("phone", communicationsIdentitySet.phone, serializeIdentity);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCommunicationsPhoneIdentity(writer: SerializationWriter, communicationsPhoneIdentity: CommunicationsPhoneIdentity | undefined = {} as CommunicationsPhoneIdentity) : void {
    serializeIdentity(writer, communicationsPhoneIdentity)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeCommunicationsUserIdentity(writer: SerializationWriter, communicationsUserIdentity: CommunicationsUserIdentity | undefined = {} as CommunicationsUserIdentity) : void {
    serializeIdentity(writer, communicationsUserIdentity)
    writer.writeStringValue("tenantId", communicationsUserIdentity.tenantId);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeDetailsInfo(writer: SerializationWriter, detailsInfo: DetailsInfo | undefined = {} as DetailsInfo) : void {
    writer.writeStringValue("@odata.type", detailsInfo.odataType);
    writer.writeAdditionalData(detailsInfo.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeEmailIdentity(writer: SerializationWriter, emailIdentity: EmailIdentity | undefined = {} as EmailIdentity) : void {
    serializeIdentity(writer, emailIdentity)
    writer.writeStringValue("email", emailIdentity.email);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeEntity(writer: SerializationWriter, entity: Entity | undefined = {} as Entity) : void {
    writer.writeStringValue("id", entity.id);
    writer.writeStringValue("@odata.type", entity.odataType);
    writer.writeAdditionalData(entity.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeIdentity(writer: SerializationWriter, identity: Identity | undefined = {} as Identity) : void {
    writer.writeStringValue("displayName", identity.displayName);
    writer.writeStringValue("id", identity.id);
    writer.writeStringValue("@odata.type", identity.odataType);
    writer.writeAdditionalData(identity.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeIdentitySet(writer: SerializationWriter, identitySet: IdentitySet | undefined = {} as IdentitySet) : void {
    writer.writeObjectValue<Identity>("application", identitySet.application, serializeIdentity);
    writer.writeObjectValue<Identity>("device", identitySet.device, serializeIdentity);
    writer.writeStringValue("@odata.type", identitySet.odataType);
    writer.writeObjectValue<Identity>("user", identitySet.user, serializeIdentity);
    writer.writeAdditionalData(identitySet.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeInitiator(writer: SerializationWriter, initiator: Initiator | undefined = {} as Initiator) : void {
    serializeIdentity(writer, initiator)
    writer.writeEnumValue<InitiatorType>("initiatorType", initiator.initiatorType);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeProvisionedIdentity(writer: SerializationWriter, provisionedIdentity: ProvisionedIdentity | undefined = {} as ProvisionedIdentity) : void {
    serializeIdentity(writer, provisionedIdentity)
    writer.writeObjectValue<DetailsInfo>("details", provisionedIdentity.details, serializeDetailsInfo);
    writer.writeStringValue("identityType", provisionedIdentity.identityType);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeProvisioningServicePrincipal(writer: SerializationWriter, provisioningServicePrincipal: ProvisioningServicePrincipal | undefined = {} as ProvisioningServicePrincipal) : void {
    serializeIdentity(writer, provisioningServicePrincipal)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeProvisioningSystem(writer: SerializationWriter, provisioningSystem: ProvisioningSystem | undefined = {} as ProvisioningSystem) : void {
    serializeIdentity(writer, provisioningSystem)
    writer.writeObjectValue<DetailsInfo>("details", provisioningSystem.details, serializeDetailsInfo);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeServicePrincipalIdentity(writer: SerializationWriter, servicePrincipalIdentity: ServicePrincipalIdentity | undefined = {} as ServicePrincipalIdentity) : void {
    serializeIdentity(writer, servicePrincipalIdentity)
    writer.writeStringValue("appId", servicePrincipalIdentity.appId);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeSharePointIdentity(writer: SerializationWriter, sharePointIdentity: SharePointIdentity | undefined = {} as SharePointIdentity) : void {
    serializeIdentity(writer, sharePointIdentity)
    writer.writeStringValue("loginName", sharePointIdentity.loginName);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeSharePointIdentitySet(writer: SerializationWriter, sharePointIdentitySet: SharePointIdentitySet | undefined = {} as SharePointIdentitySet) : void {
    serializeIdentitySet(writer, sharePointIdentitySet)
    writer.writeObjectValue<Identity>("group", sharePointIdentitySet.group, serializeIdentity);
    writer.writeObjectValue<SharePointIdentity>("siteGroup", sharePointIdentitySet.siteGroup, serializeSharePointIdentity);
    writer.writeObjectValue<SharePointIdentity>("siteUser", sharePointIdentitySet.siteUser, serializeSharePointIdentity);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamsApp(writer: SerializationWriter, teamsApp: TeamsApp | undefined = {} as TeamsApp) : void {
    serializeEntity(writer, teamsApp)
    writer.writeCollectionOfObjectValues<TeamsAppDefinition>("appDefinitions", teamsApp.appDefinitions, serializeTeamsAppDefinition);
    writer.writeStringValue("displayName", teamsApp.displayName);
    writer.writeEnumValue<TeamsAppDistributionMethod>("distributionMethod", teamsApp.distributionMethod);
    writer.writeStringValue("externalId", teamsApp.externalId);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamsAppAuthorization(writer: SerializationWriter, teamsAppAuthorization: TeamsAppAuthorization | undefined = {} as TeamsAppAuthorization) : void {
    writer.writeStringValue("@odata.type", teamsAppAuthorization.odataType);
    writer.writeObjectValue<TeamsAppPermissionSet>("requiredPermissionSet", teamsAppAuthorization.requiredPermissionSet, serializeTeamsAppPermissionSet);
    writer.writeAdditionalData(teamsAppAuthorization.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamsAppCollectionResponse(writer: SerializationWriter, teamsAppCollectionResponse: TeamsAppCollectionResponse | undefined = {} as TeamsAppCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, teamsAppCollectionResponse)
    writer.writeCollectionOfObjectValues<TeamsApp>("value", teamsAppCollectionResponse.value, serializeTeamsApp);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamsAppDefinition(writer: SerializationWriter, teamsAppDefinition: TeamsAppDefinition | undefined = {} as TeamsAppDefinition) : void {
    serializeEntity(writer, teamsAppDefinition)
    writer.writeObjectValue<TeamsAppAuthorization>("authorization", teamsAppDefinition.authorization, serializeTeamsAppAuthorization);
    writer.writeObjectValue<TeamworkBot>("bot", teamsAppDefinition.bot, serializeTeamworkBot);
    writer.writeObjectValue<IdentitySet>("createdBy", teamsAppDefinition.createdBy, serializeIdentitySet);
    writer.writeStringValue("description", teamsAppDefinition.description);
    writer.writeStringValue("displayName", teamsAppDefinition.displayName);
    writer.writeDateValue("lastModifiedDateTime", teamsAppDefinition.lastModifiedDateTime);
    writer.writeEnumValue<TeamsAppPublishingState>("publishingState", teamsAppDefinition.publishingState);
    writer.writeStringValue("shortDescription", teamsAppDefinition.shortDescription);
    writer.writeStringValue("teamsAppId", teamsAppDefinition.teamsAppId);
    writer.writeStringValue("version", teamsAppDefinition.version);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamsAppDefinitionCollectionResponse(writer: SerializationWriter, teamsAppDefinitionCollectionResponse: TeamsAppDefinitionCollectionResponse | undefined = {} as TeamsAppDefinitionCollectionResponse) : void {
    serializeBaseCollectionPaginationCountResponse(writer, teamsAppDefinitionCollectionResponse)
    writer.writeCollectionOfObjectValues<TeamsAppDefinition>("value", teamsAppDefinitionCollectionResponse.value, serializeTeamsAppDefinition);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamsAppPermissionSet(writer: SerializationWriter, teamsAppPermissionSet: TeamsAppPermissionSet | undefined = {} as TeamsAppPermissionSet) : void {
    writer.writeStringValue("@odata.type", teamsAppPermissionSet.odataType);
    writer.writeCollectionOfObjectValues<TeamsAppResourceSpecificPermission>("resourceSpecificPermissions", teamsAppPermissionSet.resourceSpecificPermissions, serializeTeamsAppResourceSpecificPermission);
    writer.writeAdditionalData(teamsAppPermissionSet.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamsAppResourceSpecificPermission(writer: SerializationWriter, teamsAppResourceSpecificPermission: TeamsAppResourceSpecificPermission | undefined = {} as TeamsAppResourceSpecificPermission) : void {
    writer.writeStringValue("@odata.type", teamsAppResourceSpecificPermission.odataType);
    writer.writeEnumValue<TeamsAppResourceSpecificPermissionType>("permissionType", teamsAppResourceSpecificPermission.permissionType);
    writer.writeStringValue("permissionValue", teamsAppResourceSpecificPermission.permissionValue);
    writer.writeAdditionalData(teamsAppResourceSpecificPermission.additionalData);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamworkApplicationIdentity(writer: SerializationWriter, teamworkApplicationIdentity: TeamworkApplicationIdentity | undefined = {} as TeamworkApplicationIdentity) : void {
    serializeIdentity(writer, teamworkApplicationIdentity)
    writer.writeEnumValue<TeamworkApplicationIdentityType>("applicationIdentityType", teamworkApplicationIdentity.applicationIdentityType);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamworkBot(writer: SerializationWriter, teamworkBot: TeamworkBot | undefined = {} as TeamworkBot) : void {
    serializeEntity(writer, teamworkBot)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamworkConversationIdentity(writer: SerializationWriter, teamworkConversationIdentity: TeamworkConversationIdentity | undefined = {} as TeamworkConversationIdentity) : void {
    serializeIdentity(writer, teamworkConversationIdentity)
    writer.writeEnumValue<TeamworkConversationIdentityType>("conversationIdentityType", teamworkConversationIdentity.conversationIdentityType);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamworkTagIdentity(writer: SerializationWriter, teamworkTagIdentity: TeamworkTagIdentity | undefined = {} as TeamworkTagIdentity) : void {
    serializeIdentity(writer, teamworkTagIdentity)
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeTeamworkUserIdentity(writer: SerializationWriter, teamworkUserIdentity: TeamworkUserIdentity | undefined = {} as TeamworkUserIdentity) : void {
    serializeIdentity(writer, teamworkUserIdentity)
    writer.writeEnumValue<TeamworkUserIdentityType>("userIdentityType", teamworkUserIdentity.userIdentityType);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeUserIdentity(writer: SerializationWriter, userIdentity: UserIdentity | undefined = {} as UserIdentity) : void {
    serializeIdentity(writer, userIdentity)
    writer.writeStringValue("ipAddress", userIdentity.ipAddress);
    writer.writeStringValue("userPrincipalName", userIdentity.userPrincipalName);
}
export interface ServicePrincipalIdentity extends Identity, Parsable {
    /**
     * The application identifier of the service principal.
     */
    appId?: string;
}
export interface SharePointIdentity extends Identity, Parsable {
    /**
     * The sign in name of the SharePoint identity.
     */
    loginName?: string;
}
export interface SharePointIdentitySet extends IdentitySet, Parsable {
    /**
     * The group associated with this action. Optional.
     */
    group?: Identity;
    /**
     * The SharePoint group associated with this action. Optional.
     */
    siteGroup?: SharePointIdentity;
    /**
     * The SharePoint user associated with this action. Optional.
     */
    siteUser?: SharePointIdentity;
}
export interface TeamsApp extends Entity, Parsable {
    /**
     * The details for each version of the app.
     */
    appDefinitions?: TeamsAppDefinition[];
    /**
     * The name of the catalog app provided by the app developer in the Microsoft Teams zip app package.
     */
    displayName?: string;
    /**
     * The method of distribution for the app. Read-only.
     */
    distributionMethod?: TeamsAppDistributionMethod;
    /**
     * The ID of the catalog provided by the app developer in the Microsoft Teams zip app package.
     */
    externalId?: string;
}
export interface TeamsAppAuthorization extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * Set of permissions required by the teamsApp.
     */
    requiredPermissionSet?: TeamsAppPermissionSet;
}
export interface TeamsAppCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TeamsApp[];
}
export interface TeamsAppDefinition extends Entity, Parsable {
    /**
     * Authorization requirements specified in the Teams app manifest.
     */
    authorization?: TeamsAppAuthorization;
    /**
     * The details of the bot specified in the Teams app manifest.
     */
    bot?: TeamworkBot;
    /**
     * The createdBy property
     */
    createdBy?: IdentitySet;
    /**
     * Verbose description of the application.
     */
    description?: string;
    /**
     * The name of the app provided by the app developer.
     */
    displayName?: string;
    /**
     * The lastModifiedDateTime property
     */
    lastModifiedDateTime?: Date;
    /**
     * The published status of a specific version of a Teams app. Possible values are:submitted—The specific version of the Teams app has been submitted and is under review. published—The request to publish the specific version of the Teams app has been approved by the admin and the app is published.  rejected—The admin rejected the request to publish the specific version of the Teams app.
     */
    publishingState?: TeamsAppPublishingState;
    /**
     * Short description of the application.
     */
    shortDescription?: string;
    /**
     * The ID from the Teams app manifest.
     */
    teamsAppId?: string;
    /**
     * The version number of the application.
     */
    version?: string;
}
export interface TeamsAppDefinitionCollectionResponse extends BaseCollectionPaginationCountResponse, Parsable {
    /**
     * The value property
     */
    value?: TeamsAppDefinition[];
}
export type TeamsAppDistributionMethod = (typeof TeamsAppDistributionMethodObject)[keyof typeof TeamsAppDistributionMethodObject];
export interface TeamsAppPermissionSet extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * A collection of resource-specific permissions.
     */
    resourceSpecificPermissions?: TeamsAppResourceSpecificPermission[];
}
export type TeamsAppPublishingState = (typeof TeamsAppPublishingStateObject)[keyof typeof TeamsAppPublishingStateObject];
export interface TeamsAppResourceSpecificPermission extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The OdataType property
     */
    odataType?: string;
    /**
     * The type of resource-specific permission.
     */
    permissionType?: TeamsAppResourceSpecificPermissionType;
    /**
     * The name of the resource-specific permission.
     */
    permissionValue?: string;
}
export type TeamsAppResourceSpecificPermissionType = (typeof TeamsAppResourceSpecificPermissionTypeObject)[keyof typeof TeamsAppResourceSpecificPermissionTypeObject];
export interface TeamworkApplicationIdentity extends Identity, Parsable {
    /**
     * Type of application that is referenced. Possible values are: aadApplication, bot, tenantBot, office365Connector, outgoingWebhook, and unknownFutureValue.
     */
    applicationIdentityType?: TeamworkApplicationIdentityType;
}
export type TeamworkApplicationIdentityType = (typeof TeamworkApplicationIdentityTypeObject)[keyof typeof TeamworkApplicationIdentityTypeObject];
export interface TeamworkBot extends Entity, Parsable {
}
export interface TeamworkConversationIdentity extends Identity, Parsable {
    /**
     * Type of conversation. Possible values are: team, channel, chat, and unknownFutureValue.
     */
    conversationIdentityType?: TeamworkConversationIdentityType;
}
export type TeamworkConversationIdentityType = (typeof TeamworkConversationIdentityTypeObject)[keyof typeof TeamworkConversationIdentityTypeObject];
export interface TeamworkTagIdentity extends Identity, Parsable {
}
export interface TeamworkUserIdentity extends Identity, Parsable {
    /**
     * Type of user. Possible values are: aadUser, onPremiseAadUser, anonymousGuest, federatedUser, personalMicrosoftAccountUser, skypeUser, phoneUser, unknownFutureValue and emailUser.
     */
    userIdentityType?: TeamworkUserIdentityType;
}
export type TeamworkUserIdentityType = (typeof TeamworkUserIdentityTypeObject)[keyof typeof TeamworkUserIdentityTypeObject];
export interface UserIdentity extends Identity, Parsable {
    /**
     * Indicates the client IP address used by user performing the activity (audit log only).
     */
    ipAddress?: string;
    /**
     * The userPrincipalName attribute of the user.
     */
    userPrincipalName?: string;
}
export const EndpointTypeObject = {
    DefaultEscaped: "default",
    Voicemail: "voicemail",
    SkypeForBusiness: "skypeForBusiness",
    SkypeForBusinessVoipPhone: "skypeForBusinessVoipPhone",
    UnknownFutureValue: "unknownFutureValue",
}  as const;
export const InitiatorTypeObject = {
    User: "user",
    Application: "application",
    System: "system",
    UnknownFutureValue: "unknownFutureValue",
}  as const;
export const TeamsAppDistributionMethodObject = {
    Store: "store",
    Organization: "organization",
    Sideloaded: "sideloaded",
    UnknownFutureValue: "unknownFutureValue",
}  as const;
export const TeamsAppPublishingStateObject = {
    Submitted: "submitted",
    Rejected: "rejected",
    Published: "published",
    UnknownFutureValue: "unknownFutureValue",
}  as const;
export const TeamsAppResourceSpecificPermissionTypeObject = {
    Delegated: "delegated",
    Application: "application",
    UnknownFutureValue: "unknownFutureValue",
}  as const;
export const TeamworkApplicationIdentityTypeObject = {
    AadApplication: "aadApplication",
    Bot: "bot",
    TenantBot: "tenantBot",
    Office365Connector: "office365Connector",
    OutgoingWebhook: "outgoingWebhook",
    UnknownFutureValue: "unknownFutureValue",
}  as const;
export const TeamworkConversationIdentityTypeObject = {
    Team: "team",
    Channel: "channel",
    Chat: "chat",
    UnknownFutureValue: "unknownFutureValue",
}  as const;
export const TeamworkUserIdentityTypeObject = {
    AadUser: "aadUser",
    OnPremiseAadUser: "onPremiseAadUser",
    AnonymousGuest: "anonymousGuest",
    FederatedUser: "federatedUser",
    PersonalMicrosoftAccountUser: "personalMicrosoftAccountUser",
    SkypeUser: "skypeUser",
    PhoneUser: "phoneUser",
    UnknownFutureValue: "unknownFutureValue",
    EmailUser: "emailUser",
}  as const;
/* tslint:enable */
/* eslint-enable */
