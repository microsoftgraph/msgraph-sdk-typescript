/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { createBilledReconciliationFromDiscriminatorValue, serializeBilledReconciliation, type BilledReconciliation } from '@microsoft/msgraph-sdk/models/partners/billing/';
// @ts-ignore
import { MicrosoftGraphPartnersBillingExportRequestBuilderRequestsMetadata, type MicrosoftGraphPartnersBillingExportRequestBuilder } from './microsoftGraphPartnersBillingExport/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the billed property of the microsoft.graph.partners.billing.billingReconciliation entity.
 */
export interface BilledRequestBuilder extends BaseRequestBuilder<BilledRequestBuilder> {
    /**
     * Provides operations to call the export method.
     */
    get microsoftGraphPartnersBillingExport(): MicrosoftGraphPartnersBillingExportRequestBuilder;
    /**
     * Delete navigation property billed for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents details for billed invoice reconciliation data.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BilledReconciliation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<BilledRequestBuilderGetQueryParameters> | undefined) : Promise<BilledReconciliation | undefined>;
    /**
     * Update the navigation property billed in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BilledReconciliation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: BilledReconciliation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<BilledReconciliation | undefined>;
    /**
     * Delete navigation property billed for reports
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents details for billed invoice reconciliation data.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<BilledRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property billed in reports
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: BilledReconciliation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents details for billed invoice reconciliation data.
 */
export interface BilledRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const BilledRequestBuilderUriTemplate = "{+baseurl}/reports/partners/billing/reconciliation/billed{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const BilledRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const BilledRequestBuilderNavigationMetadata: Record<Exclude<keyof BilledRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    microsoftGraphPartnersBillingExport: {
        requestsMetadata: MicrosoftGraphPartnersBillingExportRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const BilledRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: BilledRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: BilledRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBilledReconciliationFromDiscriminatorValue,
        queryParametersMapper: BilledRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: BilledRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBilledReconciliationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeBilledReconciliation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
