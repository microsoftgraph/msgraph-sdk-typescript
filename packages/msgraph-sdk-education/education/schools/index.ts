/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEducationSchoolCollectionResponseFromDiscriminatorValue, createEducationSchoolFromDiscriminatorValue, serializeEducationSchool, type EducationSchool, type EducationSchoolCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { DeltaRequestBuilderRequestsMetadata, type DeltaRequestBuilder } from './delta/';
import { EducationSchoolItemRequestBuilderNavigationMetadata, EducationSchoolItemRequestBuilderRequestsMetadata, type EducationSchoolItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the schools property of the microsoft.graph.educationRoot entity.
 */
export interface SchoolsRequestBuilder extends BaseRequestBuilder<SchoolsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the delta method.
     */
    get delta(): DeltaRequestBuilder;
    /**
     * Provides operations to manage the schools property of the microsoft.graph.educationRoot entity.
     * @param educationSchoolId The unique identifier of educationSchool
     * @returns {EducationSchoolItemRequestBuilder}
     */
     byEducationSchoolId(educationSchoolId: string) : EducationSchoolItemRequestBuilder;
    /**
     * Get a list of the educationSchool objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationSchoolCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/educationschool-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<SchoolsRequestBuilderGetQueryParameters> | undefined) : Promise<EducationSchoolCollectionResponse | undefined>;
    /**
     * Create a new educationSchool object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationSchool>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/educationschool-post?view=graph-rest-1.0|Find more info here}
     */
     post(body: EducationSchool, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EducationSchool | undefined>;
    /**
     * Get a list of the educationSchool objects and their properties.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SchoolsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new educationSchool object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: EducationSchool, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get a list of the educationSchool objects and their properties.
 */
export interface SchoolsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const SchoolsRequestBuilderUriTemplate = "{+baseurl}/education/schools{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the schools property of the microsoft.graph.educationRoot entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AdministrativeUnit: "administrativeUnit",
    Classes: "classes",
    Users: "users",
} as const;
/**
 * Provides operations to manage the schools property of the microsoft.graph.educationRoot entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    Description: "description",
    DescriptionDesc: "description desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    ExternalSource: "externalSource",
    ExternalSourceDesc: "externalSource desc",
    ExternalSourceDetail: "externalSourceDetail",
    ExternalSourceDetailDesc: "externalSourceDetail desc",
    Address: "address",
    AddressDesc: "address desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    ExternalId: "externalId",
    ExternalIdDesc: "externalId desc",
    ExternalPrincipalId: "externalPrincipalId",
    ExternalPrincipalIdDesc: "externalPrincipalId desc",
    Fax: "fax",
    FaxDesc: "fax desc",
    HighestGrade: "highestGrade",
    HighestGradeDesc: "highestGrade desc",
    LowestGrade: "lowestGrade",
    LowestGradeDesc: "lowestGrade desc",
    Phone: "phone",
    PhoneDesc: "phone desc",
    PrincipalEmail: "principalEmail",
    PrincipalEmailDesc: "principalEmail desc",
    PrincipalName: "principalName",
    PrincipalNameDesc: "principalName desc",
    SchoolNumber: "schoolNumber",
    SchoolNumberDesc: "schoolNumber desc",
} as const;
/**
 * Provides operations to manage the schools property of the microsoft.graph.educationRoot entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    Description: "description",
    DisplayName: "displayName",
    ExternalSource: "externalSource",
    ExternalSourceDetail: "externalSourceDetail",
    Address: "address",
    CreatedBy: "createdBy",
    ExternalId: "externalId",
    ExternalPrincipalId: "externalPrincipalId",
    Fax: "fax",
    HighestGrade: "highestGrade",
    LowestGrade: "lowestGrade",
    Phone: "phone",
    PrincipalEmail: "principalEmail",
    PrincipalName: "principalName",
    SchoolNumber: "schoolNumber",
    AdministrativeUnit: "administrativeUnit",
    Classes: "classes",
    Users: "users",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SchoolsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SchoolsRequestBuilderNavigationMetadata: Record<Exclude<keyof SchoolsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byEducationSchoolId: {
        requestsMetadata: EducationSchoolItemRequestBuilderRequestsMetadata,
        navigationMetadata: EducationSchoolItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["educationSchool%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    delta: {
        requestsMetadata: DeltaRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SchoolsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SchoolsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationSchoolCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: SchoolsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: SchoolsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationSchoolFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEducationSchool,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
