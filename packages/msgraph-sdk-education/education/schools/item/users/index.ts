/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEducationUserCollectionResponseFromDiscriminatorValue, type EducationUserCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { EducationUserItemRequestBuilderNavigationMetadata, type EducationUserItemRequestBuilder } from './item/';
import { RefRequestBuilderRequestsMetadata, type RefRequestBuilder } from './ref/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the users property of the microsoft.graph.educationSchool entity.
 */
export interface UsersRequestBuilder extends BaseRequestBuilder<UsersRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the collection of educationRoot entities.
     */
    get ref(): RefRequestBuilder;
    /**
     * Gets an item from the github.com/microsoftgraph/msgraph-sdk-typescript/.education.schools.item.users.item collection
     * @param educationUserId The unique identifier of educationUser
     * @returns {EducationUserItemRequestBuilder}
     */
     byEducationUserId(educationUserId: string) : EducationUserItemRequestBuilder;
    /**
     * Get the educationUser resources associated with an educationSchool.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationUserCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/educationschool-list-users?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<UsersRequestBuilderGetQueryParameters> | undefined) : Promise<EducationUserCollectionResponse | undefined>;
    /**
     * Get the educationUser resources associated with an educationSchool.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UsersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Get the educationUser resources associated with an educationSchool.
 */
export interface UsersRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const UsersRequestBuilderUriTemplate = "{+baseurl}/education/schools/{educationSchool%2Did}/users{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the users property of the microsoft.graph.educationSchool entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Assignments: "assignments",
    Classes: "classes",
    Rubrics: "rubrics",
    Schools: "schools",
    TaughtClasses: "taughtClasses",
    User: "user",
} as const;
/**
 * Provides operations to manage the users property of the microsoft.graph.educationSchool entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AccountEnabled: "accountEnabled",
    AccountEnabledDesc: "accountEnabled desc",
    AssignedLicenses: "assignedLicenses",
    AssignedLicensesDesc: "assignedLicenses desc",
    AssignedPlans: "assignedPlans",
    AssignedPlansDesc: "assignedPlans desc",
    BusinessPhones: "businessPhones",
    BusinessPhonesDesc: "businessPhones desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    Department: "department",
    DepartmentDesc: "department desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    ExternalSource: "externalSource",
    ExternalSourceDesc: "externalSource desc",
    ExternalSourceDetail: "externalSourceDetail",
    ExternalSourceDetailDesc: "externalSourceDetail desc",
    GivenName: "givenName",
    GivenNameDesc: "givenName desc",
    Mail: "mail",
    MailDesc: "mail desc",
    MailingAddress: "mailingAddress",
    MailingAddressDesc: "mailingAddress desc",
    MailNickname: "mailNickname",
    MailNicknameDesc: "mailNickname desc",
    MiddleName: "middleName",
    MiddleNameDesc: "middleName desc",
    MobilePhone: "mobilePhone",
    MobilePhoneDesc: "mobilePhone desc",
    OfficeLocation: "officeLocation",
    OfficeLocationDesc: "officeLocation desc",
    OnPremisesInfo: "onPremisesInfo",
    OnPremisesInfoDesc: "onPremisesInfo desc",
    PasswordPolicies: "passwordPolicies",
    PasswordPoliciesDesc: "passwordPolicies desc",
    PasswordProfile: "passwordProfile",
    PasswordProfileDesc: "passwordProfile desc",
    PreferredLanguage: "preferredLanguage",
    PreferredLanguageDesc: "preferredLanguage desc",
    PrimaryRole: "primaryRole",
    PrimaryRoleDesc: "primaryRole desc",
    ProvisionedPlans: "provisionedPlans",
    ProvisionedPlansDesc: "provisionedPlans desc",
    RefreshTokensValidFromDateTime: "refreshTokensValidFromDateTime",
    RefreshTokensValidFromDateTimeDesc: "refreshTokensValidFromDateTime desc",
    RelatedContacts: "relatedContacts",
    RelatedContactsDesc: "relatedContacts desc",
    ResidenceAddress: "residenceAddress",
    ResidenceAddressDesc: "residenceAddress desc",
    ShowInAddressList: "showInAddressList",
    ShowInAddressListDesc: "showInAddressList desc",
    Student: "student",
    StudentDesc: "student desc",
    Surname: "surname",
    SurnameDesc: "surname desc",
    Teacher: "teacher",
    TeacherDesc: "teacher desc",
    UsageLocation: "usageLocation",
    UsageLocationDesc: "usageLocation desc",
    UserPrincipalName: "userPrincipalName",
    UserPrincipalNameDesc: "userPrincipalName desc",
    UserType: "userType",
    UserTypeDesc: "userType desc",
} as const;
/**
 * Provides operations to manage the users property of the microsoft.graph.educationSchool entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AccountEnabled: "accountEnabled",
    AssignedLicenses: "assignedLicenses",
    AssignedPlans: "assignedPlans",
    BusinessPhones: "businessPhones",
    CreatedBy: "createdBy",
    Department: "department",
    DisplayName: "displayName",
    ExternalSource: "externalSource",
    ExternalSourceDetail: "externalSourceDetail",
    GivenName: "givenName",
    Mail: "mail",
    MailingAddress: "mailingAddress",
    MailNickname: "mailNickname",
    MiddleName: "middleName",
    MobilePhone: "mobilePhone",
    OfficeLocation: "officeLocation",
    OnPremisesInfo: "onPremisesInfo",
    PasswordPolicies: "passwordPolicies",
    PasswordProfile: "passwordProfile",
    PreferredLanguage: "preferredLanguage",
    PrimaryRole: "primaryRole",
    ProvisionedPlans: "provisionedPlans",
    RefreshTokensValidFromDateTime: "refreshTokensValidFromDateTime",
    RelatedContacts: "relatedContacts",
    ResidenceAddress: "residenceAddress",
    ShowInAddressList: "showInAddressList",
    Student: "student",
    Surname: "surname",
    Teacher: "teacher",
    UsageLocation: "usageLocation",
    UserPrincipalName: "userPrincipalName",
    UserType: "userType",
    Assignments: "assignments",
    Classes: "classes",
    Rubrics: "rubrics",
    Schools: "schools",
    TaughtClasses: "taughtClasses",
    User: "user",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UsersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UsersRequestBuilderNavigationMetadata: Record<Exclude<keyof UsersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byEducationUserId: {
        navigationMetadata: EducationUserItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["educationUser%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    ref: {
        requestsMetadata: RefRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UsersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: UsersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationUserCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: UsersRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
