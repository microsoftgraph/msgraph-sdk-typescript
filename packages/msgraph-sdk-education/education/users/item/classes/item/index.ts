/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEducationClassFromDiscriminatorValue, type EducationClass } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the classes property of the microsoft.graph.educationUser entity.
 */
export interface EducationClassItemRequestBuilder extends BaseRequestBuilder<EducationClassItemRequestBuilder> {
    /**
     * Classes to which the user belongs. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationClass>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<EducationClassItemRequestBuilderGetQueryParameters> | undefined) : Promise<EducationClass | undefined>;
    /**
     * Classes to which the user belongs. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EducationClassItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Classes to which the user belongs. Nullable.
 */
export interface EducationClassItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const EducationClassItemRequestBuilderUriTemplate = "{+baseurl}/education/users/{educationUser%2Did}/classes/{educationClass%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EducationClassItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EducationClassItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: EducationClassItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationClassFromDiscriminatorValue,
        queryParametersMapper: EducationClassItemRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the classes property of the microsoft.graph.educationUser entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AssignmentCategories: "assignmentCategories",
    AssignmentDefaults: "assignmentDefaults",
    Assignments: "assignments",
    AssignmentSettings: "assignmentSettings",
    Group: "group",
    Members: "members",
    Modules: "modules",
    Schools: "schools",
    Teachers: "teachers",
} as const;
/**
 * Provides operations to manage the classes property of the microsoft.graph.educationUser entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ClassCode: "classCode",
    Course: "course",
    CreatedBy: "createdBy",
    Description: "description",
    DisplayName: "displayName",
    ExternalId: "externalId",
    ExternalName: "externalName",
    ExternalSource: "externalSource",
    ExternalSourceDetail: "externalSourceDetail",
    Grade: "grade",
    MailNickname: "mailNickname",
    Term: "term",
    AssignmentCategories: "assignmentCategories",
    AssignmentDefaults: "assignmentDefaults",
    Assignments: "assignments",
    AssignmentSettings: "assignmentSettings",
    Group: "group",
    Members: "members",
    Modules: "modules",
    Schools: "schools",
    Teachers: "teachers",
} as const;
/* tslint:enable */
/* eslint-enable */
