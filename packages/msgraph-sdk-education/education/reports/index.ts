/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createReportsRootFromDiscriminatorValue, serializeReportsRoot, type ReportsRoot } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { ReadingAssignmentSubmissionsRequestBuilderNavigationMetadata, ReadingAssignmentSubmissionsRequestBuilderRequestsMetadata, type ReadingAssignmentSubmissionsRequestBuilder } from './readingAssignmentSubmissions/index.js';
// @ts-ignore
import { ReadingCoachPassagesRequestBuilderNavigationMetadata, ReadingCoachPassagesRequestBuilderRequestsMetadata, type ReadingCoachPassagesRequestBuilder } from './readingCoachPassages/index.js';
// @ts-ignore
import { ReflectCheckInResponsesRequestBuilderNavigationMetadata, ReflectCheckInResponsesRequestBuilderRequestsMetadata, type ReflectCheckInResponsesRequestBuilder } from './reflectCheckInResponses/index.js';
// @ts-ignore
import { SpeakerAssignmentSubmissionsRequestBuilderNavigationMetadata, SpeakerAssignmentSubmissionsRequestBuilderRequestsMetadata, type SpeakerAssignmentSubmissionsRequestBuilder } from './speakerAssignmentSubmissions/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the reports property of the microsoft.graph.educationRoot entity.
 */
export interface ReportsRequestBuilder extends BaseRequestBuilder<ReportsRequestBuilder> {
    /**
     * Provides operations to manage the readingAssignmentSubmissions property of the microsoft.graph.reportsRoot entity.
     */
    get readingAssignmentSubmissions(): ReadingAssignmentSubmissionsRequestBuilder;
    /**
     * Provides operations to manage the readingCoachPassages property of the microsoft.graph.reportsRoot entity.
     */
    get readingCoachPassages(): ReadingCoachPassagesRequestBuilder;
    /**
     * Provides operations to manage the reflectCheckInResponses property of the microsoft.graph.reportsRoot entity.
     */
    get reflectCheckInResponses(): ReflectCheckInResponsesRequestBuilder;
    /**
     * Provides operations to manage the speakerAssignmentSubmissions property of the microsoft.graph.reportsRoot entity.
     */
    get speakerAssignmentSubmissions(): SpeakerAssignmentSubmissionsRequestBuilder;
    /**
     * Delete navigation property reports for education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get reports from education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ReportsRoot>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ReportsRequestBuilderGetQueryParameters> | undefined) : Promise<ReportsRoot | undefined>;
    /**
     * Update the navigation property reports in education
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ReportsRoot>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: ReportsRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ReportsRoot | undefined>;
    /**
     * Delete navigation property reports for education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get reports from education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ReportsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property reports in education
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ReportsRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get reports from education
 */
export interface ReportsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ReportsRequestBuilderUriTemplate = "{+baseurl}/education/reports{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ReportsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ReportsRequestBuilderNavigationMetadata: Record<Exclude<keyof ReportsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    readingAssignmentSubmissions: {
        requestsMetadata: ReadingAssignmentSubmissionsRequestBuilderRequestsMetadata,
        navigationMetadata: ReadingAssignmentSubmissionsRequestBuilderNavigationMetadata,
    },
    readingCoachPassages: {
        requestsMetadata: ReadingCoachPassagesRequestBuilderRequestsMetadata,
        navigationMetadata: ReadingCoachPassagesRequestBuilderNavigationMetadata,
    },
    reflectCheckInResponses: {
        requestsMetadata: ReflectCheckInResponsesRequestBuilderRequestsMetadata,
        navigationMetadata: ReflectCheckInResponsesRequestBuilderNavigationMetadata,
    },
    speakerAssignmentSubmissions: {
        requestsMetadata: SpeakerAssignmentSubmissionsRequestBuilderRequestsMetadata,
        navigationMetadata: SpeakerAssignmentSubmissionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ReportsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ReportsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ReportsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createReportsRootFromDiscriminatorValue,
        queryParametersMapper: ReportsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ReportsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createReportsRootFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeReportsRoot,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
