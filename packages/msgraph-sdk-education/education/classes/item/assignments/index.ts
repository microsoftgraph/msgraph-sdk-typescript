/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEducationAssignmentCollectionResponseFromDiscriminatorValue, createEducationAssignmentFromDiscriminatorValue, serializeEducationAssignment, type EducationAssignment, type EducationAssignmentCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { DeltaRequestBuilderRequestsMetadata, type DeltaRequestBuilder } from './delta/';
import { EducationAssignmentItemRequestBuilderNavigationMetadata, EducationAssignmentItemRequestBuilderRequestsMetadata, type EducationAssignmentItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignments property of the microsoft.graph.educationClass entity.
 */
export interface AssignmentsRequestBuilder extends BaseRequestBuilder<AssignmentsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to call the delta method.
     */
    get delta(): DeltaRequestBuilder;
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.educationClass entity.
     * @param educationAssignmentId The unique identifier of educationAssignment
     * @returns {EducationAssignmentItemRequestBuilder}
     */
     byEducationAssignmentId(educationAssignmentId: string) : EducationAssignmentItemRequestBuilder;
    /**
     * Retrieve a list of assignment objects. Only teachers, students, and applications with application permissions can perform this operation. A teacher, or an application running with application permissions, can see all assignment objects for the class. Students can only see assignments that are assigned to them.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationAssignmentCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/educationclass-list-assignments?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<AssignmentsRequestBuilderGetQueryParameters> | undefined) : Promise<EducationAssignmentCollectionResponse | undefined>;
    /**
     * Create a new assignment. Only teachers in a class can create an assignment. Assignments start in the Draft state, which means that students will not see the assignment until publication.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationAssignment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/educationclass-post-assignment?view=graph-rest-1.0|Find more info here}
     */
     post(body: EducationAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EducationAssignment | undefined>;
    /**
     * Retrieve a list of assignment objects. Only teachers, students, and applications with application permissions can perform this operation. A teacher, or an application running with application permissions, can see all assignment objects for the class. Students can only see assignments that are assigned to them.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AssignmentsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new assignment. Only teachers in a class can create an assignment. Assignments start in the Draft state, which means that students will not see the assignment until publication.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: EducationAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a list of assignment objects. Only teachers, students, and applications with application permissions can perform this operation. A teacher, or an application running with application permissions, can see all assignment objects for the class. Students can only see assignments that are assigned to them.
 */
export interface AssignmentsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const AssignmentsRequestBuilderUriTemplate = "{+baseurl}/education/classes/{educationClass%2Did}/assignments{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AssignmentsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AssignmentsRequestBuilderNavigationMetadata: Record<Exclude<keyof AssignmentsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byEducationAssignmentId: {
        requestsMetadata: EducationAssignmentItemRequestBuilderRequestsMetadata,
        navigationMetadata: EducationAssignmentItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["educationAssignment%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    delta: {
        requestsMetadata: DeltaRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AssignmentsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AssignmentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationAssignmentCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: AssignmentsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: AssignmentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationAssignmentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEducationAssignment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the assignments property of the microsoft.graph.educationClass entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    Categories: "categories",
    GradingCategory: "gradingCategory",
    Resources: "resources",
    Rubric: "rubric",
    Submissions: "submissions",
} as const;
/**
 * Provides operations to manage the assignments property of the microsoft.graph.educationClass entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AddedStudentAction: "addedStudentAction",
    AddedStudentActionDesc: "addedStudentAction desc",
    AddToCalendarAction: "addToCalendarAction",
    AddToCalendarActionDesc: "addToCalendarAction desc",
    AllowLateSubmissions: "allowLateSubmissions",
    AllowLateSubmissionsDesc: "allowLateSubmissions desc",
    AllowStudentsToAddResourcesToSubmission: "allowStudentsToAddResourcesToSubmission",
    AllowStudentsToAddResourcesToSubmissionDesc: "allowStudentsToAddResourcesToSubmission desc",
    AssignDateTime: "assignDateTime",
    AssignDateTimeDesc: "assignDateTime desc",
    AssignedDateTime: "assignedDateTime",
    AssignedDateTimeDesc: "assignedDateTime desc",
    AssignTo: "assignTo",
    AssignToDesc: "assignTo desc",
    ClassId: "classId",
    ClassIdDesc: "classId desc",
    CloseDateTime: "closeDateTime",
    CloseDateTimeDesc: "closeDateTime desc",
    CreatedBy: "createdBy",
    CreatedByDesc: "createdBy desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    DisplayName: "displayName",
    DisplayNameDesc: "displayName desc",
    DueDateTime: "dueDateTime",
    DueDateTimeDesc: "dueDateTime desc",
    FeedbackResourcesFolderUrl: "feedbackResourcesFolderUrl",
    FeedbackResourcesFolderUrlDesc: "feedbackResourcesFolderUrl desc",
    Grading: "grading",
    GradingDesc: "grading desc",
    Instructions: "instructions",
    InstructionsDesc: "instructions desc",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedByDesc: "lastModifiedBy desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    ModuleUrl: "moduleUrl",
    ModuleUrlDesc: "moduleUrl desc",
    NotificationChannelUrl: "notificationChannelUrl",
    NotificationChannelUrlDesc: "notificationChannelUrl desc",
    ResourcesFolderUrl: "resourcesFolderUrl",
    ResourcesFolderUrlDesc: "resourcesFolderUrl desc",
    Status: "status",
    StatusDesc: "status desc",
    WebUrl: "webUrl",
    WebUrlDesc: "webUrl desc",
} as const;
/**
 * Provides operations to manage the assignments property of the microsoft.graph.educationClass entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AddedStudentAction: "addedStudentAction",
    AddToCalendarAction: "addToCalendarAction",
    AllowLateSubmissions: "allowLateSubmissions",
    AllowStudentsToAddResourcesToSubmission: "allowStudentsToAddResourcesToSubmission",
    AssignDateTime: "assignDateTime",
    AssignedDateTime: "assignedDateTime",
    AssignTo: "assignTo",
    ClassId: "classId",
    CloseDateTime: "closeDateTime",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    DisplayName: "displayName",
    DueDateTime: "dueDateTime",
    FeedbackResourcesFolderUrl: "feedbackResourcesFolderUrl",
    Grading: "grading",
    Instructions: "instructions",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    ModuleUrl: "moduleUrl",
    NotificationChannelUrl: "notificationChannelUrl",
    ResourcesFolderUrl: "resourcesFolderUrl",
    Status: "status",
    WebUrl: "webUrl",
    Categories: "categories",
    GradingCategory: "gradingCategory",
    Resources: "resources",
    Rubric: "rubric",
    Submissions: "submissions",
} as const;
/* tslint:enable */
/* eslint-enable */
