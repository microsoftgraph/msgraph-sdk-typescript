/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createEducationRootFromDiscriminatorValue, serializeEducationRoot, type EducationRoot } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { ClassesRequestBuilderNavigationMetadata, ClassesRequestBuilderRequestsMetadata, type ClassesRequestBuilder } from './classes/';
// @ts-ignore
import { MeRequestBuilderNavigationMetadata, MeRequestBuilderRequestsMetadata, type MeRequestBuilder } from './me/';
// @ts-ignore
import { SchoolsRequestBuilderNavigationMetadata, SchoolsRequestBuilderRequestsMetadata, type SchoolsRequestBuilder } from './schools/';
// @ts-ignore
import { type UsersRequestBuilder, UsersRequestBuilderNavigationMetadata, UsersRequestBuilderRequestsMetadata } from './users/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the educationRoot singleton.
 */
export interface EducationRequestBuilder extends BaseRequestBuilder<EducationRequestBuilder> {
    /**
     * Provides operations to manage the classes property of the microsoft.graph.educationRoot entity.
     */
    get classes(): ClassesRequestBuilder;
    /**
     * Provides operations to manage the me property of the microsoft.graph.educationRoot entity.
     */
    get me(): MeRequestBuilder;
    /**
     * Provides operations to manage the schools property of the microsoft.graph.educationRoot entity.
     */
    get schools(): SchoolsRequestBuilder;
    /**
     * Provides operations to manage the users property of the microsoft.graph.educationRoot entity.
     */
    get users(): UsersRequestBuilder;
    /**
     * Get education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationRoot>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<EducationRequestBuilderGetQueryParameters> | undefined) : Promise<EducationRoot | undefined>;
    /**
     * Update education
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationRoot>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: EducationRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EducationRoot | undefined>;
    /**
     * Get education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EducationRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update education
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: EducationRoot, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get education
 */
export interface EducationRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const EducationRequestBuilderUriTemplate = "{+baseurl}/education{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EducationRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EducationRequestBuilderNavigationMetadata: Record<Exclude<keyof EducationRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    classes: {
        requestsMetadata: ClassesRequestBuilderRequestsMetadata,
        navigationMetadata: ClassesRequestBuilderNavigationMetadata,
    },
    me: {
        requestsMetadata: MeRequestBuilderRequestsMetadata,
        navigationMetadata: MeRequestBuilderNavigationMetadata,
    },
    schools: {
        requestsMetadata: SchoolsRequestBuilderRequestsMetadata,
        navigationMetadata: SchoolsRequestBuilderNavigationMetadata,
    },
    users: {
        requestsMetadata: UsersRequestBuilderRequestsMetadata,
        navigationMetadata: UsersRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EducationRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: EducationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationRootFromDiscriminatorValue,
        queryParametersMapper: EducationRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: EducationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationRootFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEducationRoot,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
