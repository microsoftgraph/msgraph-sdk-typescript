/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createEducationAssignmentFromDiscriminatorValue, serializeEducationAssignment, type EducationAssignment } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { ActivateRequestBuilderRequestsMetadata, type ActivateRequestBuilder } from './activate/';
// @ts-ignore
import { CategoriesRequestBuilderNavigationMetadata, CategoriesRequestBuilderRequestsMetadata, type CategoriesRequestBuilder } from './categories/';
// @ts-ignore
import { DeactivateRequestBuilderRequestsMetadata, type DeactivateRequestBuilder } from './deactivate/';
// @ts-ignore
import { GradingCategoryRequestBuilderRequestsMetadata, type GradingCategoryRequestBuilder } from './gradingCategory/';
// @ts-ignore
import { PublishRequestBuilderRequestsMetadata, type PublishRequestBuilder } from './publish/';
// @ts-ignore
import { ResourcesRequestBuilderNavigationMetadata, ResourcesRequestBuilderRequestsMetadata, type ResourcesRequestBuilder } from './resources/';
// @ts-ignore
import { RubricRequestBuilderNavigationMetadata, RubricRequestBuilderRequestsMetadata, type RubricRequestBuilder } from './rubric/';
// @ts-ignore
import { SetUpFeedbackResourcesFolderRequestBuilderRequestsMetadata, type SetUpFeedbackResourcesFolderRequestBuilder } from './setUpFeedbackResourcesFolder/';
// @ts-ignore
import { SetUpResourcesFolderRequestBuilderRequestsMetadata, type SetUpResourcesFolderRequestBuilder } from './setUpResourcesFolder/';
// @ts-ignore
import { SubmissionsRequestBuilderNavigationMetadata, SubmissionsRequestBuilderRequestsMetadata, type SubmissionsRequestBuilder } from './submissions/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignments property of the microsoft.graph.educationUser entity.
 */
export interface EducationAssignmentItemRequestBuilder extends BaseRequestBuilder<EducationAssignmentItemRequestBuilder> {
    /**
     * Provides operations to call the activate method.
     */
    get activate(): ActivateRequestBuilder;
    /**
     * Provides operations to manage the categories property of the microsoft.graph.educationAssignment entity.
     */
    get categories(): CategoriesRequestBuilder;
    /**
     * Provides operations to call the deactivate method.
     */
    get deactivate(): DeactivateRequestBuilder;
    /**
     * Provides operations to manage the gradingCategory property of the microsoft.graph.educationAssignment entity.
     */
    get gradingCategory(): GradingCategoryRequestBuilder;
    /**
     * Provides operations to call the publish method.
     */
    get publish(): PublishRequestBuilder;
    /**
     * Provides operations to manage the resources property of the microsoft.graph.educationAssignment entity.
     */
    get resources(): ResourcesRequestBuilder;
    /**
     * Provides operations to manage the rubric property of the microsoft.graph.educationAssignment entity.
     */
    get rubric(): RubricRequestBuilder;
    /**
     * Provides operations to call the setUpFeedbackResourcesFolder method.
     */
    get setUpFeedbackResourcesFolder(): SetUpFeedbackResourcesFolderRequestBuilder;
    /**
     * Provides operations to call the setUpResourcesFolder method.
     */
    get setUpResourcesFolder(): SetUpResourcesFolderRequestBuilder;
    /**
     * Provides operations to manage the submissions property of the microsoft.graph.educationAssignment entity.
     */
    get submissions(): SubmissionsRequestBuilder;
    /**
     * Delete navigation property assignments for education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Assignments belonging to the user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationAssignment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<EducationAssignmentItemRequestBuilderGetQueryParameters> | undefined) : Promise<EducationAssignment | undefined>;
    /**
     * Update the navigation property assignments in education
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EducationAssignment>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: EducationAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EducationAssignment | undefined>;
    /**
     * Delete navigation property assignments for education
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Assignments belonging to the user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EducationAssignmentItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property assignments in education
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: EducationAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Assignments belonging to the user.
 */
export interface EducationAssignmentItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const EducationAssignmentItemRequestBuilderUriTemplate = "{+baseurl}/education/me/assignments/{educationAssignment%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EducationAssignmentItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EducationAssignmentItemRequestBuilderNavigationMetadata: Record<Exclude<keyof EducationAssignmentItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    activate: {
        requestsMetadata: ActivateRequestBuilderRequestsMetadata,
    },
    categories: {
        requestsMetadata: CategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: CategoriesRequestBuilderNavigationMetadata,
    },
    deactivate: {
        requestsMetadata: DeactivateRequestBuilderRequestsMetadata,
    },
    gradingCategory: {
        requestsMetadata: GradingCategoryRequestBuilderRequestsMetadata,
    },
    publish: {
        requestsMetadata: PublishRequestBuilderRequestsMetadata,
    },
    resources: {
        requestsMetadata: ResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: ResourcesRequestBuilderNavigationMetadata,
    },
    rubric: {
        requestsMetadata: RubricRequestBuilderRequestsMetadata,
        navigationMetadata: RubricRequestBuilderNavigationMetadata,
    },
    setUpFeedbackResourcesFolder: {
        requestsMetadata: SetUpFeedbackResourcesFolderRequestBuilderRequestsMetadata,
    },
    setUpResourcesFolder: {
        requestsMetadata: SetUpResourcesFolderRequestBuilderRequestsMetadata,
    },
    submissions: {
        requestsMetadata: SubmissionsRequestBuilderRequestsMetadata,
        navigationMetadata: SubmissionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EducationAssignmentItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: EducationAssignmentItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: EducationAssignmentItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationAssignmentFromDiscriminatorValue,
        queryParametersMapper: EducationAssignmentItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: EducationAssignmentItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createEducationAssignmentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEducationAssignment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
