/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEducationClassFromDiscriminatorValue, serializeEducationClass, type EducationClass } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { AssignmentCategoriesRequestBuilderNavigationMetadata, AssignmentCategoriesRequestBuilderRequestsMetadata, AssignmentCategoriesRequestBuilderUriTemplate, type AssignmentCategoriesRequestBuilder } from './assignmentCategories/';
import { AssignmentDefaultsRequestBuilderRequestsMetadata, AssignmentDefaultsRequestBuilderUriTemplate, type AssignmentDefaultsRequestBuilder } from './assignmentDefaults/';
import { AssignmentsRequestBuilderNavigationMetadata, AssignmentsRequestBuilderRequestsMetadata, AssignmentsRequestBuilderUriTemplate, type AssignmentsRequestBuilder } from './assignments/';
import { AssignmentSettingsRequestBuilderNavigationMetadata, AssignmentSettingsRequestBuilderRequestsMetadata, AssignmentSettingsRequestBuilderUriTemplate, type AssignmentSettingsRequestBuilder } from './assignmentSettings/';
import { GroupRequestBuilderNavigationMetadata, GroupRequestBuilderRequestsMetadata, GroupRequestBuilderUriTemplate, type GroupRequestBuilder } from './group/';
import { MembersRequestBuilderNavigationMetadata, MembersRequestBuilderRequestsMetadata, MembersRequestBuilderUriTemplate, type MembersRequestBuilder } from './members/';
import { SchoolsRequestBuilderNavigationMetadata, SchoolsRequestBuilderRequestsMetadata, SchoolsRequestBuilderUriTemplate, type SchoolsRequestBuilder } from './schools/';
import { TeachersRequestBuilderNavigationMetadata, TeachersRequestBuilderRequestsMetadata, TeachersRequestBuilderUriTemplate, type TeachersRequestBuilder } from './teachers/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the classes property of the microsoft.graph.educationRoot entity.
 */
export interface EducationClassItemRequestBuilder extends BaseRequestBuilder<EducationClassItemRequestBuilder> {
    /**
     * Provides operations to manage the assignmentCategories property of the microsoft.graph.educationClass entity.
     */
    get assignmentCategories(): AssignmentCategoriesRequestBuilder;
    /**
     * Provides operations to manage the assignmentDefaults property of the microsoft.graph.educationClass entity.
     */
    get assignmentDefaults(): AssignmentDefaultsRequestBuilder;
    /**
     * Provides operations to manage the assignments property of the microsoft.graph.educationClass entity.
     */
    get assignments(): AssignmentsRequestBuilder;
    /**
     * Provides operations to manage the assignmentSettings property of the microsoft.graph.educationClass entity.
     */
    get assignmentSettings(): AssignmentSettingsRequestBuilder;
    /**
     * Provides operations to manage the group property of the microsoft.graph.educationClass entity.
     */
    get group(): GroupRequestBuilder;
    /**
     * Provides operations to manage the members property of the microsoft.graph.educationClass entity.
     */
    get members(): MembersRequestBuilder;
    /**
     * Provides operations to manage the schools property of the microsoft.graph.educationClass entity.
     */
    get schools(): SchoolsRequestBuilder;
    /**
     * Provides operations to manage the teachers property of the microsoft.graph.educationClass entity.
     */
    get teachers(): TeachersRequestBuilder;
    /**
     * Delete an educationClass. Because a class is also a universal group, deleting a class deletes the group.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/educationclass-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve a class from the system. A class is a universal group with a special property that indicates to the system that the group is a class. Group members represent the students; group admins represent the teachers in the class. If you're using the delegated token, the user will only see classes in which they are members.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EducationClass
     * @see {@link https://learn.microsoft.com/graph/api/educationclass-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<EducationClassItemRequestBuilderGetQueryParameters> | undefined) : Promise<EducationClass | undefined>;
    /**
     * Update the properties of an educationClass object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EducationClass
     * @see {@link https://learn.microsoft.com/graph/api/educationclass-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: EducationClass, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EducationClass | undefined>;
    /**
     * Delete an educationClass. Because a class is also a universal group, deleting a class deletes the group.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve a class from the system. A class is a universal group with a special property that indicates to the system that the group is a class. Group members represent the students; group admins represent the teachers in the class. If you're using the delegated token, the user will only see classes in which they are members.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EducationClassItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of an educationClass object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: EducationClass, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a class from the system. A class is a universal group with a special property that indicates to the system that the group is a class. Group members represent the students; group admins represent the teachers in the class. If you're using the delegated token, the user will only see classes in which they are members.
 */
export interface EducationClassItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EducationClassItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EducationClassItemRequestBuilderNavigationMetadata: Record<Exclude<keyof EducationClassItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    assignmentCategories: {
        uriTemplate: AssignmentCategoriesRequestBuilderUriTemplate,
        requestsMetadata: AssignmentCategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentCategoriesRequestBuilderNavigationMetadata,
    },
    assignmentDefaults: {
        uriTemplate: AssignmentDefaultsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentDefaultsRequestBuilderRequestsMetadata,
    },
    assignments: {
        uriTemplate: AssignmentsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentsRequestBuilderNavigationMetadata,
    },
    assignmentSettings: {
        uriTemplate: AssignmentSettingsRequestBuilderUriTemplate,
        requestsMetadata: AssignmentSettingsRequestBuilderRequestsMetadata,
        navigationMetadata: AssignmentSettingsRequestBuilderNavigationMetadata,
    },
    group: {
        uriTemplate: GroupRequestBuilderUriTemplate,
        requestsMetadata: GroupRequestBuilderRequestsMetadata,
        navigationMetadata: GroupRequestBuilderNavigationMetadata,
    },
    members: {
        uriTemplate: MembersRequestBuilderUriTemplate,
        requestsMetadata: MembersRequestBuilderRequestsMetadata,
        navigationMetadata: MembersRequestBuilderNavigationMetadata,
    },
    schools: {
        uriTemplate: SchoolsRequestBuilderUriTemplate,
        requestsMetadata: SchoolsRequestBuilderRequestsMetadata,
        navigationMetadata: SchoolsRequestBuilderNavigationMetadata,
    },
    teachers: {
        uriTemplate: TeachersRequestBuilderUriTemplate,
        requestsMetadata: TeachersRequestBuilderRequestsMetadata,
        navigationMetadata: TeachersRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EducationClassItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEducationClassFromDiscriminatorValue,
        queryParametersMapper: EducationClassItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEducationClassFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEducationClass,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const EducationClassItemRequestBuilderUriTemplate = "{+baseurl}/education/classes/{educationClass%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
