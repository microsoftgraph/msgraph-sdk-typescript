/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createEducationAssignmentFromDiscriminatorValue, serializeEducationAssignment, type EducationAssignment } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { CategoriesRequestBuilderNavigationMetadata, CategoriesRequestBuilderRequestsMetadata, CategoriesRequestBuilderUriTemplate, type CategoriesRequestBuilder } from './categories/';
import { GradingCategoryRequestBuilderRequestsMetadata, GradingCategoryRequestBuilderUriTemplate, type GradingCategoryRequestBuilder } from './gradingCategory/';
import { PublishRequestBuilderRequestsMetadata, PublishRequestBuilderUriTemplate, type PublishRequestBuilder } from './publish/';
import { ResourcesRequestBuilderNavigationMetadata, ResourcesRequestBuilderRequestsMetadata, ResourcesRequestBuilderUriTemplate, type ResourcesRequestBuilder } from './resources/';
import { RubricRequestBuilderNavigationMetadata, RubricRequestBuilderRequestsMetadata, RubricRequestBuilderUriTemplate, type RubricRequestBuilder } from './rubric/';
import { SetUpFeedbackResourcesFolderRequestBuilderRequestsMetadata, SetUpFeedbackResourcesFolderRequestBuilderUriTemplate, type SetUpFeedbackResourcesFolderRequestBuilder } from './setUpFeedbackResourcesFolder/';
import { SetUpResourcesFolderRequestBuilderRequestsMetadata, SetUpResourcesFolderRequestBuilderUriTemplate, type SetUpResourcesFolderRequestBuilder } from './setUpResourcesFolder/';
import { SubmissionsRequestBuilderNavigationMetadata, SubmissionsRequestBuilderRequestsMetadata, SubmissionsRequestBuilderUriTemplate, type SubmissionsRequestBuilder } from './submissions/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignments property of the microsoft.graph.educationClass entity.
 */
export interface EducationAssignmentItemRequestBuilder extends BaseRequestBuilder<EducationAssignmentItemRequestBuilder> {
    /**
     * Provides operations to manage the categories property of the microsoft.graph.educationAssignment entity.
     */
    get categories(): CategoriesRequestBuilder;
    /**
     * Provides operations to manage the gradingCategory property of the microsoft.graph.educationAssignment entity.
     */
    get gradingCategory(): GradingCategoryRequestBuilder;
    /**
     * Provides operations to call the publish method.
     */
    get publish(): PublishRequestBuilder;
    /**
     * Provides operations to manage the resources property of the microsoft.graph.educationAssignment entity.
     */
    get resources(): ResourcesRequestBuilder;
    /**
     * Provides operations to manage the rubric property of the microsoft.graph.educationAssignment entity.
     */
    get rubric(): RubricRequestBuilder;
    /**
     * Provides operations to call the setUpFeedbackResourcesFolder method.
     */
    get setUpFeedbackResourcesFolder(): SetUpFeedbackResourcesFolderRequestBuilder;
    /**
     * Provides operations to call the setUpResourcesFolder method.
     */
    get setUpResourcesFolder(): SetUpResourcesFolderRequestBuilder;
    /**
     * Provides operations to manage the submissions property of the microsoft.graph.educationAssignment entity.
     */
    get submissions(): SubmissionsRequestBuilder;
    /**
     * Delete an existing assignment. Only teachers within a class can delete assignments.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/educationassignment-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get the properties and relationships of an assignment. Only teachers, students, and applications with application permissions can perform this operation. Students can only see assignments assigned to them; teachers and applications with application permissions can see all assignments in a class.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EducationAssignment
     * @see {@link https://learn.microsoft.com/graph/api/educationassignment-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<EducationAssignmentItemRequestBuilderGetQueryParameters> | undefined) : Promise<EducationAssignment | undefined>;
    /**
     * Update an educationAssignment object.  Only teachers can perform this action.  Alternatively, request to change the status of an assignment with publish action. Don't use a PATCH operation for this purpose.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of EducationAssignment
     * @see {@link https://learn.microsoft.com/graph/api/educationassignment-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: EducationAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<EducationAssignment | undefined>;
    /**
     * Delete an existing assignment. Only teachers within a class can delete assignments.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get the properties and relationships of an assignment. Only teachers, students, and applications with application permissions can perform this operation. Students can only see assignments assigned to them; teachers and applications with application permissions can see all assignments in a class.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EducationAssignmentItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update an educationAssignment object.  Only teachers can perform this action.  Alternatively, request to change the status of an assignment with publish action. Don't use a PATCH operation for this purpose.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: EducationAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get the properties and relationships of an assignment. Only teachers, students, and applications with application permissions can perform this operation. Students can only see assignments assigned to them; teachers and applications with application permissions can see all assignments in a class.
 */
export interface EducationAssignmentItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EducationAssignmentItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EducationAssignmentItemRequestBuilderNavigationMetadata: Record<Exclude<keyof EducationAssignmentItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    categories: {
        uriTemplate: CategoriesRequestBuilderUriTemplate,
        requestsMetadata: CategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: CategoriesRequestBuilderNavigationMetadata,
    },
    gradingCategory: {
        uriTemplate: GradingCategoryRequestBuilderUriTemplate,
        requestsMetadata: GradingCategoryRequestBuilderRequestsMetadata,
    },
    publish: {
        uriTemplate: PublishRequestBuilderUriTemplate,
        requestsMetadata: PublishRequestBuilderRequestsMetadata,
    },
    resources: {
        uriTemplate: ResourcesRequestBuilderUriTemplate,
        requestsMetadata: ResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: ResourcesRequestBuilderNavigationMetadata,
    },
    rubric: {
        uriTemplate: RubricRequestBuilderUriTemplate,
        requestsMetadata: RubricRequestBuilderRequestsMetadata,
        navigationMetadata: RubricRequestBuilderNavigationMetadata,
    },
    setUpFeedbackResourcesFolder: {
        uriTemplate: SetUpFeedbackResourcesFolderRequestBuilderUriTemplate,
        requestsMetadata: SetUpFeedbackResourcesFolderRequestBuilderRequestsMetadata,
    },
    setUpResourcesFolder: {
        uriTemplate: SetUpResourcesFolderRequestBuilderUriTemplate,
        requestsMetadata: SetUpResourcesFolderRequestBuilderRequestsMetadata,
    },
    submissions: {
        uriTemplate: SubmissionsRequestBuilderUriTemplate,
        requestsMetadata: SubmissionsRequestBuilderRequestsMetadata,
        navigationMetadata: SubmissionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EducationAssignmentItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEducationAssignmentFromDiscriminatorValue,
        queryParametersMapper: EducationAssignmentItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createEducationAssignmentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeEducationAssignment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const EducationAssignmentItemRequestBuilderUriTemplate = "{+baseurl}/education/classes/{educationClass%2Did}/assignments/{educationAssignment%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
