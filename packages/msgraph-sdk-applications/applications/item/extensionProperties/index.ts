/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createExtensionPropertyCollectionResponseFromDiscriminatorValue, createExtensionPropertyFromDiscriminatorValue, serializeExtensionProperty, type ExtensionProperty, type ExtensionPropertyCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { ExtensionPropertyItemRequestBuilderRequestsMetadata, type ExtensionPropertyItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the extensionProperties property of the microsoft.graph.application entity.
 */
export interface ExtensionPropertiesRequestBuilder extends BaseRequestBuilder<ExtensionPropertiesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the extensionProperties property of the microsoft.graph.application entity.
     * @param extensionPropertyId The unique identifier of extensionProperty
     * @returns {ExtensionPropertyItemRequestBuilder}
     */
     byExtensionPropertyId(extensionPropertyId: string) : ExtensionPropertyItemRequestBuilder;
    /**
     * Retrieve the list of directory extension definitions, represented by extensionProperty objects on an application.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ExtensionPropertyCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/application-list-extensionproperty?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ExtensionPropertiesRequestBuilderGetQueryParameters> | undefined) : Promise<ExtensionPropertyCollectionResponse | undefined>;
    /**
     * Create a new directory extension definition, represented by an extensionProperty object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ExtensionProperty>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/application-post-extensionproperty?view=graph-rest-1.0|Find more info here}
     */
     post(body: ExtensionProperty, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ExtensionProperty | undefined>;
    /**
     * Retrieve the list of directory extension definitions, represented by extensionProperty objects on an application.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ExtensionPropertiesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new directory extension definition, represented by an extensionProperty object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ExtensionProperty, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the list of directory extension definitions, represented by extensionProperty objects on an application.
 */
export interface ExtensionPropertiesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const ExtensionPropertiesRequestBuilderUriTemplate = "{+baseurl}/applications/{application%2Did}/extensionProperties{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ExtensionPropertiesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ExtensionPropertiesRequestBuilderNavigationMetadata: Record<Exclude<keyof ExtensionPropertiesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byExtensionPropertyId: {
        requestsMetadata: ExtensionPropertyItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["extensionProperty%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ExtensionPropertiesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ExtensionPropertiesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExtensionPropertyCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ExtensionPropertiesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ExtensionPropertiesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExtensionPropertyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeExtensionProperty,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the extensionProperties property of the microsoft.graph.application entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the extensionProperties property of the microsoft.graph.application entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    DeletedDateTime: "deletedDateTime",
    DeletedDateTimeDesc: "deletedDateTime desc",
    AppDisplayName: "appDisplayName",
    AppDisplayNameDesc: "appDisplayName desc",
    DataType: "dataType",
    DataTypeDesc: "dataType desc",
    IsMultiValued: "isMultiValued",
    IsMultiValuedDesc: "isMultiValued desc",
    IsSyncedFromOnPremises: "isSyncedFromOnPremises",
    IsSyncedFromOnPremisesDesc: "isSyncedFromOnPremises desc",
    Name: "name",
    NameDesc: "name desc",
    TargetObjects: "targetObjects",
    TargetObjectsDesc: "targetObjects desc",
} as const;
/**
 * Provides operations to manage the extensionProperties property of the microsoft.graph.application entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    DeletedDateTime: "deletedDateTime",
    AppDisplayName: "appDisplayName",
    DataType: "dataType",
    IsMultiValued: "isMultiValued",
    IsSyncedFromOnPremises: "isSyncedFromOnPremises",
    Name: "name",
    TargetObjects: "targetObjects",
} as const;
/* tslint:enable */
/* eslint-enable */
