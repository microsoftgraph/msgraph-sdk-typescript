/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue, serializeSynchronizationSecretKeyStringValuePair, type SynchronizationSecretKeyStringValuePair } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecretsPutRequestBody}
 */
// @ts-ignore
export function createSecretsPutRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecretsPutRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SecretsPutResponse}
 */
// @ts-ignore
export function createSecretsPutResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSecretsPutResponse;
}
/**
 * The deserialization information for the current model
 * @param SecretsPutRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecretsPutRequestBody(secretsPutRequestBody: Partial<SecretsPutRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { secretsPutRequestBody.backingStoreEnabled = true; },
        "value": n => { secretsPutRequestBody.value = n.getCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>(createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param SecretsPutResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSecretsPutResponse(secretsPutResponse: Partial<SecretsPutResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { secretsPutResponse.backingStoreEnabled = true; },
        "value": n => { secretsPutResponse.value = n.getCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>(createSynchronizationSecretKeyStringValuePairFromDiscriminatorValue); },
    }
}
export interface SecretsPutRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The value property
     */
    value?: SynchronizationSecretKeyStringValuePair[] | null;
}
export interface SecretsPutResponse extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The value property
     */
    value?: SynchronizationSecretKeyStringValuePair[] | null;
}
/**
 * Builds and executes requests for operations under /applications/{application-id}/synchronization/secrets
 */
export interface SecretsRequestBuilder extends BaseRequestBuilder<SecretsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Update property secrets value.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SecretsPutResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     put(body: SecretsPutRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<SecretsPutResponse | undefined>;
    /**
     * Update property secrets value.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: SecretsPutRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecretsPutRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecretsPutRequestBody(writer: SerializationWriter, secretsPutRequestBody: Partial<SecretsPutRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!secretsPutRequestBody || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>("value", secretsPutRequestBody.value, serializeSynchronizationSecretKeyStringValuePair);
    writer.writeAdditionalData(secretsPutRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param SecretsPutResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSecretsPutResponse(writer: SerializationWriter, secretsPutResponse: Partial<SecretsPutResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!secretsPutResponse || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<SynchronizationSecretKeyStringValuePair>("value", secretsPutResponse.value, serializeSynchronizationSecretKeyStringValuePair);
    writer.writeAdditionalData(secretsPutResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const SecretsRequestBuilderUriTemplate = "{+baseurl}/applications/{application%2Did}/synchronization/secrets";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SecretsRequestBuilderNavigationMetadata: Record<Exclude<keyof SecretsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SecretsRequestBuilderRequestsMetadata: RequestsMetadata = {
    put: {
        uriTemplate: SecretsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSecretsPutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSecretsPutRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
