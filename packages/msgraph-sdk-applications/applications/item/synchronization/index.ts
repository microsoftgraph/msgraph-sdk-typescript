/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createSynchronizationFromDiscriminatorValue, serializeSynchronization, type Synchronization } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { AcquireAccessTokenRequestBuilderRequestsMetadata, type AcquireAccessTokenRequestBuilder } from './acquireAccessToken/';
import { JobsRequestBuilderNavigationMetadata, JobsRequestBuilderRequestsMetadata, type JobsRequestBuilder } from './jobs/';
import { SecretsRequestBuilderNavigationMetadata, SecretsRequestBuilderRequestsMetadata, type SecretsRequestBuilder } from './secrets/';
import { TemplatesRequestBuilderNavigationMetadata, TemplatesRequestBuilderRequestsMetadata, type TemplatesRequestBuilder } from './templates/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the synchronization property of the microsoft.graph.application entity.
 */
export interface SynchronizationRequestBuilder extends BaseRequestBuilder<SynchronizationRequestBuilder> {
    /**
     * Provides operations to call the acquireAccessToken method.
     */
    get acquireAccessToken(): AcquireAccessTokenRequestBuilder;
    /**
     * Provides operations to manage the jobs property of the microsoft.graph.synchronization entity.
     */
    get jobs(): JobsRequestBuilder;
    /**
     * The secrets property
     */
    get secrets(): SecretsRequestBuilder;
    /**
     * Provides operations to manage the templates property of the microsoft.graph.synchronization entity.
     */
    get templates(): TemplatesRequestBuilder;
    /**
     * Delete navigation property synchronization for applications
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Represents the capability for Microsoft Entra identity synchronization through the Microsoft Graph API.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Synchronization>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SynchronizationRequestBuilderGetQueryParameters> | undefined) : Promise<Synchronization | undefined>;
    /**
     * Update the navigation property synchronization in applications
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Synchronization>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     put(body: Synchronization, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Synchronization | undefined>;
    /**
     * Delete navigation property synchronization for applications
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Represents the capability for Microsoft Entra identity synchronization through the Microsoft Graph API.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SynchronizationRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property synchronization in applications
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: Synchronization, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Represents the capability for Microsoft Entra identity synchronization through the Microsoft Graph API.
 */
export interface SynchronizationRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const SynchronizationRequestBuilderUriTemplate = "{+baseurl}/applications/{application%2Did}/synchronization{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SynchronizationRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SynchronizationRequestBuilderNavigationMetadata: Record<Exclude<keyof SynchronizationRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    acquireAccessToken: {
        requestsMetadata: AcquireAccessTokenRequestBuilderRequestsMetadata,
    },
    jobs: {
        requestsMetadata: JobsRequestBuilderRequestsMetadata,
        navigationMetadata: JobsRequestBuilderNavigationMetadata,
    },
    secrets: {
        requestsMetadata: SecretsRequestBuilderRequestsMetadata,
        navigationMetadata: SecretsRequestBuilderNavigationMetadata,
    },
    templates: {
        requestsMetadata: TemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: TemplatesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SynchronizationRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: SynchronizationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: SynchronizationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSynchronizationFromDiscriminatorValue,
        queryParametersMapper: SynchronizationRequestBuilderGetQueryParametersMapper,
    },
    put: {
        uriTemplate: SynchronizationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createSynchronizationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSynchronization,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
