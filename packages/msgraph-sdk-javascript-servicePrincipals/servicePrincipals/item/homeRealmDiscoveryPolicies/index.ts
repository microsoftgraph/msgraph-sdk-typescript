/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createHomeRealmDiscoveryPolicyCollectionResponseFromDiscriminatorValue, type HomeRealmDiscoveryPolicyCollectionResponse } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, CountRequestBuilderUriTemplate, type CountRequestBuilder } from './count/';
import { HomeRealmDiscoveryPolicyItemRequestBuilderNavigationMetadata, HomeRealmDiscoveryPolicyItemRequestBuilderUriTemplate, type HomeRealmDiscoveryPolicyItemRequestBuilder } from './item/';
import { RefRequestBuilderRequestsMetadata, RefRequestBuilderUriTemplate, type RefRequestBuilder } from './ref/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the homeRealmDiscoveryPolicies property of the microsoft.graph.servicePrincipal entity.
 */
export interface HomeRealmDiscoveryPoliciesRequestBuilder extends BaseRequestBuilder<HomeRealmDiscoveryPoliciesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the collection of servicePrincipal entities.
     */
    get ref(): RefRequestBuilder;
    /**
     * Gets an item from the github.com/microsoftgraph/msgraph-sdk-typescript/.servicePrincipals.item.homeRealmDiscoveryPolicies.item collection
     * @param homeRealmDiscoveryPolicyId The unique identifier of homeRealmDiscoveryPolicy
     * @returns a HomeRealmDiscoveryPolicyItemRequestBuilder
     */
     byHomeRealmDiscoveryPolicyId(homeRealmDiscoveryPolicyId: string) : HomeRealmDiscoveryPolicyItemRequestBuilder;
    /**
     * List the homeRealmDiscoveryPolicy objects that are assigned to a servicePrincipal.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of HomeRealmDiscoveryPolicyCollectionResponse
     * @see {@link https://learn.microsoft.com/graph/api/serviceprincipal-list-homerealmdiscoverypolicies?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<HomeRealmDiscoveryPoliciesRequestBuilderGetQueryParameters> | undefined) : Promise<HomeRealmDiscoveryPolicyCollectionResponse | undefined>;
    /**
     * List the homeRealmDiscoveryPolicy objects that are assigned to a servicePrincipal.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<HomeRealmDiscoveryPoliciesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * List the homeRealmDiscoveryPolicy objects that are assigned to a servicePrincipal.
 */
export interface HomeRealmDiscoveryPoliciesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const HomeRealmDiscoveryPoliciesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const HomeRealmDiscoveryPoliciesRequestBuilderNavigationMetadata: Record<Exclude<keyof HomeRealmDiscoveryPoliciesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byHomeRealmDiscoveryPolicyId: {
        uriTemplate: HomeRealmDiscoveryPolicyItemRequestBuilderUriTemplate,
        navigationMetadata: HomeRealmDiscoveryPolicyItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["homeRealmDiscoveryPolicy%2Did"],
    },
    count: {
        uriTemplate: CountRequestBuilderUriTemplate,
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
    ref: {
        uriTemplate: RefRequestBuilderUriTemplate,
        requestsMetadata: RefRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const HomeRealmDiscoveryPoliciesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createHomeRealmDiscoveryPolicyCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: HomeRealmDiscoveryPoliciesRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Uri template for the request builder.
 */
export const HomeRealmDiscoveryPoliciesRequestBuilderUriTemplate = "{+baseurl}/servicePrincipals/{servicePrincipal%2Did}/homeRealmDiscoveryPolicies{?%24top,%24skip,%24search,%24filter,%24count,%24orderby,%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
