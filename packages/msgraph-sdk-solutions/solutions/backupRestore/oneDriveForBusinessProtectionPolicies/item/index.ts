/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOneDriveForBusinessProtectionPolicyFromDiscriminatorValue, serializeOneDriveForBusinessProtectionPolicy, type OneDriveForBusinessProtectionPolicy } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { DriveInclusionRulesRequestBuilderNavigationMetadata, DriveInclusionRulesRequestBuilderRequestsMetadata, type DriveInclusionRulesRequestBuilder } from './driveInclusionRules/index.js';
// @ts-ignore
import { DriveProtectionUnitsRequestBuilderNavigationMetadata, DriveProtectionUnitsRequestBuilderRequestsMetadata, type DriveProtectionUnitsRequestBuilder } from './driveProtectionUnits/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the oneDriveForBusinessProtectionPolicies property of the microsoft.graph.backupRestoreRoot entity.
 */
export interface OneDriveForBusinessProtectionPolicyItemRequestBuilder extends BaseRequestBuilder<OneDriveForBusinessProtectionPolicyItemRequestBuilder> {
    /**
     * Provides operations to manage the driveInclusionRules property of the microsoft.graph.oneDriveForBusinessProtectionPolicy entity.
     */
    get driveInclusionRules(): DriveInclusionRulesRequestBuilder;
    /**
     * Provides operations to manage the driveProtectionUnits property of the microsoft.graph.oneDriveForBusinessProtectionPolicy entity.
     */
    get driveProtectionUnits(): DriveProtectionUnitsRequestBuilder;
    /**
     * Delete navigation property oneDriveForBusinessProtectionPolicies for solutions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The list of OneDrive for Business protection policies in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OneDriveForBusinessProtectionPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<OneDriveForBusinessProtectionPolicyItemRequestBuilderGetQueryParameters> | undefined) : Promise<OneDriveForBusinessProtectionPolicy | undefined>;
    /**
     * Update the protection policy for the OneDrive service in Microsoft 365. This method adds a driveProtectionUnit to or removes it from a oneDriveForBusinessProtectionPolicy object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OneDriveForBusinessProtectionPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/onedriveforbusinessprotectionpolicy-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: OneDriveForBusinessProtectionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OneDriveForBusinessProtectionPolicy | undefined>;
    /**
     * Delete navigation property oneDriveForBusinessProtectionPolicies for solutions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The list of OneDrive for Business protection policies in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OneDriveForBusinessProtectionPolicyItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the protection policy for the OneDrive service in Microsoft 365. This method adds a driveProtectionUnit to or removes it from a oneDriveForBusinessProtectionPolicy object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: OneDriveForBusinessProtectionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of OneDrive for Business protection policies in the tenant.
 */
export interface OneDriveForBusinessProtectionPolicyItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const OneDriveForBusinessProtectionPolicyItemRequestBuilderUriTemplate = "{+baseurl}/solutions/backupRestore/oneDriveForBusinessProtectionPolicies/{oneDriveForBusinessProtectionPolicy%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OneDriveForBusinessProtectionPolicyItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OneDriveForBusinessProtectionPolicyItemRequestBuilderNavigationMetadata: Record<Exclude<keyof OneDriveForBusinessProtectionPolicyItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    driveInclusionRules: {
        requestsMetadata: DriveInclusionRulesRequestBuilderRequestsMetadata,
        navigationMetadata: DriveInclusionRulesRequestBuilderNavigationMetadata,
    },
    driveProtectionUnits: {
        requestsMetadata: DriveProtectionUnitsRequestBuilderRequestsMetadata,
        navigationMetadata: DriveProtectionUnitsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OneDriveForBusinessProtectionPolicyItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: OneDriveForBusinessProtectionPolicyItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: OneDriveForBusinessProtectionPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOneDriveForBusinessProtectionPolicyFromDiscriminatorValue,
        queryParametersMapper: OneDriveForBusinessProtectionPolicyItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: OneDriveForBusinessProtectionPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOneDriveForBusinessProtectionPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOneDriveForBusinessProtectionPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
