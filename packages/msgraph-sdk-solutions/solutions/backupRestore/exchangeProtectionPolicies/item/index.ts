/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createExchangeProtectionPolicyFromDiscriminatorValue, serializeExchangeProtectionPolicy, type ExchangeProtectionPolicy } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { MailboxInclusionRulesRequestBuilderNavigationMetadata, MailboxInclusionRulesRequestBuilderRequestsMetadata, type MailboxInclusionRulesRequestBuilder } from './mailboxInclusionRules/index.js';
// @ts-ignore
import { MailboxProtectionUnitsRequestBuilderNavigationMetadata, MailboxProtectionUnitsRequestBuilderRequestsMetadata, type MailboxProtectionUnitsRequestBuilder } from './mailboxProtectionUnits/index.js';
// @ts-ignore
import { MailboxProtectionUnitsBulkAdditionJobsRequestBuilderNavigationMetadata, MailboxProtectionUnitsBulkAdditionJobsRequestBuilderRequestsMetadata, type MailboxProtectionUnitsBulkAdditionJobsRequestBuilder } from './mailboxProtectionUnitsBulkAdditionJobs/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the exchangeProtectionPolicies property of the microsoft.graph.backupRestoreRoot entity.
 */
export interface ExchangeProtectionPolicyItemRequestBuilder extends BaseRequestBuilder<ExchangeProtectionPolicyItemRequestBuilder> {
    /**
     * Provides operations to manage the mailboxInclusionRules property of the microsoft.graph.exchangeProtectionPolicy entity.
     */
    get mailboxInclusionRules(): MailboxInclusionRulesRequestBuilder;
    /**
     * Provides operations to manage the mailboxProtectionUnits property of the microsoft.graph.exchangeProtectionPolicy entity.
     */
    get mailboxProtectionUnits(): MailboxProtectionUnitsRequestBuilder;
    /**
     * Provides operations to manage the mailboxProtectionUnitsBulkAdditionJobs property of the microsoft.graph.exchangeProtectionPolicy entity.
     */
    get mailboxProtectionUnitsBulkAdditionJobs(): MailboxProtectionUnitsBulkAdditionJobsRequestBuilder;
    /**
     * Delete navigation property exchangeProtectionPolicies for solutions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The list of Exchange protection policies in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ExchangeProtectionPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ExchangeProtectionPolicyItemRequestBuilderGetQueryParameters> | undefined) : Promise<ExchangeProtectionPolicy | undefined>;
    /**
     * Update an Exchange protection policy. This method adds a mailboxprotectionunit to or removes it from the protection policy.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ExchangeProtectionPolicy>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/exchangeprotectionpolicy-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: ExchangeProtectionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ExchangeProtectionPolicy | undefined>;
    /**
     * Delete navigation property exchangeProtectionPolicies for solutions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The list of Exchange protection policies in the tenant.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ExchangeProtectionPolicyItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update an Exchange protection policy. This method adds a mailboxprotectionunit to or removes it from the protection policy.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: ExchangeProtectionPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The list of Exchange protection policies in the tenant.
 */
export interface ExchangeProtectionPolicyItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const ExchangeProtectionPolicyItemRequestBuilderUriTemplate = "{+baseurl}/solutions/backupRestore/exchangeProtectionPolicies/{exchangeProtectionPolicy%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ExchangeProtectionPolicyItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ExchangeProtectionPolicyItemRequestBuilderNavigationMetadata: Record<Exclude<keyof ExchangeProtectionPolicyItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    mailboxInclusionRules: {
        requestsMetadata: MailboxInclusionRulesRequestBuilderRequestsMetadata,
        navigationMetadata: MailboxInclusionRulesRequestBuilderNavigationMetadata,
    },
    mailboxProtectionUnits: {
        requestsMetadata: MailboxProtectionUnitsRequestBuilderRequestsMetadata,
        navigationMetadata: MailboxProtectionUnitsRequestBuilderNavigationMetadata,
    },
    mailboxProtectionUnitsBulkAdditionJobs: {
        requestsMetadata: MailboxProtectionUnitsBulkAdditionJobsRequestBuilderRequestsMetadata,
        navigationMetadata: MailboxProtectionUnitsBulkAdditionJobsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ExchangeProtectionPolicyItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ExchangeProtectionPolicyItemRequestBuilderUriTemplate,
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: ExchangeProtectionPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExchangeProtectionPolicyFromDiscriminatorValue,
        queryParametersMapper: ExchangeProtectionPolicyItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: ExchangeProtectionPolicyItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExchangeProtectionPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeExchangeProtectionPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
