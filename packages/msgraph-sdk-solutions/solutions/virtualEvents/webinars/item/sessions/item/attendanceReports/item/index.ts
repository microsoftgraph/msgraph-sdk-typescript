/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createMeetingAttendanceReportFromDiscriminatorValue, serializeMeetingAttendanceReport, type MeetingAttendanceReport } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { AttendanceRecordsRequestBuilderNavigationMetadata, AttendanceRecordsRequestBuilderRequestsMetadata, type AttendanceRecordsRequestBuilder } from './attendanceRecords/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the attendanceReports property of the microsoft.graph.onlineMeetingBase entity.
 */
export interface MeetingAttendanceReportItemRequestBuilder extends BaseRequestBuilder<MeetingAttendanceReportItemRequestBuilder> {
    /**
     * Provides operations to manage the attendanceRecords property of the microsoft.graph.meetingAttendanceReport entity.
     */
    get attendanceRecords(): AttendanceRecordsRequestBuilder;
    /**
     * Delete navigation property attendanceReports for solutions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The attendance reports of an online meeting. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MeetingAttendanceReport>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<MeetingAttendanceReportItemRequestBuilderGetQueryParameters> | undefined) : Promise<MeetingAttendanceReport | undefined>;
    /**
     * Update the navigation property attendanceReports in solutions
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MeetingAttendanceReport>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: MeetingAttendanceReport, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<MeetingAttendanceReport | undefined>;
    /**
     * Delete navigation property attendanceReports for solutions
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The attendance reports of an online meeting. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MeetingAttendanceReportItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property attendanceReports in solutions
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: MeetingAttendanceReport, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The attendance reports of an online meeting. Read-only.
 */
export interface MeetingAttendanceReportItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const MeetingAttendanceReportItemRequestBuilderUriTemplate = "{+baseurl}/solutions/virtualEvents/webinars/{virtualEventWebinar%2Did}/sessions/{virtualEventSession%2Did}/attendanceReports/{meetingAttendanceReport%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MeetingAttendanceReportItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const MeetingAttendanceReportItemRequestBuilderNavigationMetadata: Record<Exclude<keyof MeetingAttendanceReportItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    attendanceRecords: {
        requestsMetadata: AttendanceRecordsRequestBuilderRequestsMetadata,
        navigationMetadata: AttendanceRecordsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MeetingAttendanceReportItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: MeetingAttendanceReportItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: MeetingAttendanceReportItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createMeetingAttendanceReportFromDiscriminatorValue,
        queryParametersMapper: MeetingAttendanceReportItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: MeetingAttendanceReportItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createMeetingAttendanceReportFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeMeetingAttendanceReport,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
