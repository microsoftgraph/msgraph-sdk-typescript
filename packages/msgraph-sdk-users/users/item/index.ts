/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createUserFromDiscriminatorValue, serializeUser, type User } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { ActivitiesRequestBuilderNavigationMetadata, ActivitiesRequestBuilderRequestsMetadata, type ActivitiesRequestBuilder } from './activities/index.js';
// @ts-ignore
import { AgreementAcceptancesRequestBuilderNavigationMetadata, AgreementAcceptancesRequestBuilderRequestsMetadata, type AgreementAcceptancesRequestBuilder } from './agreementAcceptances/index.js';
// @ts-ignore
import { AppRoleAssignmentsRequestBuilderNavigationMetadata, AppRoleAssignmentsRequestBuilderRequestsMetadata, type AppRoleAssignmentsRequestBuilder } from './appRoleAssignments/index.js';
// @ts-ignore
import { AssignLicenseRequestBuilderRequestsMetadata, type AssignLicenseRequestBuilder } from './assignLicense/index.js';
// @ts-ignore
import { AuthenticationRequestBuilderNavigationMetadata, AuthenticationRequestBuilderRequestsMetadata, type AuthenticationRequestBuilder } from './authentication/index.js';
// @ts-ignore
import { CalendarRequestBuilderNavigationMetadata, CalendarRequestBuilderRequestsMetadata, type CalendarRequestBuilder } from './calendar/index.js';
// @ts-ignore
import { CalendarGroupsRequestBuilderNavigationMetadata, CalendarGroupsRequestBuilderRequestsMetadata, type CalendarGroupsRequestBuilder } from './calendarGroups/index.js';
// @ts-ignore
import { CalendarsRequestBuilderNavigationMetadata, CalendarsRequestBuilderRequestsMetadata, type CalendarsRequestBuilder } from './calendars/index.js';
// @ts-ignore
import { CalendarViewRequestBuilderNavigationMetadata, CalendarViewRequestBuilderRequestsMetadata, type CalendarViewRequestBuilder } from './calendarView/index.js';
// @ts-ignore
import { ChangePasswordRequestBuilderRequestsMetadata, type ChangePasswordRequestBuilder } from './changePassword/index.js';
// @ts-ignore
import { ChatsRequestBuilderNavigationMetadata, ChatsRequestBuilderRequestsMetadata, type ChatsRequestBuilder } from './chats/index.js';
// @ts-ignore
import { CheckMemberGroupsRequestBuilderRequestsMetadata, type CheckMemberGroupsRequestBuilder } from './checkMemberGroups/index.js';
// @ts-ignore
import { CheckMemberObjectsRequestBuilderRequestsMetadata, type CheckMemberObjectsRequestBuilder } from './checkMemberObjects/index.js';
// @ts-ignore
import { CloudClipboardRequestBuilderNavigationMetadata, CloudClipboardRequestBuilderRequestsMetadata, type CloudClipboardRequestBuilder } from './cloudClipboard/index.js';
// @ts-ignore
import { ContactFoldersRequestBuilderNavigationMetadata, ContactFoldersRequestBuilderRequestsMetadata, type ContactFoldersRequestBuilder } from './contactFolders/index.js';
// @ts-ignore
import { ContactsRequestBuilderNavigationMetadata, ContactsRequestBuilderRequestsMetadata, type ContactsRequestBuilder } from './contacts/index.js';
// @ts-ignore
import { CreatedObjectsRequestBuilderNavigationMetadata, CreatedObjectsRequestBuilderRequestsMetadata, type CreatedObjectsRequestBuilder } from './createdObjects/index.js';
// @ts-ignore
import { DeviceManagementTroubleshootingEventsRequestBuilderNavigationMetadata, DeviceManagementTroubleshootingEventsRequestBuilderRequestsMetadata, type DeviceManagementTroubleshootingEventsRequestBuilder } from './deviceManagementTroubleshootingEvents/index.js';
// @ts-ignore
import { DirectReportsRequestBuilderNavigationMetadata, DirectReportsRequestBuilderRequestsMetadata, type DirectReportsRequestBuilder } from './directReports/index.js';
// @ts-ignore
import { DriveRequestBuilderRequestsMetadata, type DriveRequestBuilder } from './drive/index.js';
// @ts-ignore
import { DrivesRequestBuilderNavigationMetadata, DrivesRequestBuilderRequestsMetadata, type DrivesRequestBuilder } from './drives/index.js';
// @ts-ignore
import { EmployeeExperienceRequestBuilderNavigationMetadata, EmployeeExperienceRequestBuilderRequestsMetadata, type EmployeeExperienceRequestBuilder } from './employeeExperience/index.js';
// @ts-ignore
import { EventsRequestBuilderNavigationMetadata, EventsRequestBuilderRequestsMetadata, type EventsRequestBuilder } from './events/index.js';
// @ts-ignore
import { ExportDeviceAndAppManagementDataRequestBuilderRequestsMetadata, type ExportDeviceAndAppManagementDataRequestBuilder } from './exportDeviceAndAppManagementData/index.js';
// @ts-ignore
import { ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilderRequestsMetadata, type ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder } from './exportDeviceAndAppManagementDataWithSkipWithTop/index.js';
// @ts-ignore
import { ExportPersonalDataRequestBuilderRequestsMetadata, type ExportPersonalDataRequestBuilder } from './exportPersonalData/index.js';
// @ts-ignore
import { ExtensionsRequestBuilderNavigationMetadata, ExtensionsRequestBuilderRequestsMetadata, type ExtensionsRequestBuilder } from './extensions/index.js';
// @ts-ignore
import { FindMeetingTimesRequestBuilderRequestsMetadata, type FindMeetingTimesRequestBuilder } from './findMeetingTimes/index.js';
// @ts-ignore
import { FollowedSitesRequestBuilderNavigationMetadata, FollowedSitesRequestBuilderRequestsMetadata, type FollowedSitesRequestBuilder } from './followedSites/index.js';
// @ts-ignore
import { GetMailTipsRequestBuilderRequestsMetadata, type GetMailTipsRequestBuilder } from './getMailTips/index.js';
// @ts-ignore
import { GetManagedAppDiagnosticStatusesRequestBuilderRequestsMetadata, type GetManagedAppDiagnosticStatusesRequestBuilder } from './getManagedAppDiagnosticStatuses/index.js';
// @ts-ignore
import { GetManagedAppPoliciesRequestBuilderRequestsMetadata, type GetManagedAppPoliciesRequestBuilder } from './getManagedAppPolicies/index.js';
// @ts-ignore
import { GetManagedDevicesWithAppFailuresRequestBuilderRequestsMetadata, type GetManagedDevicesWithAppFailuresRequestBuilder } from './getManagedDevicesWithAppFailures/index.js';
// @ts-ignore
import { GetMemberGroupsRequestBuilderRequestsMetadata, type GetMemberGroupsRequestBuilder } from './getMemberGroups/index.js';
// @ts-ignore
import { GetMemberObjectsRequestBuilderRequestsMetadata, type GetMemberObjectsRequestBuilder } from './getMemberObjects/index.js';
// @ts-ignore
import { InferenceClassificationRequestBuilderNavigationMetadata, InferenceClassificationRequestBuilderRequestsMetadata, type InferenceClassificationRequestBuilder } from './inferenceClassification/index.js';
// @ts-ignore
import { InsightsRequestBuilderNavigationMetadata, InsightsRequestBuilderRequestsMetadata, type InsightsRequestBuilder } from './insights/index.js';
// @ts-ignore
import { JoinedTeamsRequestBuilderNavigationMetadata, JoinedTeamsRequestBuilderRequestsMetadata, type JoinedTeamsRequestBuilder } from './joinedTeams/index.js';
// @ts-ignore
import { LicenseDetailsRequestBuilderNavigationMetadata, LicenseDetailsRequestBuilderRequestsMetadata, type LicenseDetailsRequestBuilder } from './licenseDetails/index.js';
// @ts-ignore
import { MailboxSettingsRequestBuilderRequestsMetadata, type MailboxSettingsRequestBuilder } from './mailboxSettings/index.js';
// @ts-ignore
import { MailFoldersRequestBuilderNavigationMetadata, MailFoldersRequestBuilderRequestsMetadata, type MailFoldersRequestBuilder } from './mailFolders/index.js';
// @ts-ignore
import { ManagedAppRegistrationsRequestBuilderNavigationMetadata, ManagedAppRegistrationsRequestBuilderRequestsMetadata, type ManagedAppRegistrationsRequestBuilder } from './managedAppRegistrations/index.js';
// @ts-ignore
import { ManagedDevicesRequestBuilderNavigationMetadata, ManagedDevicesRequestBuilderRequestsMetadata, type ManagedDevicesRequestBuilder } from './managedDevices/index.js';
// @ts-ignore
import { ManagerRequestBuilderNavigationMetadata, ManagerRequestBuilderRequestsMetadata, type ManagerRequestBuilder } from './manager/index.js';
// @ts-ignore
import { MemberOfRequestBuilderNavigationMetadata, MemberOfRequestBuilderRequestsMetadata, type MemberOfRequestBuilder } from './memberOf/index.js';
// @ts-ignore
import { MessagesRequestBuilderNavigationMetadata, MessagesRequestBuilderRequestsMetadata, type MessagesRequestBuilder } from './messages/index.js';
// @ts-ignore
import { Oauth2PermissionGrantsRequestBuilderNavigationMetadata, Oauth2PermissionGrantsRequestBuilderRequestsMetadata, type Oauth2PermissionGrantsRequestBuilder } from './oauth2PermissionGrants/index.js';
// @ts-ignore
import { OnenoteRequestBuilderNavigationMetadata, OnenoteRequestBuilderRequestsMetadata, type OnenoteRequestBuilder } from './onenote/index.js';
// @ts-ignore
import { OnlineMeetingsRequestBuilderNavigationMetadata, OnlineMeetingsRequestBuilderRequestsMetadata, type OnlineMeetingsRequestBuilder } from './onlineMeetings/index.js';
// @ts-ignore
import { OutlookRequestBuilderNavigationMetadata, OutlookRequestBuilderRequestsMetadata, type OutlookRequestBuilder } from './outlook/index.js';
// @ts-ignore
import { OwnedDevicesRequestBuilderNavigationMetadata, OwnedDevicesRequestBuilderRequestsMetadata, type OwnedDevicesRequestBuilder } from './ownedDevices/index.js';
// @ts-ignore
import { OwnedObjectsRequestBuilderNavigationMetadata, OwnedObjectsRequestBuilderRequestsMetadata, type OwnedObjectsRequestBuilder } from './ownedObjects/index.js';
// @ts-ignore
import { PeopleRequestBuilderNavigationMetadata, PeopleRequestBuilderRequestsMetadata, type PeopleRequestBuilder } from './people/index.js';
// @ts-ignore
import { PermissionGrantsRequestBuilderNavigationMetadata, PermissionGrantsRequestBuilderRequestsMetadata, type PermissionGrantsRequestBuilder } from './permissionGrants/index.js';
// @ts-ignore
import { PhotoRequestBuilderNavigationMetadata, PhotoRequestBuilderRequestsMetadata, type PhotoRequestBuilder } from './photo/index.js';
// @ts-ignore
import { PhotosRequestBuilderNavigationMetadata, PhotosRequestBuilderRequestsMetadata, type PhotosRequestBuilder } from './photos/index.js';
// @ts-ignore
import { PlannerRequestBuilderNavigationMetadata, PlannerRequestBuilderRequestsMetadata, type PlannerRequestBuilder } from './planner/index.js';
// @ts-ignore
import { PresenceRequestBuilderNavigationMetadata, PresenceRequestBuilderRequestsMetadata, type PresenceRequestBuilder } from './presence/index.js';
// @ts-ignore
import { RegisteredDevicesRequestBuilderNavigationMetadata, RegisteredDevicesRequestBuilderRequestsMetadata, type RegisteredDevicesRequestBuilder } from './registeredDevices/index.js';
// @ts-ignore
import { ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilderRequestsMetadata, type ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder } from './reminderViewWithStartDateTimeWithEndDateTime/index.js';
// @ts-ignore
import { RemoveAllDevicesFromManagementRequestBuilderRequestsMetadata, type RemoveAllDevicesFromManagementRequestBuilder } from './removeAllDevicesFromManagement/index.js';
// @ts-ignore
import { ReprocessLicenseAssignmentRequestBuilderRequestsMetadata, type ReprocessLicenseAssignmentRequestBuilder } from './reprocessLicenseAssignment/index.js';
// @ts-ignore
import { RestoreRequestBuilderRequestsMetadata, type RestoreRequestBuilder } from './restore/index.js';
// @ts-ignore
import { RetryServiceProvisioningRequestBuilderRequestsMetadata, type RetryServiceProvisioningRequestBuilder } from './retryServiceProvisioning/index.js';
// @ts-ignore
import { RevokeSignInSessionsRequestBuilderRequestsMetadata, type RevokeSignInSessionsRequestBuilder } from './revokeSignInSessions/index.js';
// @ts-ignore
import { ScopedRoleMemberOfRequestBuilderNavigationMetadata, ScopedRoleMemberOfRequestBuilderRequestsMetadata, type ScopedRoleMemberOfRequestBuilder } from './scopedRoleMemberOf/index.js';
// @ts-ignore
import { SendMailRequestBuilderRequestsMetadata, type SendMailRequestBuilder } from './sendMail/index.js';
// @ts-ignore
import { ServiceProvisioningErrorsRequestBuilderNavigationMetadata, ServiceProvisioningErrorsRequestBuilderRequestsMetadata, type ServiceProvisioningErrorsRequestBuilder } from './serviceProvisioningErrors/index.js';
// @ts-ignore
import { SettingsRequestBuilderNavigationMetadata, SettingsRequestBuilderRequestsMetadata, type SettingsRequestBuilder } from './settings/index.js';
// @ts-ignore
import { SolutionsRequestBuilderNavigationMetadata, SolutionsRequestBuilderRequestsMetadata, type SolutionsRequestBuilder } from './solutions/index.js';
// @ts-ignore
import { SponsorsRequestBuilderNavigationMetadata, SponsorsRequestBuilderRequestsMetadata, type SponsorsRequestBuilder } from './sponsors/index.js';
// @ts-ignore
import { TeamworkRequestBuilderNavigationMetadata, TeamworkRequestBuilderRequestsMetadata, type TeamworkRequestBuilder } from './teamwork/index.js';
// @ts-ignore
import { TodoRequestBuilderNavigationMetadata, TodoRequestBuilderRequestsMetadata, type TodoRequestBuilder } from './todo/index.js';
// @ts-ignore
import { TransitiveMemberOfRequestBuilderNavigationMetadata, TransitiveMemberOfRequestBuilderRequestsMetadata, type TransitiveMemberOfRequestBuilder } from './transitiveMemberOf/index.js';
// @ts-ignore
import { TranslateExchangeIdsRequestBuilderRequestsMetadata, type TranslateExchangeIdsRequestBuilder } from './translateExchangeIds/index.js';
// @ts-ignore
import { type WipeManagedAppRegistrationsByDeviceTagRequestBuilder, WipeManagedAppRegistrationsByDeviceTagRequestBuilderRequestsMetadata } from './wipeManagedAppRegistrationsByDeviceTag/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of user entities.
 */
export interface UserItemRequestBuilder extends BaseRequestBuilder<UserItemRequestBuilder> {
    /**
     * Provides operations to manage the activities property of the microsoft.graph.user entity.
     */
    get activities(): ActivitiesRequestBuilder;
    /**
     * Provides operations to manage the agreementAcceptances property of the microsoft.graph.user entity.
     */
    get agreementAcceptances(): AgreementAcceptancesRequestBuilder;
    /**
     * Provides operations to manage the appRoleAssignments property of the microsoft.graph.user entity.
     */
    get appRoleAssignments(): AppRoleAssignmentsRequestBuilder;
    /**
     * Provides operations to call the assignLicense method.
     */
    get assignLicense(): AssignLicenseRequestBuilder;
    /**
     * Provides operations to manage the authentication property of the microsoft.graph.user entity.
     */
    get authentication(): AuthenticationRequestBuilder;
    /**
     * Provides operations to manage the calendar property of the microsoft.graph.user entity.
     */
    get calendar(): CalendarRequestBuilder;
    /**
     * Provides operations to manage the calendarGroups property of the microsoft.graph.user entity.
     */
    get calendarGroups(): CalendarGroupsRequestBuilder;
    /**
     * Provides operations to manage the calendars property of the microsoft.graph.user entity.
     */
    get calendars(): CalendarsRequestBuilder;
    /**
     * Provides operations to manage the calendarView property of the microsoft.graph.user entity.
     */
    get calendarView(): CalendarViewRequestBuilder;
    /**
     * Provides operations to call the changePassword method.
     */
    get changePassword(): ChangePasswordRequestBuilder;
    /**
     * Provides operations to manage the chats property of the microsoft.graph.user entity.
     */
    get chats(): ChatsRequestBuilder;
    /**
     * Provides operations to call the checkMemberGroups method.
     */
    get checkMemberGroups(): CheckMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the checkMemberObjects method.
     */
    get checkMemberObjects(): CheckMemberObjectsRequestBuilder;
    /**
     * Provides operations to manage the cloudClipboard property of the microsoft.graph.user entity.
     */
    get cloudClipboard(): CloudClipboardRequestBuilder;
    /**
     * Provides operations to manage the contactFolders property of the microsoft.graph.user entity.
     */
    get contactFolders(): ContactFoldersRequestBuilder;
    /**
     * Provides operations to manage the contacts property of the microsoft.graph.user entity.
     */
    get contacts(): ContactsRequestBuilder;
    /**
     * Provides operations to manage the createdObjects property of the microsoft.graph.user entity.
     */
    get createdObjects(): CreatedObjectsRequestBuilder;
    /**
     * Provides operations to manage the deviceManagementTroubleshootingEvents property of the microsoft.graph.user entity.
     */
    get deviceManagementTroubleshootingEvents(): DeviceManagementTroubleshootingEventsRequestBuilder;
    /**
     * Provides operations to manage the directReports property of the microsoft.graph.user entity.
     */
    get directReports(): DirectReportsRequestBuilder;
    /**
     * Provides operations to manage the drive property of the microsoft.graph.user entity.
     */
    get drive(): DriveRequestBuilder;
    /**
     * Provides operations to manage the drives property of the microsoft.graph.user entity.
     */
    get drives(): DrivesRequestBuilder;
    /**
     * Provides operations to manage the employeeExperience property of the microsoft.graph.user entity.
     */
    get employeeExperience(): EmployeeExperienceRequestBuilder;
    /**
     * Provides operations to manage the events property of the microsoft.graph.user entity.
     */
    get events(): EventsRequestBuilder;
    /**
     * Provides operations to call the exportDeviceAndAppManagementData method.
     */
    get exportDeviceAndAppManagementData(): ExportDeviceAndAppManagementDataRequestBuilder;
    /**
     * Provides operations to call the exportPersonalData method.
     */
    get exportPersonalData(): ExportPersonalDataRequestBuilder;
    /**
     * Provides operations to manage the extensions property of the microsoft.graph.user entity.
     */
    get extensions(): ExtensionsRequestBuilder;
    /**
     * Provides operations to call the findMeetingTimes method.
     */
    get findMeetingTimes(): FindMeetingTimesRequestBuilder;
    /**
     * Provides operations to manage the followedSites property of the microsoft.graph.user entity.
     */
    get followedSites(): FollowedSitesRequestBuilder;
    /**
     * Provides operations to call the getMailTips method.
     */
    get getMailTips(): GetMailTipsRequestBuilder;
    /**
     * Provides operations to call the getManagedAppDiagnosticStatuses method.
     */
    get getManagedAppDiagnosticStatuses(): GetManagedAppDiagnosticStatusesRequestBuilder;
    /**
     * Provides operations to call the getManagedAppPolicies method.
     */
    get getManagedAppPolicies(): GetManagedAppPoliciesRequestBuilder;
    /**
     * Provides operations to call the getManagedDevicesWithAppFailures method.
     */
    get getManagedDevicesWithAppFailures(): GetManagedDevicesWithAppFailuresRequestBuilder;
    /**
     * Provides operations to call the getMemberGroups method.
     */
    get getMemberGroups(): GetMemberGroupsRequestBuilder;
    /**
     * Provides operations to call the getMemberObjects method.
     */
    get getMemberObjects(): GetMemberObjectsRequestBuilder;
    /**
     * Provides operations to manage the inferenceClassification property of the microsoft.graph.user entity.
     */
    get inferenceClassification(): InferenceClassificationRequestBuilder;
    /**
     * Provides operations to manage the insights property of the microsoft.graph.user entity.
     */
    get insights(): InsightsRequestBuilder;
    /**
     * Provides operations to manage the joinedTeams property of the microsoft.graph.user entity.
     */
    get joinedTeams(): JoinedTeamsRequestBuilder;
    /**
     * Provides operations to manage the licenseDetails property of the microsoft.graph.user entity.
     */
    get licenseDetails(): LicenseDetailsRequestBuilder;
    /**
     * The mailboxSettings property
     */
    get mailboxSettings(): MailboxSettingsRequestBuilder;
    /**
     * Provides operations to manage the mailFolders property of the microsoft.graph.user entity.
     */
    get mailFolders(): MailFoldersRequestBuilder;
    /**
     * Provides operations to manage the managedAppRegistrations property of the microsoft.graph.user entity.
     */
    get managedAppRegistrations(): ManagedAppRegistrationsRequestBuilder;
    /**
     * Provides operations to manage the managedDevices property of the microsoft.graph.user entity.
     */
    get managedDevices(): ManagedDevicesRequestBuilder;
    /**
     * Provides operations to manage the manager property of the microsoft.graph.user entity.
     */
    get manager(): ManagerRequestBuilder;
    /**
     * Provides operations to manage the memberOf property of the microsoft.graph.user entity.
     */
    get memberOf(): MemberOfRequestBuilder;
    /**
     * Provides operations to manage the messages property of the microsoft.graph.user entity.
     */
    get messages(): MessagesRequestBuilder;
    /**
     * Provides operations to manage the oauth2PermissionGrants property of the microsoft.graph.user entity.
     */
    get oauth2PermissionGrants(): Oauth2PermissionGrantsRequestBuilder;
    /**
     * Provides operations to manage the onenote property of the microsoft.graph.user entity.
     */
    get onenote(): OnenoteRequestBuilder;
    /**
     * Provides operations to manage the onlineMeetings property of the microsoft.graph.user entity.
     */
    get onlineMeetings(): OnlineMeetingsRequestBuilder;
    /**
     * Provides operations to manage the outlook property of the microsoft.graph.user entity.
     */
    get outlook(): OutlookRequestBuilder;
    /**
     * Provides operations to manage the ownedDevices property of the microsoft.graph.user entity.
     */
    get ownedDevices(): OwnedDevicesRequestBuilder;
    /**
     * Provides operations to manage the ownedObjects property of the microsoft.graph.user entity.
     */
    get ownedObjects(): OwnedObjectsRequestBuilder;
    /**
     * Provides operations to manage the people property of the microsoft.graph.user entity.
     */
    get people(): PeopleRequestBuilder;
    /**
     * Provides operations to manage the permissionGrants property of the microsoft.graph.user entity.
     */
    get permissionGrants(): PermissionGrantsRequestBuilder;
    /**
     * Provides operations to manage the photo property of the microsoft.graph.user entity.
     */
    get photo(): PhotoRequestBuilder;
    /**
     * Provides operations to manage the photos property of the microsoft.graph.user entity.
     */
    get photos(): PhotosRequestBuilder;
    /**
     * Provides operations to manage the planner property of the microsoft.graph.user entity.
     */
    get planner(): PlannerRequestBuilder;
    /**
     * Provides operations to manage the presence property of the microsoft.graph.user entity.
     */
    get presence(): PresenceRequestBuilder;
    /**
     * Provides operations to manage the registeredDevices property of the microsoft.graph.user entity.
     */
    get registeredDevices(): RegisteredDevicesRequestBuilder;
    /**
     * Provides operations to call the removeAllDevicesFromManagement method.
     */
    get removeAllDevicesFromManagement(): RemoveAllDevicesFromManagementRequestBuilder;
    /**
     * Provides operations to call the reprocessLicenseAssignment method.
     */
    get reprocessLicenseAssignment(): ReprocessLicenseAssignmentRequestBuilder;
    /**
     * Provides operations to call the restore method.
     */
    get restore(): RestoreRequestBuilder;
    /**
     * Provides operations to call the retryServiceProvisioning method.
     */
    get retryServiceProvisioning(): RetryServiceProvisioningRequestBuilder;
    /**
     * Provides operations to call the revokeSignInSessions method.
     */
    get revokeSignInSessions(): RevokeSignInSessionsRequestBuilder;
    /**
     * Provides operations to manage the scopedRoleMemberOf property of the microsoft.graph.user entity.
     */
    get scopedRoleMemberOf(): ScopedRoleMemberOfRequestBuilder;
    /**
     * Provides operations to call the sendMail method.
     */
    get sendMail(): SendMailRequestBuilder;
    /**
     * The serviceProvisioningErrors property
     */
    get serviceProvisioningErrors(): ServiceProvisioningErrorsRequestBuilder;
    /**
     * Provides operations to manage the settings property of the microsoft.graph.user entity.
     */
    get settings(): SettingsRequestBuilder;
    /**
     * Provides operations to manage the solutions property of the microsoft.graph.user entity.
     */
    get solutions(): SolutionsRequestBuilder;
    /**
     * Provides operations to manage the sponsors property of the microsoft.graph.user entity.
     */
    get sponsors(): SponsorsRequestBuilder;
    /**
     * Provides operations to manage the teamwork property of the microsoft.graph.user entity.
     */
    get teamwork(): TeamworkRequestBuilder;
    /**
     * Provides operations to manage the todo property of the microsoft.graph.user entity.
     */
    get todo(): TodoRequestBuilder;
    /**
     * Provides operations to manage the transitiveMemberOf property of the microsoft.graph.user entity.
     */
    get transitiveMemberOf(): TransitiveMemberOfRequestBuilder;
    /**
     * Provides operations to call the translateExchangeIds method.
     */
    get translateExchangeIds(): TranslateExchangeIdsRequestBuilder;
    /**
     * Provides operations to call the wipeManagedAppRegistrationsByDeviceTag method.
     */
    get wipeManagedAppRegistrationsByDeviceTag(): WipeManagedAppRegistrationsByDeviceTagRequestBuilder;
    /**
     * Deletes a user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-onboarding-user-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Provides operations to call the exportDeviceAndAppManagementData method.
     * @param skip Usage: skip={skip}
     * @param top Usage: top={top}
     * @returns {ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder}
     */
     exportDeviceAndAppManagementDataWithSkipWithTop(skip: number | undefined, top: number | undefined) : ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder;
    /**
     * Read properties and relationships of the user object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<User>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-mam-user-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<UserItemRequestBuilderGetQueryParameters> | undefined) : Promise<User | undefined>;
    /**
     * Update the properties of a user object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<User>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-mam-user-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: User, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<User | undefined>;
    /**
     * Provides operations to call the reminderView method.
     * @param EndDateTime Usage: EndDateTime='{EndDateTime}'
     * @param StartDateTime Usage: StartDateTime='{StartDateTime}'
     * @returns {ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder}
     */
     reminderViewWithStartDateTimeWithEndDateTime(endDateTime: string | undefined, startDateTime: string | undefined) : ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder;
    /**
     * Deletes a user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read properties and relationships of the user object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UserItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a user object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: User, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read properties and relationships of the user object.
 */
export interface UserItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const UserItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UserItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UserItemRequestBuilderNavigationMetadata: Record<Exclude<keyof UserItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    exportDeviceAndAppManagementDataWithSkipWithTop: {
        requestsMetadata: ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilderRequestsMetadata,
        pathParametersMappings: ["skip", "top"],
    },
    reminderViewWithStartDateTimeWithEndDateTime: {
        requestsMetadata: ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilderRequestsMetadata,
        pathParametersMappings: ["EndDateTime", "StartDateTime"],
    },
    activities: {
        requestsMetadata: ActivitiesRequestBuilderRequestsMetadata,
        navigationMetadata: ActivitiesRequestBuilderNavigationMetadata,
    },
    agreementAcceptances: {
        requestsMetadata: AgreementAcceptancesRequestBuilderRequestsMetadata,
        navigationMetadata: AgreementAcceptancesRequestBuilderNavigationMetadata,
    },
    appRoleAssignments: {
        requestsMetadata: AppRoleAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AppRoleAssignmentsRequestBuilderNavigationMetadata,
    },
    assignLicense: {
        requestsMetadata: AssignLicenseRequestBuilderRequestsMetadata,
    },
    authentication: {
        requestsMetadata: AuthenticationRequestBuilderRequestsMetadata,
        navigationMetadata: AuthenticationRequestBuilderNavigationMetadata,
    },
    calendar: {
        requestsMetadata: CalendarRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarRequestBuilderNavigationMetadata,
    },
    calendarGroups: {
        requestsMetadata: CalendarGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarGroupsRequestBuilderNavigationMetadata,
    },
    calendars: {
        requestsMetadata: CalendarsRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarsRequestBuilderNavigationMetadata,
    },
    calendarView: {
        requestsMetadata: CalendarViewRequestBuilderRequestsMetadata,
        navigationMetadata: CalendarViewRequestBuilderNavigationMetadata,
    },
    changePassword: {
        requestsMetadata: ChangePasswordRequestBuilderRequestsMetadata,
    },
    chats: {
        requestsMetadata: ChatsRequestBuilderRequestsMetadata,
        navigationMetadata: ChatsRequestBuilderNavigationMetadata,
    },
    checkMemberGroups: {
        requestsMetadata: CheckMemberGroupsRequestBuilderRequestsMetadata,
    },
    checkMemberObjects: {
        requestsMetadata: CheckMemberObjectsRequestBuilderRequestsMetadata,
    },
    cloudClipboard: {
        requestsMetadata: CloudClipboardRequestBuilderRequestsMetadata,
        navigationMetadata: CloudClipboardRequestBuilderNavigationMetadata,
    },
    contactFolders: {
        requestsMetadata: ContactFoldersRequestBuilderRequestsMetadata,
        navigationMetadata: ContactFoldersRequestBuilderNavigationMetadata,
    },
    contacts: {
        requestsMetadata: ContactsRequestBuilderRequestsMetadata,
        navigationMetadata: ContactsRequestBuilderNavigationMetadata,
    },
    createdObjects: {
        requestsMetadata: CreatedObjectsRequestBuilderRequestsMetadata,
        navigationMetadata: CreatedObjectsRequestBuilderNavigationMetadata,
    },
    deviceManagementTroubleshootingEvents: {
        requestsMetadata: DeviceManagementTroubleshootingEventsRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceManagementTroubleshootingEventsRequestBuilderNavigationMetadata,
    },
    directReports: {
        requestsMetadata: DirectReportsRequestBuilderRequestsMetadata,
        navigationMetadata: DirectReportsRequestBuilderNavigationMetadata,
    },
    drive: {
        requestsMetadata: DriveRequestBuilderRequestsMetadata,
    },
    drives: {
        requestsMetadata: DrivesRequestBuilderRequestsMetadata,
        navigationMetadata: DrivesRequestBuilderNavigationMetadata,
    },
    employeeExperience: {
        requestsMetadata: EmployeeExperienceRequestBuilderRequestsMetadata,
        navigationMetadata: EmployeeExperienceRequestBuilderNavigationMetadata,
    },
    events: {
        requestsMetadata: EventsRequestBuilderRequestsMetadata,
        navigationMetadata: EventsRequestBuilderNavigationMetadata,
    },
    exportDeviceAndAppManagementData: {
        requestsMetadata: ExportDeviceAndAppManagementDataRequestBuilderRequestsMetadata,
    },
    exportPersonalData: {
        requestsMetadata: ExportPersonalDataRequestBuilderRequestsMetadata,
    },
    extensions: {
        requestsMetadata: ExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: ExtensionsRequestBuilderNavigationMetadata,
    },
    findMeetingTimes: {
        requestsMetadata: FindMeetingTimesRequestBuilderRequestsMetadata,
    },
    followedSites: {
        requestsMetadata: FollowedSitesRequestBuilderRequestsMetadata,
        navigationMetadata: FollowedSitesRequestBuilderNavigationMetadata,
    },
    getMailTips: {
        requestsMetadata: GetMailTipsRequestBuilderRequestsMetadata,
    },
    getManagedAppDiagnosticStatuses: {
        requestsMetadata: GetManagedAppDiagnosticStatusesRequestBuilderRequestsMetadata,
    },
    getManagedAppPolicies: {
        requestsMetadata: GetManagedAppPoliciesRequestBuilderRequestsMetadata,
    },
    getManagedDevicesWithAppFailures: {
        requestsMetadata: GetManagedDevicesWithAppFailuresRequestBuilderRequestsMetadata,
    },
    getMemberGroups: {
        requestsMetadata: GetMemberGroupsRequestBuilderRequestsMetadata,
    },
    getMemberObjects: {
        requestsMetadata: GetMemberObjectsRequestBuilderRequestsMetadata,
    },
    inferenceClassification: {
        requestsMetadata: InferenceClassificationRequestBuilderRequestsMetadata,
        navigationMetadata: InferenceClassificationRequestBuilderNavigationMetadata,
    },
    insights: {
        requestsMetadata: InsightsRequestBuilderRequestsMetadata,
        navigationMetadata: InsightsRequestBuilderNavigationMetadata,
    },
    joinedTeams: {
        requestsMetadata: JoinedTeamsRequestBuilderRequestsMetadata,
        navigationMetadata: JoinedTeamsRequestBuilderNavigationMetadata,
    },
    licenseDetails: {
        requestsMetadata: LicenseDetailsRequestBuilderRequestsMetadata,
        navigationMetadata: LicenseDetailsRequestBuilderNavigationMetadata,
    },
    mailboxSettings: {
        requestsMetadata: MailboxSettingsRequestBuilderRequestsMetadata,
    },
    mailFolders: {
        requestsMetadata: MailFoldersRequestBuilderRequestsMetadata,
        navigationMetadata: MailFoldersRequestBuilderNavigationMetadata,
    },
    managedAppRegistrations: {
        requestsMetadata: ManagedAppRegistrationsRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedAppRegistrationsRequestBuilderNavigationMetadata,
    },
    managedDevices: {
        requestsMetadata: ManagedDevicesRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedDevicesRequestBuilderNavigationMetadata,
    },
    manager: {
        requestsMetadata: ManagerRequestBuilderRequestsMetadata,
        navigationMetadata: ManagerRequestBuilderNavigationMetadata,
    },
    memberOf: {
        requestsMetadata: MemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: MemberOfRequestBuilderNavigationMetadata,
    },
    messages: {
        requestsMetadata: MessagesRequestBuilderRequestsMetadata,
        navigationMetadata: MessagesRequestBuilderNavigationMetadata,
    },
    oauth2PermissionGrants: {
        requestsMetadata: Oauth2PermissionGrantsRequestBuilderRequestsMetadata,
        navigationMetadata: Oauth2PermissionGrantsRequestBuilderNavigationMetadata,
    },
    onenote: {
        requestsMetadata: OnenoteRequestBuilderRequestsMetadata,
        navigationMetadata: OnenoteRequestBuilderNavigationMetadata,
    },
    onlineMeetings: {
        requestsMetadata: OnlineMeetingsRequestBuilderRequestsMetadata,
        navigationMetadata: OnlineMeetingsRequestBuilderNavigationMetadata,
    },
    outlook: {
        requestsMetadata: OutlookRequestBuilderRequestsMetadata,
        navigationMetadata: OutlookRequestBuilderNavigationMetadata,
    },
    ownedDevices: {
        requestsMetadata: OwnedDevicesRequestBuilderRequestsMetadata,
        navigationMetadata: OwnedDevicesRequestBuilderNavigationMetadata,
    },
    ownedObjects: {
        requestsMetadata: OwnedObjectsRequestBuilderRequestsMetadata,
        navigationMetadata: OwnedObjectsRequestBuilderNavigationMetadata,
    },
    people: {
        requestsMetadata: PeopleRequestBuilderRequestsMetadata,
        navigationMetadata: PeopleRequestBuilderNavigationMetadata,
    },
    permissionGrants: {
        requestsMetadata: PermissionGrantsRequestBuilderRequestsMetadata,
        navigationMetadata: PermissionGrantsRequestBuilderNavigationMetadata,
    },
    photo: {
        requestsMetadata: PhotoRequestBuilderRequestsMetadata,
        navigationMetadata: PhotoRequestBuilderNavigationMetadata,
    },
    photos: {
        requestsMetadata: PhotosRequestBuilderRequestsMetadata,
        navigationMetadata: PhotosRequestBuilderNavigationMetadata,
    },
    planner: {
        requestsMetadata: PlannerRequestBuilderRequestsMetadata,
        navigationMetadata: PlannerRequestBuilderNavigationMetadata,
    },
    presence: {
        requestsMetadata: PresenceRequestBuilderRequestsMetadata,
        navigationMetadata: PresenceRequestBuilderNavigationMetadata,
    },
    registeredDevices: {
        requestsMetadata: RegisteredDevicesRequestBuilderRequestsMetadata,
        navigationMetadata: RegisteredDevicesRequestBuilderNavigationMetadata,
    },
    removeAllDevicesFromManagement: {
        requestsMetadata: RemoveAllDevicesFromManagementRequestBuilderRequestsMetadata,
    },
    reprocessLicenseAssignment: {
        requestsMetadata: ReprocessLicenseAssignmentRequestBuilderRequestsMetadata,
    },
    restore: {
        requestsMetadata: RestoreRequestBuilderRequestsMetadata,
    },
    retryServiceProvisioning: {
        requestsMetadata: RetryServiceProvisioningRequestBuilderRequestsMetadata,
    },
    revokeSignInSessions: {
        requestsMetadata: RevokeSignInSessionsRequestBuilderRequestsMetadata,
    },
    scopedRoleMemberOf: {
        requestsMetadata: ScopedRoleMemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: ScopedRoleMemberOfRequestBuilderNavigationMetadata,
    },
    sendMail: {
        requestsMetadata: SendMailRequestBuilderRequestsMetadata,
    },
    serviceProvisioningErrors: {
        requestsMetadata: ServiceProvisioningErrorsRequestBuilderRequestsMetadata,
        navigationMetadata: ServiceProvisioningErrorsRequestBuilderNavigationMetadata,
    },
    settings: {
        requestsMetadata: SettingsRequestBuilderRequestsMetadata,
        navigationMetadata: SettingsRequestBuilderNavigationMetadata,
    },
    solutions: {
        requestsMetadata: SolutionsRequestBuilderRequestsMetadata,
        navigationMetadata: SolutionsRequestBuilderNavigationMetadata,
    },
    sponsors: {
        requestsMetadata: SponsorsRequestBuilderRequestsMetadata,
        navigationMetadata: SponsorsRequestBuilderNavigationMetadata,
    },
    teamwork: {
        requestsMetadata: TeamworkRequestBuilderRequestsMetadata,
        navigationMetadata: TeamworkRequestBuilderNavigationMetadata,
    },
    todo: {
        requestsMetadata: TodoRequestBuilderRequestsMetadata,
        navigationMetadata: TodoRequestBuilderNavigationMetadata,
    },
    transitiveMemberOf: {
        requestsMetadata: TransitiveMemberOfRequestBuilderRequestsMetadata,
        navigationMetadata: TransitiveMemberOfRequestBuilderNavigationMetadata,
    },
    translateExchangeIds: {
        requestsMetadata: TranslateExchangeIdsRequestBuilderRequestsMetadata,
    },
    wipeManagedAppRegistrationsByDeviceTag: {
        requestsMetadata: WipeManagedAppRegistrationsByDeviceTagRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UserItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: UserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: UserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserFromDiscriminatorValue,
        queryParametersMapper: UserItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: UserItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUser,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
