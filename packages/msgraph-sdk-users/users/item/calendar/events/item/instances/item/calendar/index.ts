/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createCalendarFromDiscriminatorValue, type Calendar } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the calendar property of the microsoft.graph.event entity.
 */
export interface CalendarRequestBuilder extends BaseRequestBuilder<CalendarRequestBuilder> {
    /**
     * The calendar that contains the event. Navigation property. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Calendar>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<CalendarRequestBuilderGetQueryParameters> | undefined) : Promise<Calendar | undefined>;
    /**
     * The calendar that contains the event. Navigation property. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<CalendarRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * The calendar that contains the event. Navigation property. Read-only.
 */
export interface CalendarRequestBuilderGetQueryParameters {
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const CalendarRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/calendar/events/{event%2Did}/instances/{event%2Did1}/calendar{?%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const CalendarRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const CalendarRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: CalendarRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCalendarFromDiscriminatorValue,
        queryParametersMapper: CalendarRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the calendar property of the microsoft.graph.event entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AllowedOnlineMeetingProviders: "allowedOnlineMeetingProviders",
    CanEdit: "canEdit",
    CanShare: "canShare",
    CanViewPrivateItems: "canViewPrivateItems",
    ChangeKey: "changeKey",
    Color: "color",
    DefaultOnlineMeetingProvider: "defaultOnlineMeetingProvider",
    HexColor: "hexColor",
    IsDefaultCalendar: "isDefaultCalendar",
    IsRemovable: "isRemovable",
    IsTallyingResponses: "isTallyingResponses",
    Name: "name",
    Owner: "owner",
    CalendarPermissions: "calendarPermissions",
    CalendarView: "calendarView",
    Events: "events",
    MultiValueExtendedProperties: "multiValueExtendedProperties",
    SingleValueExtendedProperties: "singleValueExtendedProperties",
} as const;
/* tslint:enable */
/* eslint-enable */
