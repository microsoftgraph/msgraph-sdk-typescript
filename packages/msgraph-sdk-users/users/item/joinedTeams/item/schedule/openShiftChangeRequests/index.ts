/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createOpenShiftChangeRequestCollectionResponseFromDiscriminatorValue, createOpenShiftChangeRequestFromDiscriminatorValue, serializeOpenShiftChangeRequest, type OpenShiftChangeRequest, type OpenShiftChangeRequestCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { OpenShiftChangeRequestItemRequestBuilderRequestsMetadata, type OpenShiftChangeRequestItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the openShiftChangeRequests property of the microsoft.graph.schedule entity.
 */
export interface OpenShiftChangeRequestsRequestBuilder extends BaseRequestBuilder<OpenShiftChangeRequestsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the openShiftChangeRequests property of the microsoft.graph.schedule entity.
     * @param openShiftChangeRequestId The unique identifier of openShiftChangeRequest
     * @returns {OpenShiftChangeRequestItemRequestBuilder}
     */
     byOpenShiftChangeRequestId(openShiftChangeRequestId: string) : OpenShiftChangeRequestItemRequestBuilder;
    /**
     * Retrieve a list of openShiftChangeRequest objects in a team.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OpenShiftChangeRequestCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/openshiftchangerequest-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<OpenShiftChangeRequestsRequestBuilderGetQueryParameters> | undefined) : Promise<OpenShiftChangeRequestCollectionResponse | undefined>;
    /**
     * Create instance of an openShiftChangeRequest object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OpenShiftChangeRequest>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/openshiftchangerequest-post?view=graph-rest-1.0|Find more info here}
     */
     post(body: OpenShiftChangeRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OpenShiftChangeRequest | undefined>;
    /**
     * Retrieve a list of openShiftChangeRequest objects in a team.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OpenShiftChangeRequestsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create instance of an openShiftChangeRequest object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: OpenShiftChangeRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve a list of openShiftChangeRequest objects in a team.
 */
export interface OpenShiftChangeRequestsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const OpenShiftChangeRequestsRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/joinedTeams/{team%2Did}/schedule/openShiftChangeRequests{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the openShiftChangeRequests property of the microsoft.graph.schedule entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the openShiftChangeRequests property of the microsoft.graph.schedule entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedByDesc: "lastModifiedBy desc",
    LastModifiedDateTime: "lastModifiedDateTime",
    LastModifiedDateTimeDesc: "lastModifiedDateTime desc",
    AssignedTo: "assignedTo",
    AssignedToDesc: "assignedTo desc",
    ManagerActionDateTime: "managerActionDateTime",
    ManagerActionDateTimeDesc: "managerActionDateTime desc",
    ManagerActionMessage: "managerActionMessage",
    ManagerActionMessageDesc: "managerActionMessage desc",
    ManagerUserId: "managerUserId",
    ManagerUserIdDesc: "managerUserId desc",
    SenderDateTime: "senderDateTime",
    SenderDateTimeDesc: "senderDateTime desc",
    SenderMessage: "senderMessage",
    SenderMessageDesc: "senderMessage desc",
    SenderUserId: "senderUserId",
    SenderUserIdDesc: "senderUserId desc",
    State: "state",
    StateDesc: "state desc",
    OpenShiftId: "openShiftId",
    OpenShiftIdDesc: "openShiftId desc",
} as const;
/**
 * Provides operations to manage the openShiftChangeRequests property of the microsoft.graph.schedule entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedDateTime: "createdDateTime",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    AssignedTo: "assignedTo",
    ManagerActionDateTime: "managerActionDateTime",
    ManagerActionMessage: "managerActionMessage",
    ManagerUserId: "managerUserId",
    SenderDateTime: "senderDateTime",
    SenderMessage: "senderMessage",
    SenderUserId: "senderUserId",
    State: "state",
    OpenShiftId: "openShiftId",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OpenShiftChangeRequestsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OpenShiftChangeRequestsRequestBuilderNavigationMetadata: Record<Exclude<keyof OpenShiftChangeRequestsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byOpenShiftChangeRequestId: {
        requestsMetadata: OpenShiftChangeRequestItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["openShiftChangeRequest%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OpenShiftChangeRequestsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: OpenShiftChangeRequestsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOpenShiftChangeRequestCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: OpenShiftChangeRequestsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: OpenShiftChangeRequestsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOpenShiftChangeRequestFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOpenShiftChangeRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
