/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createChatFromDiscriminatorValue, type Chat } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the chat property of the microsoft.graph.userScopeTeamsAppInstallation entity.
 */
export interface ChatRequestBuilder extends BaseRequestBuilder<ChatRequestBuilder> {
    /**
     * Retrieve the chat of the specified user and Teams app.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Chat>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/userscopeteamsappinstallation-get-chat?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ChatRequestBuilderGetQueryParameters> | undefined) : Promise<Chat | undefined>;
    /**
     * Retrieve the chat of the specified user and Teams app.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ChatRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Retrieve the chat of the specified user and Teams app.
 */
export interface ChatRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const ChatRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/teamwork/installedApps/{userScopeTeamsAppInstallation%2Did}/chat{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ChatRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ChatRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ChatRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createChatFromDiscriminatorValue,
        queryParametersMapper: ChatRequestBuilderGetQueryParametersMapper,
    },
};
/**
 * Provides operations to manage the chat property of the microsoft.graph.userScopeTeamsAppInstallation entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    InstalledApps: "installedApps",
    LastMessagePreview: "lastMessagePreview",
    Members: "members",
    Messages: "messages",
    PermissionGrants: "permissionGrants",
    PinnedMessages: "pinnedMessages",
    Tabs: "tabs",
} as const;
/**
 * Provides operations to manage the chat property of the microsoft.graph.userScopeTeamsAppInstallation entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ChatType: "chatType",
    CreatedDateTime: "createdDateTime",
    LastUpdatedDateTime: "lastUpdatedDateTime",
    OnlineMeetingInfo: "onlineMeetingInfo",
    TenantId: "tenantId",
    Topic: "topic",
    Viewpoint: "viewpoint",
    WebUrl: "webUrl",
    InstalledApps: "installedApps",
    LastMessagePreview: "lastMessagePreview",
    Members: "members",
    Messages: "messages",
    PermissionGrants: "permissionGrants",
    PinnedMessages: "pinnedMessages",
    Tabs: "tabs",
} as const;
/* tslint:enable */
/* eslint-enable */
