/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createItemBodyFromDiscriminatorValue, createKeyValuePairFromDiscriminatorValue, createTeamworkActivityTopicFromDiscriminatorValue, serializeItemBody, serializeKeyValuePair, serializeTeamworkActivityTopic, type ItemBody, type KeyValuePair, type TeamworkActivityTopic } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SendActivityNotificationPostRequestBody}
 */
export function createSendActivityNotificationPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSendActivityNotificationPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoSendActivityNotificationPostRequestBody(sendActivityNotificationPostRequestBody: Partial<SendActivityNotificationPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "activityType": n => { sendActivityNotificationPostRequestBody.activityType = n.getStringValue(); },
        "backingStoreEnabled": n => { sendActivityNotificationPostRequestBody.backingStoreEnabled = true; },
        "chainId": n => { sendActivityNotificationPostRequestBody.chainId = n.getNumberValue(); },
        "previewText": n => { sendActivityNotificationPostRequestBody.previewText = n.getObjectValue<ItemBody>(createItemBodyFromDiscriminatorValue); },
        "teamsAppId": n => { sendActivityNotificationPostRequestBody.teamsAppId = n.getStringValue(); },
        "templateParameters": n => { sendActivityNotificationPostRequestBody.templateParameters = n.getCollectionOfObjectValues<KeyValuePair>(createKeyValuePairFromDiscriminatorValue); },
        "topic": n => { sendActivityNotificationPostRequestBody.topic = n.getObjectValue<TeamworkActivityTopic>(createTeamworkActivityTopicFromDiscriminatorValue); },
    }
}
export interface SendActivityNotificationPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The activityType property
     */
    activityType?: string;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The chainId property
     */
    chainId?: number;
    /**
     * The previewText property
     */
    previewText?: ItemBody;
    /**
     * The teamsAppId property
     */
    teamsAppId?: string;
    /**
     * The templateParameters property
     */
    templateParameters?: KeyValuePair[];
    /**
     * The topic property
     */
    topic?: TeamworkActivityTopic;
}
/**
 * Provides operations to call the sendActivityNotification method.
 */
export interface SendActivityNotificationRequestBuilder extends BaseRequestBuilder<SendActivityNotificationRequestBuilder> {
    /**
     * Send an activity feed notification to a user. For more information, see sending Teams activity notifications.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/userteamwork-sendactivitynotification?view=graph-rest-1.0|Find more info here}
     */
     post(body: SendActivityNotificationPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Send an activity feed notification to a user. For more information, see sending Teams activity notifications.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: SendActivityNotificationPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeSendActivityNotificationPostRequestBody(writer: SerializationWriter, sendActivityNotificationPostRequestBody: Partial<SendActivityNotificationPostRequestBody> | undefined = {}) : void {
    writer.writeStringValue("activityType", sendActivityNotificationPostRequestBody.activityType);
    writer.writeNumberValue("chainId", sendActivityNotificationPostRequestBody.chainId);
    writer.writeObjectValue<ItemBody>("previewText", sendActivityNotificationPostRequestBody.previewText, serializeItemBody);
    writer.writeStringValue("teamsAppId", sendActivityNotificationPostRequestBody.teamsAppId);
    writer.writeCollectionOfObjectValues<KeyValuePair>("templateParameters", sendActivityNotificationPostRequestBody.templateParameters, serializeKeyValuePair);
    writer.writeObjectValue<TeamworkActivityTopic>("topic", sendActivityNotificationPostRequestBody.topic, serializeTeamworkActivityTopic);
    writer.writeAdditionalData(sendActivityNotificationPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const SendActivityNotificationRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/teamwork/sendActivityNotification";
/**
 * Metadata for all the requests in the request builder.
 */
export const SendActivityNotificationRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: SendActivityNotificationRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSendActivityNotificationPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
