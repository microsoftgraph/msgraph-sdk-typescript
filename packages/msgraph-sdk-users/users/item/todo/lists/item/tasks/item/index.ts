/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createTodoTaskFromDiscriminatorValue, serializeTodoTask, type TodoTask } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { AttachmentsRequestBuilderNavigationMetadata, AttachmentsRequestBuilderRequestsMetadata, type AttachmentsRequestBuilder } from './attachments/';
// @ts-ignore
import { AttachmentSessionsRequestBuilderNavigationMetadata, AttachmentSessionsRequestBuilderRequestsMetadata, type AttachmentSessionsRequestBuilder } from './attachmentSessions/';
// @ts-ignore
import { ChecklistItemsRequestBuilderNavigationMetadata, ChecklistItemsRequestBuilderRequestsMetadata, type ChecklistItemsRequestBuilder } from './checklistItems/';
// @ts-ignore
import { ExtensionsRequestBuilderNavigationMetadata, ExtensionsRequestBuilderRequestsMetadata, type ExtensionsRequestBuilder } from './extensions/';
// @ts-ignore
import { LinkedResourcesRequestBuilderNavigationMetadata, LinkedResourcesRequestBuilderRequestsMetadata, type LinkedResourcesRequestBuilder } from './linkedResources/';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the tasks property of the microsoft.graph.todoTaskList entity.
 */
export interface TodoTaskItemRequestBuilder extends BaseRequestBuilder<TodoTaskItemRequestBuilder> {
    /**
     * Provides operations to manage the attachments property of the microsoft.graph.todoTask entity.
     */
    get attachments(): AttachmentsRequestBuilder;
    /**
     * Provides operations to manage the attachmentSessions property of the microsoft.graph.todoTask entity.
     */
    get attachmentSessions(): AttachmentSessionsRequestBuilder;
    /**
     * Provides operations to manage the checklistItems property of the microsoft.graph.todoTask entity.
     */
    get checklistItems(): ChecklistItemsRequestBuilder;
    /**
     * Provides operations to manage the extensions property of the microsoft.graph.todoTask entity.
     */
    get extensions(): ExtensionsRequestBuilder;
    /**
     * Provides operations to manage the linkedResources property of the microsoft.graph.todoTask entity.
     */
    get linkedResources(): LinkedResourcesRequestBuilder;
    /**
     * Deletes a todoTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/todotask-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a todoTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TodoTask>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/todotask-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<TodoTaskItemRequestBuilderGetQueryParameters> | undefined) : Promise<TodoTask | undefined>;
    /**
     * Update the properties of a todoTask object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<TodoTask>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/todotask-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: TodoTask, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<TodoTask | undefined>;
    /**
     * Deletes a todoTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a todoTask object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<TodoTaskItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a todoTask object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: TodoTask, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a todoTask object.
 */
export interface TodoTaskItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const TodoTaskItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/todo/lists/{todoTaskList%2Did}/tasks/{todoTask%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const TodoTaskItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const TodoTaskItemRequestBuilderNavigationMetadata: Record<Exclude<keyof TodoTaskItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    attachments: {
        requestsMetadata: AttachmentsRequestBuilderRequestsMetadata,
        navigationMetadata: AttachmentsRequestBuilderNavigationMetadata,
    },
    attachmentSessions: {
        requestsMetadata: AttachmentSessionsRequestBuilderRequestsMetadata,
        navigationMetadata: AttachmentSessionsRequestBuilderNavigationMetadata,
    },
    checklistItems: {
        requestsMetadata: ChecklistItemsRequestBuilderRequestsMetadata,
        navigationMetadata: ChecklistItemsRequestBuilderNavigationMetadata,
    },
    extensions: {
        requestsMetadata: ExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: ExtensionsRequestBuilderNavigationMetadata,
    },
    linkedResources: {
        requestsMetadata: LinkedResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: LinkedResourcesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const TodoTaskItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: TodoTaskItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: TodoTaskItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTodoTaskFromDiscriminatorValue,
        queryParametersMapper: TodoTaskItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: TodoTaskItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createTodoTaskFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTodoTask,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
