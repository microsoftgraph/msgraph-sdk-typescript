/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createWorkingTimeScheduleFromDiscriminatorValue, serializeWorkingTimeSchedule, type WorkingTimeSchedule } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { EndWorkingTimeRequestBuilderRequestsMetadata, type EndWorkingTimeRequestBuilder } from './endWorkingTime/index.js';
// @ts-ignore
import { StartWorkingTimeRequestBuilderRequestsMetadata, type StartWorkingTimeRequestBuilder } from './startWorkingTime/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the workingTimeSchedule property of the microsoft.graph.userSolutionRoot entity.
 */
export interface WorkingTimeScheduleRequestBuilder extends BaseRequestBuilder<WorkingTimeScheduleRequestBuilder> {
    /**
     * Provides operations to call the endWorkingTime method.
     */
    get endWorkingTime(): EndWorkingTimeRequestBuilder;
    /**
     * Provides operations to call the startWorkingTime method.
     */
    get startWorkingTime(): StartWorkingTimeRequestBuilder;
    /**
     * Delete navigation property workingTimeSchedule for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * The working time schedule entity associated with the solution.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WorkingTimeSchedule>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<WorkingTimeScheduleRequestBuilderGetQueryParameters> | undefined) : Promise<WorkingTimeSchedule | undefined>;
    /**
     * Update the navigation property workingTimeSchedule in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WorkingTimeSchedule>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: WorkingTimeSchedule, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WorkingTimeSchedule | undefined>;
    /**
     * Delete navigation property workingTimeSchedule for users
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * The working time schedule entity associated with the solution.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WorkingTimeScheduleRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property workingTimeSchedule in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: WorkingTimeSchedule, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The working time schedule entity associated with the solution.
 */
export interface WorkingTimeScheduleRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const WorkingTimeScheduleRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/solutions/workingTimeSchedule{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const WorkingTimeScheduleRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WorkingTimeScheduleRequestBuilderNavigationMetadata: Record<Exclude<keyof WorkingTimeScheduleRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    endWorkingTime: {
        requestsMetadata: EndWorkingTimeRequestBuilderRequestsMetadata,
    },
    startWorkingTime: {
        requestsMetadata: StartWorkingTimeRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WorkingTimeScheduleRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WorkingTimeScheduleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WorkingTimeScheduleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWorkingTimeScheduleFromDiscriminatorValue,
        queryParametersMapper: WorkingTimeScheduleRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: WorkingTimeScheduleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWorkingTimeScheduleFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWorkingTimeSchedule,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
