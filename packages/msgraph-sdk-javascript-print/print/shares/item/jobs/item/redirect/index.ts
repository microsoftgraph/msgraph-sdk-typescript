/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPrintJobConfigurationFromDiscriminatorValue, createPrintJobFromDiscriminatorValue, serializePrintJob, serializePrintJobConfiguration, type PrintJob, type PrintJobConfiguration } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a redirectPostRequestBody
 */
export function createRedirectPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoRedirectPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoRedirectPostRequestBody(redirectPostRequestBody: RedirectPostRequestBody | undefined = {} as RedirectPostRequestBody) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { redirectPostRequestBody.backingStoreEnabled = true; },
        "configuration": n => { redirectPostRequestBody.configuration = n.getObjectValue<PrintJobConfiguration>(createPrintJobConfigurationFromDiscriminatorValue); },
        "destinationPrinterId": n => { redirectPostRequestBody.destinationPrinterId = n.getStringValue(); },
    }
}
export interface RedirectPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The configuration property
     */
    configuration?: PrintJobConfiguration;
    /**
     * The destinationPrinterId property
     */
    destinationPrinterId?: string;
}
/**
 * Provides operations to call the redirect method.
 */
export interface RedirectRequestBuilder extends BaseRequestBuilder<RedirectRequestBuilder> {
    /**
     * Redirect a print job to a different printer. Redirecting a print job will only succeed if there is a printTask in a processing state on the associated print job, started by a trigger that the requesting app created.  For details about how to use this API to add pull printing support to Universal Print, see Extending Universal Print to support pull printing.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PrintJob
     * @see {@link https://learn.microsoft.com/graph/api/printjob-redirect?view=graph-rest-1.0|Find more info here}
     */
     post(body: RedirectPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PrintJob | undefined>;
    /**
     * Redirect a print job to a different printer. Redirecting a print job will only succeed if there is a printTask in a processing state on the associated print job, started by a trigger that the requesting app created.  For details about how to use this API to add pull printing support to Universal Print, see Extending Universal Print to support pull printing.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(body: RedirectPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeRedirectPostRequestBody(writer: SerializationWriter, redirectPostRequestBody: RedirectPostRequestBody | undefined = {} as RedirectPostRequestBody) : void {
    writer.writeObjectValue<PrintJobConfiguration>("configuration", redirectPostRequestBody.configuration, serializePrintJobConfiguration);
    writer.writeStringValue("destinationPrinterId", redirectPostRequestBody.destinationPrinterId);
    writer.writeAdditionalData(redirectPostRequestBody.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const RedirectRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPrintJobFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRedirectPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const RedirectRequestBuilderUriTemplate = "{+baseurl}/print/shares/{printerShare%2Did}/jobs/{printJob%2Did}/redirect";
/* tslint:enable */
/* eslint-enable */
