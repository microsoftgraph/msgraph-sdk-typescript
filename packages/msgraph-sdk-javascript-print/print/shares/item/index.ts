/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPrinterShareFromDiscriminatorValue, serializePrinterShare, type PrinterShare } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { AllowedGroupsRequestBuilderNavigationMetadata, AllowedGroupsRequestBuilderRequestsMetadata, AllowedGroupsRequestBuilderUriTemplate, type AllowedGroupsRequestBuilder } from './allowedGroups/';
import { AllowedUsersRequestBuilderNavigationMetadata, AllowedUsersRequestBuilderRequestsMetadata, AllowedUsersRequestBuilderUriTemplate, type AllowedUsersRequestBuilder } from './allowedUsers/';
import { JobsRequestBuilderNavigationMetadata, JobsRequestBuilderRequestsMetadata, JobsRequestBuilderUriTemplate, type JobsRequestBuilder } from './jobs/';
import { PrinterRequestBuilderRequestsMetadata, PrinterRequestBuilderUriTemplate, type PrinterRequestBuilder } from './printer/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the shares property of the microsoft.graph.print entity.
 */
export interface PrinterShareItemRequestBuilder extends BaseRequestBuilder<PrinterShareItemRequestBuilder> {
    /**
     * Provides operations to manage the allowedGroups property of the microsoft.graph.printerShare entity.
     */
    get allowedGroups(): AllowedGroupsRequestBuilder;
    /**
     * Provides operations to manage the allowedUsers property of the microsoft.graph.printerShare entity.
     */
    get allowedUsers(): AllowedUsersRequestBuilder;
    /**
     * Provides operations to manage the jobs property of the microsoft.graph.printerBase entity.
     */
    get jobs(): JobsRequestBuilder;
    /**
     * Provides operations to manage the printer property of the microsoft.graph.printerShare entity.
     */
    get printer(): PrinterRequestBuilder;
    /**
     * Delete a printer share (unshare the associated printer). This action can't be undone. If the printer is shared again in the future, any Windows users who had previously installed the printer needs to discover and reinstall it.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/printershare-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties and relationships of a printer share.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PrinterShare
     * @see {@link https://learn.microsoft.com/graph/api/printershare-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<PrinterShareItemRequestBuilderGetQueryParameters> | undefined) : Promise<PrinterShare | undefined>;
    /**
     * Update the properties of a printer share. This method can be used to swap printers. For example, if a physical printer device breaks, an administrator can register a new printer device and update this printerShare to point to the new printer without requiring users to take any action.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PrinterShare
     * @see {@link https://learn.microsoft.com/graph/api/printershare-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: PrinterShare, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PrinterShare | undefined>;
    /**
     * Delete a printer share (unshare the associated printer). This action can't be undone. If the printer is shared again in the future, any Windows users who had previously installed the printer needs to discover and reinstall it.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of a printer share.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PrinterShareItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a printer share. This method can be used to swap printers. For example, if a physical printer device breaks, an administrator can register a new printer device and update this printerShare to point to the new printer without requiring users to take any action.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: PrinterShare, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of a printer share.
 */
export interface PrinterShareItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PrinterShareItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PrinterShareItemRequestBuilderNavigationMetadata: Record<Exclude<keyof PrinterShareItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    allowedGroups: {
        uriTemplate: AllowedGroupsRequestBuilderUriTemplate,
        requestsMetadata: AllowedGroupsRequestBuilderRequestsMetadata,
        navigationMetadata: AllowedGroupsRequestBuilderNavigationMetadata,
    },
    allowedUsers: {
        uriTemplate: AllowedUsersRequestBuilderUriTemplate,
        requestsMetadata: AllowedUsersRequestBuilderRequestsMetadata,
        navigationMetadata: AllowedUsersRequestBuilderNavigationMetadata,
    },
    jobs: {
        uriTemplate: JobsRequestBuilderUriTemplate,
        requestsMetadata: JobsRequestBuilderRequestsMetadata,
        navigationMetadata: JobsRequestBuilderNavigationMetadata,
    },
    printer: {
        uriTemplate: PrinterRequestBuilderUriTemplate,
        requestsMetadata: PrinterRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PrinterShareItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPrinterShareFromDiscriminatorValue,
        queryParametersMapper: PrinterShareItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPrinterShareFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePrinterShare,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const PrinterShareItemRequestBuilderUriTemplate = "{+baseurl}/print/shares/{printerShare%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
