/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createOnlineMeetingEngagementConversationFromDiscriminatorValue, serializeOnlineMeetingEngagementConversation, type OnlineMeetingEngagementConversation } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { MessagesRequestBuilderNavigationMetadata, MessagesRequestBuilderRequestsMetadata, type MessagesRequestBuilder } from './messages/index.js';
// @ts-ignore
import { OnlineMeetingRequestBuilderNavigationMetadata, OnlineMeetingRequestBuilderRequestsMetadata, type OnlineMeetingRequestBuilder } from './onlineMeeting/index.js';
// @ts-ignore
import { StarterRequestBuilderNavigationMetadata, StarterRequestBuilderRequestsMetadata, type StarterRequestBuilder } from './starter/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the onlineMeetingConversations property of the microsoft.graph.cloudCommunications entity.
 */
export interface OnlineMeetingEngagementConversationItemRequestBuilder extends BaseRequestBuilder<OnlineMeetingEngagementConversationItemRequestBuilder> {
    /**
     * Provides operations to manage the messages property of the microsoft.graph.engagementConversation entity.
     */
    get messages(): MessagesRequestBuilder;
    /**
     * Provides operations to manage the onlineMeeting property of the microsoft.graph.onlineMeetingEngagementConversation entity.
     */
    get onlineMeeting(): OnlineMeetingRequestBuilder;
    /**
     * Provides operations to manage the starter property of the microsoft.graph.engagementConversation entity.
     */
    get starter(): StarterRequestBuilder;
    /**
     * Delete navigation property onlineMeetingConversations for communications
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * A collection of structured question-and-answer (Q&A) threads in Teams directly associated with online meetings.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnlineMeetingEngagementConversation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<OnlineMeetingEngagementConversationItemRequestBuilderGetQueryParameters> | undefined) : Promise<OnlineMeetingEngagementConversation | undefined>;
    /**
     * Update the navigation property onlineMeetingConversations in communications
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<OnlineMeetingEngagementConversation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: OnlineMeetingEngagementConversation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<OnlineMeetingEngagementConversation | undefined>;
    /**
     * Delete navigation property onlineMeetingConversations for communications
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * A collection of structured question-and-answer (Q&A) threads in Teams directly associated with online meetings.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<OnlineMeetingEngagementConversationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property onlineMeetingConversations in communications
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: OnlineMeetingEngagementConversation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * A collection of structured question-and-answer (Q&A) threads in Teams directly associated with online meetings.
 */
export interface OnlineMeetingEngagementConversationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const OnlineMeetingEngagementConversationItemRequestBuilderUriTemplate = "{+baseurl}/communications/onlineMeetingConversations/{onlineMeetingEngagementConversation%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const OnlineMeetingEngagementConversationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const OnlineMeetingEngagementConversationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof OnlineMeetingEngagementConversationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    messages: {
        requestsMetadata: MessagesRequestBuilderRequestsMetadata,
        navigationMetadata: MessagesRequestBuilderNavigationMetadata,
    },
    onlineMeeting: {
        requestsMetadata: OnlineMeetingRequestBuilderRequestsMetadata,
        navigationMetadata: OnlineMeetingRequestBuilderNavigationMetadata,
    },
    starter: {
        requestsMetadata: StarterRequestBuilderRequestsMetadata,
        navigationMetadata: StarterRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const OnlineMeetingEngagementConversationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: OnlineMeetingEngagementConversationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: OnlineMeetingEngagementConversationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnlineMeetingEngagementConversationFromDiscriminatorValue,
        queryParametersMapper: OnlineMeetingEngagementConversationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: OnlineMeetingEngagementConversationItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createOnlineMeetingEngagementConversationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOnlineMeetingEngagementConversation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
