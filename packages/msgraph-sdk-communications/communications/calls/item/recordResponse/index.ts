/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createPromptFromDiscriminatorValue, createRecordOperationFromDiscriminatorValue, serializePrompt, serializeRecordOperation, type Prompt, type RecordOperation } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecordResponsePostRequestBody}
 */
// @ts-ignore
export function createRecordResponsePostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRecordResponsePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param RecordResponsePostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecordResponsePostRequestBody(recordResponsePostRequestBody: Partial<RecordResponsePostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { recordResponsePostRequestBody.backingStoreEnabled = true; },
        "bargeInAllowed": n => { recordResponsePostRequestBody.bargeInAllowed = n.getBooleanValue(); },
        "clientContext": n => { recordResponsePostRequestBody.clientContext = n.getStringValue(); },
        "initialSilenceTimeoutInSeconds": n => { recordResponsePostRequestBody.initialSilenceTimeoutInSeconds = n.getNumberValue(); },
        "maxRecordDurationInSeconds": n => { recordResponsePostRequestBody.maxRecordDurationInSeconds = n.getNumberValue(); },
        "maxSilenceTimeoutInSeconds": n => { recordResponsePostRequestBody.maxSilenceTimeoutInSeconds = n.getNumberValue(); },
        "playBeep": n => { recordResponsePostRequestBody.playBeep = n.getBooleanValue(); },
        "prompts": n => { recordResponsePostRequestBody.prompts = n.getCollectionOfObjectValues<Prompt>(createPromptFromDiscriminatorValue); },
        "stopTones": n => { recordResponsePostRequestBody.stopTones = n.getCollectionOfPrimitiveValues<string>(); },
    }
}
export interface RecordResponsePostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean | null;
    /**
     * The bargeInAllowed property
     */
    bargeInAllowed?: boolean | null;
    /**
     * The clientContext property
     */
    clientContext?: string | null;
    /**
     * The initialSilenceTimeoutInSeconds property
     */
    initialSilenceTimeoutInSeconds?: number | null;
    /**
     * The maxRecordDurationInSeconds property
     */
    maxRecordDurationInSeconds?: number | null;
    /**
     * The maxSilenceTimeoutInSeconds property
     */
    maxSilenceTimeoutInSeconds?: number | null;
    /**
     * The playBeep property
     */
    playBeep?: boolean | null;
    /**
     * The prompts property
     */
    prompts?: Prompt[] | null;
    /**
     * The stopTones property
     */
    stopTones?: string[] | null;
}
/**
 * Provides operations to call the recordResponse method.
 */
export interface RecordResponseRequestBuilder extends BaseRequestBuilder<RecordResponseRequestBuilder> {
    /**
     * Records a short audio response from the caller.A bot can utilize this to capture a voice response from a caller after they are prompted for a response. For further information on how to handle operations, please review commsOperation This action is not intended to record the entire call. The maximum length of recording is 2 minutes. The recording is not saved permanently by the Cloud Communications Platform and is discarded shortly after the call ends. The bot must download the recording promptly after the recording operation finishes by using the recordingLocation value that's given in the completed notification.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<RecordOperation>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/call-record?view=graph-rest-1.0|Find more info here}
     */
     post(body: RecordResponsePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RecordOperation | undefined>;
    /**
     * Records a short audio response from the caller.A bot can utilize this to capture a voice response from a caller after they are prompted for a response. For further information on how to handle operations, please review commsOperation This action is not intended to record the entire call. The maximum length of recording is 2 minutes. The recording is not saved permanently by the Cloud Communications Platform and is discarded shortly after the call ends. The bot must download the recording promptly after the recording operation finishes by using the recordingLocation value that's given in the completed notification.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: RecordResponsePostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param RecordResponsePostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecordResponsePostRequestBody(writer: SerializationWriter, recordResponsePostRequestBody: Partial<RecordResponsePostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!recordResponsePostRequestBody || isSerializingDerivedType) { return; }
    writer.writeBooleanValue("bargeInAllowed", recordResponsePostRequestBody.bargeInAllowed);
    writer.writeStringValue("clientContext", recordResponsePostRequestBody.clientContext);
    writer.writeNumberValue("initialSilenceTimeoutInSeconds", recordResponsePostRequestBody.initialSilenceTimeoutInSeconds);
    writer.writeNumberValue("maxRecordDurationInSeconds", recordResponsePostRequestBody.maxRecordDurationInSeconds);
    writer.writeNumberValue("maxSilenceTimeoutInSeconds", recordResponsePostRequestBody.maxSilenceTimeoutInSeconds);
    writer.writeBooleanValue("playBeep", recordResponsePostRequestBody.playBeep);
    writer.writeCollectionOfObjectValues<Prompt>("prompts", recordResponsePostRequestBody.prompts, serializePrompt);
    writer.writeCollectionOfPrimitiveValues<string>("stopTones", recordResponsePostRequestBody.stopTones);
    writer.writeAdditionalData(recordResponsePostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const RecordResponseRequestBuilderUriTemplate = "{+baseurl}/communications/calls/{call%2Did}/recordResponse";
/**
 * Metadata for all the requests in the request builder.
 */
export const RecordResponseRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: RecordResponseRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createRecordOperationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRecordResponsePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
