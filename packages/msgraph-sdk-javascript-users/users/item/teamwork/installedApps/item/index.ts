/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUserScopeTeamsAppInstallationFromDiscriminatorValue, serializeUserScopeTeamsAppInstallation, type UserScopeTeamsAppInstallation } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { ChatRequestBuilderRequestsMetadata, ChatRequestBuilderUriTemplate, type ChatRequestBuilder } from './chat/';
import { TeamsAppRequestBuilderRequestsMetadata, TeamsAppRequestBuilderUriTemplate, type TeamsAppRequestBuilder } from './teamsApp/';
import { TeamsAppDefinitionRequestBuilderRequestsMetadata, TeamsAppDefinitionRequestBuilderUriTemplate, type TeamsAppDefinitionRequestBuilder } from './teamsAppDefinition/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the installedApps property of the microsoft.graph.userTeamwork entity.
 */
export interface UserScopeTeamsAppInstallationItemRequestBuilder extends BaseRequestBuilder<UserScopeTeamsAppInstallationItemRequestBuilder> {
    /**
     * Provides operations to manage the chat property of the microsoft.graph.userScopeTeamsAppInstallation entity.
     */
    get chat(): ChatRequestBuilder;
    /**
     * Provides operations to manage the teamsApp property of the microsoft.graph.teamsAppInstallation entity.
     */
    get teamsApp(): TeamsAppRequestBuilder;
    /**
     * Provides operations to manage the teamsAppDefinition property of the microsoft.graph.teamsAppInstallation entity.
     */
    get teamsAppDefinition(): TeamsAppDefinitionRequestBuilder;
    /**
     * Uninstall an app from the personal scope of the specified user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/userteamwork-delete-installedapps?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the app installed in the personal scope of the specified user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of UserScopeTeamsAppInstallation
     * @see {@link https://learn.microsoft.com/graph/api/userteamwork-get-installedapps?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<UserScopeTeamsAppInstallationItemRequestBuilderGetQueryParameters> | undefined) : Promise<UserScopeTeamsAppInstallation | undefined>;
    /**
     * Update the navigation property installedApps in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of UserScopeTeamsAppInstallation
     */
     patch(body: UserScopeTeamsAppInstallation, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UserScopeTeamsAppInstallation | undefined>;
    /**
     * Uninstall an app from the personal scope of the specified user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the app installed in the personal scope of the specified user.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UserScopeTeamsAppInstallationItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property installedApps in users
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: UserScopeTeamsAppInstallation, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the app installed in the personal scope of the specified user.
 */
export interface UserScopeTeamsAppInstallationItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UserScopeTeamsAppInstallationItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UserScopeTeamsAppInstallationItemRequestBuilderNavigationMetadata: Record<Exclude<keyof UserScopeTeamsAppInstallationItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    chat: {
        uriTemplate: ChatRequestBuilderUriTemplate,
        requestsMetadata: ChatRequestBuilderRequestsMetadata,
    },
    teamsApp: {
        uriTemplate: TeamsAppRequestBuilderUriTemplate,
        requestsMetadata: TeamsAppRequestBuilderRequestsMetadata,
    },
    teamsAppDefinition: {
        uriTemplate: TeamsAppDefinitionRequestBuilderUriTemplate,
        requestsMetadata: TeamsAppDefinitionRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UserScopeTeamsAppInstallationItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUserScopeTeamsAppInstallationFromDiscriminatorValue,
        queryParametersMapper: UserScopeTeamsAppInstallationItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUserScopeTeamsAppInstallationFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUserScopeTeamsAppInstallation,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const UserScopeTeamsAppInstallationItemRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/teamwork/installedApps/{userScopeTeamsAppInstallation%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
