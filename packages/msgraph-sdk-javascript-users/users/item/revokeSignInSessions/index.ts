/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a revokeSignInSessionsPostResponse
 */
export function createRevokeSignInSessionsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    return deserializeIntoRevokeSignInSessionsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoRevokeSignInSessionsPostResponse(revokeSignInSessionsPostResponse: RevokeSignInSessionsPostResponse | undefined = {} as RevokeSignInSessionsPostResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { revokeSignInSessionsPostResponse.backingStoreEnabled = true; },
        "value": n => { revokeSignInSessionsPostResponse.value = n.getBooleanValue(); },
    }
}
export interface RevokeSignInSessionsPostResponse extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The value property
     */
    value?: boolean;
}
/**
 * Provides operations to call the revokeSignInSessions method.
 */
export interface RevokeSignInSessionsRequestBuilder extends BaseRequestBuilder<RevokeSignInSessionsRequestBuilder> {
    /**
     * Invalidates all the refresh tokens issued to applications for a user (as well as session cookies in a user's browser), by resetting the signInSessionsValidFromDateTime user property to the current date-time. Typically, this operation is performed (by the user or an administrator) if the user has a lost or stolen device. This operation prevents access to the organization's data through applications on the device by requiring the user to sign in again to all applications that they have previously consented to, independent of device.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of RevokeSignInSessionsPostResponse
     * @see {@link https://learn.microsoft.com/graph/api/user-revokesigninsessions?view=graph-rest-1.0|Find more info here}
     */
     post(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<RevokeSignInSessionsPostResponse | undefined>;
    /**
     * Invalidates all the refresh tokens issued to applications for a user (as well as session cookies in a user's browser), by resetting the signInSessionsValidFromDateTime user property to the current date-time. Typically, this operation is performed (by the user or an administrator) if the user has a lost or stolen device. This operation prevents access to the organization's data through applications on the device by requiring the user to sign in again to all applications that they have previously consented to, independent of device.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeRevokeSignInSessionsPostResponse(writer: SerializationWriter, revokeSignInSessionsPostResponse: RevokeSignInSessionsPostResponse | undefined = {} as RevokeSignInSessionsPostResponse) : void {
    writer.writeBooleanValue("value", revokeSignInSessionsPostResponse.value);
    writer.writeAdditionalData(revokeSignInSessionsPostResponse.additionalData);
}
/**
 * Metadata for all the requests in the request builder.
 */
export const RevokeSignInSessionsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createRevokeSignInSessionsPostResponseFromDiscriminatorValue,
    },
};
/**
 * Uri template for the request builder.
 */
export const RevokeSignInSessionsRequestBuilderUriTemplate = "{+baseurl}/users/{user%2Did}/revokeSignInSessions";
/* tslint:enable */
/* eslint-enable */
