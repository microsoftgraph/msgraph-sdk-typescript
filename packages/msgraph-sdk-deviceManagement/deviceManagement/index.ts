/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDeviceManagementFromDiscriminatorValue, serializeDeviceManagement, type DeviceManagement } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { ApplePushNotificationCertificateRequestBuilderNavigationMetadata, ApplePushNotificationCertificateRequestBuilderRequestsMetadata, type ApplePushNotificationCertificateRequestBuilder } from './applePushNotificationCertificate/index.js';
// @ts-ignore
import { AuditEventsRequestBuilderNavigationMetadata, AuditEventsRequestBuilderRequestsMetadata, type AuditEventsRequestBuilder } from './auditEvents/index.js';
// @ts-ignore
import { ComplianceManagementPartnersRequestBuilderNavigationMetadata, ComplianceManagementPartnersRequestBuilderRequestsMetadata, type ComplianceManagementPartnersRequestBuilder } from './complianceManagementPartners/index.js';
// @ts-ignore
import { ConditionalAccessSettingsRequestBuilderRequestsMetadata, type ConditionalAccessSettingsRequestBuilder } from './conditionalAccessSettings/index.js';
// @ts-ignore
import { DetectedAppsRequestBuilderNavigationMetadata, DetectedAppsRequestBuilderRequestsMetadata, type DetectedAppsRequestBuilder } from './detectedApps/index.js';
// @ts-ignore
import { DeviceCategoriesRequestBuilderNavigationMetadata, DeviceCategoriesRequestBuilderRequestsMetadata, type DeviceCategoriesRequestBuilder } from './deviceCategories/index.js';
// @ts-ignore
import { DeviceCompliancePoliciesRequestBuilderNavigationMetadata, DeviceCompliancePoliciesRequestBuilderRequestsMetadata, type DeviceCompliancePoliciesRequestBuilder } from './deviceCompliancePolicies/index.js';
// @ts-ignore
import { DeviceCompliancePolicyDeviceStateSummaryRequestBuilderRequestsMetadata, type DeviceCompliancePolicyDeviceStateSummaryRequestBuilder } from './deviceCompliancePolicyDeviceStateSummary/index.js';
// @ts-ignore
import { DeviceCompliancePolicySettingStateSummariesRequestBuilderNavigationMetadata, DeviceCompliancePolicySettingStateSummariesRequestBuilderRequestsMetadata, type DeviceCompliancePolicySettingStateSummariesRequestBuilder } from './deviceCompliancePolicySettingStateSummaries/index.js';
// @ts-ignore
import { DeviceConfigurationDeviceStateSummariesRequestBuilderRequestsMetadata, type DeviceConfigurationDeviceStateSummariesRequestBuilder } from './deviceConfigurationDeviceStateSummaries/index.js';
// @ts-ignore
import { DeviceConfigurationsRequestBuilderNavigationMetadata, DeviceConfigurationsRequestBuilderRequestsMetadata, type DeviceConfigurationsRequestBuilder } from './deviceConfigurations/index.js';
// @ts-ignore
import { DeviceEnrollmentConfigurationsRequestBuilderNavigationMetadata, DeviceEnrollmentConfigurationsRequestBuilderRequestsMetadata, type DeviceEnrollmentConfigurationsRequestBuilder } from './deviceEnrollmentConfigurations/index.js';
// @ts-ignore
import { DeviceManagementPartnersRequestBuilderNavigationMetadata, DeviceManagementPartnersRequestBuilderRequestsMetadata, type DeviceManagementPartnersRequestBuilder } from './deviceManagementPartners/index.js';
// @ts-ignore
import { ExchangeConnectorsRequestBuilderNavigationMetadata, ExchangeConnectorsRequestBuilderRequestsMetadata, type ExchangeConnectorsRequestBuilder } from './exchangeConnectors/index.js';
// @ts-ignore
import { GetEffectivePermissionsWithScopeRequestBuilderRequestsMetadata, type GetEffectivePermissionsWithScopeRequestBuilder } from './getEffectivePermissionsWithScope/index.js';
// @ts-ignore
import { ImportedWindowsAutopilotDeviceIdentitiesRequestBuilderNavigationMetadata, ImportedWindowsAutopilotDeviceIdentitiesRequestBuilderRequestsMetadata, type ImportedWindowsAutopilotDeviceIdentitiesRequestBuilder } from './importedWindowsAutopilotDeviceIdentities/index.js';
// @ts-ignore
import { IosUpdateStatusesRequestBuilderNavigationMetadata, IosUpdateStatusesRequestBuilderRequestsMetadata, type IosUpdateStatusesRequestBuilder } from './iosUpdateStatuses/index.js';
// @ts-ignore
import { ManagedDeviceOverviewRequestBuilderRequestsMetadata, type ManagedDeviceOverviewRequestBuilder } from './managedDeviceOverview/index.js';
// @ts-ignore
import { ManagedDevicesRequestBuilderNavigationMetadata, ManagedDevicesRequestBuilderRequestsMetadata, type ManagedDevicesRequestBuilder } from './managedDevices/index.js';
// @ts-ignore
import { MobileAppTroubleshootingEventsRequestBuilderNavigationMetadata, MobileAppTroubleshootingEventsRequestBuilderRequestsMetadata, type MobileAppTroubleshootingEventsRequestBuilder } from './mobileAppTroubleshootingEvents/index.js';
// @ts-ignore
import { MobileThreatDefenseConnectorsRequestBuilderNavigationMetadata, MobileThreatDefenseConnectorsRequestBuilderRequestsMetadata, type MobileThreatDefenseConnectorsRequestBuilder } from './mobileThreatDefenseConnectors/index.js';
// @ts-ignore
import { NotificationMessageTemplatesRequestBuilderNavigationMetadata, NotificationMessageTemplatesRequestBuilderRequestsMetadata, type NotificationMessageTemplatesRequestBuilder } from './notificationMessageTemplates/index.js';
// @ts-ignore
import { RemoteAssistancePartnersRequestBuilderNavigationMetadata, RemoteAssistancePartnersRequestBuilderRequestsMetadata, type RemoteAssistancePartnersRequestBuilder } from './remoteAssistancePartners/index.js';
// @ts-ignore
import { ReportsRequestBuilderNavigationMetadata, ReportsRequestBuilderRequestsMetadata, type ReportsRequestBuilder } from './reports/index.js';
// @ts-ignore
import { ResourceOperationsRequestBuilderNavigationMetadata, ResourceOperationsRequestBuilderRequestsMetadata, type ResourceOperationsRequestBuilder } from './resourceOperations/index.js';
// @ts-ignore
import { RoleAssignmentsRequestBuilderNavigationMetadata, RoleAssignmentsRequestBuilderRequestsMetadata, type RoleAssignmentsRequestBuilder } from './roleAssignments/index.js';
// @ts-ignore
import { RoleDefinitionsRequestBuilderNavigationMetadata, RoleDefinitionsRequestBuilderRequestsMetadata, type RoleDefinitionsRequestBuilder } from './roleDefinitions/index.js';
// @ts-ignore
import { SoftwareUpdateStatusSummaryRequestBuilderRequestsMetadata, type SoftwareUpdateStatusSummaryRequestBuilder } from './softwareUpdateStatusSummary/index.js';
// @ts-ignore
import { TelecomExpenseManagementPartnersRequestBuilderNavigationMetadata, TelecomExpenseManagementPartnersRequestBuilderRequestsMetadata, type TelecomExpenseManagementPartnersRequestBuilder } from './telecomExpenseManagementPartners/index.js';
// @ts-ignore
import { TermsAndConditionsRequestBuilderNavigationMetadata, TermsAndConditionsRequestBuilderRequestsMetadata, type TermsAndConditionsRequestBuilder } from './termsAndConditions/index.js';
// @ts-ignore
import { TroubleshootingEventsRequestBuilderNavigationMetadata, TroubleshootingEventsRequestBuilderRequestsMetadata, type TroubleshootingEventsRequestBuilder } from './troubleshootingEvents/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder, UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthApplicationPerformance/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilder, UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilder, UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilder, UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder, UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthDeviceModelPerformance/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder, UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthDevicePerformance/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder, UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthDevicePerformanceDetails/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder, UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthOSVersionPerformance/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsAppHealthOverviewRequestBuilder, UserExperienceAnalyticsAppHealthOverviewRequestBuilderNavigationMetadata, UserExperienceAnalyticsAppHealthOverviewRequestBuilderRequestsMetadata } from './userExperienceAnalyticsAppHealthOverview/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsBaselinesRequestBuilder, UserExperienceAnalyticsBaselinesRequestBuilderNavigationMetadata, UserExperienceAnalyticsBaselinesRequestBuilderRequestsMetadata } from './userExperienceAnalyticsBaselines/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsCategoriesRequestBuilder, UserExperienceAnalyticsCategoriesRequestBuilderNavigationMetadata, UserExperienceAnalyticsCategoriesRequestBuilderRequestsMetadata } from './userExperienceAnalyticsCategories/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsDevicePerformanceRequestBuilder, UserExperienceAnalyticsDevicePerformanceRequestBuilderNavigationMetadata, UserExperienceAnalyticsDevicePerformanceRequestBuilderRequestsMetadata } from './userExperienceAnalyticsDevicePerformance/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsDeviceScoresRequestBuilder, UserExperienceAnalyticsDeviceScoresRequestBuilderNavigationMetadata, UserExperienceAnalyticsDeviceScoresRequestBuilderRequestsMetadata } from './userExperienceAnalyticsDeviceScores/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder, UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderNavigationMetadata, UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderRequestsMetadata } from './userExperienceAnalyticsDeviceStartupHistory/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsDeviceStartupProcessesRequestBuilder, UserExperienceAnalyticsDeviceStartupProcessesRequestBuilderNavigationMetadata, UserExperienceAnalyticsDeviceStartupProcessesRequestBuilderRequestsMetadata } from './userExperienceAnalyticsDeviceStartupProcesses/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder, UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilderNavigationMetadata, UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilderRequestsMetadata } from './userExperienceAnalyticsDeviceStartupProcessPerformance/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsMetricHistoryRequestBuilder, UserExperienceAnalyticsMetricHistoryRequestBuilderNavigationMetadata, UserExperienceAnalyticsMetricHistoryRequestBuilderRequestsMetadata } from './userExperienceAnalyticsMetricHistory/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsModelScoresRequestBuilder, UserExperienceAnalyticsModelScoresRequestBuilderNavigationMetadata, UserExperienceAnalyticsModelScoresRequestBuilderRequestsMetadata } from './userExperienceAnalyticsModelScores/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsOverviewRequestBuilder, UserExperienceAnalyticsOverviewRequestBuilderRequestsMetadata } from './userExperienceAnalyticsOverview/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsScoreHistoryRequestBuilder, UserExperienceAnalyticsScoreHistoryRequestBuilderNavigationMetadata, UserExperienceAnalyticsScoreHistoryRequestBuilderRequestsMetadata } from './userExperienceAnalyticsScoreHistory/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilder, UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilderRequestsMetadata } from './userExperienceAnalyticsSummarizeWorkFromAnywhereDevices/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder, UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilderRequestsMetadata } from './userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilder, UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilderNavigationMetadata, UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilderRequestsMetadata } from './userExperienceAnalyticsWorkFromAnywhereMetrics/index.js';
// @ts-ignore
import { type UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder, UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilderNavigationMetadata, UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilderRequestsMetadata } from './userExperienceAnalyticsWorkFromAnywhereModelPerformance/index.js';
// @ts-ignore
import { type VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder, VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilderRequestsMetadata } from './verifyWindowsEnrollmentAutoDiscoveryWithDomainName/index.js';
// @ts-ignore
import { type VirtualEndpointRequestBuilder, VirtualEndpointRequestBuilderNavigationMetadata, VirtualEndpointRequestBuilderRequestsMetadata } from './virtualEndpoint/index.js';
// @ts-ignore
import { type WindowsAutopilotDeviceIdentitiesRequestBuilder, WindowsAutopilotDeviceIdentitiesRequestBuilderNavigationMetadata, WindowsAutopilotDeviceIdentitiesRequestBuilderRequestsMetadata } from './windowsAutopilotDeviceIdentities/index.js';
// @ts-ignore
import { type WindowsInformationProtectionAppLearningSummariesRequestBuilder, WindowsInformationProtectionAppLearningSummariesRequestBuilderNavigationMetadata, WindowsInformationProtectionAppLearningSummariesRequestBuilderRequestsMetadata } from './windowsInformationProtectionAppLearningSummaries/index.js';
// @ts-ignore
import { type WindowsInformationProtectionNetworkLearningSummariesRequestBuilder, WindowsInformationProtectionNetworkLearningSummariesRequestBuilderNavigationMetadata, WindowsInformationProtectionNetworkLearningSummariesRequestBuilderRequestsMetadata } from './windowsInformationProtectionNetworkLearningSummaries/index.js';
// @ts-ignore
import { type WindowsMalwareInformationRequestBuilder, WindowsMalwareInformationRequestBuilderNavigationMetadata, WindowsMalwareInformationRequestBuilderRequestsMetadata } from './windowsMalwareInformation/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the deviceManagement singleton.
 */
export interface DeviceManagementRequestBuilder extends BaseRequestBuilder<DeviceManagementRequestBuilder> {
    /**
     * Provides operations to manage the applePushNotificationCertificate property of the microsoft.graph.deviceManagement entity.
     */
    get applePushNotificationCertificate(): ApplePushNotificationCertificateRequestBuilder;
    /**
     * Provides operations to manage the auditEvents property of the microsoft.graph.deviceManagement entity.
     */
    get auditEvents(): AuditEventsRequestBuilder;
    /**
     * Provides operations to manage the complianceManagementPartners property of the microsoft.graph.deviceManagement entity.
     */
    get complianceManagementPartners(): ComplianceManagementPartnersRequestBuilder;
    /**
     * Provides operations to manage the conditionalAccessSettings property of the microsoft.graph.deviceManagement entity.
     */
    get conditionalAccessSettings(): ConditionalAccessSettingsRequestBuilder;
    /**
     * Provides operations to manage the detectedApps property of the microsoft.graph.deviceManagement entity.
     */
    get detectedApps(): DetectedAppsRequestBuilder;
    /**
     * Provides operations to manage the deviceCategories property of the microsoft.graph.deviceManagement entity.
     */
    get deviceCategories(): DeviceCategoriesRequestBuilder;
    /**
     * Provides operations to manage the deviceCompliancePolicies property of the microsoft.graph.deviceManagement entity.
     */
    get deviceCompliancePolicies(): DeviceCompliancePoliciesRequestBuilder;
    /**
     * Provides operations to manage the deviceCompliancePolicyDeviceStateSummary property of the microsoft.graph.deviceManagement entity.
     */
    get deviceCompliancePolicyDeviceStateSummary(): DeviceCompliancePolicyDeviceStateSummaryRequestBuilder;
    /**
     * Provides operations to manage the deviceCompliancePolicySettingStateSummaries property of the microsoft.graph.deviceManagement entity.
     */
    get deviceCompliancePolicySettingStateSummaries(): DeviceCompliancePolicySettingStateSummariesRequestBuilder;
    /**
     * Provides operations to manage the deviceConfigurationDeviceStateSummaries property of the microsoft.graph.deviceManagement entity.
     */
    get deviceConfigurationDeviceStateSummaries(): DeviceConfigurationDeviceStateSummariesRequestBuilder;
    /**
     * Provides operations to manage the deviceConfigurations property of the microsoft.graph.deviceManagement entity.
     */
    get deviceConfigurations(): DeviceConfigurationsRequestBuilder;
    /**
     * Provides operations to manage the deviceEnrollmentConfigurations property of the microsoft.graph.deviceManagement entity.
     */
    get deviceEnrollmentConfigurations(): DeviceEnrollmentConfigurationsRequestBuilder;
    /**
     * Provides operations to manage the deviceManagementPartners property of the microsoft.graph.deviceManagement entity.
     */
    get deviceManagementPartners(): DeviceManagementPartnersRequestBuilder;
    /**
     * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
     */
    get exchangeConnectors(): ExchangeConnectorsRequestBuilder;
    /**
     * Provides operations to manage the importedWindowsAutopilotDeviceIdentities property of the microsoft.graph.deviceManagement entity.
     */
    get importedWindowsAutopilotDeviceIdentities(): ImportedWindowsAutopilotDeviceIdentitiesRequestBuilder;
    /**
     * Provides operations to manage the iosUpdateStatuses property of the microsoft.graph.deviceManagement entity.
     */
    get iosUpdateStatuses(): IosUpdateStatusesRequestBuilder;
    /**
     * Provides operations to manage the managedDeviceOverview property of the microsoft.graph.deviceManagement entity.
     */
    get managedDeviceOverview(): ManagedDeviceOverviewRequestBuilder;
    /**
     * Provides operations to manage the managedDevices property of the microsoft.graph.deviceManagement entity.
     */
    get managedDevices(): ManagedDevicesRequestBuilder;
    /**
     * Provides operations to manage the mobileAppTroubleshootingEvents property of the microsoft.graph.deviceManagement entity.
     */
    get mobileAppTroubleshootingEvents(): MobileAppTroubleshootingEventsRequestBuilder;
    /**
     * Provides operations to manage the mobileThreatDefenseConnectors property of the microsoft.graph.deviceManagement entity.
     */
    get mobileThreatDefenseConnectors(): MobileThreatDefenseConnectorsRequestBuilder;
    /**
     * Provides operations to manage the notificationMessageTemplates property of the microsoft.graph.deviceManagement entity.
     */
    get notificationMessageTemplates(): NotificationMessageTemplatesRequestBuilder;
    /**
     * Provides operations to manage the remoteAssistancePartners property of the microsoft.graph.deviceManagement entity.
     */
    get remoteAssistancePartners(): RemoteAssistancePartnersRequestBuilder;
    /**
     * Provides operations to manage the reports property of the microsoft.graph.deviceManagement entity.
     */
    get reports(): ReportsRequestBuilder;
    /**
     * Provides operations to manage the resourceOperations property of the microsoft.graph.deviceManagement entity.
     */
    get resourceOperations(): ResourceOperationsRequestBuilder;
    /**
     * Provides operations to manage the roleAssignments property of the microsoft.graph.deviceManagement entity.
     */
    get roleAssignments(): RoleAssignmentsRequestBuilder;
    /**
     * Provides operations to manage the roleDefinitions property of the microsoft.graph.deviceManagement entity.
     */
    get roleDefinitions(): RoleDefinitionsRequestBuilder;
    /**
     * Provides operations to manage the softwareUpdateStatusSummary property of the microsoft.graph.deviceManagement entity.
     */
    get softwareUpdateStatusSummary(): SoftwareUpdateStatusSummaryRequestBuilder;
    /**
     * Provides operations to manage the telecomExpenseManagementPartners property of the microsoft.graph.deviceManagement entity.
     */
    get telecomExpenseManagementPartners(): TelecomExpenseManagementPartnersRequestBuilder;
    /**
     * Provides operations to manage the termsAndConditions property of the microsoft.graph.deviceManagement entity.
     */
    get termsAndConditions(): TermsAndConditionsRequestBuilder;
    /**
     * Provides operations to manage the troubleshootingEvents property of the microsoft.graph.deviceManagement entity.
     */
    get troubleshootingEvents(): TroubleshootingEventsRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformance property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthApplicationPerformance(): UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails(): UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId(): UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion(): UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDeviceModelPerformance property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthDeviceModelPerformance(): UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDevicePerformance property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthDevicePerformance(): UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthDevicePerformanceDetails property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthDevicePerformanceDetails(): UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthOSVersionPerformance property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthOSVersionPerformance(): UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsAppHealthOverview property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsAppHealthOverview(): UserExperienceAnalyticsAppHealthOverviewRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsBaselines property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsBaselines(): UserExperienceAnalyticsBaselinesRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsCategories property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsCategories(): UserExperienceAnalyticsCategoriesRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsDevicePerformance property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsDevicePerformance(): UserExperienceAnalyticsDevicePerformanceRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceScores property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsDeviceScores(): UserExperienceAnalyticsDeviceScoresRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsDeviceStartupHistory(): UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupProcesses property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsDeviceStartupProcesses(): UserExperienceAnalyticsDeviceStartupProcessesRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupProcessPerformance property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsDeviceStartupProcessPerformance(): UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsMetricHistory property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsMetricHistory(): UserExperienceAnalyticsMetricHistoryRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsModelScores property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsModelScores(): UserExperienceAnalyticsModelScoresRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsOverview property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsOverview(): UserExperienceAnalyticsOverviewRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsScoreHistory property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsScoreHistory(): UserExperienceAnalyticsScoreHistoryRequestBuilder;
    /**
     * Provides operations to call the userExperienceAnalyticsSummarizeWorkFromAnywhereDevices method.
     */
    get userExperienceAnalyticsSummarizeWorkFromAnywhereDevices(): UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric(): UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereMetrics property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsWorkFromAnywhereMetrics(): UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsWorkFromAnywhereModelPerformance property of the microsoft.graph.deviceManagement entity.
     */
    get userExperienceAnalyticsWorkFromAnywhereModelPerformance(): UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilder;
    /**
     * Provides operations to manage the virtualEndpoint property of the microsoft.graph.deviceManagement entity.
     */
    get virtualEndpoint(): VirtualEndpointRequestBuilder;
    /**
     * Provides operations to manage the windowsAutopilotDeviceIdentities property of the microsoft.graph.deviceManagement entity.
     */
    get windowsAutopilotDeviceIdentities(): WindowsAutopilotDeviceIdentitiesRequestBuilder;
    /**
     * Provides operations to manage the windowsInformationProtectionAppLearningSummaries property of the microsoft.graph.deviceManagement entity.
     */
    get windowsInformationProtectionAppLearningSummaries(): WindowsInformationProtectionAppLearningSummariesRequestBuilder;
    /**
     * Provides operations to manage the windowsInformationProtectionNetworkLearningSummaries property of the microsoft.graph.deviceManagement entity.
     */
    get windowsInformationProtectionNetworkLearningSummaries(): WindowsInformationProtectionNetworkLearningSummariesRequestBuilder;
    /**
     * Provides operations to manage the windowsMalwareInformation property of the microsoft.graph.deviceManagement entity.
     */
    get windowsMalwareInformation(): WindowsMalwareInformationRequestBuilder;
    /**
     * Read properties and relationships of the deviceManagement object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagement>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-remoteassistance-devicemanagement-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<DeviceManagementRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceManagement | undefined>;
    /**
     * Provides operations to call the getEffectivePermissions method.
     * @param scope Usage: scope='{scope}'
     * @returns {GetEffectivePermissionsWithScopeRequestBuilder}
     */
     getEffectivePermissionsWithScope(scope: string | undefined) : GetEffectivePermissionsWithScopeRequestBuilder;
    /**
     * Update the properties of a deviceManagement object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagement>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-raimportcerts-devicemanagement-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: DeviceManagement, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagement | undefined>;
    /**
     * Read properties and relationships of the deviceManagement object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DeviceManagementRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the properties of a deviceManagement object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: DeviceManagement, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Provides operations to call the verifyWindowsEnrollmentAutoDiscovery method.
     * @param domainName Usage: domainName='{domainName}'
     * @returns {VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder}
     */
     verifyWindowsEnrollmentAutoDiscoveryWithDomainName(domainName: string | undefined) : VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilder;
}
/**
 * Read properties and relationships of the deviceManagement object.
 */
export interface DeviceManagementRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const DeviceManagementRequestBuilderUriTemplate = "{+baseurl}/deviceManagement{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DeviceManagementRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DeviceManagementRequestBuilderNavigationMetadata: Record<Exclude<keyof DeviceManagementRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    getEffectivePermissionsWithScope: {
        requestsMetadata: GetEffectivePermissionsWithScopeRequestBuilderRequestsMetadata,
        pathParametersMappings: ["scope"],
    },
    verifyWindowsEnrollmentAutoDiscoveryWithDomainName: {
        requestsMetadata: VerifyWindowsEnrollmentAutoDiscoveryWithDomainNameRequestBuilderRequestsMetadata,
        pathParametersMappings: ["domainName"],
    },
    applePushNotificationCertificate: {
        requestsMetadata: ApplePushNotificationCertificateRequestBuilderRequestsMetadata,
        navigationMetadata: ApplePushNotificationCertificateRequestBuilderNavigationMetadata,
    },
    auditEvents: {
        requestsMetadata: AuditEventsRequestBuilderRequestsMetadata,
        navigationMetadata: AuditEventsRequestBuilderNavigationMetadata,
    },
    complianceManagementPartners: {
        requestsMetadata: ComplianceManagementPartnersRequestBuilderRequestsMetadata,
        navigationMetadata: ComplianceManagementPartnersRequestBuilderNavigationMetadata,
    },
    conditionalAccessSettings: {
        requestsMetadata: ConditionalAccessSettingsRequestBuilderRequestsMetadata,
    },
    detectedApps: {
        requestsMetadata: DetectedAppsRequestBuilderRequestsMetadata,
        navigationMetadata: DetectedAppsRequestBuilderNavigationMetadata,
    },
    deviceCategories: {
        requestsMetadata: DeviceCategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceCategoriesRequestBuilderNavigationMetadata,
    },
    deviceCompliancePolicies: {
        requestsMetadata: DeviceCompliancePoliciesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceCompliancePoliciesRequestBuilderNavigationMetadata,
    },
    deviceCompliancePolicyDeviceStateSummary: {
        requestsMetadata: DeviceCompliancePolicyDeviceStateSummaryRequestBuilderRequestsMetadata,
    },
    deviceCompliancePolicySettingStateSummaries: {
        requestsMetadata: DeviceCompliancePolicySettingStateSummariesRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceCompliancePolicySettingStateSummariesRequestBuilderNavigationMetadata,
    },
    deviceConfigurationDeviceStateSummaries: {
        requestsMetadata: DeviceConfigurationDeviceStateSummariesRequestBuilderRequestsMetadata,
    },
    deviceConfigurations: {
        requestsMetadata: DeviceConfigurationsRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceConfigurationsRequestBuilderNavigationMetadata,
    },
    deviceEnrollmentConfigurations: {
        requestsMetadata: DeviceEnrollmentConfigurationsRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceEnrollmentConfigurationsRequestBuilderNavigationMetadata,
    },
    deviceManagementPartners: {
        requestsMetadata: DeviceManagementPartnersRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceManagementPartnersRequestBuilderNavigationMetadata,
    },
    exchangeConnectors: {
        requestsMetadata: ExchangeConnectorsRequestBuilderRequestsMetadata,
        navigationMetadata: ExchangeConnectorsRequestBuilderNavigationMetadata,
    },
    importedWindowsAutopilotDeviceIdentities: {
        requestsMetadata: ImportedWindowsAutopilotDeviceIdentitiesRequestBuilderRequestsMetadata,
        navigationMetadata: ImportedWindowsAutopilotDeviceIdentitiesRequestBuilderNavigationMetadata,
    },
    iosUpdateStatuses: {
        requestsMetadata: IosUpdateStatusesRequestBuilderRequestsMetadata,
        navigationMetadata: IosUpdateStatusesRequestBuilderNavigationMetadata,
    },
    managedDeviceOverview: {
        requestsMetadata: ManagedDeviceOverviewRequestBuilderRequestsMetadata,
    },
    managedDevices: {
        requestsMetadata: ManagedDevicesRequestBuilderRequestsMetadata,
        navigationMetadata: ManagedDevicesRequestBuilderNavigationMetadata,
    },
    mobileAppTroubleshootingEvents: {
        requestsMetadata: MobileAppTroubleshootingEventsRequestBuilderRequestsMetadata,
        navigationMetadata: MobileAppTroubleshootingEventsRequestBuilderNavigationMetadata,
    },
    mobileThreatDefenseConnectors: {
        requestsMetadata: MobileThreatDefenseConnectorsRequestBuilderRequestsMetadata,
        navigationMetadata: MobileThreatDefenseConnectorsRequestBuilderNavigationMetadata,
    },
    notificationMessageTemplates: {
        requestsMetadata: NotificationMessageTemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: NotificationMessageTemplatesRequestBuilderNavigationMetadata,
    },
    remoteAssistancePartners: {
        requestsMetadata: RemoteAssistancePartnersRequestBuilderRequestsMetadata,
        navigationMetadata: RemoteAssistancePartnersRequestBuilderNavigationMetadata,
    },
    reports: {
        requestsMetadata: ReportsRequestBuilderRequestsMetadata,
        navigationMetadata: ReportsRequestBuilderNavigationMetadata,
    },
    resourceOperations: {
        requestsMetadata: ResourceOperationsRequestBuilderRequestsMetadata,
        navigationMetadata: ResourceOperationsRequestBuilderNavigationMetadata,
    },
    roleAssignments: {
        requestsMetadata: RoleAssignmentsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleAssignmentsRequestBuilderNavigationMetadata,
    },
    roleDefinitions: {
        requestsMetadata: RoleDefinitionsRequestBuilderRequestsMetadata,
        navigationMetadata: RoleDefinitionsRequestBuilderNavigationMetadata,
    },
    softwareUpdateStatusSummary: {
        requestsMetadata: SoftwareUpdateStatusSummaryRequestBuilderRequestsMetadata,
    },
    telecomExpenseManagementPartners: {
        requestsMetadata: TelecomExpenseManagementPartnersRequestBuilderRequestsMetadata,
        navigationMetadata: TelecomExpenseManagementPartnersRequestBuilderNavigationMetadata,
    },
    termsAndConditions: {
        requestsMetadata: TermsAndConditionsRequestBuilderRequestsMetadata,
        navigationMetadata: TermsAndConditionsRequestBuilderNavigationMetadata,
    },
    troubleshootingEvents: {
        requestsMetadata: TroubleshootingEventsRequestBuilderRequestsMetadata,
        navigationMetadata: TroubleshootingEventsRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthApplicationPerformance: {
        requestsMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails: {
        requestsMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetailsRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId: {
        requestsMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceIdRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion: {
        requestsMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthDeviceModelPerformance: {
        requestsMetadata: UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthDeviceModelPerformanceRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthDevicePerformance: {
        requestsMetadata: UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthDevicePerformanceRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthDevicePerformanceDetails: {
        requestsMetadata: UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthDevicePerformanceDetailsRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthOSVersionPerformance: {
        requestsMetadata: UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthOSVersionPerformanceRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsAppHealthOverview: {
        requestsMetadata: UserExperienceAnalyticsAppHealthOverviewRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsAppHealthOverviewRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsBaselines: {
        requestsMetadata: UserExperienceAnalyticsBaselinesRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsBaselinesRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsCategories: {
        requestsMetadata: UserExperienceAnalyticsCategoriesRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsCategoriesRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsDevicePerformance: {
        requestsMetadata: UserExperienceAnalyticsDevicePerformanceRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsDevicePerformanceRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsDeviceScores: {
        requestsMetadata: UserExperienceAnalyticsDeviceScoresRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsDeviceScoresRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsDeviceStartupHistory: {
        requestsMetadata: UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsDeviceStartupProcesses: {
        requestsMetadata: UserExperienceAnalyticsDeviceStartupProcessesRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsDeviceStartupProcessesRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsDeviceStartupProcessPerformance: {
        requestsMetadata: UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsDeviceStartupProcessPerformanceRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsMetricHistory: {
        requestsMetadata: UserExperienceAnalyticsMetricHistoryRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsMetricHistoryRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsModelScores: {
        requestsMetadata: UserExperienceAnalyticsModelScoresRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsModelScoresRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsOverview: {
        requestsMetadata: UserExperienceAnalyticsOverviewRequestBuilderRequestsMetadata,
    },
    userExperienceAnalyticsScoreHistory: {
        requestsMetadata: UserExperienceAnalyticsScoreHistoryRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsScoreHistoryRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsSummarizeWorkFromAnywhereDevices: {
        requestsMetadata: UserExperienceAnalyticsSummarizeWorkFromAnywhereDevicesRequestBuilderRequestsMetadata,
    },
    userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric: {
        requestsMetadata: UserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetricRequestBuilderRequestsMetadata,
    },
    userExperienceAnalyticsWorkFromAnywhereMetrics: {
        requestsMetadata: UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsWorkFromAnywhereMetricsRequestBuilderNavigationMetadata,
    },
    userExperienceAnalyticsWorkFromAnywhereModelPerformance: {
        requestsMetadata: UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilderRequestsMetadata,
        navigationMetadata: UserExperienceAnalyticsWorkFromAnywhereModelPerformanceRequestBuilderNavigationMetadata,
    },
    virtualEndpoint: {
        requestsMetadata: VirtualEndpointRequestBuilderRequestsMetadata,
        navigationMetadata: VirtualEndpointRequestBuilderNavigationMetadata,
    },
    windowsAutopilotDeviceIdentities: {
        requestsMetadata: WindowsAutopilotDeviceIdentitiesRequestBuilderRequestsMetadata,
        navigationMetadata: WindowsAutopilotDeviceIdentitiesRequestBuilderNavigationMetadata,
    },
    windowsInformationProtectionAppLearningSummaries: {
        requestsMetadata: WindowsInformationProtectionAppLearningSummariesRequestBuilderRequestsMetadata,
        navigationMetadata: WindowsInformationProtectionAppLearningSummariesRequestBuilderNavigationMetadata,
    },
    windowsInformationProtectionNetworkLearningSummaries: {
        requestsMetadata: WindowsInformationProtectionNetworkLearningSummariesRequestBuilderRequestsMetadata,
        navigationMetadata: WindowsInformationProtectionNetworkLearningSummariesRequestBuilderNavigationMetadata,
    },
    windowsMalwareInformation: {
        requestsMetadata: WindowsMalwareInformationRequestBuilderRequestsMetadata,
        navigationMetadata: WindowsMalwareInformationRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DeviceManagementRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: DeviceManagementRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementFromDiscriminatorValue,
        queryParametersMapper: DeviceManagementRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DeviceManagementRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceManagement,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
