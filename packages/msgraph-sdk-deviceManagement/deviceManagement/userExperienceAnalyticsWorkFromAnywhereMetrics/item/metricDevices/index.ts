/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUserExperienceAnalyticsWorkFromAnywhereDeviceCollectionResponseFromDiscriminatorValue, createUserExperienceAnalyticsWorkFromAnywhereDeviceFromDiscriminatorValue, serializeUserExperienceAnalyticsWorkFromAnywhereDevice, type UserExperienceAnalyticsWorkFromAnywhereDevice, type UserExperienceAnalyticsWorkFromAnywhereDeviceCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { type UserExperienceAnalyticsWorkFromAnywhereDeviceItemRequestBuilder, UserExperienceAnalyticsWorkFromAnywhereDeviceItemRequestBuilderRequestsMetadata } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the metricDevices property of the microsoft.graph.userExperienceAnalyticsWorkFromAnywhereMetric entity.
 */
export interface MetricDevicesRequestBuilder extends BaseRequestBuilder<MetricDevicesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the metricDevices property of the microsoft.graph.userExperienceAnalyticsWorkFromAnywhereMetric entity.
     * @param userExperienceAnalyticsWorkFromAnywhereDeviceId The unique identifier of userExperienceAnalyticsWorkFromAnywhereDevice
     * @returns {UserExperienceAnalyticsWorkFromAnywhereDeviceItemRequestBuilder}
     */
     byUserExperienceAnalyticsWorkFromAnywhereDeviceId(userExperienceAnalyticsWorkFromAnywhereDeviceId: string) : UserExperienceAnalyticsWorkFromAnywhereDeviceItemRequestBuilder;
    /**
     * The work from anywhere metric devices. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UserExperienceAnalyticsWorkFromAnywhereDeviceCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<MetricDevicesRequestBuilderGetQueryParameters> | undefined) : Promise<UserExperienceAnalyticsWorkFromAnywhereDeviceCollectionResponse | undefined>;
    /**
     * Create new navigation property to metricDevices for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UserExperienceAnalyticsWorkFromAnywhereDevice>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: UserExperienceAnalyticsWorkFromAnywhereDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UserExperienceAnalyticsWorkFromAnywhereDevice | undefined>;
    /**
     * The work from anywhere metric devices. Read-only.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MetricDevicesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to metricDevices for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UserExperienceAnalyticsWorkFromAnywhereDevice, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * The work from anywhere metric devices. Read-only.
 */
export interface MetricDevicesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const MetricDevicesRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/userExperienceAnalyticsWorkFromAnywhereMetrics/{userExperienceAnalyticsWorkFromAnywhereMetric%2Did}/metricDevices{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the metricDevices property of the microsoft.graph.userExperienceAnalyticsWorkFromAnywhereMetric entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the metricDevices property of the microsoft.graph.userExperienceAnalyticsWorkFromAnywhereMetric entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AutoPilotProfileAssigned: "autoPilotProfileAssigned",
    AutoPilotProfileAssignedDesc: "autoPilotProfileAssigned desc",
    AutoPilotRegistered: "autoPilotRegistered",
    AutoPilotRegisteredDesc: "autoPilotRegistered desc",
    AzureAdDeviceId: "azureAdDeviceId",
    AzureAdDeviceIdDesc: "azureAdDeviceId desc",
    AzureAdJoinType: "azureAdJoinType",
    AzureAdJoinTypeDesc: "azureAdJoinType desc",
    AzureAdRegistered: "azureAdRegistered",
    AzureAdRegisteredDesc: "azureAdRegistered desc",
    CloudIdentityScore: "cloudIdentityScore",
    CloudIdentityScoreDesc: "cloudIdentityScore desc",
    CloudManagementScore: "cloudManagementScore",
    CloudManagementScoreDesc: "cloudManagementScore desc",
    CloudProvisioningScore: "cloudProvisioningScore",
    CloudProvisioningScoreDesc: "cloudProvisioningScore desc",
    CompliancePolicySetToIntune: "compliancePolicySetToIntune",
    CompliancePolicySetToIntuneDesc: "compliancePolicySetToIntune desc",
    DeviceId: "deviceId",
    DeviceIdDesc: "deviceId desc",
    DeviceName: "deviceName",
    DeviceNameDesc: "deviceName desc",
    HealthStatus: "healthStatus",
    HealthStatusDesc: "healthStatus desc",
    IsCloudManagedGatewayEnabled: "isCloudManagedGatewayEnabled",
    IsCloudManagedGatewayEnabledDesc: "isCloudManagedGatewayEnabled desc",
    ManagedBy: "managedBy",
    ManagedByDesc: "managedBy desc",
    Manufacturer: "manufacturer",
    ManufacturerDesc: "manufacturer desc",
    Model: "model",
    ModelDesc: "model desc",
    OsCheckFailed: "osCheckFailed",
    OsCheckFailedDesc: "osCheckFailed desc",
    OsDescription: "osDescription",
    OsDescriptionDesc: "osDescription desc",
    OsVersion: "osVersion",
    OsVersionDesc: "osVersion desc",
    OtherWorkloadsSetToIntune: "otherWorkloadsSetToIntune",
    OtherWorkloadsSetToIntuneDesc: "otherWorkloadsSetToIntune desc",
    Ownership: "ownership",
    OwnershipDesc: "ownership desc",
    Processor64BitCheckFailed: "processor64BitCheckFailed",
    Processor64BitCheckFailedDesc: "processor64BitCheckFailed desc",
    ProcessorCoreCountCheckFailed: "processorCoreCountCheckFailed",
    ProcessorCoreCountCheckFailedDesc: "processorCoreCountCheckFailed desc",
    ProcessorFamilyCheckFailed: "processorFamilyCheckFailed",
    ProcessorFamilyCheckFailedDesc: "processorFamilyCheckFailed desc",
    ProcessorSpeedCheckFailed: "processorSpeedCheckFailed",
    ProcessorSpeedCheckFailedDesc: "processorSpeedCheckFailed desc",
    RamCheckFailed: "ramCheckFailed",
    RamCheckFailedDesc: "ramCheckFailed desc",
    SecureBootCheckFailed: "secureBootCheckFailed",
    SecureBootCheckFailedDesc: "secureBootCheckFailed desc",
    SerialNumber: "serialNumber",
    SerialNumberDesc: "serialNumber desc",
    StorageCheckFailed: "storageCheckFailed",
    StorageCheckFailedDesc: "storageCheckFailed desc",
    TenantAttached: "tenantAttached",
    TenantAttachedDesc: "tenantAttached desc",
    TpmCheckFailed: "tpmCheckFailed",
    TpmCheckFailedDesc: "tpmCheckFailed desc",
    UpgradeEligibility: "upgradeEligibility",
    UpgradeEligibilityDesc: "upgradeEligibility desc",
    WindowsScore: "windowsScore",
    WindowsScoreDesc: "windowsScore desc",
    WorkFromAnywhereScore: "workFromAnywhereScore",
    WorkFromAnywhereScoreDesc: "workFromAnywhereScore desc",
} as const;
/**
 * Provides operations to manage the metricDevices property of the microsoft.graph.userExperienceAnalyticsWorkFromAnywhereMetric entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AutoPilotProfileAssigned: "autoPilotProfileAssigned",
    AutoPilotRegistered: "autoPilotRegistered",
    AzureAdDeviceId: "azureAdDeviceId",
    AzureAdJoinType: "azureAdJoinType",
    AzureAdRegistered: "azureAdRegistered",
    CloudIdentityScore: "cloudIdentityScore",
    CloudManagementScore: "cloudManagementScore",
    CloudProvisioningScore: "cloudProvisioningScore",
    CompliancePolicySetToIntune: "compliancePolicySetToIntune",
    DeviceId: "deviceId",
    DeviceName: "deviceName",
    HealthStatus: "healthStatus",
    IsCloudManagedGatewayEnabled: "isCloudManagedGatewayEnabled",
    ManagedBy: "managedBy",
    Manufacturer: "manufacturer",
    Model: "model",
    OsCheckFailed: "osCheckFailed",
    OsDescription: "osDescription",
    OsVersion: "osVersion",
    OtherWorkloadsSetToIntune: "otherWorkloadsSetToIntune",
    Ownership: "ownership",
    Processor64BitCheckFailed: "processor64BitCheckFailed",
    ProcessorCoreCountCheckFailed: "processorCoreCountCheckFailed",
    ProcessorFamilyCheckFailed: "processorFamilyCheckFailed",
    ProcessorSpeedCheckFailed: "processorSpeedCheckFailed",
    RamCheckFailed: "ramCheckFailed",
    SecureBootCheckFailed: "secureBootCheckFailed",
    SerialNumber: "serialNumber",
    StorageCheckFailed: "storageCheckFailed",
    TenantAttached: "tenantAttached",
    TpmCheckFailed: "tpmCheckFailed",
    UpgradeEligibility: "upgradeEligibility",
    WindowsScore: "windowsScore",
    WorkFromAnywhereScore: "workFromAnywhereScore",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const MetricDevicesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const MetricDevicesRequestBuilderNavigationMetadata: Record<Exclude<keyof MetricDevicesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byUserExperienceAnalyticsWorkFromAnywhereDeviceId: {
        requestsMetadata: UserExperienceAnalyticsWorkFromAnywhereDeviceItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["userExperienceAnalyticsWorkFromAnywhereDevice%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MetricDevicesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: MetricDevicesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserExperienceAnalyticsWorkFromAnywhereDeviceCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: MetricDevicesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: MetricDevicesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserExperienceAnalyticsWorkFromAnywhereDeviceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUserExperienceAnalyticsWorkFromAnywhereDevice,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
