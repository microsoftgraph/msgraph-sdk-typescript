/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDeviceManagementExchangeConnectorCollectionResponseFromDiscriminatorValue, createDeviceManagementExchangeConnectorFromDiscriminatorValue, serializeDeviceManagementExchangeConnector, type DeviceManagementExchangeConnector, type DeviceManagementExchangeConnectorCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { DeviceManagementExchangeConnectorItemRequestBuilderNavigationMetadata, DeviceManagementExchangeConnectorItemRequestBuilderRequestsMetadata, type DeviceManagementExchangeConnectorItemRequestBuilder } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
 */
export interface ExchangeConnectorsRequestBuilder extends BaseRequestBuilder<ExchangeConnectorsRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
     * @param deviceManagementExchangeConnectorId The unique identifier of deviceManagementExchangeConnector
     * @returns {DeviceManagementExchangeConnectorItemRequestBuilder}
     */
     byDeviceManagementExchangeConnectorId(deviceManagementExchangeConnectorId: string) : DeviceManagementExchangeConnectorItemRequestBuilder;
    /**
     * List properties and relationships of the deviceManagementExchangeConnector objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementExchangeConnectorCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-onboarding-devicemanagementexchangeconnector-list?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<ExchangeConnectorsRequestBuilderGetQueryParameters> | undefined) : Promise<DeviceManagementExchangeConnectorCollectionResponse | undefined>;
    /**
     * Create a new deviceManagementExchangeConnector object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<DeviceManagementExchangeConnector>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/intune-onboarding-devicemanagementexchangeconnector-create?view=graph-rest-1.0|Find more info here}
     */
     post(body: DeviceManagementExchangeConnector, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<DeviceManagementExchangeConnector | undefined>;
    /**
     * List properties and relationships of the deviceManagementExchangeConnector objects.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ExchangeConnectorsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create a new deviceManagementExchangeConnector object.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: DeviceManagementExchangeConnector, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * List properties and relationships of the deviceManagementExchangeConnector objects.
 */
export interface ExchangeConnectorsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Uri template for the request builder.
 */
export const ExchangeConnectorsRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/exchangeConnectors{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ExchangeConnectorsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ExchangeConnectorsRequestBuilderNavigationMetadata: Record<Exclude<keyof ExchangeConnectorsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byDeviceManagementExchangeConnectorId: {
        requestsMetadata: DeviceManagementExchangeConnectorItemRequestBuilderRequestsMetadata,
        navigationMetadata: DeviceManagementExchangeConnectorItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["deviceManagementExchangeConnector%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ExchangeConnectorsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ExchangeConnectorsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementExchangeConnectorCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ExchangeConnectorsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ExchangeConnectorsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createDeviceManagementExchangeConnectorFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDeviceManagementExchangeConnector,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    ConnectorServerName: "connectorServerName",
    ConnectorServerNameDesc: "connectorServerName desc",
    ExchangeAlias: "exchangeAlias",
    ExchangeAliasDesc: "exchangeAlias desc",
    ExchangeConnectorType: "exchangeConnectorType",
    ExchangeConnectorTypeDesc: "exchangeConnectorType desc",
    ExchangeOrganization: "exchangeOrganization",
    ExchangeOrganizationDesc: "exchangeOrganization desc",
    LastSyncDateTime: "lastSyncDateTime",
    LastSyncDateTimeDesc: "lastSyncDateTime desc",
    PrimarySmtpAddress: "primarySmtpAddress",
    PrimarySmtpAddressDesc: "primarySmtpAddress desc",
    ServerName: "serverName",
    ServerNameDesc: "serverName desc",
    Status: "status",
    StatusDesc: "status desc",
    Version: "version",
    VersionDesc: "version desc",
} as const;
/**
 * Provides operations to manage the exchangeConnectors property of the microsoft.graph.deviceManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    ConnectorServerName: "connectorServerName",
    ExchangeAlias: "exchangeAlias",
    ExchangeConnectorType: "exchangeConnectorType",
    ExchangeOrganization: "exchangeOrganization",
    LastSyncDateTime: "lastSyncDateTime",
    PrimarySmtpAddress: "primarySmtpAddress",
    ServerName: "serverName",
    Status: "status",
    Version: "version",
} as const;
/* tslint:enable */
/* eslint-enable */
