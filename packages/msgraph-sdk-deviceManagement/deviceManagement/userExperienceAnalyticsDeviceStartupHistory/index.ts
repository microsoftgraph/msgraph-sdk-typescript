/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUserExperienceAnalyticsDeviceStartupHistoryCollectionResponseFromDiscriminatorValue, createUserExperienceAnalyticsDeviceStartupHistoryFromDiscriminatorValue, serializeUserExperienceAnalyticsDeviceStartupHistory, type UserExperienceAnalyticsDeviceStartupHistory, type UserExperienceAnalyticsDeviceStartupHistoryCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { type UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilder, UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilderRequestsMetadata } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
 */
export interface UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder extends BaseRequestBuilder<UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
     * @param userExperienceAnalyticsDeviceStartupHistoryId The unique identifier of userExperienceAnalyticsDeviceStartupHistory
     * @returns {UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilder}
     */
     byUserExperienceAnalyticsDeviceStartupHistoryId(userExperienceAnalyticsDeviceStartupHistoryId: string) : UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilder;
    /**
     * User experience analytics device Startup History
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UserExperienceAnalyticsDeviceStartupHistoryCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderGetQueryParameters> | undefined) : Promise<UserExperienceAnalyticsDeviceStartupHistoryCollectionResponse | undefined>;
    /**
     * Create new navigation property to userExperienceAnalyticsDeviceStartupHistory for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UserExperienceAnalyticsDeviceStartupHistory>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: UserExperienceAnalyticsDeviceStartupHistory, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UserExperienceAnalyticsDeviceStartupHistory | undefined>;
    /**
     * User experience analytics device Startup History
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to userExperienceAnalyticsDeviceStartupHistory for deviceManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UserExperienceAnalyticsDeviceStartupHistory, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * User experience analytics device Startup History
 */
export interface UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderUriTemplate = "{+baseurl}/deviceManagement/userExperienceAnalyticsDeviceStartupHistory{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
} as const;
/**
 * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    CoreBootTimeInMs: "coreBootTimeInMs",
    CoreBootTimeInMsDesc: "coreBootTimeInMs desc",
    CoreLoginTimeInMs: "coreLoginTimeInMs",
    CoreLoginTimeInMsDesc: "coreLoginTimeInMs desc",
    DeviceId: "deviceId",
    DeviceIdDesc: "deviceId desc",
    FeatureUpdateBootTimeInMs: "featureUpdateBootTimeInMs",
    FeatureUpdateBootTimeInMsDesc: "featureUpdateBootTimeInMs desc",
    GroupPolicyBootTimeInMs: "groupPolicyBootTimeInMs",
    GroupPolicyBootTimeInMsDesc: "groupPolicyBootTimeInMs desc",
    GroupPolicyLoginTimeInMs: "groupPolicyLoginTimeInMs",
    GroupPolicyLoginTimeInMsDesc: "groupPolicyLoginTimeInMs desc",
    IsFeatureUpdate: "isFeatureUpdate",
    IsFeatureUpdateDesc: "isFeatureUpdate desc",
    IsFirstLogin: "isFirstLogin",
    IsFirstLoginDesc: "isFirstLogin desc",
    OperatingSystemVersion: "operatingSystemVersion",
    OperatingSystemVersionDesc: "operatingSystemVersion desc",
    ResponsiveDesktopTimeInMs: "responsiveDesktopTimeInMs",
    ResponsiveDesktopTimeInMsDesc: "responsiveDesktopTimeInMs desc",
    RestartCategory: "restartCategory",
    RestartCategoryDesc: "restartCategory desc",
    RestartFaultBucket: "restartFaultBucket",
    RestartFaultBucketDesc: "restartFaultBucket desc",
    RestartStopCode: "restartStopCode",
    RestartStopCodeDesc: "restartStopCode desc",
    StartTime: "startTime",
    StartTimeDesc: "startTime desc",
    TotalBootTimeInMs: "totalBootTimeInMs",
    TotalBootTimeInMsDesc: "totalBootTimeInMs desc",
    TotalLoginTimeInMs: "totalLoginTimeInMs",
    TotalLoginTimeInMsDesc: "totalLoginTimeInMs desc",
} as const;
/**
 * Provides operations to manage the userExperienceAnalyticsDeviceStartupHistory property of the microsoft.graph.deviceManagement entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CoreBootTimeInMs: "coreBootTimeInMs",
    CoreLoginTimeInMs: "coreLoginTimeInMs",
    DeviceId: "deviceId",
    FeatureUpdateBootTimeInMs: "featureUpdateBootTimeInMs",
    GroupPolicyBootTimeInMs: "groupPolicyBootTimeInMs",
    GroupPolicyLoginTimeInMs: "groupPolicyLoginTimeInMs",
    IsFeatureUpdate: "isFeatureUpdate",
    IsFirstLogin: "isFirstLogin",
    OperatingSystemVersion: "operatingSystemVersion",
    ResponsiveDesktopTimeInMs: "responsiveDesktopTimeInMs",
    RestartCategory: "restartCategory",
    RestartFaultBucket: "restartFaultBucket",
    RestartStopCode: "restartStopCode",
    StartTime: "startTime",
    TotalBootTimeInMs: "totalBootTimeInMs",
    TotalLoginTimeInMs: "totalLoginTimeInMs",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderNavigationMetadata: Record<Exclude<keyof UserExperienceAnalyticsDeviceStartupHistoryRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byUserExperienceAnalyticsDeviceStartupHistoryId: {
        requestsMetadata: UserExperienceAnalyticsDeviceStartupHistoryItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["userExperienceAnalyticsDeviceStartupHistory%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserExperienceAnalyticsDeviceStartupHistoryCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: UserExperienceAnalyticsDeviceStartupHistoryRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUserExperienceAnalyticsDeviceStartupHistoryFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUserExperienceAnalyticsDeviceStartupHistory,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
