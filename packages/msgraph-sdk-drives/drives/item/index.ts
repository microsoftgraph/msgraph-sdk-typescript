/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createDriveFromDiscriminatorValue, serializeDrive, type Drive } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { BundlesRequestBuilderNavigationMetadata, BundlesRequestBuilderRequestsMetadata, type BundlesRequestBuilder } from './bundles/';
import { CreatedByUserRequestBuilderNavigationMetadata, CreatedByUserRequestBuilderRequestsMetadata, type CreatedByUserRequestBuilder } from './createdByUser/';
import { FollowingRequestBuilderNavigationMetadata, FollowingRequestBuilderRequestsMetadata, type FollowingRequestBuilder } from './following/';
import { ItemsRequestBuilderNavigationMetadata, ItemsRequestBuilderRequestsMetadata, type ItemsRequestBuilder } from './items/';
import { LastModifiedByUserRequestBuilderNavigationMetadata, LastModifiedByUserRequestBuilderRequestsMetadata, type LastModifiedByUserRequestBuilder } from './lastModifiedByUser/';
import { ListRequestBuilderNavigationMetadata, ListRequestBuilderRequestsMetadata, type ListRequestBuilder } from './list/';
import { RecentRequestBuilderRequestsMetadata, type RecentRequestBuilder } from './recent/';
import { RootRequestBuilderNavigationMetadata, RootRequestBuilderRequestsMetadata, type RootRequestBuilder } from './root/';
import { SearchWithQRequestBuilderRequestsMetadata, type SearchWithQRequestBuilder } from './searchWithQ/';
import { SharedWithMeRequestBuilderRequestsMetadata, type SharedWithMeRequestBuilder } from './sharedWithMe/';
import { SpecialRequestBuilderNavigationMetadata, SpecialRequestBuilderRequestsMetadata, type SpecialRequestBuilder } from './special/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of drive entities.
 */
export interface DriveItemRequestBuilder extends BaseRequestBuilder<DriveItemRequestBuilder> {
    /**
     * Provides operations to manage the bundles property of the microsoft.graph.drive entity.
     */
    get bundles(): BundlesRequestBuilder;
    /**
     * Provides operations to manage the createdByUser property of the microsoft.graph.baseItem entity.
     */
    get createdByUser(): CreatedByUserRequestBuilder;
    /**
     * Provides operations to manage the following property of the microsoft.graph.drive entity.
     */
    get following(): FollowingRequestBuilder;
    /**
     * Provides operations to manage the items property of the microsoft.graph.drive entity.
     */
    get items(): ItemsRequestBuilder;
    /**
     * Provides operations to manage the lastModifiedByUser property of the microsoft.graph.baseItem entity.
     */
    get lastModifiedByUser(): LastModifiedByUserRequestBuilder;
    /**
     * Provides operations to manage the list property of the microsoft.graph.drive entity.
     */
    get list(): ListRequestBuilder;
    /**
     * Provides operations to call the recent method.
     */
    get recent(): RecentRequestBuilder;
    /**
     * Provides operations to manage the root property of the microsoft.graph.drive entity.
     */
    get root(): RootRequestBuilder;
    /**
     * Provides operations to call the sharedWithMe method.
     */
    get sharedWithMe(): SharedWithMeRequestBuilder;
    /**
     * Provides operations to manage the special property of the microsoft.graph.drive entity.
     */
    get special(): SpecialRequestBuilder;
    /**
     * Delete entity from drives
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get entity from drives by key
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Drive>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<DriveItemRequestBuilderGetQueryParameters> | undefined) : Promise<Drive | undefined>;
    /**
     * Update entity in drives
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Drive>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: Drive, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Drive | undefined>;
    /**
     * Provides operations to call the search method.
     * @param q Usage: q='{q}'
     * @returns {SearchWithQRequestBuilder}
     */
     searchWithQ(q: string | undefined) : SearchWithQRequestBuilder;
    /**
     * Delete entity from drives
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get entity from drives by key
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<DriveItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update entity in drives
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: Drive, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get entity from drives by key
 */
export interface DriveItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const DriveItemRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const DriveItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DriveItemRequestBuilderNavigationMetadata: Record<Exclude<keyof DriveItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    searchWithQ: {
        requestsMetadata: SearchWithQRequestBuilderRequestsMetadata,
    },
    bundles: {
        requestsMetadata: BundlesRequestBuilderRequestsMetadata,
        navigationMetadata: BundlesRequestBuilderNavigationMetadata,
    },
    createdByUser: {
        requestsMetadata: CreatedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: CreatedByUserRequestBuilderNavigationMetadata,
    },
    following: {
        requestsMetadata: FollowingRequestBuilderRequestsMetadata,
        navigationMetadata: FollowingRequestBuilderNavigationMetadata,
    },
    items: {
        requestsMetadata: ItemsRequestBuilderRequestsMetadata,
        navigationMetadata: ItemsRequestBuilderNavigationMetadata,
    },
    lastModifiedByUser: {
        requestsMetadata: LastModifiedByUserRequestBuilderRequestsMetadata,
        navigationMetadata: LastModifiedByUserRequestBuilderNavigationMetadata,
    },
    list: {
        requestsMetadata: ListRequestBuilderRequestsMetadata,
        navigationMetadata: ListRequestBuilderNavigationMetadata,
    },
    recent: {
        requestsMetadata: RecentRequestBuilderRequestsMetadata,
    },
    root: {
        requestsMetadata: RootRequestBuilderRequestsMetadata,
        navigationMetadata: RootRequestBuilderNavigationMetadata,
    },
    sharedWithMe: {
        requestsMetadata: SharedWithMeRequestBuilderRequestsMetadata,
    },
    special: {
        requestsMetadata: SpecialRequestBuilderRequestsMetadata,
        navigationMetadata: SpecialRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DriveItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DriveItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: DriveItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDriveFromDiscriminatorValue,
        queryParametersMapper: DriveItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: DriveItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createDriveFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDrive,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
