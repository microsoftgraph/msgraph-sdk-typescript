/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createListItemFromDiscriminatorValue, type ListItem } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the listItem property of the microsoft.graph.driveItem entity.
 */
export interface ListItemRequestBuilder extends BaseRequestBuilder<ListItemRequestBuilder> {
    /**
     * For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ListItem>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ListItemRequestBuilderGetQueryParameters> | undefined) : Promise<ListItem | undefined>;
    /**
     * For drives in SharePoint, the associated document library list item. Read-only. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ListItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * For drives in SharePoint, the associated document library list item. Read-only. Nullable.
 */
export interface ListItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
}
/**
 * Uri template for the request builder.
 */
export const ListItemRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}/items/{driveItem%2Did}/listItem{?%24expand,%24select}";
/**
 * Provides operations to manage the listItem property of the microsoft.graph.driveItem entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    CreatedByUser: "createdByUser",
    LastModifiedByUser: "lastModifiedByUser",
    Analytics: "analytics",
    DocumentSetVersions: "documentSetVersions",
    DriveItem: "driveItem",
    Fields: "fields",
    Versions: "versions",
} as const;
/**
 * Provides operations to manage the listItem property of the microsoft.graph.driveItem entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    CreatedBy: "createdBy",
    CreatedDateTime: "createdDateTime",
    Description: "description",
    ETag: "eTag",
    LastModifiedBy: "lastModifiedBy",
    LastModifiedDateTime: "lastModifiedDateTime",
    Name: "name",
    ParentReference: "parentReference",
    WebUrl: "webUrl",
    ContentType: "contentType",
    SharepointIds: "sharepointIds",
    CreatedByUser: "createdByUser",
    LastModifiedByUser: "lastModifiedByUser",
    Analytics: "analytics",
    DocumentSetVersions: "documentSetVersions",
    DriveItem: "driveItem",
    Fields: "fields",
    Versions: "versions",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ListItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ListItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ListItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createListItemFromDiscriminatorValue,
        queryParametersMapper: ListItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
