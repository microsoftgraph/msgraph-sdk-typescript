/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createWorkbookFunctionResultFromDiscriminatorValue, serializeWorkbookFunctionResult, type WorkbookFunctionResult } from '@microsoft/msgraph-sdk/models/index.js';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/index.js';
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter, UntypedNode } from '@microsoft/kiota-abstractions';

export interface Beta_InvPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * The A property
     */
    a?: UntypedNode;
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The alpha property
     */
    alpha?: UntypedNode;
    /**
     * The B property
     */
    b?: UntypedNode;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The beta property
     */
    beta?: UntypedNode;
    /**
     * The probability property
     */
    probability?: UntypedNode;
}
/**
 * Provides operations to call the beta_Inv method.
 */
export interface Beta_InvRequestBuilder extends BaseRequestBuilder<Beta_InvRequestBuilder> {
    /**
     * Invoke action beta_Inv
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WorkbookFunctionResult>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: Beta_InvPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WorkbookFunctionResult | undefined>;
    /**
     * Invoke action beta_Inv
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Beta_InvPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Beta_InvPostRequestBody}
 */
// @ts-ignore
export function createBeta_InvPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBeta_InvPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBeta_InvPostRequestBody(beta_InvPostRequestBody: Partial<Beta_InvPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "A": n => { beta_InvPostRequestBody.a = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "alpha": n => { beta_InvPostRequestBody.alpha = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "B": n => { beta_InvPostRequestBody.b = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "backingStoreEnabled": n => { beta_InvPostRequestBody.backingStoreEnabled = true; },
        "beta": n => { beta_InvPostRequestBody.beta = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "probability": n => { beta_InvPostRequestBody.probability = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBeta_InvPostRequestBody(writer: SerializationWriter, beta_InvPostRequestBody: Partial<Beta_InvPostRequestBody> | undefined = {}) : void {
    writer.writeObjectValue("A", beta_InvPostRequestBody.a);
    writer.writeObjectValue("alpha", beta_InvPostRequestBody.alpha);
    writer.writeObjectValue("B", beta_InvPostRequestBody.b);
    writer.writeObjectValue("beta", beta_InvPostRequestBody.beta);
    writer.writeObjectValue("probability", beta_InvPostRequestBody.probability);
    writer.writeAdditionalData(beta_InvPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const Beta_InvRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}/items/{driveItem%2Did}/workbook/functions/beta_Inv";
/**
 * Metadata for all the requests in the request builder.
 */
export const Beta_InvRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: Beta_InvRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWorkbookFunctionResultFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeBeta_InvPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
