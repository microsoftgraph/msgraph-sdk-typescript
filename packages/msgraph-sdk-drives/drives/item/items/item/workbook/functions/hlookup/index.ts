/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createWorkbookFunctionResultFromDiscriminatorValue, serializeWorkbookFunctionResult, type WorkbookFunctionResult } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter, UntypedNode } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {HlookupPostRequestBody}
 */
export function createHlookupPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoHlookupPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoHlookupPostRequestBody(hlookupPostRequestBody: Partial<HlookupPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { hlookupPostRequestBody.backingStoreEnabled = true; },
        "lookupValue": n => { hlookupPostRequestBody.lookupValue = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "rangeLookup": n => { hlookupPostRequestBody.rangeLookup = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "rowIndexNum": n => { hlookupPostRequestBody.rowIndexNum = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "tableArray": n => { hlookupPostRequestBody.tableArray = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
    }
}
export interface HlookupPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The lookupValue property
     */
    lookupValue?: UntypedNode;
    /**
     * The rangeLookup property
     */
    rangeLookup?: UntypedNode;
    /**
     * The rowIndexNum property
     */
    rowIndexNum?: UntypedNode;
    /**
     * The tableArray property
     */
    tableArray?: UntypedNode;
}
/**
 * Provides operations to call the hlookup method.
 */
export interface HlookupRequestBuilder extends BaseRequestBuilder<HlookupRequestBuilder> {
    /**
     * Invoke action hlookup
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WorkbookFunctionResult>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: HlookupPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WorkbookFunctionResult | undefined>;
    /**
     * Invoke action hlookup
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: HlookupPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeHlookupPostRequestBody(writer: SerializationWriter, hlookupPostRequestBody: Partial<HlookupPostRequestBody> | undefined = {}) : void {
    writer.writeObjectValue("lookupValue", hlookupPostRequestBody.lookupValue);
    writer.writeObjectValue("rangeLookup", hlookupPostRequestBody.rangeLookup);
    writer.writeObjectValue("rowIndexNum", hlookupPostRequestBody.rowIndexNum);
    writer.writeObjectValue("tableArray", hlookupPostRequestBody.tableArray);
    writer.writeAdditionalData(hlookupPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const HlookupRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}/items/{driveItem%2Did}/workbook/functions/hlookup";
/**
 * Metadata for all the requests in the request builder.
 */
export const HlookupRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: HlookupRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWorkbookFunctionResultFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeHlookupPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
