/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createWorkbookFunctionResultFromDiscriminatorValue, serializeWorkbookFunctionResult, type WorkbookFunctionResult } from '@microsoft/msgraph-sdk/models/';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type AdditionalDataHolder, type BackedModel, type BackingStore, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter, UntypedNode } from '@microsoft/kiota-abstractions';

export interface AmorLincPostRequestBody extends AdditionalDataHolder, BackedModel, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * Stores model information.
     */
    backingStoreEnabled?: boolean;
    /**
     * The basis property
     */
    basis?: UntypedNode;
    /**
     * The cost property
     */
    cost?: UntypedNode;
    /**
     * The datePurchased property
     */
    datePurchased?: UntypedNode;
    /**
     * The firstPeriod property
     */
    firstPeriod?: UntypedNode;
    /**
     * The period property
     */
    period?: UntypedNode;
    /**
     * The rate property
     */
    rate?: UntypedNode;
    /**
     * The salvage property
     */
    salvage?: UntypedNode;
}
/**
 * Provides operations to call the amorLinc method.
 */
export interface AmorLincRequestBuilder extends BaseRequestBuilder<AmorLincRequestBuilder> {
    /**
     * Invoke action amorLinc
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WorkbookFunctionResult>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: AmorLincPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WorkbookFunctionResult | undefined>;
    /**
     * Invoke action amorLinc
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: AmorLincPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AmorLincPostRequestBody}
 */
export function createAmorLincPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAmorLincPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
export function deserializeIntoAmorLincPostRequestBody(amorLincPostRequestBody: Partial<AmorLincPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backingStoreEnabled": n => { amorLincPostRequestBody.backingStoreEnabled = true; },
        "basis": n => { amorLincPostRequestBody.basis = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "cost": n => { amorLincPostRequestBody.cost = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "datePurchased": n => { amorLincPostRequestBody.datePurchased = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "firstPeriod": n => { amorLincPostRequestBody.firstPeriod = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "period": n => { amorLincPostRequestBody.period = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "rate": n => { amorLincPostRequestBody.rate = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
        "salvage": n => { amorLincPostRequestBody.salvage = n.getObjectValue<UntypedNode>(createUntypedNodeFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeAmorLincPostRequestBody(writer: SerializationWriter, amorLincPostRequestBody: Partial<AmorLincPostRequestBody> | undefined = {}) : void {
    writer.writeObjectValue("basis", amorLincPostRequestBody.basis);
    writer.writeObjectValue("cost", amorLincPostRequestBody.cost);
    writer.writeObjectValue("datePurchased", amorLincPostRequestBody.datePurchased);
    writer.writeObjectValue("firstPeriod", amorLincPostRequestBody.firstPeriod);
    writer.writeObjectValue("period", amorLincPostRequestBody.period);
    writer.writeObjectValue("rate", amorLincPostRequestBody.rate);
    writer.writeObjectValue("salvage", amorLincPostRequestBody.salvage);
    writer.writeAdditionalData(amorLincPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const AmorLincRequestBuilderUriTemplate = "{+baseurl}/drives/{drive%2Did}/items/{driveItem%2Did}/workbook/functions/amorLinc";
/**
 * Metadata for all the requests in the request builder.
 */
export const AmorLincRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: AmorLincRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWorkbookFunctionResultFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAmorLincPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
