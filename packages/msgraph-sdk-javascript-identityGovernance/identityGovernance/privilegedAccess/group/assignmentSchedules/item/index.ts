/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createPrivilegedAccessGroupAssignmentScheduleFromDiscriminatorValue, serializePrivilegedAccessGroupAssignmentSchedule, type PrivilegedAccessGroupAssignmentSchedule } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { ActivatedUsingRequestBuilderRequestsMetadata, ActivatedUsingRequestBuilderUriTemplate, type ActivatedUsingRequestBuilder } from './activatedUsing/';
import { GroupRequestBuilderNavigationMetadata, GroupRequestBuilderRequestsMetadata, GroupRequestBuilderUriTemplate, type GroupRequestBuilder } from './group/';
import { PrincipalRequestBuilderRequestsMetadata, PrincipalRequestBuilderUriTemplate, type PrincipalRequestBuilder } from './principal/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignmentSchedules property of the microsoft.graph.privilegedAccessGroup entity.
 */
export interface PrivilegedAccessGroupAssignmentScheduleItemRequestBuilder extends BaseRequestBuilder<PrivilegedAccessGroupAssignmentScheduleItemRequestBuilder> {
    /**
     * Provides operations to manage the activatedUsing property of the microsoft.graph.privilegedAccessGroupAssignmentSchedule entity.
     */
    get activatedUsing(): ActivatedUsingRequestBuilder;
    /**
     * Provides operations to manage the group property of the microsoft.graph.privilegedAccessGroupAssignmentSchedule entity.
     */
    get group(): GroupRequestBuilder;
    /**
     * Provides operations to manage the principal property of the microsoft.graph.privilegedAccessGroupAssignmentSchedule entity.
     */
    get principal(): PrincipalRequestBuilder;
    /**
     * Delete navigation property assignmentSchedules for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Read the properties and relationships of a privilegedAccessGroupAssignmentSchedule object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PrivilegedAccessGroupAssignmentSchedule
     * @see {@link https://learn.microsoft.com/graph/api/privilegedaccessgroupassignmentschedule-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderGetQueryParameters> | undefined) : Promise<PrivilegedAccessGroupAssignmentSchedule | undefined>;
    /**
     * Update the navigation property assignmentSchedules in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of PrivilegedAccessGroupAssignmentSchedule
     */
     patch(body: PrivilegedAccessGroupAssignmentSchedule, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<PrivilegedAccessGroupAssignmentSchedule | undefined>;
    /**
     * Delete navigation property assignmentSchedules for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Read the properties and relationships of a privilegedAccessGroupAssignmentSchedule object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property assignmentSchedules in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: PrivilegedAccessGroupAssignmentSchedule, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Read the properties and relationships of a privilegedAccessGroupAssignmentSchedule object.
 */
export interface PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderNavigationMetadata: Record<Exclude<keyof PrivilegedAccessGroupAssignmentScheduleItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    activatedUsing: {
        uriTemplate: ActivatedUsingRequestBuilderUriTemplate,
        requestsMetadata: ActivatedUsingRequestBuilderRequestsMetadata,
    },
    group: {
        uriTemplate: GroupRequestBuilderUriTemplate,
        requestsMetadata: GroupRequestBuilderRequestsMetadata,
        navigationMetadata: GroupRequestBuilderNavigationMetadata,
    },
    principal: {
        uriTemplate: PrincipalRequestBuilderUriTemplate,
        requestsMetadata: PrincipalRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPrivilegedAccessGroupAssignmentScheduleFromDiscriminatorValue,
        queryParametersMapper: PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createPrivilegedAccessGroupAssignmentScheduleFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePrivilegedAccessGroupAssignmentSchedule,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const PrivilegedAccessGroupAssignmentScheduleItemRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/privilegedAccess/group/assignmentSchedules/{privilegedAccessGroupAssignmentSchedule%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
