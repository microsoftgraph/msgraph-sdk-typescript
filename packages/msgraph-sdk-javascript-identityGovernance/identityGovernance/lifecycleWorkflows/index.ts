/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createLifecycleWorkflowsContainerFromDiscriminatorValue, serializeLifecycleWorkflowsContainer, type LifecycleWorkflowsContainer } from '@microsoft/msgraph-sdk-javascript/models/identityGovernance/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { CustomTaskExtensionsRequestBuilderNavigationMetadata, CustomTaskExtensionsRequestBuilderRequestsMetadata, CustomTaskExtensionsRequestBuilderUriTemplate, type CustomTaskExtensionsRequestBuilder } from './customTaskExtensions/';
import { DeletedItemsRequestBuilderNavigationMetadata, DeletedItemsRequestBuilderRequestsMetadata, DeletedItemsRequestBuilderUriTemplate, type DeletedItemsRequestBuilder } from './deletedItems/';
import { SettingsRequestBuilderRequestsMetadata, SettingsRequestBuilderUriTemplate, type SettingsRequestBuilder } from './settings/';
import { TaskDefinitionsRequestBuilderNavigationMetadata, TaskDefinitionsRequestBuilderRequestsMetadata, TaskDefinitionsRequestBuilderUriTemplate, type TaskDefinitionsRequestBuilder } from './taskDefinitions/';
import { type WorkflowsRequestBuilder, WorkflowsRequestBuilderNavigationMetadata, WorkflowsRequestBuilderRequestsMetadata, WorkflowsRequestBuilderUriTemplate } from './workflows/';
import { type WorkflowTemplatesRequestBuilder, WorkflowTemplatesRequestBuilderNavigationMetadata, WorkflowTemplatesRequestBuilderRequestsMetadata, WorkflowTemplatesRequestBuilderUriTemplate } from './workflowTemplates/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the lifecycleWorkflows property of the microsoft.graph.identityGovernance entity.
 */
export interface LifecycleWorkflowsRequestBuilder extends BaseRequestBuilder<LifecycleWorkflowsRequestBuilder> {
    /**
     * Provides operations to manage the customTaskExtensions property of the microsoft.graph.identityGovernance.lifecycleWorkflowsContainer entity.
     */
    get customTaskExtensions(): CustomTaskExtensionsRequestBuilder;
    /**
     * Provides operations to manage the deletedItems property of the microsoft.graph.identityGovernance.lifecycleWorkflowsContainer entity.
     */
    get deletedItems(): DeletedItemsRequestBuilder;
    /**
     * Provides operations to manage the settings property of the microsoft.graph.identityGovernance.lifecycleWorkflowsContainer entity.
     */
    get settings(): SettingsRequestBuilder;
    /**
     * Provides operations to manage the taskDefinitions property of the microsoft.graph.identityGovernance.lifecycleWorkflowsContainer entity.
     */
    get taskDefinitions(): TaskDefinitionsRequestBuilder;
    /**
     * Provides operations to manage the workflows property of the microsoft.graph.identityGovernance.lifecycleWorkflowsContainer entity.
     */
    get workflows(): WorkflowsRequestBuilder;
    /**
     * Provides operations to manage the workflowTemplates property of the microsoft.graph.identityGovernance.lifecycleWorkflowsContainer entity.
     */
    get workflowTemplates(): WorkflowTemplatesRequestBuilder;
    /**
     * Delete navigation property lifecycleWorkflows for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get lifecycleWorkflows from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of LifecycleWorkflowsContainer
     */
     get(requestConfiguration?: RequestConfiguration<LifecycleWorkflowsRequestBuilderGetQueryParameters> | undefined) : Promise<LifecycleWorkflowsContainer | undefined>;
    /**
     * Update the navigation property lifecycleWorkflows in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of LifecycleWorkflowsContainer
     */
     patch(body: LifecycleWorkflowsContainer, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<LifecycleWorkflowsContainer | undefined>;
    /**
     * Delete navigation property lifecycleWorkflows for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get lifecycleWorkflows from identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<LifecycleWorkflowsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property lifecycleWorkflows in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: LifecycleWorkflowsContainer, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get lifecycleWorkflows from identityGovernance
 */
export interface LifecycleWorkflowsRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const LifecycleWorkflowsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const LifecycleWorkflowsRequestBuilderNavigationMetadata: Record<Exclude<keyof LifecycleWorkflowsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    customTaskExtensions: {
        uriTemplate: CustomTaskExtensionsRequestBuilderUriTemplate,
        requestsMetadata: CustomTaskExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: CustomTaskExtensionsRequestBuilderNavigationMetadata,
    },
    deletedItems: {
        uriTemplate: DeletedItemsRequestBuilderUriTemplate,
        requestsMetadata: DeletedItemsRequestBuilderRequestsMetadata,
        navigationMetadata: DeletedItemsRequestBuilderNavigationMetadata,
    },
    settings: {
        uriTemplate: SettingsRequestBuilderUriTemplate,
        requestsMetadata: SettingsRequestBuilderRequestsMetadata,
    },
    taskDefinitions: {
        uriTemplate: TaskDefinitionsRequestBuilderUriTemplate,
        requestsMetadata: TaskDefinitionsRequestBuilderRequestsMetadata,
        navigationMetadata: TaskDefinitionsRequestBuilderNavigationMetadata,
    },
    workflows: {
        uriTemplate: WorkflowsRequestBuilderUriTemplate,
        requestsMetadata: WorkflowsRequestBuilderRequestsMetadata,
        navigationMetadata: WorkflowsRequestBuilderNavigationMetadata,
    },
    workflowTemplates: {
        uriTemplate: WorkflowTemplatesRequestBuilderUriTemplate,
        requestsMetadata: WorkflowTemplatesRequestBuilderRequestsMetadata,
        navigationMetadata: WorkflowTemplatesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const LifecycleWorkflowsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createLifecycleWorkflowsContainerFromDiscriminatorValue,
        queryParametersMapper: LifecycleWorkflowsRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createLifecycleWorkflowsContainerFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeLifecycleWorkflowsContainer,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const LifecycleWorkflowsRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/lifecycleWorkflows{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
