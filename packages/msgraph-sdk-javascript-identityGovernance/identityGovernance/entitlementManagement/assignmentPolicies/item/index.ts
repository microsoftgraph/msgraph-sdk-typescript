/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageAssignmentPolicyFromDiscriminatorValue, serializeAccessPackageAssignmentPolicy, type AccessPackageAssignmentPolicy } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { AccessPackageRequestBuilderRequestsMetadata, AccessPackageRequestBuilderUriTemplate, type AccessPackageRequestBuilder } from './accessPackage/';
import { CatalogRequestBuilderRequestsMetadata, CatalogRequestBuilderUriTemplate, type CatalogRequestBuilder } from './catalog/';
import { CustomExtensionStageSettingsRequestBuilderNavigationMetadata, CustomExtensionStageSettingsRequestBuilderRequestsMetadata, CustomExtensionStageSettingsRequestBuilderUriTemplate, type CustomExtensionStageSettingsRequestBuilder } from './customExtensionStageSettings/';
import { QuestionsRequestBuilderNavigationMetadata, QuestionsRequestBuilderRequestsMetadata, QuestionsRequestBuilderUriTemplate, type QuestionsRequestBuilder } from './questions/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignmentPolicies property of the microsoft.graph.entitlementManagement entity.
 */
export interface AccessPackageAssignmentPolicyItemRequestBuilder extends BaseRequestBuilder<AccessPackageAssignmentPolicyItemRequestBuilder> {
    /**
     * Provides operations to manage the accessPackage property of the microsoft.graph.accessPackageAssignmentPolicy entity.
     */
    get accessPackage(): AccessPackageRequestBuilder;
    /**
     * Provides operations to manage the catalog property of the microsoft.graph.accessPackageAssignmentPolicy entity.
     */
    get catalog(): CatalogRequestBuilder;
    /**
     * Provides operations to manage the customExtensionStageSettings property of the microsoft.graph.accessPackageAssignmentPolicy entity.
     */
    get customExtensionStageSettings(): CustomExtensionStageSettingsRequestBuilder;
    /**
     * Provides operations to manage the questions property of the microsoft.graph.accessPackageAssignmentPolicy entity.
     */
    get questions(): QuestionsRequestBuilder;
    /**
     * In Microsoft Entra entitlement management, delete an accessPackageAssignmentPolicy.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/accesspackageassignmentpolicy-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * In Microsoft Entra entitlement management, retrieve the properties and relationships of an accessPackageAssignmentPolicy object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AccessPackageAssignmentPolicy
     * @see {@link https://learn.microsoft.com/graph/api/accesspackageassignmentpolicy-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<AccessPackageAssignmentPolicyItemRequestBuilderGetQueryParameters> | undefined) : Promise<AccessPackageAssignmentPolicy | undefined>;
    /**
     * Update the navigation property assignmentPolicies in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AccessPackageAssignmentPolicy
     */
     put(body: AccessPackageAssignmentPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AccessPackageAssignmentPolicy | undefined>;
    /**
     * In Microsoft Entra entitlement management, delete an accessPackageAssignmentPolicy.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * In Microsoft Entra entitlement management, retrieve the properties and relationships of an accessPackageAssignmentPolicy object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AccessPackageAssignmentPolicyItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property assignmentPolicies in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPutRequestInformation(body: AccessPackageAssignmentPolicy, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * In Microsoft Entra entitlement management, retrieve the properties and relationships of an accessPackageAssignmentPolicy object.
 */
export interface AccessPackageAssignmentPolicyItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AccessPackageAssignmentPolicyItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AccessPackageAssignmentPolicyItemRequestBuilderNavigationMetadata: Record<Exclude<keyof AccessPackageAssignmentPolicyItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    accessPackage: {
        uriTemplate: AccessPackageRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageRequestBuilderRequestsMetadata,
    },
    catalog: {
        uriTemplate: CatalogRequestBuilderUriTemplate,
        requestsMetadata: CatalogRequestBuilderRequestsMetadata,
    },
    customExtensionStageSettings: {
        uriTemplate: CustomExtensionStageSettingsRequestBuilderUriTemplate,
        requestsMetadata: CustomExtensionStageSettingsRequestBuilderRequestsMetadata,
        navigationMetadata: CustomExtensionStageSettingsRequestBuilderNavigationMetadata,
    },
    questions: {
        uriTemplate: QuestionsRequestBuilderUriTemplate,
        requestsMetadata: QuestionsRequestBuilderRequestsMetadata,
        navigationMetadata: QuestionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AccessPackageAssignmentPolicyItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAccessPackageAssignmentPolicyFromDiscriminatorValue,
        queryParametersMapper: AccessPackageAssignmentPolicyItemRequestBuilderGetQueryParametersMapper,
    },
    put: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAccessPackageAssignmentPolicyFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAccessPackageAssignmentPolicy,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AccessPackageAssignmentPolicyItemRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/assignmentPolicies/{accessPackageAssignmentPolicy%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
