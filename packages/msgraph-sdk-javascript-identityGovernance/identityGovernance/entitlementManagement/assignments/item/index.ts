/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageAssignmentFromDiscriminatorValue, serializeAccessPackageAssignment, type AccessPackageAssignment } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { AccessPackageRequestBuilderRequestsMetadata, AccessPackageRequestBuilderUriTemplate, type AccessPackageRequestBuilder } from './accessPackage/';
import { AssignmentPolicyRequestBuilderRequestsMetadata, AssignmentPolicyRequestBuilderUriTemplate, type AssignmentPolicyRequestBuilder } from './assignmentPolicy/';
import { ReprocessRequestBuilderRequestsMetadata, ReprocessRequestBuilderUriTemplate, type ReprocessRequestBuilder } from './reprocess/';
import { TargetRequestBuilderRequestsMetadata, TargetRequestBuilderUriTemplate, type TargetRequestBuilder } from './target/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the assignments property of the microsoft.graph.entitlementManagement entity.
 */
export interface AccessPackageAssignmentItemRequestBuilder extends BaseRequestBuilder<AccessPackageAssignmentItemRequestBuilder> {
    /**
     * Provides operations to manage the accessPackage property of the microsoft.graph.accessPackageAssignment entity.
     */
    get accessPackage(): AccessPackageRequestBuilder;
    /**
     * Provides operations to manage the assignmentPolicy property of the microsoft.graph.accessPackageAssignment entity.
     */
    get assignmentPolicy(): AssignmentPolicyRequestBuilder;
    /**
     * Provides operations to call the reprocess method.
     */
    get reprocess(): ReprocessRequestBuilder;
    /**
     * Provides operations to manage the target property of the microsoft.graph.accessPackageAssignment entity.
     */
    get target(): TargetRequestBuilder;
    /**
     * Delete navigation property assignments for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * In Microsoft Entra entitlement management, retrieve the properties and relationships of an accessPackageAssignment object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AccessPackageAssignment
     * @see {@link https://learn.microsoft.com/graph/api/accesspackageassignment-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<AccessPackageAssignmentItemRequestBuilderGetQueryParameters> | undefined) : Promise<AccessPackageAssignment | undefined>;
    /**
     * Update the navigation property assignments in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AccessPackageAssignment
     */
     patch(body: AccessPackageAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AccessPackageAssignment | undefined>;
    /**
     * Delete navigation property assignments for identityGovernance
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * In Microsoft Entra entitlement management, retrieve the properties and relationships of an accessPackageAssignment object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AccessPackageAssignmentItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property assignments in identityGovernance
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: AccessPackageAssignment, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * In Microsoft Entra entitlement management, retrieve the properties and relationships of an accessPackageAssignment object.
 */
export interface AccessPackageAssignmentItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AccessPackageAssignmentItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AccessPackageAssignmentItemRequestBuilderNavigationMetadata: Record<Exclude<keyof AccessPackageAssignmentItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    accessPackage: {
        uriTemplate: AccessPackageRequestBuilderUriTemplate,
        requestsMetadata: AccessPackageRequestBuilderRequestsMetadata,
    },
    assignmentPolicy: {
        uriTemplate: AssignmentPolicyRequestBuilderUriTemplate,
        requestsMetadata: AssignmentPolicyRequestBuilderRequestsMetadata,
    },
    reprocess: {
        uriTemplate: ReprocessRequestBuilderUriTemplate,
        requestsMetadata: ReprocessRequestBuilderRequestsMetadata,
    },
    target: {
        uriTemplate: TargetRequestBuilderUriTemplate,
        requestsMetadata: TargetRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AccessPackageAssignmentItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAccessPackageAssignmentFromDiscriminatorValue,
        queryParametersMapper: AccessPackageAssignmentItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAccessPackageAssignmentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAccessPackageAssignment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AccessPackageAssignmentItemRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/assignments/{accessPackageAssignment%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
