/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createAccessPackageCatalogFromDiscriminatorValue, serializeAccessPackageCatalog, type AccessPackageCatalog } from '@microsoft/msgraph-sdk-javascript/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk-javascript/models/oDataErrors/';
import { AccessPackagesRequestBuilderNavigationMetadata, AccessPackagesRequestBuilderRequestsMetadata, AccessPackagesRequestBuilderUriTemplate, type AccessPackagesRequestBuilder } from './accessPackages/';
import { CustomWorkflowExtensionsRequestBuilderNavigationMetadata, CustomWorkflowExtensionsRequestBuilderRequestsMetadata, CustomWorkflowExtensionsRequestBuilderUriTemplate, type CustomWorkflowExtensionsRequestBuilder } from './customWorkflowExtensions/';
import { ResourceRolesRequestBuilderNavigationMetadata, ResourceRolesRequestBuilderRequestsMetadata, ResourceRolesRequestBuilderUriTemplate, type ResourceRolesRequestBuilder } from './resourceRoles/';
import { ResourcesRequestBuilderNavigationMetadata, ResourcesRequestBuilderRequestsMetadata, ResourcesRequestBuilderUriTemplate, type ResourcesRequestBuilder } from './resources/';
import { ResourceScopesRequestBuilderNavigationMetadata, ResourceScopesRequestBuilderRequestsMetadata, ResourceScopesRequestBuilderUriTemplate, type ResourceScopesRequestBuilder } from './resourceScopes/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the catalogs property of the microsoft.graph.entitlementManagement entity.
 */
export interface AccessPackageCatalogItemRequestBuilder extends BaseRequestBuilder<AccessPackageCatalogItemRequestBuilder> {
    /**
     * Provides operations to manage the accessPackages property of the microsoft.graph.accessPackageCatalog entity.
     */
    get accessPackages(): AccessPackagesRequestBuilder;
    /**
     * Provides operations to manage the customWorkflowExtensions property of the microsoft.graph.accessPackageCatalog entity.
     */
    get customWorkflowExtensions(): CustomWorkflowExtensionsRequestBuilder;
    /**
     * Provides operations to manage the resourceRoles property of the microsoft.graph.accessPackageCatalog entity.
     */
    get resourceRoles(): ResourceRolesRequestBuilder;
    /**
     * Provides operations to manage the resources property of the microsoft.graph.accessPackageCatalog entity.
     */
    get resources(): ResourcesRequestBuilder;
    /**
     * Provides operations to manage the resourceScopes property of the microsoft.graph.accessPackageCatalog entity.
     */
    get resourceScopes(): ResourceScopesRequestBuilder;
    /**
     * Delete an accessPackageCatalog.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @see {@link https://learn.microsoft.com/graph/api/accesspackagecatalog-delete?view=graph-rest-1.0|Find more info here}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Retrieve the properties and relationships of an accessPackageCatalog object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AccessPackageCatalog
     * @see {@link https://learn.microsoft.com/graph/api/accesspackagecatalog-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<AccessPackageCatalogItemRequestBuilderGetQueryParameters> | undefined) : Promise<AccessPackageCatalog | undefined>;
    /**
     * Update an existing accessPackageCatalog object to change one or more of its properties, such as the display name or description.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a Promise of AccessPackageCatalog
     * @see {@link https://learn.microsoft.com/graph/api/accesspackagecatalog-update?view=graph-rest-1.0|Find more info here}
     */
     patch(body: AccessPackageCatalog, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AccessPackageCatalog | undefined>;
    /**
     * Delete an accessPackageCatalog.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Retrieve the properties and relationships of an accessPackageCatalog object.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<AccessPackageCatalogItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update an existing accessPackageCatalog object to change one or more of its properties, such as the display name or description.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns a RequestInformation
     */
     toPatchRequestInformation(body: AccessPackageCatalog, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Retrieve the properties and relationships of an accessPackageCatalog object.
 */
export interface AccessPackageCatalogItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AccessPackageCatalogItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AccessPackageCatalogItemRequestBuilderNavigationMetadata: Record<Exclude<keyof AccessPackageCatalogItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    accessPackages: {
        uriTemplate: AccessPackagesRequestBuilderUriTemplate,
        requestsMetadata: AccessPackagesRequestBuilderRequestsMetadata,
        navigationMetadata: AccessPackagesRequestBuilderNavigationMetadata,
    },
    customWorkflowExtensions: {
        uriTemplate: CustomWorkflowExtensionsRequestBuilderUriTemplate,
        requestsMetadata: CustomWorkflowExtensionsRequestBuilderRequestsMetadata,
        navigationMetadata: CustomWorkflowExtensionsRequestBuilderNavigationMetadata,
    },
    resourceRoles: {
        uriTemplate: ResourceRolesRequestBuilderUriTemplate,
        requestsMetadata: ResourceRolesRequestBuilderRequestsMetadata,
        navigationMetadata: ResourceRolesRequestBuilderNavigationMetadata,
    },
    resources: {
        uriTemplate: ResourcesRequestBuilderUriTemplate,
        requestsMetadata: ResourcesRequestBuilderRequestsMetadata,
        navigationMetadata: ResourcesRequestBuilderNavigationMetadata,
    },
    resourceScopes: {
        uriTemplate: ResourceScopesRequestBuilderUriTemplate,
        requestsMetadata: ResourceScopesRequestBuilderRequestsMetadata,
        navigationMetadata: ResourceScopesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AccessPackageCatalogItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAccessPackageCatalogFromDiscriminatorValue,
        queryParametersMapper: AccessPackageCatalogItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        responseBodyContentType: "application/json",
        errorMappings: {
            _4XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
            _5XX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createAccessPackageCatalogFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAccessPackageCatalog,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/**
 * Uri template for the request builder.
 */
export const AccessPackageCatalogItemRequestBuilderUriTemplate = "{+baseurl}/identityGovernance/entitlementManagement/catalogs/{accessPackageCatalog%2Did}{?%24select,%24expand}";
/* tslint:enable */
/* eslint-enable */
