/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUnifiedRoleEligibilityScheduleInstanceFromDiscriminatorValue, serializeUnifiedRoleEligibilityScheduleInstance, type UnifiedRoleEligibilityScheduleInstance } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { AppScopeRequestBuilderRequestsMetadata, type AppScopeRequestBuilder } from './appScope/';
import { DirectoryScopeRequestBuilderRequestsMetadata, type DirectoryScopeRequestBuilder } from './directoryScope/';
import { PrincipalRequestBuilderRequestsMetadata, type PrincipalRequestBuilder } from './principal/';
import { RoleDefinitionRequestBuilderRequestsMetadata, type RoleDefinitionRequestBuilder } from './roleDefinition/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the roleEligibilityScheduleInstances property of the microsoft.graph.rbacApplication entity.
 */
export interface UnifiedRoleEligibilityScheduleInstanceItemRequestBuilder extends BaseRequestBuilder<UnifiedRoleEligibilityScheduleInstanceItemRequestBuilder> {
    /**
     * Provides operations to manage the appScope property of the microsoft.graph.unifiedRoleScheduleInstanceBase entity.
     */
    get appScope(): AppScopeRequestBuilder;
    /**
     * Provides operations to manage the directoryScope property of the microsoft.graph.unifiedRoleScheduleInstanceBase entity.
     */
    get directoryScope(): DirectoryScopeRequestBuilder;
    /**
     * Provides operations to manage the principal property of the microsoft.graph.unifiedRoleScheduleInstanceBase entity.
     */
    get principal(): PrincipalRequestBuilder;
    /**
     * Provides operations to manage the roleDefinition property of the microsoft.graph.unifiedRoleScheduleInstanceBase entity.
     */
    get roleDefinition(): RoleDefinitionRequestBuilder;
    /**
     * Delete navigation property roleEligibilityScheduleInstances for roleManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * Get the instance of a role eligibility.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UnifiedRoleEligibilityScheduleInstance>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/unifiedroleeligibilityscheduleinstance-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderGetQueryParameters> | undefined) : Promise<UnifiedRoleEligibilityScheduleInstance | undefined>;
    /**
     * Update the navigation property roleEligibilityScheduleInstances in roleManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UnifiedRoleEligibilityScheduleInstance>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     patch(body: UnifiedRoleEligibilityScheduleInstance, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UnifiedRoleEligibilityScheduleInstance | undefined>;
    /**
     * Delete navigation property roleEligibilityScheduleInstances for roleManagement
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * Get the instance of a role eligibility.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Update the navigation property roleEligibilityScheduleInstances in roleManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: UnifiedRoleEligibilityScheduleInstance, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get the instance of a role eligibility.
 */
export interface UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderUriTemplate = "{+baseurl}/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderNavigationMetadata: Record<Exclude<keyof UnifiedRoleEligibilityScheduleInstanceItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    appScope: {
        requestsMetadata: AppScopeRequestBuilderRequestsMetadata,
    },
    directoryScope: {
        requestsMetadata: DirectoryScopeRequestBuilderRequestsMetadata,
    },
    principal: {
        requestsMetadata: PrincipalRequestBuilderRequestsMetadata,
    },
    roleDefinition: {
        requestsMetadata: RoleDefinitionRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContentAsync",
    },
    get: {
        uriTemplate: UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUnifiedRoleEligibilityScheduleInstanceFromDiscriminatorValue,
        queryParametersMapper: UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderGetQueryParametersMapper,
    },
    patch: {
        uriTemplate: UnifiedRoleEligibilityScheduleInstanceItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendAsync",
        responseBodyFactory:  createUnifiedRoleEligibilityScheduleInstanceFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUnifiedRoleEligibilityScheduleInstance,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
