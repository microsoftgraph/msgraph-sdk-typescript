/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { createUnifiedRoleEligibilityScheduleCollectionResponseFromDiscriminatorValue, createUnifiedRoleEligibilityScheduleFromDiscriminatorValue, serializeUnifiedRoleEligibilitySchedule, type UnifiedRoleEligibilitySchedule, type UnifiedRoleEligibilityScheduleCollectionResponse } from '@microsoft/msgraph-sdk/models/';
import { createODataErrorFromDiscriminatorValue, type ODataError } from '@microsoft/msgraph-sdk/models/oDataErrors/';
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/';
import { FilterByCurrentUserWithOnRequestBuilderRequestsMetadata, type FilterByCurrentUserWithOnRequestBuilder } from './filterByCurrentUserWithOn/';
import { type UnifiedRoleEligibilityScheduleItemRequestBuilder, UnifiedRoleEligibilityScheduleItemRequestBuilderNavigationMetadata, UnifiedRoleEligibilityScheduleItemRequestBuilderRequestsMetadata } from './item/';
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

export type GetExpandQueryParameterType = (typeof GetExpandQueryParameterTypeObject)[keyof typeof GetExpandQueryParameterTypeObject];
export type GetOrderbyQueryParameterType = (typeof GetOrderbyQueryParameterTypeObject)[keyof typeof GetOrderbyQueryParameterTypeObject];
export type GetSelectQueryParameterType = (typeof GetSelectQueryParameterTypeObject)[keyof typeof GetSelectQueryParameterTypeObject];
/**
 * Provides operations to manage the roleEligibilitySchedules property of the microsoft.graph.rbacApplication entity.
 */
export interface RoleEligibilitySchedulesRequestBuilder extends BaseRequestBuilder<RoleEligibilitySchedulesRequestBuilder> {
    /**
     * Provides operations to count the resources in the collection.
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the roleEligibilitySchedules property of the microsoft.graph.rbacApplication entity.
     * @param unifiedRoleEligibilityScheduleId The unique identifier of unifiedRoleEligibilitySchedule
     * @returns {UnifiedRoleEligibilityScheduleItemRequestBuilder}
     */
     byUnifiedRoleEligibilityScheduleId(unifiedRoleEligibilityScheduleId: string) : UnifiedRoleEligibilityScheduleItemRequestBuilder;
    /**
     * Provides operations to call the filterByCurrentUser method.
     * @param on Usage: on='{on}'
     * @returns {FilterByCurrentUserWithOnRequestBuilder}
     */
     filterByCurrentUserWithOn(on: string | undefined) : FilterByCurrentUserWithOnRequestBuilder;
    /**
     * Get the unifiedRoleEligibilitySchedule resources from the roleEligibilitySchedules navigation property.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UnifiedRoleEligibilityScheduleCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/rbacapplication-list-roleeligibilityschedules?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<RoleEligibilitySchedulesRequestBuilderGetQueryParameters> | undefined) : Promise<UnifiedRoleEligibilityScheduleCollectionResponse | undefined>;
    /**
     * Create new navigation property to roleEligibilitySchedules for roleManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<UnifiedRoleEligibilitySchedule>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     */
     post(body: UnifiedRoleEligibilitySchedule, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<UnifiedRoleEligibilitySchedule | undefined>;
    /**
     * Get the unifiedRoleEligibilitySchedule resources from the roleEligibilitySchedules navigation property.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<RoleEligibilitySchedulesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to roleEligibilitySchedules for roleManagement
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UnifiedRoleEligibilitySchedule, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Get the unifiedRoleEligibilitySchedule resources from the roleEligibilitySchedules navigation property.
 */
export interface RoleEligibilitySchedulesRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: GetExpandQueryParameterType[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: GetOrderbyQueryParameterType[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: GetSelectQueryParameterType[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const RoleEligibilitySchedulesRequestBuilderUriTemplate = "{+baseurl}/roleManagement/entitlementManagement/roleEligibilitySchedules{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Provides operations to manage the roleEligibilitySchedules property of the microsoft.graph.rbacApplication entity.
 */
export const GetExpandQueryParameterTypeObject = {
    Asterisk: "*",
    AppScope: "appScope",
    DirectoryScope: "directoryScope",
    Principal: "principal",
    RoleDefinition: "roleDefinition",
} as const;
/**
 * Provides operations to manage the roleEligibilitySchedules property of the microsoft.graph.rbacApplication entity.
 */
export const GetOrderbyQueryParameterTypeObject = {
    Id: "id",
    IdDesc: "id desc",
    AppScopeId: "appScopeId",
    AppScopeIdDesc: "appScopeId desc",
    CreatedDateTime: "createdDateTime",
    CreatedDateTimeDesc: "createdDateTime desc",
    CreatedUsing: "createdUsing",
    CreatedUsingDesc: "createdUsing desc",
    DirectoryScopeId: "directoryScopeId",
    DirectoryScopeIdDesc: "directoryScopeId desc",
    ModifiedDateTime: "modifiedDateTime",
    ModifiedDateTimeDesc: "modifiedDateTime desc",
    PrincipalId: "principalId",
    PrincipalIdDesc: "principalId desc",
    RoleDefinitionId: "roleDefinitionId",
    RoleDefinitionIdDesc: "roleDefinitionId desc",
    Status: "status",
    StatusDesc: "status desc",
    MemberType: "memberType",
    MemberTypeDesc: "memberType desc",
    ScheduleInfo: "scheduleInfo",
    ScheduleInfoDesc: "scheduleInfo desc",
} as const;
/**
 * Provides operations to manage the roleEligibilitySchedules property of the microsoft.graph.rbacApplication entity.
 */
export const GetSelectQueryParameterTypeObject = {
    Id: "id",
    AppScopeId: "appScopeId",
    CreatedDateTime: "createdDateTime",
    CreatedUsing: "createdUsing",
    DirectoryScopeId: "directoryScopeId",
    ModifiedDateTime: "modifiedDateTime",
    PrincipalId: "principalId",
    RoleDefinitionId: "roleDefinitionId",
    Status: "status",
    MemberType: "memberType",
    ScheduleInfo: "scheduleInfo",
    AppScope: "appScope",
    DirectoryScope: "directoryScope",
    Principal: "principal",
    RoleDefinition: "roleDefinition",
} as const;
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const RoleEligibilitySchedulesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const RoleEligibilitySchedulesRequestBuilderNavigationMetadata: Record<Exclude<keyof RoleEligibilitySchedulesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byUnifiedRoleEligibilityScheduleId: {
        requestsMetadata: UnifiedRoleEligibilityScheduleItemRequestBuilderRequestsMetadata,
        navigationMetadata: UnifiedRoleEligibilityScheduleItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["unifiedRoleEligibilitySchedule%2Did"],
    },
    filterByCurrentUserWithOn: {
        requestsMetadata: FilterByCurrentUserWithOnRequestBuilderRequestsMetadata,
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const RoleEligibilitySchedulesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: RoleEligibilitySchedulesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUnifiedRoleEligibilityScheduleCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: RoleEligibilitySchedulesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: RoleEligibilitySchedulesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createUnifiedRoleEligibilityScheduleFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUnifiedRoleEligibilitySchedule,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
